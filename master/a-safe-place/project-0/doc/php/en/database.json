{"ArrayAccess::offsetExists":{"desc":"Whether a offset exists","long_desc":"Whether or not an offset exists. This method is executed when using isset() or empty() on objects implementing ArrayAccess.","ver":"PHP 5 >= 5.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"arrayaccess.offsetexists","name":"offsetExists","class":"ArrayAccess","params":[{"list":[],"ret_type":"boolean"}]},"ArrayAccess::offsetGet":{"desc":"Offset to retrieve","long_desc":"Returns the value at specified offset. This method is executed when checking if offset is empty().","ver":"PHP 5 >= 5.0.0","ret_desc":"Can return all value types.","seealso":[],"url":"arrayaccess.offsetget","name":"offsetGet","class":"ArrayAccess","params":[{"list":[],"ret_type":"mixed"}]},"ArrayAccess::offsetSet":{"desc":"Offset to set","long_desc":"Assigns a value to the specified offset.","ver":"PHP 5 >= 5.0.0","ret_desc":"No value is returned.","url":"arrayaccess.offsetset","name":"offsetSet","class":"ArrayAccess","params":[{"list":[{"type":"mixed","var":"$offset","beh":0,"desc":"The offset to assign the value to."},{"type":"mixed","var":"$value","beh":0,"desc":"The value to set."}],"ret_type":"void"}]},"ArrayAccess::offsetUnset":{"desc":"Offset to unset","long_desc":"Unsets an offset.","ver":"PHP 5 >= 5.0.0","ret_desc":"No value is returned.","url":"arrayaccess.offsetunset","name":"offsetUnset","class":"ArrayAccess","params":[{"list":[],"ret_type":"void"}]},"ArrayIterator::__construct":{"desc":"Construct an ArrayIterator","long_desc":"Constructs an ArrayIterator object.","ver":"PHP 5 >= 5.0.0","ret_desc":"An ArrayIterator object.","seealso":[],"url":"arrayiterator.construct","name":"__construct","class":"ArrayIterator","params":[{"list":[]}]},"ArrayIterator::append":{"desc":"Append an element","long_desc":"Appends value as the last element.","ver":"PHP 5 >= 5.0.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayiterator.append","name":"append","class":"ArrayIterator","params":[{"list":[],"ret_type":"void"}]},"ArrayIterator::asort":{"desc":"Sort array by values","long_desc":"Sorts an array by values.","ver":"PHP 5 >= 5.2.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayiterator.asort","name":"asort","class":"ArrayIterator","params":[{"list":[],"ret_type":"void"}]},"ArrayIterator::count":{"desc":"Count elements","long_desc":"Gets the number of elements in the array, or the number of public properties in the object.","ver":"PHP 5 >= 5.0.0","ret_desc":"The number of elements or public properties in the associated array or object, respectively.","seealso":[],"url":"arrayiterator.count","name":"count","class":"ArrayIterator","params":[{"list":[],"ret_type":"int"}]},"ArrayIterator::current":{"desc":"Return current array entry","long_desc":"Get the current array entry.","ver":"PHP 5 >= 5.0.0","ret_desc":"The current array entry.","url":"arrayiterator.current","name":"current","class":"ArrayIterator","params":[{"list":[],"ret_type":"mixed"}]},"ArrayIterator::getArrayCopy":{"desc":"Get array copy","long_desc":"Get a copy of an array.","ver":"PHP 5 >= 5.0.0","ret_desc":"A copy of the array, or array of public properties if ArrayIterator refers to an object.","seealso":[],"url":"arrayiterator.getarraycopy","name":"getArrayCopy","class":"ArrayIterator","params":[{"list":[],"ret_type":"array"}]},"ArrayIterator::getFlags":{"desc":"Get flags","long_desc":"Get the current flags.","ver":"PHP 5 >= 5.1.0","ret_desc":"The current flags.","seealso":[],"url":"arrayiterator.getflags","name":"getFlags","class":"ArrayIterator","params":[{"list":[],"ret_type":"void"}]},"ArrayIterator::key":{"desc":"Return current array key","long_desc":"This function returns the current array key","ver":"PHP 5 >= 5.0.0","ret_desc":"The current array key.","url":"arrayiterator.key","name":"key","class":"ArrayIterator","params":[{"list":[],"ret_type":"mixed"}]},"ArrayIterator::ksort":{"desc":"Sort array by keys","long_desc":"Sorts an array by the keys.","ver":"PHP 5 >= 5.2.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayiterator.ksort","name":"ksort","class":"ArrayIterator","params":[{"list":[],"ret_type":"void"}]},"ArrayIterator::natcasesort":{"desc":"Sort an array naturally, case insensitive","long_desc":"Sort the entries by values using a case insensitive \"natural order\" algorithm.","ver":"PHP 5 >= 5.2.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayiterator.natcasesort","name":"natcasesort","class":"ArrayIterator","params":[{"list":[],"ret_type":"void"}]},"ArrayIterator::natsort":{"desc":"Sort an array naturally","long_desc":"Sort the entries by values using \"natural order\" algorithm.","ver":"PHP 5 >= 5.2.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayiterator.natsort","name":"natsort","class":"ArrayIterator","params":[{"list":[],"ret_type":"void"}]},"ArrayIterator::next":{"desc":"Move to next entry","long_desc":"The iterator to the next entry.","ver":"PHP 5 >= 5.0.0","ret_desc":"No value is returned.","url":"arrayiterator.next","name":"next","class":"ArrayIterator","params":[{"list":[],"ret_type":"void"}]},"ArrayIterator::offsetExists":{"desc":"Check if offset exists","long_desc":"Checks if the offset exists.","ver":"PHP 5 >= 5.0.0","ret_desc":"TRUE if the offset exists, otherwise FALSE","seealso":[],"url":"arrayiterator.offsetexists","name":"offsetExists","class":"ArrayIterator","params":[{"list":[],"ret_type":"void"}]},"ArrayIterator::offsetGet":{"desc":"Get value for an offset","long_desc":"Gets the value from the provided offset.","ver":"PHP 5 >= 5.0.0","ret_desc":"The value at offset index.","seealso":[],"url":"arrayiterator.offsetget","name":"offsetGet","class":"ArrayIterator","params":[{"list":[],"ret_type":"mixed"}]},"ArrayIterator::offsetSet":{"desc":"Set value for an offset","long_desc":"Sets a value for a given offset.","ver":"PHP 5 >= 5.0.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayiterator.offsetset","name":"offsetSet","class":"ArrayIterator","params":[{"list":[{"type":"string","var":"$index","beh":0,"desc":"The index to set for."},{"type":"string","var":"$newval","beh":0,"desc":"The new value to store at the index."}],"ret_type":"void"}]},"ArrayIterator::offsetUnset":{"desc":"Unset value for an offset","long_desc":"Unsets a value for an offset.","ver":"PHP 5 >= 5.0.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayiterator.offsetunset","name":"offsetUnset","class":"ArrayIterator","params":[{"list":[],"ret_type":"void"}]},"ArrayIterator::rewind":{"desc":"Rewind array back to the start","long_desc":"This rewinds the iterator to the beginning.","ver":"PHP 5 >= 5.0.0","ret_desc":"No value is returned.","url":"arrayiterator.rewind","name":"rewind","class":"ArrayIterator","params":[{"list":[],"ret_type":"void"}]},"ArrayIterator::seek":{"desc":"Seek to position","ver":"PHP 5 >= 5.0.0","ret_desc":"No value is returned.","url":"arrayiterator.seek","name":"seek","class":"ArrayIterator","params":[{"list":[],"ret_type":"void"}]},"ArrayIterator::serialize":{"desc":"Serialize","long_desc":"Serialize.","ver":"PHP 5 >= 5.3.0","ret_desc":"The serialized ArrayIterator.","seealso":[],"url":"arrayiterator.serialize","name":"serialize","class":"ArrayIterator","params":[{"list":[],"ret_type":"string"}]},"ArrayIterator::setFlags":{"desc":"Set behaviour flags","long_desc":"Sets behaviour flags.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayiterator.setflags","name":"setFlags","class":"ArrayIterator","params":[{"list":[],"ret_type":"void"}]},"ArrayIterator::uasort":{"desc":"User defined sort","long_desc":"Sort the entries by values using user defined function.","ver":"PHP 5 >= 5.2.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayiterator.uasort","name":"uasort","class":"ArrayIterator","params":[{"list":[],"ret_type":"void"}]},"ArrayIterator::uksort":{"desc":"User defined sort","long_desc":"Sort the entries by key using user defined function.","ver":"PHP 5 >= 5.2.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayiterator.uksort","name":"uksort","class":"ArrayIterator","params":[{"list":[],"ret_type":"void"}]},"ArrayIterator::unserialize":{"desc":"Unserialize","long_desc":"Unserialize.","ver":"PHP 5 >= 5.3.0","ret_desc":"The ArrayIterator.","seealso":[],"url":"arrayiterator.unserialize","name":"unserialize","class":"ArrayIterator","params":[{"list":[],"ret_type":"string"}]},"ArrayIterator::valid":{"desc":"Check whether array contains more entries","long_desc":"Checks if the array contains any more entries.","ver":"PHP 5 >= 5.0.0","ret_desc":"No value is returned.","url":"arrayiterator.valid","name":"valid","class":"ArrayIterator","params":[{"list":[],"ret_type":"bool"}]},"ArrayObject::__construct":{"desc":"Construct a new array object","long_desc":"This constructs a new array object.","ver":"PHP 5 >= 5.0.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayobject.construct","name":"__construct","class":"ArrayObject","params":[]},"ArrayObject::append":{"desc":"Appends the value","long_desc":"Appends a new value as the last element.","ver":"PHP 5 >= 5.0.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayobject.append","name":"append","class":"ArrayObject","params":[{"list":[],"ret_type":"void"}]},"ArrayObject::asort":{"desc":"Sort the entries by value","long_desc":"Sorts the entries such that the keys maintain their correlation with the entries they are associated with. This is used mainly when sorting associative arrays where the actual element order is significant.","ver":"PHP 5 >= 5.2.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayobject.asort","name":"asort","class":"ArrayObject","params":[{"list":[],"ret_type":"void"}]},"ArrayObject::count":{"desc":"Get the number of public properties in the ArrayObject","long_desc":"Get the number of public properties in the ArrayObject.","ver":"PHP 5 >= 5.0.0","ret_desc":"The number of public properties in the ArrayObject.","url":"arrayobject.count","name":"count","class":"ArrayObject","params":[{"list":[],"ret_type":"int"}]},"ArrayObject::exchangeArray":{"desc":"Exchange the array for another one.","long_desc":"Exchange the current array with another array or object.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the old array.","url":"arrayobject.exchangearray","name":"exchangeArray","class":"ArrayObject","params":[{"list":[],"ret_type":"array"}]},"ArrayObject::getArrayCopy":{"desc":"Creates a copy of the ArrayObject.","long_desc":"Exports the ArrayObject to an array.","ver":"PHP 5 >= 5.0.0","ret_desc":"Returns a copy of the array. When the ArrayObject refers to an object an array of the public properties of that object will be returned.","url":"arrayobject.getarraycopy","name":"getArrayCopy","class":"ArrayObject","params":[{"list":[],"ret_type":"array"}]},"ArrayObject::getFlags":{"desc":"Gets the behavior flags.","long_desc":"Gets the behavior flags of the ArrayObject. See the ArrayObject::setFlags method for a list of the available flags.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the behavior flags of the ArrayObject.","seealso":[],"url":"arrayobject.getflags","name":"getFlags","class":"ArrayObject","params":[{"list":[],"ret_type":"int"}]},"ArrayObject::getIterator":{"desc":"Create a new iterator from an ArrayObject instance","long_desc":"Create a new iterator from an ArrayObject instance.","ver":"PHP 5 >= 5.0.0","ret_desc":"An iterator from an ArrayObject.","url":"arrayobject.getiterator","name":"getIterator","class":"ArrayObject","params":[{"list":[],"ret_type":"ArrayIterator"}]},"ArrayObject::getIteratorClass":{"desc":"Gets the iterator classname for the ArrayObject.","long_desc":"Gets the class name of the array iterator that is used by ArrayObject::getIterator().","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the iterator class name that is used to iterate over this object.","seealso":[],"url":"arrayobject.getiteratorclass","name":"getIteratorClass","class":"ArrayObject","params":[{"list":[],"ret_type":"string"}]},"ArrayObject::ksort":{"desc":"Sort the entries by key","long_desc":"Sorts the entries by key, maintaining key to entry correlations. This is useful mainly for associative arrays.","ver":"PHP 5 >= 5.2.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayobject.ksort","name":"ksort","class":"ArrayObject","params":[{"list":[],"ret_type":"void"}]},"ArrayObject::natcasesort":{"desc":"Sort an array using a case insensitive \"natural order\" algorithm","long_desc":"This method is a case insensitive version of ArrayObject::natsort. This method implements a sort algorithm that orders alphanumeric strings in the way a human being would while maintaining key\/value associations. This is described as a \"natural ordering\".","ver":"PHP 5 >= 5.2.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayobject.natcasesort","name":"natcasesort","class":"ArrayObject","params":[{"list":[],"ret_type":"void"}]},"ArrayObject::natsort":{"desc":"Sort entries using a \"natural order\" algorithm","long_desc":"This method implements a sort algorithm that orders alphanumeric strings in the way a human being would while maintaining key\/value associations. This is described as a \"natural ordering\". An example of the difference between this algorithm and the regular computer string sorting algorithms (used in ArrayObject::asort) method can be seen in the example below.","ver":"PHP 5 >= 5.2.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayobject.natsort","name":"natsort","class":"ArrayObject","params":[{"list":[],"ret_type":"void"}]},"ArrayObject::offsetExists":{"desc":"Returns whether the requested index exists","ver":"PHP 5 >= 5.0.0","ret_desc":"TRUE if the requested index exists, otherwise FALSE","url":"arrayobject.offsetexists","name":"offsetExists","class":"ArrayObject","params":[{"list":[],"ret_type":"bool"}]},"ArrayObject::offsetGet":{"desc":"Returns the value at the specified index","ver":"PHP 5 >= 5.0.0","ret_desc":"The value at the specified index or FALSE.","url":"arrayobject.offsetget","name":"offsetGet","class":"ArrayObject","params":[{"list":[],"ret_type":"mixed"}]},"ArrayObject::offsetSet":{"desc":"Sets the value at the specified index to newval","long_desc":"Sets the value at the specified index to newval.","ver":"PHP 5 >= 5.0.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayobject.offsetset","name":"offsetSet","class":"ArrayObject","params":[{"list":[{"type":"mixed","var":"$index","beh":0,"desc":"The index being set."},{"type":"mixed","var":"$newval","beh":0,"desc":"The new value for the index."}],"ret_type":"void"}]},"ArrayObject::offsetUnset":{"desc":"Unsets the value at the specified index","long_desc":"Unsets the value at the specified index.","ver":"PHP 5 >= 5.0.0","ret_desc":"No value is returned.","url":"arrayobject.offsetunset","name":"offsetUnset","class":"ArrayObject","params":[{"list":[],"ret_type":"void"}]},"ArrayObject::serialize":{"desc":"Serialize an ArrayObject","long_desc":"Serializes an ArrayObject.","ver":"PHP 5 >= 5.3.0","ret_desc":"The serialized representation of the ArrayObject.","seealso":[],"url":"arrayobject.serialize","name":"serialize","class":"ArrayObject","params":[{"list":[],"ret_type":"void"}]},"ArrayObject::setFlags":{"desc":"Sets the behavior flags.","long_desc":"Set the flags that change the behavior of the ArrayObject.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","url":"arrayobject.setflags","name":"setFlags","class":"ArrayObject","params":[{"list":[],"ret_type":"void"}]},"ArrayObject::setIteratorClass":{"desc":"Sets the iterator classname for the ArrayObject.","long_desc":"Sets the classname of the array iterator that is used by ArrayObject::getIterator().","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","url":"arrayobject.setiteratorclass","name":"setIteratorClass","class":"ArrayObject","params":[{"list":[],"ret_type":"void"}]},"ArrayObject::uasort":{"desc":"Sort the entries with a user-defined comparison function and maintain key association","long_desc":"This function sorts the entries such that keys maintain their correlation with the entry that they are associated with, using a user-defined comparison function. This is used mainly when sorting associative arrays where the actual element order is significant.","ver":"PHP 5 >= 5.2.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayobject.uasort","name":"uasort","class":"ArrayObject","params":[{"list":[],"ret_type":"void"}]},"ArrayObject::uksort":{"desc":"Sort the entries by keys using a user-defined comparison function","long_desc":"This function sorts the keys of the entries using a user-supplied comparison function. The key to entry correlations will be maintained.","ver":"PHP 5 >= 5.2.0","ret_desc":"No value is returned.","seealso":[],"url":"arrayobject.uksort","name":"uksort","class":"ArrayObject","params":[{"list":[],"ret_type":"void"}]},"ArrayObject::unserialize":{"desc":"Unserialize an ArrayObject","long_desc":"Unserializes a serialized ArrayObject.","ver":"PHP 5 >= 5.3.0","ret_desc":"The unserialized ArrayObject.","seealso":[],"url":"arrayobject.unserialize","name":"unserialize","class":"ArrayObject","params":[{"list":[],"ret_type":"void"}]},"CairoContext::__construct":{"desc":"Creates a new CairoContext","long_desc":"Creates a new CairoContext object to draw","ver":"PECL cairo >= 0.1.0","ret_desc":"A CairoContext","seealso":[],"url":"cairocontext.construct","name":"__construct","class":"CairoContext","params":[{"list":[]}]},"CairoContext::appendPath":{"desc":"Appends a path to current path","long_desc":"Object oriented style (method):Procedural style: Appends the path onto the current path. The path may be either the return value from one of CairoContext::copyPath() or CairoContext::copyPathFlat(); if path is not a valid CairoPath instance a CairoException will be thrown","ver":"PECL cairo >= 0.1.0","ret_desc":"No value is returned.","seealso":[],"url":"cairocontext.appendpath","name":"appendPath","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"CairoContext object"},{"type":"CairoPath","var":"$path","beh":0,"desc":"CairoPath object"}],"ret_type":"void"}]},"CairoContext::arc":{"desc":"Adds a circular arc","long_desc":"Object oriented style (method):Procedural style: Adds a circular arc of the given radius to the current path. The arc is centered at (x, y), begins at angle1 and proceeds in the direction of increasing angles to end at angle2. If angle2 is less than angle1 it will be progressively increased by 2*M_PI until it is greater than angle1. If there is a current point, an initial line segment will be added to the path to connect the current point to the beginning of the arc. If this initial line is undesired, it can be avoided by calling CairoContext::newSubPath() or procedural cairo_new_sub_path() before calling CairoContext::arc() or cairo_arc(). Angles are measured in radians. An angle of 0.0 is in the direction of the positive X axis (in user space). An angle of M_PI\/2.0 radians (90 degrees) is in the direction of the positive Y axis (in user space). Angles increase in the direction from the positive X axis toward the positive Y axis. So with the default transformation matrix, angles increase in a clockwise direction. (To convert from degrees to radians, use degrees * (M_PI \/ 180.).) This function gives the arc in the direction of increasing angles; see CairoContext::arcNegative() or cairo_arc_negative() to get the arc in the direction of decreasing angles.","ver":"PECL cairo >= 0.1.0","ret_desc":"No value is returned.","seealso":[],"url":"cairocontext.arc","name":"arc","class":"CairoContext","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":"A valid CairoContext object"},{"type":"float","var":"$y","beh":0,"desc":"x position"},{"type":"float","var":"$radius","beh":1,"desc":"y position"},{"type":"float","var":"$angle1","beh":1,"desc":"Radius of the arc"},{"type":"float","var":"$angle2","beh":1,"desc":"start angle"}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"A valid CairoContext object"},{"type":"float","var":"$x","beh":0,"desc":"x position"},{"type":"float","var":"$y","beh":1,"desc":"y position"},{"type":"float","var":"$radius","beh":1,"desc":"Radius of the arc"},{"type":"float","var":"$angle1","beh":1,"desc":"start angle"},{"type":"float","var":"$angle2","beh":1,"desc":"end angle"}],"ret_type":"void"}]},"CairoContext::arcNegative":{"desc":"Adds a negative arc","long_desc":"Object oriented style (method):Procedural style: Adds a circular arc of the given radius to the current path. The arc is centered at (x, y), begins at angle1 and proceeds in the direction of decreasing angles to end at angle2. If angle2 is greater than angle1 it will be progressively decreased by 2*M_PI until it is less than angle1. See CairoContext::arc() or cairo_arc() for more details. This function differs only in the direction of the arc between the two angles.","ver":"PECL cairo >= 0.1.0","ret_desc":"No value is returned.","seealso":[],"url":"cairocontext.arcnegative","name":"arcNegative","class":"CairoContext","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":"A valid CairoContext object"},{"type":"float","var":"$y","beh":0,"desc":"double x position"},{"type":"float","var":"$radius","beh":1,"desc":"double y position"},{"type":"float","var":"$angle1","beh":1,"desc":"The radius of the desired negative arc"},{"type":"float","var":"$angle2","beh":1,"desc":"Start angle of the arc"}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"A valid CairoContext object"},{"type":"float","var":"$x","beh":0,"desc":"double x position"},{"type":"float","var":"$y","beh":1,"desc":"double y position"},{"type":"float","var":"$radius","beh":1,"desc":"The radius of the desired negative arc"},{"type":"float","var":"$angle1","beh":1,"desc":"Start angle of the arc"},{"type":"float","var":"$angle2","beh":1,"desc":"End angle of the arc"}],"ret_type":"void"}]},"CairoContext::clip":{"desc":"Establishes a new clip region","long_desc":"Object oriented style (method):Procedural style: Establishes a new clip region by intersecting the current clip region with the current path as it would be filled by CairoContext::fill() or cairo_fill() and according to the current fill rule (see CairoContext::setFillRule() or cairo_set_fill_rule()). After CairoContext::clip() or cairo_clip(), the current path will be cleared from the cairo context. The current clip region affects all drawing operations by effectively masking out any changes to the surface that are outside the current clip region. Calling CairoContext::clip() or cairo_clip() can only make the clip region smaller, never larger. But the current clip is part of the graphics state, so a temporary restriction of the clip region can be achieved by calling CairoContext::clip() or cairo_clip() within a CairoContext::save()\/ CairoContext::restore() or cairo_save()\/cairo_restore() pair. The only other means of increasing the size of the clip region is CairoContext::resetClip() or procedural cairo_reset_clip().","ver":"PECL cairo >= 0.1.0","ret_desc":"No value is returned.","seealso":[],"url":"cairocontext.clip","name":"clip","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::clipExtents":{"desc":"Computes the area inside the current clip","long_desc":"Object oriented style (method):Procedural style: Computes a bounding box in user coordinates covering the area inside the current clip.","ver":"PECL cairo >= 0.1.0","ret_desc":"An array containing the (float)x1, (float)y1, (float)x2, (float)y2, coordinates covering the area inside the current clip","seealso":[],"url":"cairocontext.clipextents","name":"clipExtents","class":"CairoContext","params":[{"list":[],"ret_type":"array"},{"list":[],"ret_type":"array"}]},"CairoContext::clipPreserve":{"desc":"Establishes a new clip region from the current clip","long_desc":"Object oriented style (method):Procedural style: Establishes a new clip region by intersecting the current clip region with the current path as it would be filled by Context.fill() and according to the current FILL RULE (see CairoContext::setFillRule() or cairo_set_fill_rule()). Unlike CairoContext::clip(), CairoContext::clipPreserve() preserves the path within the Context. The current clip region affects all drawing operations by effectively masking out any changes to the surface that are outside the current clip region. Calling CairoContext::clipPreserve() can only make the clip region smaller, never larger. But the current clip is part of the graphics state, so a temporary restriction of the clip region can be achieved by calling CairoContext::clipPreserve() within a CairoContext::save()\/ CairoContext::restore() pair. The only other means of increasing the size of the clip region is CairoContext::resetClip().","ver":"PECL cairo >= 0.1.0","ret_desc":"No value is returned.","seealso":[],"url":"cairocontext.clippreserve","name":"clipPreserve","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::clipRectangleList":{"desc":"Retrieves the current clip as a list of rectangles","long_desc":"Object oriented style (method):Procedural style: Returns a list-type array with the current clip region as a list of rectangles in user coordinates","ver":"PECL cairo >= 0.1.0","ret_desc":"An array of user-space represented rectangles for the current clip","seealso":[],"url":"cairocontext.cliprectanglelist","name":"clipRectangleList","class":"CairoContext","params":[{"list":[],"ret_type":"array"},{"list":[],"ret_type":"array"}]},"CairoContext::closePath":{"desc":"Closes the current path","long_desc":"Object oriented style (method):Procedural style: Adds a line segment to the path from the current point to the beginning of the current sub-path, (the most recent point passed to CairoContext::moveTo()), and closes this sub-path. After this call the current point will be at the joined endpoint of the sub-path. The behavior of close_path() is distinct from simply calling CairoContext::lineTo() with the equivalent coordinate in the case of stroking. When a closed sub-path is stroked, there are no caps on the ends of the sub-path. Instead, there is a line join connecting the final and initial segments of the sub-path. If there is no current point before the call to CairoContext::closePath(), this function will have no effect.","ver":"PECL cairo >= 0.1.0","ret_desc":"No value is returned.","seealso":[],"url":"cairocontext.closepath","name":"closePath","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::copyPage":{"desc":"Emits the current page","long_desc":"Object oriented style (method):Procedural style: Emits the current page for backends that support multiple pages, but doesn\u2019t clear it, so, the contents of the current page will be retained for the next page too. Use CairoContext::showPage() if you want to get an empty page after the emission. This is a convenience function that simply calls CairoSurface::copyPage() on CairoContext\u2019s target.","ver":"PECL cairo >= 0.1.0","ret_desc":"No value is returned.","seealso":[],"url":"cairocontext.copypage","name":"copyPage","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::copyPath":{"desc":"Creates a copy of the current path","long_desc":"Object oriented style (method):Procedural style: Creates a copy of the current path and returns it to the user as a CairoPath. See CairoPath for hints on how to iterate over the returned data structure. This function will always return a valid CairoPath object, but the result will have no data, if either of the following conditions hold:","ver":"PECL cairo >= 0.1.0","ret_desc":"A copy of the current CairoPath in the context","seealso":[],"url":"cairocontext.copypath","name":"copyPath","class":"CairoContext","params":[{"list":[],"ret_type":"CairoPath"},{"list":[],"ret_type":"CairoPath"}]},"CairoContext::copyPathFlat":{"desc":"Gets a flattened copy of the current path","long_desc":"Object oriented style (method):Procedural style: Gets a flattened copy of the current path and returns it to the user as a CairoPath. This function is like CairoContext::copyPath() except that any curves in the path will be approximated with piecewise-linear approximations, (accurate to within the current tolerance value). That is, the result is guaranteed to not have any elements of type CAIRO_PATH_CURVE_TO which will instead be replaced by a series of CAIRO_PATH_LINE_TO elements.","ver":"PECL cairo >= 0.1.0","ret_desc":"A copy of the current path","seealso":[],"url":"cairocontext.copypathflat","name":"copyPathFlat","class":"CairoContext","params":[{"list":[],"ret_type":"CairoPath"},{"list":[],"ret_type":"CairoPath"}]},"CairoContext::curveTo":{"desc":"Adds a curve","long_desc":"Object oriented style (method):Procedural style: Adds a cubic Bezier spline to the path from the current point to position x3 ,y3 in user-space coordinates, using x1, y1 and x2, y2 as the control points. After this call the current point will be x3, y3. If there is no current point before the call to CairoContext::curveTo() this function will behave as if preceded by a call to CairoContext::moveTo() (x1, y1).","ver":"PECL cairo >= 0.1.0","ret_desc":"No value is returned.","seealso":[],"url":"cairocontext.curveto","name":"curveTo","class":"CairoContext","params":[{"list":[{"type":"float","var":"$x1","beh":0,"desc":"A valid CairoContext object created with CairoContext::__construct() or cairo_create()"},{"type":"float","var":"$y1","beh":0,"desc":"First control point in the x axis for the curve"},{"type":"float","var":"$x2","beh":1,"desc":"First control point in the y axis for the curve"},{"type":"float","var":"$y2","beh":1,"desc":"Second control point in x axis for the curve"},{"type":"float","var":"$x3","beh":1,"desc":"Second control point in y axis for the curve"},{"type":"float","var":"$y3","beh":1,"desc":"Final point in the x axis for the curve"}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"A valid CairoContext object created with CairoContext::__construct() or cairo_create()"},{"type":"float","var":"$x1","beh":0,"desc":"First control point in the x axis for the curve"},{"type":"float","var":"$y1","beh":1,"desc":"First control point in the y axis for the curve"},{"type":"float","var":"$x2","beh":1,"desc":"Second control point in x axis for the curve"},{"type":"float","var":"$y2","beh":1,"desc":"Second control point in y axis for the curve"},{"type":"float","var":"$x3","beh":1,"desc":"Final point in the x axis for the curve"},{"type":"float","var":"$y3","beh":1,"desc":"Final point in the y axis for the curve"}],"ret_type":"void"}]},"CairoContext::deviceToUser":{"desc":"Transform a coordinate","long_desc":"Object oriented style (method):Procedural style: Transform a coordinate from device space to user space by multiplying the given point by the inverse of the current transformation matrix (CTM).","ver":"PECL cairo >= 0.1.0","ret_desc":"An array containing the x and y coordinates in the user-space","seealso":[],"url":"cairocontext.devicetouser","name":"deviceToUser","class":"CairoContext","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":"A valid CairoContext object created with CairoContext::__construct() or cairo_create()"},{"type":"float","var":"$y","beh":0,"desc":"x value of the coordinate"}],"ret_type":"array"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"A valid CairoContext object created with CairoContext::__construct() or cairo_create()"},{"type":"float","var":"$x","beh":0,"desc":"x value of the coordinate"},{"type":"float","var":"$y","beh":1,"desc":"y value of the coordinate"}],"ret_type":"array"}]},"CairoContext::deviceToUserDistance":{"desc":"Transform a distance","long_desc":"Object oriented style (method):Procedural style: Transform a distance vector from device space to user space. This function is similar to CairoContext::deviceToUser() or cairo_device_to_user() except that the translation components of the inverse Cairo Transformation Matrix will be ignored when transforming (x,y).","ver":"PECL cairo >= 0.1.0","ret_desc":"Returns an array with the x and y values of a distance vector in the user-space","seealso":[],"url":"cairocontext.devicetouserdistance","name":"deviceToUserDistance","class":"CairoContext","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":"A valid CairoContext object created with CairoContext::__construct() or cairo_create()"},{"type":"float","var":"$y","beh":0,"desc":"X component of a distance vector"}],"ret_type":"array"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"A valid CairoContext object created with CairoContext::__construct() or cairo_create()"},{"type":"float","var":"$x","beh":0,"desc":"X component of a distance vector"},{"type":"float","var":"$y","beh":1,"desc":"Y component of a distance vector"}],"ret_type":"array"}]},"CairoContext::fill":{"desc":"Fills the current path","long_desc":"Object oriented style (method):Procedural style: A drawing operator that fills the current path according to the current CairoFillRule, (each sub-path is implicitly closed before being filled). After CairoContext::fill() or cairo_fill(), the current path will be cleared from the CairoContext.","ver":"PECL cairo >= 0.1.0","ret_desc":"No value is returned.","seealso":[],"url":"cairocontext.fill","name":"fill","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::fillExtents":{"desc":"Computes the filled area","long_desc":"Object oriented style (method):Procedural style: Computes a bounding box in user coordinates covering the area that would be affected, (the \u201cinked\u201d area), by a CairoContext::fill() operation given the current path and fill parameters. If the current path is empty, returns an empty rectangle (0,0,0,0). Surface dimensions and clipping are not taken into account. Contrast with CairoContext::pathExtents(), which is similar, but returns non-zero extents for some paths with no inked area, (such as a simple line segment). Note that CairoContext::fillExtents() must necessarily do more work to compute the precise inked areas in light of the fill rule, so CairoContext::pathExtents() may be more desirable for sake of performance if the non-inked path extents are desired.","ver":"PECL cairo >= 0.1.0","ret_desc":"An array with the coordinates of the afected area","seealso":[],"url":"cairocontext.fillextents","name":"fillExtents","class":"CairoContext","params":[{"list":[],"ret_type":"array"},{"list":[],"ret_type":"array"}]},"CairoContext::fillPreserve":{"desc":"Fills and preserve the current path","long_desc":"Object oriented style (method):Procedural style: A drawing operator that fills the current path according to the current CairoFillRule, (each sub-path is implicitly closed before being filled). Unlike CairoContext::fill(), CairoContext::fillPreserve() (Procedural cairo_fill(), cairo_fill_preserve(), respectively) preserves the path within the Context.","ver":"PECL cairo >= 0.1.0","ret_desc":"No value is returned.","seealso":[],"url":"cairocontext.fillpreserve","name":"fillPreserve","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::fontExtents":{"desc":"Get the font extents","long_desc":"Object oriented style (method):Procedural style: Gets the font extents for the currently selected font.","ver":"PECL cairo >= 0.1.0","ret_desc":"An array containing the font extents for the current font.","seealso":[],"url":"cairocontext.fontextents","name":"fontExtents","class":"CairoContext","params":[{"list":[],"ret_type":"array"},{"list":[],"ret_type":"array"}]},"CairoContext::getAntialias":{"desc":"Retrives the current antialias mode","long_desc":"Object oriented style (method):Procedural style: Returns the current CairoAntialias mode, as set by CairoContext::setAntialias().","ver":"PECL cairo >= 0.1.0","ret_desc":"The current CairoAntialias mode.","seealso":[],"url":"cairocontext.getantialias","name":"getAntialias","class":"CairoContext","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"CairoContext::getCurrentPoint":{"desc":"The getCurrentPoint purpose","long_desc":"Object oriented styleProcedural style Gets the current point of the current path, which is conceptually the final point reached by the path so far. The current point is returned in the user-space coordinate system. If there is no defined current point or if cr is in an error status, x and y will both be set to 0.0. It is possible to check this in advance with CairoContext::hasCurrentPoint(). Most path construction functions alter the current point. See the following for details on how they affect the current point: CairoContext::newPath(), CairoContext::newSubPath(), CairoContext::appendPath(), CairoContext::closePath(), CairoContext::moveTo(), CairoContext::lineTo(), CairoContext::curveTo(), CairoContext::relMoveTo(), CairoContext::relLineTo(), CairoContext::relCurveTo(), CairoContext::arc(), CairoContext::arcNegative(), CairoContext::rectangle(), CairoContext::textPath(), CairoContext::glyphPath(). Some functions use and alter the current point but do not otherwise change current path: CairoContext::showText(). Some functions unset the current path and as a result, current point: CairoContext::fill(), CairoContext::stroke().","ver":"PECL cairo >= 0.1.0","ret_desc":"An array containing the x (index 0) and y (index 1) coordinates of the current point.","seealso":[],"url":"cairocontext.getcurrentpoint","name":"getCurrentPoint","class":"CairoContext","params":[{"list":[],"ret_type":"array"},{"list":[],"ret_type":"array"}]},"CairoContext::getDash":{"desc":"The getDash purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.getdash","name":"getDash","class":"CairoContext","params":[{"list":[],"ret_type":"array"},{"list":[],"ret_type":"array"}]},"CairoContext::getDashCount":{"desc":"The getDashCount purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.getdashcount","name":"getDashCount","class":"CairoContext","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"CairoContext::getFillRule":{"desc":"The getFillRule purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.getfillrule","name":"getFillRule","class":"CairoContext","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"CairoContext::getFontFace":{"desc":"The getFontFace purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.getfontface","name":"getFontFace","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::getFontMatrix":{"desc":"The getFontMatrix purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.getfontmatrix","name":"getFontMatrix","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::getFontOptions":{"desc":"The getFontOptions purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.getfontoptions","name":"getFontOptions","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::getGroupTarget":{"desc":"The getGroupTarget purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.getgrouptarget","name":"getGroupTarget","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::getLineCap":{"desc":"The getLineCap purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.getlinecap","name":"getLineCap","class":"CairoContext","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"CairoContext::getLineJoin":{"desc":"The getLineJoin purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.getlinejoin","name":"getLineJoin","class":"CairoContext","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"CairoContext::getLineWidth":{"desc":"The getLineWidth purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.getlinewidth","name":"getLineWidth","class":"CairoContext","params":[{"list":[],"ret_type":"float"},{"list":[],"ret_type":"float"}]},"CairoContext::getMatrix":{"desc":"The getMatrix purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.getmatrix","name":"getMatrix","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::getMiterLimit":{"desc":"The getMiterLimit purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.getmiterlimit","name":"getMiterLimit","class":"CairoContext","params":[{"list":[],"ret_type":"float"},{"list":[],"ret_type":"float"}]},"CairoContext::getOperator":{"desc":"The getOperator purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.getoperator","name":"getOperator","class":"CairoContext","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"CairoContext::getScaledFont":{"desc":"The getScaledFont purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.getscaledfont","name":"getScaledFont","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::getSource":{"desc":"The getSource purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.getsource","name":"getSource","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::getTarget":{"desc":"The getTarget purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.gettarget","name":"getTarget","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::getTolerance":{"desc":"The getTolerance purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.gettolerance","name":"getTolerance","class":"CairoContext","params":[{"list":[],"ret_type":"float"},{"list":[],"ret_type":"float"}]},"CairoContext::glyphPath":{"desc":"The glyphPath purpose","long_desc":"Object oriented styleProcedural style Adds closed paths for the glyphs to the current path. The generated path if filled, achieves an effect similar to that of CairoContext::showGlyphs().","ver":"PECL cairo >= 0.1.0","ret_desc":"No value is returned.","url":"cairocontext.glyphpath","name":"glyphPath","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"A CairoContext object"},{"type":"array","var":"$glyphs","beh":0,"desc":"Array of glyphs"}],"ret_type":"void"}]},"CairoContext::hasCurrentPoint":{"desc":"The hasCurrentPoint purpose","long_desc":"Object oriented style (method):Procedural style: Returns whether a current point is defined on the current path. See CairoContext::getCurrentPoint() for details on the current point.","ver":"PECL cairo >= 0.1.0","ret_desc":"Whether a current point is defined","seealso":[],"url":"cairocontext.hascurrentpoint","name":"hasCurrentPoint","class":"CairoContext","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"CairoContext::identityMatrix":{"desc":"The identityMatrix purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.identitymatrix","name":"identityMatrix","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::inFill":{"desc":"The inFill purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.infill","name":"inFill","class":"CairoContext","params":[{"list":[{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":0,"desc":"Description..."}],"ret_type":"bool"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":1,"desc":"Description..."}],"ret_type":"bool"}]},"CairoContext::inStroke":{"desc":"The inStroke purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.instroke","name":"inStroke","class":"CairoContext","params":[{"list":[{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":0,"desc":"Description..."}],"ret_type":"bool"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":1,"desc":"Description..."}],"ret_type":"bool"}]},"CairoContext::lineTo":{"desc":"The lineTo purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.lineto","name":"lineTo","class":"CairoContext","params":[{"list":[{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":0,"desc":"Description..."}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::mask":{"desc":"The mask purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.mask","name":"mask","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"CairoPattern","var":"$pattern","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::maskSurface":{"desc":"The maskSurface purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.masksurface","name":"maskSurface","class":"CairoContext","params":[{"list":[{"type":"string","var":"$surface","beh":1,"desc":"Description..."},{"type":"string","var":"$x","beh":1,"desc":"Description..."},{"type":"string","var":"$y","beh":1,"desc":"Description..."}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":1,"desc":"Description..."},{"type":"CairoSurface","var":"$surface","beh":1,"desc":"Description..."},{"type":"string","var":"$x","beh":1,"desc":"Description..."},{"type":"string","var":"$y","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::moveTo":{"desc":"The moveTo purpose","long_desc":"Object oriented style (method):Procedural style: Begin a new sub-path. After this call the current point will be (x, y).","ver":"PECL cairo >= 0.1.0","ret_desc":"No value is returned.","seealso":[],"url":"cairocontext.moveto","name":"moveTo","class":"CairoContext","params":[{"list":[{"type":"string","var":"$x","beh":0,"desc":"A valid CairoContext object."},{"type":"string","var":"$y","beh":0,"desc":"The x coordinate of the new position."}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"A valid CairoContext object."},{"type":"string","var":"$x","beh":0,"desc":"The x coordinate of the new position."},{"type":"string","var":"$y","beh":1,"desc":"The y coordinate of the new position"}],"ret_type":"void"}]},"CairoContext::newPath":{"desc":"The newPath purpose","long_desc":"Object oriented style (method):Procedural style: Clears the current path. After this call there will be no path and no current point.","ver":"PECL cairo >= 0.1.0","ret_desc":"No value is returned.","seealso":[],"url":"cairocontext.newpath","name":"newPath","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::newSubPath":{"desc":"The newSubPath purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.newsubpath","name":"newSubPath","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::paint":{"desc":"The paint purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.paint","name":"paint","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::paintWithAlpha":{"desc":"The paintWithAlpha purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.paintwithalpha","name":"paintWithAlpha","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$alpha","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::pathExtents":{"desc":"The pathExtents purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.pathextents","name":"pathExtents","class":"CairoContext","params":[{"list":[],"ret_type":"array"},{"list":[],"ret_type":"array"}]},"CairoContext::popGroup":{"desc":"The popGroup purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.popgroup","name":"popGroup","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::popGroupToSource":{"desc":"The popGroupToSource purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.popgrouptosource","name":"popGroupToSource","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::pushGroup":{"desc":"The pushGroup purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.pushgroup","name":"pushGroup","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::pushGroupWithContent":{"desc":"The pushGroupWithContent purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.pushgroupwithcontent","name":"pushGroupWithContent","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$content","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::rectangle":{"desc":"The rectangle purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.rectangle","name":"rectangle","class":"CairoContext","params":[{"list":[{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":0,"desc":"Description..."},{"type":"string","var":"$width","beh":1,"desc":"Description..."},{"type":"string","var":"$height","beh":1,"desc":"Description..."}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":1,"desc":"Description..."},{"type":"string","var":"$width","beh":1,"desc":"Description..."},{"type":"string","var":"$height","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::relCurveTo":{"desc":"The relCurveTo purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.relcurveto","name":"relCurveTo","class":"CairoContext","params":[{"list":[{"type":"string","var":"$x1","beh":0,"desc":"Description..."},{"type":"string","var":"$y1","beh":0,"desc":"Description..."},{"type":"string","var":"$x2","beh":1,"desc":"Description..."},{"type":"string","var":"$y2","beh":1,"desc":"Description..."},{"type":"string","var":"$x3","beh":1,"desc":"Description..."},{"type":"string","var":"$y3","beh":1,"desc":"Description..."}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$x1","beh":0,"desc":"Description..."},{"type":"string","var":"$y1","beh":1,"desc":"Description..."},{"type":"string","var":"$x2","beh":1,"desc":"Description..."},{"type":"string","var":"$y2","beh":1,"desc":"Description..."},{"type":"string","var":"$x3","beh":1,"desc":"Description..."},{"type":"string","var":"$y3","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::relLineTo":{"desc":"The relLineTo purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.rellineto","name":"relLineTo","class":"CairoContext","params":[{"list":[{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":0,"desc":"Description..."}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::relMoveTo":{"desc":"The relMoveTo purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.relmoveto","name":"relMoveTo","class":"CairoContext","params":[{"list":[{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":0,"desc":"Description..."}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::resetClip":{"desc":"The resetClip purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.resetclip","name":"resetClip","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::restore":{"desc":"The restore purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.restore","name":"restore","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::rotate":{"desc":"The rotate purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.rotate","name":"rotate","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$angle","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::save":{"desc":"The save purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.save","name":"save","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::scale":{"desc":"The scale purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.scale","name":"scale","class":"CairoContext","params":[{"list":[{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":0,"desc":"Description..."}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::selectFontFace":{"desc":"The selectFontFace purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.selectfontface","name":"selectFontFace","class":"CairoContext","params":[{"list":[{"type":"string","var":"$family","beh":1,"desc":"Description..."},{"type":"string","var":"$slant","beh":1,"desc":"Description..."},{"type":"string","var":"$weight","beh":1,"desc":"Description..."}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":1,"desc":"Description..."},{"type":"string","var":"$family","beh":1,"desc":"Description..."},{"type":"string","var":"$slant","beh":1,"desc":"Description..."},{"type":"string","var":"$weight","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setAntialias":{"desc":"The setAntialias purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setantialias","name":"setAntialias","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$antialias","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setDash":{"desc":"The setDash purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setdash","name":"setDash","class":"CairoContext","params":[{"list":[{"type":"string","var":"$dashes","beh":0,"desc":"Description..."},{"type":"string","var":"$offset","beh":1,"desc":"Description..."}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"array","var":"$dashes","beh":1,"desc":"Description..."},{"type":"string","var":"$offset","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setFillRule":{"desc":"The setFillRule purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setfillrule","name":"setFillRule","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$setting","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setFontFace":{"desc":"The setFontFace purpose","long_desc":"Object oriented style (method):Procedural style: Sets the font-face for a given context.","ver":"PECL cairo >= 0.1.0","ret_desc":"No value is returned","seealso":[],"url":"cairocontext.setfontface","name":"setFontFace","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"A CairoContext object to change the font-face for."},{"type":"CairoFontFace","var":"$fontface","beh":0,"desc":"A CairoFontFace object"}],"ret_type":"void"}]},"CairoContext::setFontMatrix":{"desc":"The setFontMatrix purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setfontmatrix","name":"setFontMatrix","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"CairoMatrix","var":"$matrix","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setFontOptions":{"desc":"The setFontOptions purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setfontoptions","name":"setFontOptions","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"CairoFontOptions","var":"$fontoptions","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setFontSize":{"desc":"The setFontSize purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setfontsize","name":"setFontSize","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$size","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setLineCap":{"desc":"The setLineCap purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setlinecap","name":"setLineCap","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$setting","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setLineJoin":{"desc":"The setLineJoin purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setlinejoin","name":"setLineJoin","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$setting","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setLineWidth":{"desc":"The setLineWidth purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setlinewidth","name":"setLineWidth","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$width","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setMatrix":{"desc":"The setMatrix purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setmatrix","name":"setMatrix","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"CairoMatrix","var":"$matrix","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setMiterLimit":{"desc":"The setMiterLimit purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setmiterlimit","name":"setMiterLimit","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$limit","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setOperator":{"desc":"The setOperator purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setoperator","name":"setOperator","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$setting","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setScaledFont":{"desc":"The setScaledFont purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setscaledfont","name":"setScaledFont","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"CairoScaledFont","var":"$scaledfont","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setSource":{"desc":"The setSource purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setsource","name":"setSource","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"CairoPattern","var":"$pattern","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setSourceRGB":{"desc":"The setSourceRGB purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setsourcergb","name":"setSourceRGB","class":"CairoContext","params":[{"list":[{"type":"string","var":"$red","beh":0,"desc":"Description..."},{"type":"string","var":"$green","beh":0,"desc":"Description..."},{"type":"string","var":"$blue","beh":1,"desc":"Description..."}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"CairoPattern","var":"$pattern","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setSourceRGBA":{"desc":"The setSourceRGBA purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setsourcergba","name":"setSourceRGBA","class":"CairoContext","params":[{"list":[{"type":"string","var":"$red","beh":0,"desc":"Description..."},{"type":"string","var":"$green","beh":0,"desc":"Description..."},{"type":"string","var":"$blue","beh":1,"desc":"Description..."},{"type":"string","var":"$alpha","beh":1,"desc":"Description..."}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"CairoPattern","var":"$pattern","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setSourceSurface":{"desc":"The setSourceSurface purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.setsourcesurface","name":"setSourceSurface","class":"CairoContext","params":[{"list":[{"type":"string","var":"$surface","beh":1,"desc":"Description..."},{"type":"string","var":"$x","beh":1,"desc":"Description..."},{"type":"string","var":"$y","beh":1,"desc":"Description..."}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":1,"desc":"Description..."},{"type":"CairoSurface","var":"$surface","beh":1,"desc":"Description..."},{"type":"string","var":"$x","beh":1,"desc":"Description..."},{"type":"string","var":"$y","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::setTolerance":{"desc":"The setTolerance purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.settolerance","name":"setTolerance","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$tolerance","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::showPage":{"desc":"The showPage purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.showpage","name":"showPage","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::showText":{"desc":"The showText purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.showtext","name":"showText","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$text","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::status":{"desc":"The status purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.status","name":"status","class":"CairoContext","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"CairoContext::stroke":{"desc":"The stroke purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.stroke","name":"stroke","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::strokeExtents":{"desc":"The strokeExtents purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.strokeextents","name":"strokeExtents","class":"CairoContext","params":[{"list":[],"ret_type":"array"},{"list":[],"ret_type":"array"}]},"CairoContext::strokePreserve":{"desc":"The strokePreserve purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.strokepreserve","name":"strokePreserve","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"CairoContext::textExtents":{"desc":"The textExtents purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.textextents","name":"textExtents","class":"CairoContext","params":[{"list":[],"ret_type":"array"},{"list":[],"ret_type":"array"}]},"CairoContext::textPath":{"desc":"The textPath purpose","long_desc":"Object oriented styleProcedural style Adds closed paths for text to the current path. The generated path, if filled, achieves an effect similar to that of CairoContext::showText(). Text conversion and positioning is done similar to CairoContext::showText(). Like CairoContext::showText(), after this call the current point is moved to the origin of where the next glyph would be placed in this same progression. That is, the current point will be at the origin of the final glyph offset by its advance values. This allows for chaining multiple calls to CairoContext::showText() without having to set current point in between. Note: The CairoContext::textPath() function call is part of what the cairo designers call the \"toy\" text API. It is convenient for short demos and simple programs, but it is not expected to be adequate for serious text-using applications. See CairoContext::glyphPath() for the \"real\" text path API in cairo.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.textpath","name":"textPath","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"A CairoContext object"},{"type":"string","var":"$text","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::transform":{"desc":"The transform purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.transform","name":"transform","class":"CairoContext","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"CairoMatrix","var":"$matrix","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::translate":{"desc":"The translate purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.translate","name":"translate","class":"CairoContext","params":[{"list":[{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":0,"desc":"Description..."}],"ret_type":"void"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"CairoContext::userToDevice":{"desc":"The userToDevice purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.usertodevice","name":"userToDevice","class":"CairoContext","params":[{"list":[{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":0,"desc":"Description..."}],"ret_type":"array"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":1,"desc":"Description..."}],"ret_type":"array"}]},"CairoContext::userToDeviceDistance":{"desc":"The userToDeviceDistance purpose","long_desc":"Object oriented style (method):Procedural style: Description here.","ver":"PECL cairo >= 0.1.0","ret_desc":"Description...","seealso":[],"url":"cairocontext.usertodevicedistance","name":"userToDeviceDistance","class":"CairoContext","params":[{"list":[{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":0,"desc":"Description..."}],"ret_type":"array"},{"list":[{"type":"CairoContext","var":"$context","beh":0,"desc":"Description..."},{"type":"string","var":"$x","beh":0,"desc":"Description..."},{"type":"string","var":"$y","beh":1,"desc":"Description..."}],"ret_type":"array"}]},"Countable::count":{"desc":"Count elements of an object","long_desc":"This method is executed when using the count() function on an object implementing Countable.","ver":"PHP 5 >= 5.1.0","ret_desc":"The custom count as an integer.","url":"countable.count","name":"count","class":"Countable","params":[{"list":[],"ret_type":"int"}]},"DOMAttr::__construct":{"desc":"Creates a new DOMAttr object","long_desc":"Creates a new DOMAttr object. This object is read only. It may be appended to a document, but additional nodes may not be appended to this node until the node is associated with a document. To create a writable node, use DOMDocument::createAttribute.","ver":"PHP 5","seealso":[],"url":"domattr.construct","name":"__construct","class":"DOMAttr","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"The tag name of the attribute."},{"type":"string","var":"$value","beh":1,"desc":"The value of the attribute."}]}]},"DOMAttr::isId":{"desc":"Checks if attribute is a defined ID","long_desc":"This function checks if the attribute is a defined ID. According to the DOM standard this requires a DTD which defines the attribute ID to be of type ID. You need to validate your document with DOMDocument::validate or DOMDocument::validateOnParse before using this function.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"domattr.isid","name":"isId","class":"DOMAttr","params":[{"list":[],"ret_type":"bool"}]},"DOMAttribute::name":{"desc":"Returns the name of attribute","long_desc":"Gets the name of the attribute.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns the name of the attribute.","seealso":[],"url":"function.domattribute-name","name":"name","class":"DOMAttribute","params":[{"list":[],"ret_type":"string"}]},"DOMAttribute::set_value":{"desc":"Sets the value of an attribute","long_desc":"This function sets the value of an attribute.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.domattribute-set-value","name":"set_value","class":"DOMAttribute","params":[{"list":[],"ret_type":"bool"}]},"DOMAttribute::specified":{"desc":"Checks if attribute is specified","long_desc":"Checks if the attribute was explicitly given a value in the original document.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.domattribute-specified","name":"specified","class":"DOMAttribute","params":[{"list":[],"ret_type":"bool"}]},"DOMAttribute::value":{"desc":"Returns value of attribute","long_desc":"This function returns the value of the attribute.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns the value of the attribute.","seealso":[],"url":"function.domattribute-value","name":"value","class":"DOMAttribute","params":[{"list":[],"ret_type":"string"}]},"DOMComment::__construct":{"desc":"Creates a new DOMComment object","long_desc":"Creates a new DOMComment object. This object is read only. It may be appended to a document, but additional nodes may not be appended to this node until the node is associated with a document. To create a writeable node, use DOMDocument::createComment.","ver":"PHP 5","seealso":[],"url":"domcomment.construct","name":"__construct","class":"DOMComment","params":[{"list":[]}]},"DOMDocument::__construct":{"desc":"Creates a new DOMDocument object","long_desc":"Creates a new DOMDocument object.","ver":"PHP 5","seealso":[],"url":"domdocument.construct","name":"__construct","class":"DOMDocument","params":[{"list":[{"type":"string","var":"$version","beh":1,"desc":"The version number of the document as part of the XML declaration."},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding of the document as part of the XML declaration."}]}]},"DOMDocument::add_root":{"desc":"Adds a root node [deprecated]","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-add-root","name":"add_root","class":"DOMDocument","params":[{"list":[],"ret_type":"DOMElement"}]},"DOMDocument::createAttribute":{"desc":"Create new attribute","long_desc":"This function creates a new instance of class DOMAttr. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().","ver":"PHP 5","ret_desc":"The new DOMAttr or FALSE if an error occured.","seealso":[],"url":"domdocument.createattribute","name":"createAttribute","class":"DOMDocument","params":[{"list":[],"ret_type":"DOMAttr"}]},"DOMDocument::createAttributeNS":{"desc":"Create new attribute node with an associated namespace","long_desc":"This function creates a new instance of class DOMAttr. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().","ver":"PHP 5","ret_desc":"The new DOMAttr or FALSE if an error occured.","seealso":[],"url":"domdocument.createattributens","name":"createAttributeNS","class":"DOMDocument","params":[{"list":[{"type":"string","var":"$namespaceURI","beh":0,"desc":"The URI of the namespace."},{"type":"string","var":"$qualifiedName","beh":0,"desc":"The tag name and prefix of the attribute, as prefix:tagname."}],"ret_type":"DOMAttr"}]},"DOMDocument::createCDATASection":{"desc":"Create new cdata node","long_desc":"This function creates a new instance of class DOMCDATASection. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().","ver":"PHP 5","ret_desc":"The new DOMCDATASection or FALSE if an error occured.","seealso":[],"url":"domdocument.createcdatasection","name":"createCDATASection","class":"DOMDocument","params":[{"list":[],"ret_type":"DOMCDATASection"}]},"DOMDocument::createComment":{"desc":"Create new comment node","long_desc":"This function creates a new instance of class DOMComment. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().","ver":"PHP 5","ret_desc":"The new DOMComment or FALSE if an error occured.","seealso":[],"url":"domdocument.createcomment","name":"createComment","class":"DOMDocument","params":[{"list":[],"ret_type":"DOMComment"}]},"DOMDocument::createDocumentFragment":{"desc":"Create new document fragment","long_desc":"This function creates a new instance of class DOMDocumentFragment. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().","ver":"PHP 5","ret_desc":"The new DOMDocumentFragment or FALSE if an error occured.","seealso":[],"url":"domdocument.createdocumentfragment","name":"createDocumentFragment","class":"DOMDocument","params":[{"list":[],"ret_type":"DOMDocumentFragment"}]},"DOMDocument::createElement":{"desc":"Create new element node","long_desc":"This function creates a new instance of class DOMElement. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().","ver":"PHP 5","ret_desc":"Returns a new instance of class DOMElement or FALSE if an error occured.","seealso":[],"url":"domdocument.createelement","name":"createElement","class":"DOMDocument","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"The tag name of the element."},{"type":"string","var":"$value","beh":1,"desc":"The value of the element. By default, an empty element will be created. The value can also be set later with DOMElement::$nodeValue."}],"ret_type":"DOMElement"}]},"DOMDocument::createElementNS":{"desc":"Create new element node with an associated namespace","long_desc":"This function creates a new element node with an associated namespace. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().","ver":"PHP 5","ret_desc":"The new DOMElement or FALSE if an error occured.","seealso":[],"url":"domdocument.createelementns","name":"createElementNS","class":"DOMDocument","params":[{"list":[{"type":"string","var":"$namespaceURI","beh":0,"desc":"The URI of the namespace."},{"type":"string","var":"$qualifiedName","beh":1,"desc":"The qualified name of the element, as prefix:tagname."},{"type":"string","var":"$value","beh":1,"desc":"The value of the element. By default, an empty element will be created. You can also set the value later with DOMElement::$nodeValue."}],"ret_type":"DOMElement"}]},"DOMDocument::createEntityReference":{"desc":"Create new entity reference node","long_desc":"This function creates a new instance of class DOMEntityReference. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().","ver":"PHP 5","ret_desc":"The new DOMEntityReference or FALSE if an error occured.","seealso":[],"url":"domdocument.createentityreference","name":"createEntityReference","class":"DOMDocument","params":[{"list":[],"ret_type":"DOMEntityReference"}]},"DOMDocument::createProcessingInstruction":{"desc":"Creates new PI node","long_desc":"This function creates a new instance of class DOMProcessingInstruction. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().","ver":"PHP 5","ret_desc":"The new DOMProcessingInstruction or FALSE if an error occured.","seealso":[],"url":"domdocument.createprocessinginstruction","name":"createProcessingInstruction","class":"DOMDocument","params":[{"list":[{"type":"string","var":"$target","beh":0,"desc":"The target of the processing instruction."},{"type":"string","var":"$data","beh":1,"desc":"The content of the processing instruction."}],"ret_type":"DOMProcessingInstruction"}]},"DOMDocument::createTextNode":{"desc":"Create new text node","long_desc":"This function creates a new instance of class DOMText. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().","ver":"PHP 5","ret_desc":"The new DOMText or FALSE if an error occured.","seealso":[],"url":"domdocument.createtextnode","name":"createTextNode","class":"DOMDocument","params":[{"list":[],"ret_type":"DOMText"}]},"DOMDocument::create_attribute":{"desc":"Create new attribute","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-create-attribute","name":"create_attribute","class":"DOMDocument","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":""},{"type":"string","var":"$value","beh":0,"desc":""}],"ret_type":"DOMAttribute"}]},"DOMDocument::create_cdata_section":{"desc":"Create new cdata node","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-create-cdata-section","name":"create_cdata_section","class":"DOMDocument","params":[{"list":[],"ret_type":"domcdata"}]},"DOMDocument::create_comment":{"desc":"Create new comment node","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-create-comment","name":"create_comment","class":"DOMDocument","params":[{"list":[],"ret_type":"DOMComment"}]},"DOMDocument::create_element":{"desc":"Create new element node","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-create-element","name":"create_element","class":"DOMDocument","params":[{"list":[],"ret_type":"DOMElement"}]},"DOMDocument::create_element_ns":{"desc":"Create new element node with an associated namespace","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-create-element-ns","name":"create_element_ns","class":"DOMDocument","params":[{"list":[{"type":"string","var":"$uri","beh":0,"desc":""},{"type":"string","var":"$name","beh":1,"desc":""},{"type":"string","var":"$prefix","beh":1,"desc":""}],"ret_type":"DOMElement"}]},"DOMDocument::create_entity_reference":{"desc":"Create an entity reference","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-create-entity-reference","name":"create_entity_reference","class":"DOMDocument","params":[{"list":[],"ret_type":"DOMEntityreference"}]},"DOMDocument::create_processing_instruction":{"desc":"Creates new PI node","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-create-processing-instruction","name":"create_processing_instruction","class":"DOMDocument","params":[{"list":[],"ret_type":"domprocessinginstruction"}]},"DOMDocument::create_text_node":{"desc":"Create new text node","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-create-text-node","name":"create_text_node","class":"DOMDocument","params":[{"list":[],"ret_type":"domtext"}]},"DOMDocument::doctype":{"desc":"Returns the document type","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-doctype","name":"doctype","class":"DOMDocument","params":[{"list":[],"ret_type":"DOMDocumenttype"}]},"DOMDocument::document_element":{"desc":"Returns root element node","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-document-element","name":"document_element","class":"DOMDocument","params":[{"list":[],"ret_type":"DOMElement"}]},"DOMDocument::dump_file":{"desc":"Dumps the internal XML tree back into a file","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-dump-file","name":"dump_file","class":"DOMDocument","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":""},{"type":"bool","var":"$compressionmode","beh":1,"desc":""},{"type":"bool","var":"$format","beh":1,"desc":""}],"ret_type":"string"}]},"DOMDocument::dump_mem":{"desc":"Dumps the internal XML tree back into a string","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-dump-mem","name":"dump_mem","class":"DOMDocument","params":[{"list":[{"type":"bool","var":"$format","beh":1,"desc":""},{"type":"string","var":"$encoding","beh":1,"desc":""}],"ret_type":"string"}]},"DOMDocument::getElementById":{"desc":"Searches for an element with a certain id","long_desc":"This function is similar to DOMDocument::getElementsByTagName but searches for an element with a given id. For this function to work, you will need either to set some ID attributes with DOMElement::setIdAttribute or a DTD which defines an attribute to be of type ID. In the later case, you will need to validate your document with DOMDocument::validate or DOMDocument::$validateOnParse before using this function.","ver":"PHP 5","ret_desc":"Returns the DOMElement or NULL if the element is not found.","seealso":[],"url":"domdocument.getelementbyid","name":"getElementById","class":"DOMDocument","params":[{"list":[],"ret_type":"DOMElement"}]},"DOMDocument::getElementsByTagName":{"desc":"Searches for all elements with given local tag name","long_desc":"This function returns a new instance of class DOMNodeList containing all the elements with a given local tag name.","ver":"PHP 5","ret_desc":"A new DOMNodeList object containing all the matched elements.","seealso":[],"url":"domdocument.getelementsbytagname","name":"getElementsByTagName","class":"DOMDocument","params":[{"list":[],"ret_type":"DOMNodelist"}]},"DOMDocument::getElementsByTagNameNS":{"desc":"Searches for all elements with given tag name in specified namespace","long_desc":"Returns a DOMNodeList of all elements with a given local name and a namespace URI.","ver":"PHP 5","ret_desc":"A new DOMNodeList object containing all the matched elements.","seealso":[],"url":"domdocument.getelementsbytagnamens","name":"getElementsByTagNameNS","class":"DOMDocument","params":[{"list":[{"type":"string","var":"$namespaceURI","beh":0,"desc":"The namespace URI of the elements to match on. The special value * matches all namespaces."},{"type":"string","var":"$localName","beh":0,"desc":"The local name of the elements to match on. The special value * matches all local names."}],"ret_type":"DOMNodelist"}]},"DOMDocument::get_element_by_id":{"desc":"Searches for an element with a certain id","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-get-element-by-id","name":"get_element_by_id","class":"DOMDocument","params":[{"list":[],"ret_type":"DOMElement"}]},"DOMDocument::get_elements_by_tagname":{"desc":"Returns array with nodes with given tagname in document or empty array, if not found","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-get-elements-by-tagname","name":"get_elements_by_tagname","class":"DOMDocument","params":[{"list":[],"ret_type":"array"}]},"DOMDocument::html_dump_mem":{"desc":"Dumps the internal XML tree back into a string as HTML","ver":"PHP 4 >= 4.1.0","url":"function.domdocument-html-dump-mem","name":"html_dump_mem","class":"DOMDocument","params":[{"list":[],"ret_type":"string"}]},"DOMDocument::importNode":{"desc":"Import node into current document","long_desc":"This function returns a copy of the node to import and associates it with the current document.","ver":"PHP 5","ret_desc":"The copied node or FALSE, if it cannot be copied.","url":"domdocument.importnode","name":"importNode","class":"DOMDocument","params":[{"list":[{"type":"DOMNode","var":"$importedNode","beh":0,"desc":"The node to import."},{"type":"bool","var":"$deep","beh":1,"desc":"If set to TRUE, this method will recursively import the subtree under the importedNode."}],"ret_type":"DOMNode"}]},"DOMDocument::load":{"desc":"Load XML from a file","long_desc":"Loads an XML document from a file.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. If called statically, returns a DOMDocument or FALSE on failure.","seealso":[],"url":"domdocument.load","name":"load","class":"DOMDocument","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The path to the XML document."},{"type":"int","var":"$options","beh":0,"desc":"Bitwise OR of the libxml option constants.","def":0}],"ret_type":"mixed"}]},"DOMDocument::loadHTML":{"desc":"Load HTML from a string","long_desc":"The function parses the HTML contained in the string source. Unlike loading XML, HTML does not have to be well-formed to load. This function may also be called statically to load and create a DOMDocument object. The static invocation may be used when no DOMDocument properties need to be set prior to loading.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. If called statically, returns a DOMDocument or FALSE on failure.","seealso":[],"url":"domdocument.loadhtml","name":"loadHTML","class":"DOMDocument","params":[{"list":[],"ret_type":"bool"}]},"DOMDocument::loadHTMLFile":{"desc":"Load HTML from a file","long_desc":"The function parses the HTML document in the file named filename. Unlike loading XML, HTML does not have to be well-formed to load.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. If called statically, returns a DOMDocument or FALSE on failure.","seealso":[],"url":"domdocument.loadhtmlfile","name":"loadHTMLFile","class":"DOMDocument","params":[{"list":[],"ret_type":"bool"}]},"DOMDocument::loadXML":{"desc":"Load XML from a string","long_desc":"Loads an XML document from a string.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. If called statically, returns a DOMDocument or FALSE on failure.","seealso":[],"url":"domdocument.loadxml","name":"loadXML","class":"DOMDocument","params":[{"list":[{"type":"string","var":"$source","beh":0,"desc":"The string containing the XML."},{"type":"int","var":"$options","beh":0,"desc":"Bitwise OR of the libxml option constants.","def":0}],"ret_type":"mixed"}]},"DOMDocument::normalizeDocument":{"desc":"Normalizes the document","long_desc":"This method acts as if you saved and then loaded the document, putting the document in a \"normal\" form.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"domdocument.normalizedocument","name":"normalizeDocument","class":"DOMDocument","params":[{"list":[],"ret_type":"void"}]},"DOMDocument::registerNodeClass":{"desc":"Register extended class used to create base node type","long_desc":"This method allows you to register your own extended DOM class to be used afterward by the PHP DOM extension. This method is not part of the DOM standard.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"domdocument.registernodeclass","name":"registerNodeClass","class":"DOMDocument","params":[{"list":[{"type":"string","var":"$baseclass","beh":0,"desc":"The DOM class that you want to extend. You can find a list of these classes in the chapter introduction."},{"type":"string","var":"$extendedclass","beh":0,"desc":"Your extended class name. If NULL is provided, any previously registered class extending baseclass will be removed."}],"ret_type":"bool"}]},"DOMDocument::relaxNGValidate":{"desc":"Performs relaxNG validation on the document","long_desc":"Performs \u00bb\u00a0relaxNG validation on the document based on the given RNG schema.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"domdocument.relaxngvalidate","name":"relaxNGValidate","class":"DOMDocument","params":[{"list":[],"ret_type":"bool"}]},"DOMDocument::relaxNGValidateSource":{"desc":"Performs relaxNG validation on the document","long_desc":"Performs \u00bb\u00a0relaxNG validation on the document based on the given RNG source.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"domdocument.relaxngvalidatesource","name":"relaxNGValidateSource","class":"DOMDocument","params":[{"list":[],"ret_type":"bool"}]},"DOMDocument::save":{"desc":"Dumps the internal XML tree back into a file","long_desc":"Creates an XML document from the DOM representation. This function is usually called after building a new dom document from scratch as in the example below.","ver":"PHP 5","ret_desc":"Returns the number of bytes written or FALSE if an error occurred.","seealso":[],"url":"domdocument.save","name":"save","class":"DOMDocument","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The path to the saved XML document."},{"type":"int","var":"$options","beh":1,"desc":"Additional Options. Currently only LIBXML_NOEMPTYTAG is supported."}],"ret_type":"int"}]},"DOMDocument::saveHTML":{"desc":"Dumps the internal document into a string using HTML formatting","long_desc":"Creates an HTML document from the DOM representation. This function is usually called after building a new dom document from scratch as in the example below.","ver":"PHP 5","ret_desc":"Returns the HTML, or FALSE if an error occurred.","seealso":[],"url":"domdocument.savehtml","name":"saveHTML","class":"DOMDocument","params":[{"list":[],"ret_type":"string"}]},"DOMDocument::saveHTMLFile":{"desc":"Dumps the internal document into a file using HTML formatting","long_desc":"Creates an HTML document from the DOM representation. This function is usually called after building a new dom document from scratch as in the example below.","ver":"PHP 5","ret_desc":"Returns the number of bytes written or FALSE if an error occurred.","seealso":[],"url":"domdocument.savehtmlfile","name":"saveHTMLFile","class":"DOMDocument","params":[{"list":[],"ret_type":"int"}]},"DOMDocument::saveXML":{"desc":"Dumps the internal XML tree back into a string","long_desc":"Creates an XML document from the DOM representation. This function is usually called after building a new dom document from scratch as in the example below.","ver":"PHP 5","ret_desc":"Returns the XML, or FALSE if an error occurred.","seealso":[],"url":"domdocument.savexml","name":"saveXML","class":"DOMDocument","params":[{"list":[{"type":"DOMNode","var":"$node","beh":1,"desc":"Use this parameter to output only a specific node without XML declaration rather than the entire document."},{"type":"int","var":"$options","beh":1,"desc":"Additional Options. Currently only LIBXML_NOEMPTYTAG is supported."}],"ret_type":"string"}]},"DOMDocument::schemaValidate":{"desc":"Validates a document based on a schema","long_desc":"Validates a document based on the given schema file.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"domdocument.schemavalidate","name":"schemaValidate","class":"DOMDocument","params":[{"list":[],"ret_type":"bool"}]},"DOMDocument::schemaValidateSource":{"desc":"Validates a document based on a schema","long_desc":"Validates a document based on a schema defined in the given string.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"domdocument.schemavalidatesource","name":"schemaValidateSource","class":"DOMDocument","params":[{"list":[],"ret_type":"bool"}]},"DOMDocument::validate":{"desc":"Validates the document based on its DTD","long_desc":"Validates the document based on its DTD. You can also use the validateOnParse property of DOMDocument to make a DTD validation.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. If the document have no DTD attached, this method will return FALSE.","seealso":[],"url":"domdocument.validate","name":"validate","class":"DOMDocument","params":[{"list":[],"ret_type":"bool"}]},"DOMDocument::xinclude":{"desc":"Substitutes XIncludes in a DomDocument Object","ver":"PHP 5","url":"function.domdocument-xinclude","name":"xinclude","class":"DOMDocument","params":[{"list":[],"ret_type":"int"}]},"DOMDocumentType::entities":{"desc":"Returns list of entities","long_desc":"","ver":"PHP 4 >= 4.1.0","url":"function.domdocumenttype-entities","name":"entities","class":"DOMDocumentType","params":[{"list":[],"ret_type":"array"}]},"DOMDocumentType::internal_subset":{"desc":"Returns internal subset","long_desc":"","ver":"PHP 4 >= 4.1.0","url":"function.domdocumenttype-internal-subset","name":"internal_subset","class":"DOMDocumentType","params":[{"list":[],"ret_type":"bool"}]},"DOMDocumentType::name":{"desc":"Returns name of document type","long_desc":"This function returns the name of the document type.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns the name of the DomDocumentType, as a string.","url":"function.domdocumenttype-name","name":"name","class":"DOMDocumentType","params":[{"list":[],"ret_type":"string"}]},"DOMDocumentType::notations":{"desc":"Returns list of notations","long_desc":"","ver":"PHP 4 >= 4.1.0","url":"function.domdocumenttype-notations","name":"notations","class":"DOMDocumentType","params":[{"list":[],"ret_type":"array"}]},"DOMDocumentType::public_id":{"desc":"Returns public id of document type","long_desc":"This function returns the public id of the document type.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns the public id of the DomDocumentType, as a string.","url":"function.domdocumenttype-public-id","name":"public_id","class":"DOMDocumentType","params":[{"list":[],"ret_type":"string"}]},"DOMDocumentType::system_id":{"desc":"Returns the system id of document type","long_desc":"Returns the system id of the document type.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns the system id of the DomDocumentType, as a string.","url":"function.domdocumenttype-system-id","name":"system_id","class":"DOMDocumentType","params":[{"list":[],"ret_type":"string"}]},"DOMElement::__construct":{"desc":"Creates a new DOMElement object","long_desc":"Creates a new DOMElement object. This object is read only. It may be appended to a document, but additional nodes may not be appended to this node until the node is associated with a document. To create a writeable node, use DOMDocument::createElement or DOMDocument::createElementNS.","ver":"PHP 5","seealso":[],"url":"domelement.construct","name":"__construct","class":"DOMElement","params":[{"list":[{"type":"string","var":"$name","beh":1,"desc":"The tag name of the element. When also passing in namespaceURI, the element name may take a prefix to be associated with the URI."},{"type":"string","var":"$value","beh":1,"desc":"The value of the element."},{"type":"string","var":"$namespaceURI","beh":1,"desc":"A namespace URI to create the element within a specific namespace."}]}]},"DOMElement::getAttribute":{"desc":"Returns value of attribute","long_desc":"Gets the value of the attribute with name name for the current node.","ver":"PHP 5","ret_desc":"The value of the attribute, or an empty string if no attribute with the given name is found.","seealso":[],"url":"domelement.getattribute","name":"getAttribute","class":"DOMElement","params":[{"list":[],"ret_type":"string"}]},"DOMElement::getAttributeNS":{"desc":"Returns value of attribute","long_desc":"Gets the value of the attribute in namespace namespaceURI with local name localName for the current node.","ver":"PHP 5","ret_desc":"The value of the attribute, or an empty string if no attribute with the given localName and namespaceURI is found.","seealso":[],"url":"domelement.getattributens","name":"getAttributeNS","class":"DOMElement","params":[{"list":[{"type":"string","var":"$namespaceURI","beh":0,"desc":"The namespace URI."},{"type":"string","var":"$localName","beh":0,"desc":"The local name."}],"ret_type":"string"}]},"DOMElement::getAttributeNode":{"desc":"Returns attribute node","long_desc":"Returns the attribute node with name name for the current element.","ver":"PHP 5","ret_desc":"The attribute node.","seealso":[],"url":"domelement.getattributenode","name":"getAttributeNode","class":"DOMElement","params":[{"list":[],"ret_type":"DOMAttr"}]},"DOMElement::getAttributeNodeNS":{"desc":"Returns attribute node","long_desc":"Returns the attribute node in namespace namespaceURI with local name localName for the current node.","ver":"PHP 5","ret_desc":"The attribute node.","seealso":[],"url":"domelement.getattributenodens","name":"getAttributeNodeNS","class":"DOMElement","params":[{"list":[{"type":"string","var":"$namespaceURI","beh":0,"desc":"The namespace URI."},{"type":"string","var":"$localName","beh":0,"desc":"The local name."}],"ret_type":"DOMAttr"}]},"DOMElement::getElementsByTagName":{"desc":"Gets elements by tagname","long_desc":"This function returns a new instance of the class DOMNodeList of all descendant elements with a given tag name, in the order in which they are encountered in a preorder traversal of this element tree.","ver":"PHP 5","ret_desc":"This function returns a new instance of the class DOMNodeList of all matched elements.","seealso":[],"url":"domelement.getelementsbytagname","name":"getElementsByTagName","class":"DOMElement","params":[{"list":[],"ret_type":"DOMNodelist"}]},"DOMElement::getElementsByTagNameNS":{"desc":"Get elements by namespaceURI and localName","long_desc":"This function fetch all the descendant elements with a given localName and namespaceURI.","ver":"PHP 5","ret_desc":"This function returns a new instance of the class DOMNodeList of all matched elements in the order in which they are encountered in a preorder traversal of this element tree.","seealso":[],"url":"domelement.getelementsbytagnamens","name":"getElementsByTagNameNS","class":"DOMElement","params":[{"list":[{"type":"string","var":"$namespaceURI","beh":0,"desc":"The namespace URI."},{"type":"string","var":"$localName","beh":0,"desc":"The local name. Use * to return all elements within the element tree."}],"ret_type":"DOMNodelist"}]},"DOMElement::get_attribute":{"desc":"Returns the value of the given attribute","long_desc":"Returns the value of the given attribute in the current element. Since PHP 4.3, if no attribute with given name is found, an empty string is returned.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns the value of the attribute as a string or an empty string if no attribute with the given name is found.","seealso":[],"url":"function.domelement-get-attribute","name":"get_attribute","class":"DOMElement","params":[{"list":[],"ret_type":"string"}]},"DOMElement::get_attribute_node":{"desc":"Returns the node of the given attribute","long_desc":"Returns the node of the given attribute in the current element.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns the node of the attribute as a DomAttribute or FALSE if no attribute with the given name is found.","seealso":[],"url":"function.domelement-get-attribute-node","name":"get_attribute_node","class":"DOMElement","params":[{"list":[],"ret_type":"DOMAttribute"}]},"DOMElement::get_elements_by_tagname":{"desc":"Gets elements by tagname","long_desc":"Gets all the sub elements with the specific name within the current element.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns an array of DomElement objects.","url":"function.domelement-get-elements-by-tagname","name":"get_elements_by_tagname","class":"DOMElement","params":[{"list":[],"ret_type":"array"}]},"DOMElement::hasAttribute":{"desc":"Checks to see if attribute exists","long_desc":"Indicates whether attribute named name exists as a member of the element.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"domelement.hasattribute","name":"hasAttribute","class":"DOMElement","params":[{"list":[],"ret_type":"bool"}]},"DOMElement::hasAttributeNS":{"desc":"Checks to see if attribute exists","long_desc":"Indicates whether attribute in namespace namespaceURI named localName exists as a member of the element.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"domelement.hasattributens","name":"hasAttributeNS","class":"DOMElement","params":[{"list":[{"type":"string","var":"$namespaceURI","beh":0,"desc":"The namespace URI."},{"type":"string","var":"$localName","beh":0,"desc":"The local name."}],"ret_type":"bool"}]},"DOMElement::has_attribute":{"desc":"Checks to see if an attribute exists in the current node","long_desc":"This functions checks to see if an attribute named name exists in the current node.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns TRUE if the asked attribute exists, FALSE otherwise.","url":"function.domelement-has-attribute","name":"has_attribute","class":"DOMElement","params":[{"list":[],"ret_type":"bool"}]},"DOMElement::removeAttribute":{"desc":"Removes attribute","long_desc":"Removes attribute named name from the element.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"domelement.removeattribute","name":"removeAttribute","class":"DOMElement","params":[{"list":[],"ret_type":"bool"}]},"DOMElement::removeAttributeNS":{"desc":"Removes attribute","long_desc":"Removes attribute is namespace namespaceURI named localName from the element.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"domelement.removeattributens","name":"removeAttributeNS","class":"DOMElement","params":[{"list":[{"type":"string","var":"$namespaceURI","beh":0,"desc":"The namespace URI."},{"type":"string","var":"$localName","beh":0,"desc":"The local name."}],"ret_type":"bool"}]},"DOMElement::removeAttributeNode":{"desc":"Removes attribute","long_desc":"Removes attribute oldnode from the element.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"domelement.removeattributenode","name":"removeAttributeNode","class":"DOMElement","params":[{"list":[],"ret_type":"bool"}]},"DOMElement::remove_attribute":{"desc":"Removes attribute","long_desc":"Removes an attribute from the current DomElement node.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.domelement-remove-attribute","name":"remove_attribute","class":"DOMElement","params":[{"list":[],"ret_type":"bool"}]},"DOMElement::setAttribute":{"desc":"Adds new attribute","long_desc":"Sets an attribute with name name to the given value. If the attribute does not exist, it will be created.","ver":"PHP 5","ret_desc":"The new DOMAttr or FALSE if an error occured.","seealso":[],"url":"domelement.setattribute","name":"setAttribute","class":"DOMElement","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"The name of the attribute."},{"type":"string","var":"$value","beh":0,"desc":"The value of the attribute."}],"ret_type":"DOMAttr"}]},"DOMElement::setAttributeNS":{"desc":"Adds new attribute","long_desc":"Sets an attribute with namespace namespaceURI and name name to the given value. If the attribute does not exist, it will be created.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"domelement.setattributens","name":"setAttributeNS","class":"DOMElement","params":[{"list":[{"type":"string","var":"$namespaceURI","beh":0,"desc":"The namespace URI."},{"type":"string","var":"$qualifiedName","beh":0,"desc":"The qualified name of the attribute, as prefix:tagname."},{"type":"string","var":"$value","beh":1,"desc":"The value of the attribute."}],"ret_type":"void"}]},"DOMElement::setAttributeNode":{"desc":"Adds new attribute node to element","long_desc":"Adds new attribute node attr to element.","ver":"PHP 5","ret_desc":"Returns old node if the attribute has been replaced or NULL.","seealso":[],"url":"domelement.setattributenode","name":"setAttributeNode","class":"DOMElement","params":[{"list":[],"ret_type":"DOMAttr"}]},"DOMElement::setAttributeNodeNS":{"desc":"Adds new attribute node to element","long_desc":"Adds new attribute node attr to element.","ver":"PHP 5","ret_desc":"Returns the old node if the attribute has been replaced.","seealso":[],"url":"domelement.setattributenodens","name":"setAttributeNodeNS","class":"DOMElement","params":[{"list":[],"ret_type":"DOMAttr"}]},"DOMElement::setIdAttribute":{"desc":"Declares the attribute specified by name to be of type ID","long_desc":"Declares the attribute name to be of type ID.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"domelement.setidattribute","name":"setIdAttribute","class":"DOMElement","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"The name of the attribute."},{"type":"bool","var":"$isId","beh":0,"desc":"Set it to TRUE if you want name to be of type ID, FALSE otherwise."}],"ret_type":"void"}]},"DOMElement::setIdAttributeNS":{"desc":"Declares the attribute specified by local name and namespace URI to be of type ID","long_desc":"Declares the attribute specified by localName and namespaceURI to be of type ID.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"domelement.setidattributens","name":"setIdAttributeNS","class":"DOMElement","params":[{"list":[{"type":"string","var":"$namespaceURI","beh":0,"desc":"The namespace URI of the attribute."},{"type":"string","var":"$localName","beh":0,"desc":"The local name of the attribute, as prefix:tagname."},{"type":"bool","var":"$isId","beh":1,"desc":"Set it to TRUE if you want name to be of type ID, FALSE otherwise."}],"ret_type":"void"}]},"DOMElement::setIdAttributeNode":{"desc":"Declares the attribute specified by node to be of type ID","long_desc":"Declares the attribute specified by attr to be of type ID.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"domelement.setidattributenode","name":"setIdAttributeNode","class":"DOMElement","params":[{"list":[{"type":"DOMAttr","var":"$attr","beh":0,"desc":"The attribute node."},{"type":"bool","var":"$isId","beh":0,"desc":"Set it to TRUE if you want name to be of type ID, FALSE otherwise."}],"ret_type":"void"}]},"DOMElement::set_attribute":{"desc":"Sets the value of an attribute","long_desc":"Sets an attribute with name name to the given value.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns the old DomAttribute node, or the new one if you are creating the attribute for the first time.","seealso":[],"url":"function.domelement-set-attribute","name":"set_attribute","class":"DOMElement","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"The name of the attribute. If this attribute doesn't exist, it will be created."},{"type":"string","var":"$value","beh":0,"desc":"The value of the attribute."}],"ret_type":"DOMAttribute"}]},"DOMElement::set_attribute_node":{"desc":"Adds new attribute","long_desc":"","ver":"PHP 4 >= 4.1.0","url":"function.domelement-set-attribute-node","name":"set_attribute_node","class":"DOMElement","params":[{"list":[],"ret_type":"DOMNode"}]},"DOMElement::tagname":{"desc":"Returns the name of the current element","long_desc":"Returns the name of the current node. Calling this function is the same as accessing the tagname property, or calling DomNode::node_name on the current node.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns the name of the current DomElement node.","url":"function.domelement-tagname","name":"tagname","class":"DOMElement","params":[{"list":[],"ret_type":"string"}]},"DOMNode::C14N":{"desc":"Canonicalize nodes to a string","long_desc":"Canonicalize nodes to a string","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns canonicalized nodes as a string or FALSE on failure","seealso":[],"url":"domnode.c14n","name":"C14N","class":"DOMNode","params":[{"list":[{"type":"bool","var":"$exclusive","beh":1,"desc":"Enable exclusive parsing of only the nodes matched by the provided xpath or namespace prefixes."},{"type":"bool","var":"$with_comments","beh":1,"desc":"Retain comments in output."},{"type":"array","var":"$xpath","beh":1,"desc":"An array of xpaths to filter the nodes by."},{"type":"array","var":"$ns_prefixes","beh":1,"desc":"An array of namespace prefixes to filter the nodes by."}],"ret_type":"string"}]},"DOMNode::C14NFile":{"desc":"Canonicalize nodes to a file","long_desc":"Canonicalize nodes to a file.","ver":"PHP 5 >= 5.2.0","ret_desc":"Number of bytes written or FALSE on failure","seealso":[],"url":"domnode.c14nfile","name":"C14NFile","class":"DOMNode","params":[{"list":[{"type":"string","var":"$uri","beh":1,"desc":"Path to write the output to."},{"type":"bool","var":"$exclusive","beh":1,"desc":"Enable exclusive parsing of only the nodes matched by the provided xpath or namespace prefixes."},{"type":"bool","var":"$with_comments","beh":1,"desc":"Retain comments in output."},{"type":"array","var":"$xpath","beh":1,"desc":"An array of xpaths to filter the nodes by."},{"type":"array","var":"$ns_prefixes","beh":1,"desc":"An array of namespace prefixes to filter the nodes by."}],"ret_type":"int"}]},"DOMNode::add_namespace":{"desc":"Adds a namespace declaration to a node","long_desc":"This method adds a namespace declaration to a node.","ver":"PHP 4 >= 4.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.domnode-add-namespace","name":"add_namespace","class":"DOMNode","params":[{"list":[{"type":"string","var":"$uri","beh":0,"desc":"The namespace URI of the node."},{"type":"string","var":"$prefix","beh":0,"desc":"The namespace prefix of the node."}],"ret_type":"bool"}]},"DOMNode::appendChild":{"desc":"Adds new child at the end of the children","long_desc":"This function appends a child to an existing list of children or creates a new list of children. The child can be created with e.g. DOMDocument::createElement(), DOMDocument::createTextNode() etc. or simply by using any other node.","ver":"PHP 5","ret_desc":"The node added.","seealso":[],"url":"domnode.appendchild","name":"appendChild","class":"DOMNode","params":[{"list":[],"ret_type":"DOMNode"}]},"DOMNode::append_child":{"desc":"Adds a new child at the end of the children","long_desc":"This functions appends a child to an existing list of children or creates a new list of children.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns the appended node on success or FALSE on failure.","seealso":[],"url":"function.domnode-append-child","name":"append_child","class":"DOMNode","params":[{"list":[],"ret_type":"DOMNode"}]},"DOMNode::append_sibling":{"desc":"Adds new sibling to a node","ver":"PHP 4 >= 4.2.0","url":"function.domnode-append-sibling","name":"append_sibling","class":"DOMNode","params":[{"list":[],"ret_type":"DOMElement"}]},"DOMNode::attributes":{"desc":"Returns list of attributes","ver":"PHP 4 >= 4.1.0","url":"function.domnode-attributes","name":"attributes","class":"DOMNode","params":[{"list":[],"ret_type":"array"}]},"DOMNode::child_nodes":{"desc":"Returns children of node","ver":"PHP 4 >= 4.1.0","url":"function.domnode-child-nodes","name":"child_nodes","class":"DOMNode","params":[{"list":[],"ret_type":"array"}]},"DOMNode::cloneNode":{"desc":"Clones a node","long_desc":"Creates a copy of the node.","ver":"PHP 5","ret_desc":"The cloned node.","url":"domnode.clonenode","name":"cloneNode","class":"DOMNode","params":[{"list":[],"ret_type":"DOMNode"}]},"DOMNode::clone_node":{"desc":"Clones a node","ver":"PHP 4 >= 4.1.0","url":"function.domnode-clone-node","name":"clone_node","class":"DOMNode","params":[{"list":[],"ret_type":"DOMElement"}]},"DOMNode::dump_node":{"desc":"Dumps a single node","ver":"PHP 4 >= 4.1.0","url":"function.domnode-dump-node","name":"dump_node","class":"DOMNode","params":[{"list":[],"ret_type":"string"}]},"DOMNode::first_child":{"desc":"Returns first child of node","ver":"PHP 4 >= 4.1.0","url":"function.domnode-first-child","name":"first_child","class":"DOMNode","params":[{"list":[],"ret_type":"DOMElement"}]},"DOMNode::getLineNo":{"desc":"Get line number for a node","long_desc":"Gets line number for where the node is defined.","ver":"PHP 5 >= 5.3.0","ret_desc":"Always returns the line number where the node was defined in.","url":"domnode.getlineno","name":"getLineNo","class":"DOMNode","params":[{"list":[],"ret_type":"int"}]},"DOMNode::getNodePath":{"desc":"Get an XPath for a node","long_desc":"Gets an XPath location path for the node.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns a string containing the XPath, or NULL in case of an error.","seealso":[],"url":"domnode.getnodepath","name":"getNodePath","class":"DOMNode","params":[{"list":[],"ret_type":"string"}]},"DOMNode::get_content":{"desc":"Gets content of node","ver":"PHP 4 >= 4.2.0","url":"function.domnode-get-content","name":"get_content","class":"DOMNode","params":[{"list":[],"ret_type":"string"}]},"DOMNode::hasAttributes":{"desc":"Checks if node has attributes","long_desc":"This method checks if the node has attributes. The tested node has to be an XML_ELEMENT_NODE.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"domnode.hasattributes","name":"hasAttributes","class":"DOMNode","params":[{"list":[],"ret_type":"bool"}]},"DOMNode::hasChildNodes":{"desc":"Checks if node has children","long_desc":"This function checks if the node has children.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"domnode.haschildnodes","name":"hasChildNodes","class":"DOMNode","params":[{"list":[],"ret_type":"bool"}]},"DOMNode::has_attributes":{"desc":"Checks if node has attributes","ver":"PHP 4 >= 4.1.0","url":"function.domnode-has-attributes","name":"has_attributes","class":"DOMNode","params":[{"list":[],"ret_type":"bool"}]},"DOMNode::has_child_nodes":{"desc":"Checks if node has children","ver":"PHP 4 >= 4.1.0","url":"function.domnode-has-child-nodes","name":"has_child_nodes","class":"DOMNode","params":[{"list":[],"ret_type":"bool"}]},"DOMNode::insertBefore":{"desc":"Adds a new child before a reference node","long_desc":"This function inserts a new node right before the reference node. If you plan to do further modifications on the appended child you must use the returned node.","ver":"PHP 5","ret_desc":"The inserted node.","url":"domnode.insertbefore","name":"insertBefore","class":"DOMNode","params":[{"list":[{"type":"DOMNode","var":"$newnode","beh":0,"desc":"The new node."},{"type":"DOMNode","var":"$refnode","beh":1,"desc":"The reference node. If not supplied, newnode is appended to the children."}],"ret_type":"DOMNode"}]},"DOMNode::insert_before":{"desc":"Inserts new node as child","ver":"PHP 4 >= 4.1.0","url":"function.domnode-insert-before","name":"insert_before","class":"DOMNode","params":[{"list":[{"type":"domelement","var":"$newnode","beh":0,"desc":""},{"type":"domelement","var":"$refnode","beh":0,"desc":""}],"ret_type":"DOMElement"}]},"DOMNode::isDefaultNamespace":{"desc":"Checks if the specified namespaceURI is the default namespace or not","long_desc":"Tells whether namespaceURI is the default namespace.","ver":"PHP 5","ret_desc":"Return TRUE if namespaceURI is the default namespace, FALSE otherwise.","url":"domnode.isdefaultnamespace","name":"isDefaultNamespace","class":"DOMNode","params":[{"list":[],"ret_type":"bool"}]},"DOMNode::isSameNode":{"desc":"Indicates if two nodes are the same node","long_desc":"This function indicates if two nodes are the same node. The comparison is not based on content","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"domnode.issamenode","name":"isSameNode","class":"DOMNode","params":[{"list":[],"ret_type":"bool"}]},"DOMNode::isSupported":{"desc":"Checks if feature is supported for specified version","long_desc":"Checks if the asked feature is supported for the specified version.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"domnode.issupported","name":"isSupported","class":"DOMNode","params":[{"list":[{"type":"string","var":"$feature","beh":0,"desc":"The feature to test. See the example of DOMImplementation::hasFeature() for a list of features."},{"type":"string","var":"$version","beh":0,"desc":"The version number of the feature to test."}],"ret_type":"bool"}]},"DOMNode::is_blank_node":{"desc":"Checks if node is blank","ver":"PHP 4 >= 4.1.0","url":"function.domnode-is-blank-node","name":"is_blank_node","class":"DOMNode","params":[{"list":[],"ret_type":"bool"}]},"DOMNode::last_child":{"desc":"Returns last child of node","ver":"PHP 4 >= 4.1.0","url":"function.domnode-last-child","name":"last_child","class":"DOMNode","params":[{"list":[],"ret_type":"DOMElement"}]},"DOMNode::lookupNamespaceURI":{"desc":"Gets the namespace URI of the node based on the prefix","long_desc":"Gets the namespace URI of the node based on the prefix.","ver":"PHP 5","ret_desc":"The namespace URI of the node.","seealso":[],"url":"domnode.lookupnamespaceuri","name":"lookupNamespaceURI","class":"DOMNode","params":[{"list":[],"ret_type":"string"}]},"DOMNode::lookupPrefix":{"desc":"Gets the namespace prefix of the node based on the namespace URI","long_desc":"Gets the namespace prefix of the node based on the namespace URI.","ver":"PHP 5","ret_desc":"The prefix of the namespace.","seealso":[],"url":"domnode.lookupprefix","name":"lookupPrefix","class":"DOMNode","params":[{"list":[],"ret_type":"string"}]},"DOMNode::next_sibling":{"desc":"Returns the next sibling of node","ver":"PHP 4 >= 4.1.0","url":"function.domnode-next-sibling","name":"next_sibling","class":"DOMNode","params":[{"list":[],"ret_type":"DOMElement"}]},"DOMNode::node_name":{"desc":"Returns name of node","ver":"PHP 4 >= 4.1.0","url":"function.domnode-node-name","name":"node_name","class":"DOMNode","params":[{"list":[],"ret_type":"string"}]},"DOMNode::node_type":{"desc":"Returns type of node","ver":"PHP 4 >= 4.1.0","url":"function.domnode-node-type","name":"node_type","class":"DOMNode","params":[{"list":[],"ret_type":"int"}]},"DOMNode::node_value":{"desc":"Returns value of a node","ver":"PHP 4 >= 4.1.0","url":"function.domnode-node-value","name":"node_value","class":"DOMNode","params":[{"list":[],"ret_type":"string"}]},"DOMNode::normalize":{"desc":"Normalizes the node","long_desc":"Normalizes the node.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"domnode.normalize","name":"normalize","class":"DOMNode","params":[{"list":[],"ret_type":"void"}]},"DOMNode::owner_document":{"desc":"Returns the document this node belongs to","ver":"PHP 4 >= 4.1.0","url":"function.domnode-owner-document","name":"owner_document","class":"DOMNode","params":[{"list":[],"ret_type":"DOMDocument"}]},"DOMNode::parent_node":{"desc":"Returns the parent of the node","ver":"PHP 4 >= 4.1.0","url":"function.domnode-parent-node","name":"parent_node","class":"DOMNode","params":[{"list":[],"ret_type":"DOMNode"}]},"DOMNode::prefix":{"desc":"Returns name space prefix of node","ver":"PHP 4 >= 4.1.0","url":"function.domnode-prefix","name":"prefix","class":"DOMNode","params":[{"list":[],"ret_type":"string"}]},"DOMNode::previous_sibling":{"desc":"Returns the previous sibling of node","ver":"PHP 4 >= 4.1.0","url":"function.domnode-previous-sibling","name":"previous_sibling","class":"DOMNode","params":[{"list":[],"ret_type":"DOMElement"}]},"DOMNode::removeChild":{"desc":"Removes child from list of children","long_desc":"This functions removes a child from a list of children.","ver":"PHP 5","ret_desc":"If the child could be removed the function returns the old child.","seealso":[],"url":"domnode.removechild","name":"removeChild","class":"DOMNode","params":[{"list":[],"ret_type":"DOMNode"}]},"DOMNode::remove_child":{"desc":"Removes child from list of children","ver":"PHP 4 >= 4.2.0","url":"function.domnode-remove-child","name":"remove_child","class":"DOMNode","params":[{"list":[],"ret_type":"domtext"}]},"DOMNode::replaceChild":{"desc":"Replaces a child","long_desc":"This function replaces the child oldnode with the passed new node. If the new node is already a child it will not be added a second time. If the replacement succeeds the old node is returned.","ver":"PHP 5","ret_desc":"The old node or FALSE if an error occur.","seealso":[],"url":"domnode.replacechild","name":"replaceChild","class":"DOMNode","params":[{"list":[{"type":"DOMNode","var":"$newnode","beh":0,"desc":"The new node. It must be a member of the target document, i.e. created by one of the DOMDocument->createXXX() methods or imported in the document by DOMDocument::importNode."},{"type":"DOMNode","var":"$oldnode","beh":0,"desc":"The old node."}],"ret_type":"DOMNode"}]},"DOMNode::replace_child":{"desc":"Replaces a child","ver":"PHP 4 >= 4.2.0","url":"function.domnode-replace-child","name":"replace_child","class":"DOMNode","params":[{"list":[{"type":"domelement","var":"$newnode","beh":0,"desc":""},{"type":"domelement","var":"$oldnode","beh":0,"desc":""}],"ret_type":"DOMElement"}]},"DOMNode::replace_node":{"desc":"Replaces node","ver":"PHP 4 >= 4.2.0","url":"function.domnode-replace-node","name":"replace_node","class":"DOMNode","params":[{"list":[],"ret_type":"DOMElement"}]},"DOMNode::set_content":{"desc":"Sets content of node","ver":"PHP 4 >= 4.1.0","url":"function.domnode-set-content","name":"set_content","class":"DOMNode","params":[{"list":[],"ret_type":"bool"}]},"DOMNode::set_name":{"desc":"Sets name of node","ver":"PHP 4 >= 4.1.0","url":"function.domnode-set-name","name":"set_name","class":"DOMNode","params":[{"list":[],"ret_type":"bool"}]},"DOMNode::set_namespace":{"desc":"Sets namespace of a node","ver":"PHP 4 >= 4.3.0","url":"function.domnode-set-namespace","name":"set_namespace","class":"DOMNode","params":[{"list":[{"type":"string","var":"$uri","beh":0,"desc":""},{"type":"string","var":"$prefix","beh":1,"desc":""}],"ret_type":"void"}]},"DOMNode::unlink_node":{"desc":"Deletes node","ver":"PHP 4 >= 4.1.0","url":"function.domnode-unlink-node","name":"unlink_node","class":"DOMNode","params":[{"list":[],"ret_type":"void"}]},"DOMNodelist::item":{"desc":"Retrieves a node specified by index","long_desc":"Retrieves a node specified by index within the DOMNodeList object.","ver":"PHP 5","ret_desc":"The node at the indexth position in the DOMNodeList, or NULL if that is not a valid index.","url":"domnodelist.item","name":"item","class":"DOMNodelist","params":[{"list":[],"ret_type":"DOMNode"}]},"DOMXPath::__construct":{"desc":"Creates a new DOMXPath object","long_desc":"Creates a new DOMXPath object.","ver":"PHP 5","url":"domxpath.construct","name":"__construct","class":"DOMXPath","params":[{"list":[]}]},"DOMXPath::evaluate":{"desc":"Evaluates the given XPath expression and returns a typed result if possible","long_desc":"Executes the given XPath expression and returns a typed result if possible.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns a typed result if possible or a DOMNodeList containing all nodes matching the given XPath expression.","seealso":[],"url":"domxpath.evaluate","name":"evaluate","class":"DOMXPath","params":[{"list":[{"type":"string","var":"$expression","beh":1,"desc":"The XPath expression to execute."},{"type":"DOMNode","var":"$contextnode","beh":1,"desc":"The optional contextnode can be specified for doing relative XPath queries. By default, the queries are relative to the root element."},{"type":"bool","var":"$registerNodeNS","beh":1,"desc":"The optional registerNodeNS can be specified to disable automatic registration of the context node.","def":"true"}],"ret_type":"mixed"}]},"DOMXPath::query":{"desc":"Evaluates the given XPath expression","long_desc":"Executes the given XPath expression.","ver":"PHP 5","ret_desc":"Returns a DOMNodeList containing all nodes matching the given XPath expression. Any expression which does not return nodes will return an empty DOMNodeList.","seealso":[],"url":"domxpath.query","name":"query","class":"DOMXPath","params":[{"list":[{"type":"string","var":"$expression","beh":1,"desc":"The XPath expression to execute."},{"type":"DOMNode","var":"$contextnode","beh":1,"desc":"The optional contextnode can be specified for doing relative XPath queries. By default, the queries are relative to the root element."},{"type":"bool","var":"$registerNodeNS","beh":1,"desc":"The optional registerNodeNS can be specified to disable automatic registration of the context node.","def":"true"}],"ret_type":"DOMNodelist"}]},"DOMXPath::registerNamespace":{"desc":"Registers the namespace with the DOMXPath object","long_desc":"Registers the namespaceURI and prefix with the DOMXPath object.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"domxpath.registernamespace","name":"registerNamespace","class":"DOMXPath","params":[{"list":[{"type":"string","var":"$prefix","beh":0,"desc":"The prefix."},{"type":"string","var":"$namespaceURI","beh":0,"desc":"The URI of the namespace."}],"ret_type":"bool"}]},"DOMXPath::registerPhpFunctions":{"desc":"Register PHP functions as XPath functions","long_desc":"This method enables the ability to use PHP functions within XPath expressions.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","seealso":[],"url":"domxpath.registerphpfunctions","name":"registerPhpFunctions","class":"DOMXPath","params":[{"list":[],"ret_type":"void"}]},"DateInterval::__construct":{"desc":"Creates new DateInterval object","long_desc":"Creates new DateInterval object.","ver":"PHP 5 >= 5.3.0","seealso":[],"url":"dateinterval.construct","name":"__construct","class":"DateInterval","params":[]},"DateInterval::createFromDateString":{"desc":"Sets up a DateInterval from the relative parts of the string","long_desc":"Uses the normal date parsers and sets up a DateInterval from the relative parts of the parsed string.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns new DateInterval instance if success.","url":"dateinterval.createfromdatestring","name":"createFromDateString","class":"DateInterval","params":[{"list":[],"ret_type":"DateInterval"}]},"DateInterval::format":{"desc":"Formats the interval","long_desc":"Formats the interval.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the formatted interval.","url":"dateinterval.format","name":"format","class":"DateInterval","params":[{"list":[],"ret_type":"string"}]},"DateTime::__construct":{"desc":"Returns new DateTime object","long_desc":"Object oriented styleProcedural style Returns new DateTime object.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns a new DateTime instance. Procedural style returns FALSE on failure.","seealso":[],"url":"datetime.construct","name":"__construct","class":"DateTime","params":[{"list":[{"type":"string","var":"$time","beh":0,"desc":"A date\/time string. Valid formats are explained in Date and Time Formats. Enter NULL here to obtain the current time when using the $timezone parameter.","def":"\"now\""},{"type":"DateTimeZone","var":"$timezone","beh":1,"desc":"A DateTimeZone object representing the desired time zone. If $timezone is omitted, the current timezone will be used.","def":"NULL"}],"ret_type":"DateTime"}]},"DateTime::__set_state":{"desc":"The __set_state handler","long_desc":"The __set_state() handler.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns a new instance of a DateTime object.","url":"datetime.set-state","name":"__set_state","class":"DateTime","params":[{"list":[],"ret_type":"DateTime"}]},"DateTime::__wakeup":{"desc":"The __wakeup handler","long_desc":"The __wakeup() handler.","ver":"PHP 5 >= 5.2.0","ret_desc":"Initializes a DateTime object.","url":"datetime.wakeup","name":"__wakeup","class":"DateTime","params":[{"list":[],"ret_type":"DateTime"}]},"DateTime::add":{"desc":"Adds an amount of days, months, years, hours, minutes and seconds to a DateTime object","long_desc":"Object oriented styleProcedural style Adds the specified DateInterval object to the specified DateTime object.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the DateTime object for method chaining or FALSE on failure.","seealso":[],"url":"datetime.add","name":"add","class":"DateTime","params":[{"list":[],"ret_type":"DateTime"},{"list":[{"type":"DateTime","var":"$object","beh":0,"desc":"Procedural style only: A DateTime object returned by date_create(). The function modifies this object."},{"type":"DateInterval","var":"$interval","beh":0,"desc":"A DateInterval object"}],"ret_type":"DateTime"}]},"DateTime::createFromFormat":{"desc":"Returns new DateTime object formatted according to the specified format","long_desc":"Object oriented styleProcedural style Returns new DateTime object formatted according to the specified format.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns a new DateTime instance or FALSE on failure.","seealso":[],"url":"datetime.createfromformat","name":"createFromFormat","class":"DateTime","params":[{"list":[{"type":"string","var":"$format","beh":0,"desc":"The format that the passed in string should be in. See the formatting options below. In most cases, the same letters as for the date() can be used. Unrecognized characters in the format string will cause the parsing to fail and an error message is appended to the returned structure. You can query error messages with DateTime::getLastErrors(). If format does not contain the character ! then portions of the generated time which are not specified in format will be set to the current system time. If format contains the character !, then portions of the generated time not provided in format, as well as values to the left-hand side of the !, will be set to corresponding values from the Unix epoch. The Unix epoch is 1970-01-01 00:00:00 UTC."},{"type":"string","var":"$time","beh":1,"desc":"String representing the time."},{"type":"DateTimeZone","var":"$timezone","beh":1,"desc":"A DateTimeZone object representing the desired time zone. If timezone is omitted and time contains no timezone, the current timezone will be used."}],"ret_type":"DateTime"},{"list":[{"type":"string","var":"$format","beh":0,"desc":"The format that the passed in string should be in. See the formatting options below. In most cases, the same letters as for the date() can be used. Unrecognized characters in the format string will cause the parsing to fail and an error message is appended to the returned structure. You can query error messages with DateTime::getLastErrors(). If format does not contain the character ! then portions of the generated time which are not specified in format will be set to the current system time. If format contains the character !, then portions of the generated time not provided in format, as well as values to the left-hand side of the !, will be set to corresponding values from the Unix epoch. The Unix epoch is 1970-01-01 00:00:00 UTC."},{"type":"string","var":"$time","beh":1,"desc":"String representing the time."},{"type":"DateTimeZone","var":"$timezone","beh":1,"desc":"A DateTimeZone object representing the desired time zone. If timezone is omitted and time contains no timezone, the current timezone will be used."}],"ret_type":"DateTime"}]},"DateTime::diff":{"desc":"Returns the difference between two DateTime objects","long_desc":"Object oriented styleProcedural style Returns the difference between two DateTime objects.","ver":"PHP 5 >= 5.3.0","ret_desc":"The DateInterval object representing the difference between the two dates or FALSE on failure.","seealso":[],"url":"datetime.diff","name":"diff","class":"DateTime","params":[{"list":[{"type":"DateTime","var":"$datetime2","beh":0,"desc":"The date to compare to."},{"type":"bool","var":"$absolute","beh":0,"desc":"Whether to return absolute difference.","def":"false"}],"ret_type":"DateInterval"},{"list":[{"type":"DateTime","var":"$datetime1","beh":0,"desc":"The date to compare to."},{"type":"DateTime","var":"$datetime2","beh":1,"desc":"Whether to return absolute difference."},{"type":"bool","var":"$absolute","beh":1,"desc":"","def":"false"}],"ret_type":"DateInterval"}]},"DateTime::format":{"desc":"Returns date formatted according to given format","long_desc":"Object oriented styleProcedural style Returns date formatted according to given format.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the formatted date string on success or FALSE on failure.","seealso":[],"url":"datetime.format","name":"format","class":"DateTime","params":[{"list":[],"ret_type":"string"},{"list":[{"type":"DateTime","var":"$object","beh":0,"desc":"Procedural style only: A DateTime object returned by date_create()"},{"type":"string","var":"$format","beh":0,"desc":"Format accepted by date()."}],"ret_type":"string"}]},"DateTime::getLastErrors":{"desc":"Returns the warnings and errors","long_desc":"Object oriented styleProcedural style Returns an array of warnings and errors found while parsing a date\/time string.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns array containing info about warnings and errors.","url":"datetime.getlasterrors","name":"getLastErrors","class":"DateTime","params":[{"list":[],"ret_type":"array"},{"list":[],"ret_type":"array"}]},"DateTime::getOffset":{"desc":"Returns the timezone offset","long_desc":"Object oriented styleProcedural style Returns the timezone offset.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the timezone offset in seconds from UTC on success or FALSE on failure.","url":"datetime.getoffset","name":"getOffset","class":"DateTime","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"DateTime::getTimestamp":{"desc":"Gets the Unix timestamp","long_desc":"Object oriented styleProcedural style Gets the Unix timestamp.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the Unix timestamp representing the date.","seealso":[],"url":"datetime.gettimestamp","name":"getTimestamp","class":"DateTime","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"DateTime::getTimezone":{"desc":"Return time zone relative to given DateTime","long_desc":"Object oriented styleProcedural style Return time zone relative to given DateTime.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns a DateTimeZone object on success or FALSE on failure.","seealso":[],"url":"datetime.gettimezone","name":"getTimezone","class":"DateTime","params":[{"list":[],"ret_type":"DateTimeZone"},{"list":[],"ret_type":"DateTimeZone"}]},"DateTime::modify":{"desc":"Alters the timestamp","long_desc":"Object oriented styleProcedural style Alter the timestamp of a DateTime object by incrementing or decrementing in a format accepted by strtotime().","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the DateTime object for method chaining or FALSE on failure.","seealso":[],"url":"datetime.modify","name":"modify","class":"DateTime","params":[{"list":[],"ret_type":"DateTime"},{"list":[{"type":"DateTime","var":"$object","beh":0,"desc":"Procedural style only: A DateTime object returned by date_create(). The function modifies this object."},{"type":"string","var":"$modify","beh":0,"desc":"A date\/time string. Valid formats are explained in Date and Time Formats."}],"ret_type":"DateTime"}]},"DateTime::setDate":{"desc":"Sets the date","long_desc":"Object oriented styleProcedural style Resets the current date of the DateTime object to a different date.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the DateTime object for method chaining or FALSE on failure.","seealso":[],"url":"datetime.setdate","name":"setDate","class":"DateTime","params":[{"list":[{"type":"int","var":"$year","beh":0,"desc":"Procedural style only: A DateTime object returned by date_create(). The function modifies this object."},{"type":"int","var":"$month","beh":0,"desc":"Year of the date."},{"type":"int","var":"$day","beh":1,"desc":"Month of the date."}],"ret_type":"DateTime"},{"list":[{"type":"DateTime","var":"$object","beh":0,"desc":"Procedural style only: A DateTime object returned by date_create(). The function modifies this object."},{"type":"int","var":"$year","beh":0,"desc":"Year of the date."},{"type":"int","var":"$month","beh":1,"desc":"Month of the date."},{"type":"int","var":"$day","beh":1,"desc":"Day of the date."}],"ret_type":"DateTime"}]},"DateTime::setISODate":{"desc":"Sets the ISO date","long_desc":"Object oriented styleProcedural style Set a date according to the ISO 8601 standard - using weeks and day offsets rather than specific dates.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the DateTime object for method chaining or FALSE on failure.","seealso":[],"url":"datetime.setisodate","name":"setISODate","class":"DateTime","params":[{"list":[{"type":"int","var":"$year","beh":0,"desc":"Procedural style only: A DateTime object returned by date_create(). The function modifies this object."},{"type":"int","var":"$week","beh":1,"desc":"Year of the date."},{"type":"int","var":"$day","beh":1,"desc":"Week of the date.","def":1}],"ret_type":"DateTime"},{"list":[{"type":"DateTime","var":"$object","beh":0,"desc":"Procedural style only: A DateTime object returned by date_create(). The function modifies this object."},{"type":"int","var":"$year","beh":1,"desc":"Year of the date."},{"type":"int","var":"$week","beh":1,"desc":"Week of the date."},{"type":"int","var":"$day","beh":1,"desc":"Offset from the first day of the week.","def":1}],"ret_type":"DateTime"}]},"DateTime::setTime":{"desc":"Sets the time","long_desc":"Object oriented styleProcedural style Resets the current time of the DateTime object to a different time.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the DateTime object for method chaining or FALSE on failure.","seealso":[],"url":"datetime.settime","name":"setTime","class":"DateTime","params":[{"list":[{"type":"int","var":"$hour","beh":0,"desc":"Procedural style only: A DateTime object returned by date_create(). The function modifies this object."},{"type":"int","var":"$minute","beh":1,"desc":"Hour of the time."},{"type":"int","var":"$second","beh":1,"desc":"Minute of the time.","def":0}],"ret_type":"DateTime"},{"list":[{"type":"DateTime","var":"$object","beh":0,"desc":"Procedural style only: A DateTime object returned by date_create(). The function modifies this object."},{"type":"int","var":"$hour","beh":1,"desc":"Hour of the time."},{"type":"int","var":"$minute","beh":1,"desc":"Minute of the time."},{"type":"int","var":"$second","beh":1,"desc":"Second of the time.","def":0}],"ret_type":"DateTime"}]},"DateTime::setTimestamp":{"desc":"Sets the date and time based on an Unix timestamp","long_desc":"Object oriented styleProcedural style Sets the date and time based on an Unix timestamp.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the DateTime object for method chaining or FALSE on failure.","seealso":[],"url":"datetime.settimestamp","name":"setTimestamp","class":"DateTime","params":[{"list":[],"ret_type":"DateTime"},{"list":[{"type":"DateTime","var":"$object","beh":0,"desc":"Procedural style only: A DateTime object returned by date_create(). The function modifies this object."},{"type":"int","var":"$unixtimestamp","beh":0,"desc":"Unix timestamp representing the date."}],"ret_type":"DateTime"}]},"DateTime::setTimezone":{"desc":"Sets the time zone for the DateTime object","long_desc":"Object oriented styleProcedural style","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the DateTime object for method chaining or FALSE on failure.","seealso":[],"url":"datetime.settimezone","name":"setTimezone","class":"DateTime","params":[{"list":[],"ret_type":"DateTime"},{"list":[{"type":"DateTime","var":"$object","beh":0,"desc":"Procedural style only: A DateTime object returned by date_create(). The function modifies this object."},{"type":"DateTimeZone","var":"$timezone","beh":0,"desc":"A DateTimeZone object representing the desired time zone."}],"ret_type":"DateTime"}]},"DateTime::sub":{"desc":"Subtracts an amount of days, months, years, hours, minutes and seconds from a DateTime object","long_desc":"Object oriented styleProcedural style Subtracts the specified DateInterval object from the specified DateTime object.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the DateTime object for method chaining or FALSE on failure.","seealso":[],"url":"datetime.sub","name":"sub","class":"DateTime","params":[{"list":[],"ret_type":"DateTime"},{"list":[{"type":"DateTime","var":"$object","beh":0,"desc":"Procedural style only: A DateTime object returned by date_create(). The function modifies this object."},{"type":"DateInterval","var":"$interval","beh":0,"desc":"A DateInterval object"}],"ret_type":"DateTime"}]},"DateTimeZone::__construct":{"desc":"Creates new DateTimeZone object","long_desc":"Object oriented styleProcedural style Creates new DateTimeZone object.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns DateTimeZone on success. Procedural style returns FALSE on failure.","url":"datetimezone.construct","name":"__construct","class":"DateTimeZone","params":[{"list":[],"ret_type":"DateTimeZone"}]},"DateTimeZone::getLocation":{"desc":"Returns location information for a timezone","long_desc":"Object oriented styleProcedural style Returns location information for a timezone, including country code, latitude\/longitude and comments.","ver":"PHP 5 >= 5.3.0","ret_desc":"Array containing location information about timezone.","url":"datetimezone.getlocation","name":"getLocation","class":"DateTimeZone","params":[{"list":[],"ret_type":"array"},{"list":[],"ret_type":"array"}]},"DateTimeZone::getName":{"desc":"Returns the name of the timezone","long_desc":"Object oriented styleProcedural style Returns the name of the timezone.","ver":"PHP 5 >= 5.2.0","ret_desc":"One of the timezone names in the list of timezones.","url":"datetimezone.getname","name":"getName","class":"DateTimeZone","params":[{"list":[],"ret_type":"string"},{"list":[],"ret_type":"string"}]},"DateTimeZone::getOffset":{"desc":"Returns the timezone offset from GMT","long_desc":"Object oriented styleProcedural style This function returns the offset to GMT for the date\/time specified in the datetime parameter. The GMT offset is calculated with the timezone information contained in the DateTimeZone object being used.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns time zone offset in seconds on success or FALSE on failure.","url":"datetimezone.getoffset","name":"getOffset","class":"DateTimeZone","params":[{"list":[],"ret_type":"int"},{"list":[{"type":"DateTimeZone","var":"$object","beh":0,"desc":"Procedural style only: A DateTimeZone object returned by timezone_open()"},{"type":"DateTime","var":"$datetime","beh":0,"desc":"DateTime that contains the date\/time to compute the offset from."}],"ret_type":"int"}]},"DateTimeZone::getTransitions":{"desc":"Returns all transitions for the timezone","long_desc":"Object oriented styleProcedural style","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns numerically indexed array containing associative array with all transitions on success or FALSE on failure.","url":"datetimezone.gettransitions","name":"getTransitions","class":"DateTimeZone","params":[{"list":[{"type":"int","var":"$timestamp_begin","beh":1,"desc":"Procedural style only: A DateTimeZone object returned by timezone_open()"},{"type":"int","var":"$timestamp_end","beh":1,"desc":"Begin timestamp."}],"ret_type":"array"},{"list":[{"type":"DateTimeZone","var":"$object","beh":1,"desc":"Procedural style only: A DateTimeZone object returned by timezone_open()"},{"type":"int","var":"$timestamp_begin","beh":1,"desc":"Begin timestamp."},{"type":"int","var":"$timestamp_end","beh":1,"desc":"End timestamp."}],"ret_type":"array"}]},"DateTimeZone::listAbbreviations":{"desc":"Returns associative array containing dst, offset and the timezone name","long_desc":"Object oriented styleProcedural style","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns array on success or FALSE on failure.","seealso":[],"url":"datetimezone.listabbreviations","name":"listAbbreviations","class":"DateTimeZone","params":[{"list":[],"ret_type":"array"},{"list":[],"ret_type":"array"}]},"DateTimeZone::listIdentifiers":{"desc":"Returns numerically index array with all timezone identifiers","long_desc":"Object oriented styleProcedural style","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns array on success or FALSE on failure.","seealso":[],"url":"datetimezone.listidentifiers","name":"listIdentifiers","class":"DateTimeZone","params":[{"list":[{"type":"int","var":"$what","beh":0,"desc":"One of DateTimeZone class constants.","def":"DateTimeZone::ALL"},{"type":"string","var":"$country","beh":1,"desc":"A two-letter ISO 3166-1 compatible country code.","def":"NULL"}],"ret_type":"array"},{"list":[{"type":"int","var":"$what","beh":0,"desc":"One of DateTimeZone class constants.","def":"DateTimeZone::ALL"},{"type":"string","var":"$country","beh":1,"desc":"A two-letter ISO 3166-1 compatible country code.","def":"NULL"}],"ret_type":"array"}]},"DirectoryIterator::__construct":{"desc":"Constructs a new directory iterator from a path","long_desc":"Constructs a new directory iterator from a path.","ver":"PHP 5","seealso":[],"url":"directoryiterator.construct","name":"__construct","class":"DirectoryIterator","params":[]},"DirectoryIterator::__toString":{"desc":"Get file name as a string","long_desc":"Get the file name of the current DirectoryIterator item.","ver":"PHP 5","ret_desc":"Returns the file name of the current DirectoryIterator item.","seealso":[],"url":"directoryiterator.tostring","name":"__toString","class":"DirectoryIterator","params":[{"list":[],"ret_type":"string"}]},"DirectoryIterator::current":{"desc":"Return the current DirectoryIterator item.","long_desc":"Get the current DirectoryIterator item.","ver":"PHP 5","ret_desc":"The current DirectoryIterator item.","seealso":[],"url":"directoryiterator.current","name":"current","class":"DirectoryIterator","params":[{"list":[],"ret_type":"DirectoryIterator"}]},"DirectoryIterator::getATime":{"desc":"Get last access time of the current DirectoryIterator item","long_desc":"Get the last access time of the current DirectoryIterator item.","ver":"PHP 5","ret_desc":"Returns the time the file was last accessed, as a Unix timestamp.","seealso":[],"url":"directoryiterator.getatime","name":"getATime","class":"DirectoryIterator","params":[{"list":[],"ret_type":"int"}]},"DirectoryIterator::getBasename":{"desc":"Get base name of current DirectoryIterator item.","long_desc":"Get the base name of the current DirectoryIterator item.","ver":"PHP 5 >= 5.2.2","ret_desc":"The base name of the current DirectoryIterator item.","seealso":[],"url":"directoryiterator.getbasename","name":"getBasename","class":"DirectoryIterator","params":[{"list":[],"ret_type":"string"}]},"DirectoryIterator::getCTime":{"desc":"Get inode change time of the current DirectoryIterator item","long_desc":"Get the inode change time for the current DirectoryIterator item.","ver":"PHP 5","ret_desc":"Returns the last change time of the file, as a Unix timestamp.","seealso":[],"url":"directoryiterator.getctime","name":"getCTime","class":"DirectoryIterator","params":[{"list":[],"ret_type":"int"}]},"DirectoryIterator::getExtension":{"desc":"Returns the file extension component of path","long_desc":"","ver":"No version information available, might only be in SVN","ret_desc":"","url":"directoryiterator.getextension","name":"getExtension","class":"DirectoryIterator","params":[{"list":[],"ret_type":"string"}]},"DirectoryIterator::getFilename":{"desc":"Return file name of current DirectoryIterator item.","long_desc":"Get the file name of the current DirectoryIterator item.","ver":"PHP 5","ret_desc":"Returns the file name of the current DirectoryIterator item.","seealso":[],"url":"directoryiterator.getfilename","name":"getFilename","class":"DirectoryIterator","params":[{"list":[],"ret_type":"string"}]},"DirectoryIterator::getGroup":{"desc":"Get group for the current DirectoryIterator item","long_desc":"Get the group id of the file.","ver":"PHP 5","ret_desc":"Returns the group id of the current DirectoryIterator item in numerical format.","seealso":[],"url":"directoryiterator.getgroup","name":"getGroup","class":"DirectoryIterator","params":[{"list":[],"ret_type":"int"}]},"DirectoryIterator::getInode":{"desc":"Get inode for the current DirectoryIterator item","long_desc":"Get the inode number for the current DirectoryIterator item.","ver":"PHP 5","ret_desc":"Returns the inode number for the file.","seealso":[],"url":"directoryiterator.getinode","name":"getInode","class":"DirectoryIterator","params":[{"list":[],"ret_type":"int"}]},"DirectoryIterator::getMTime":{"desc":"Get last modification time of current DirectoryIterator item","long_desc":"Get the last modification time of the current DirectoryIterator item, as a Unix timestamp.","ver":"PHP 5","ret_desc":"The last modification time of the file, as a Unix timestamp.","seealso":[],"url":"directoryiterator.getmtime","name":"getMTime","class":"DirectoryIterator","params":[{"list":[],"ret_type":"int"}]},"DirectoryIterator::getOwner":{"desc":"Get owner of current DirectoryIterator item","long_desc":"Get the owner of the current DirectoryIterator item, in numerical format.","ver":"PHP 5","ret_desc":"The file owner of the file, in numerical format.","seealso":[],"url":"directoryiterator.getowner","name":"getOwner","class":"DirectoryIterator","params":[{"list":[],"ret_type":"int"}]},"DirectoryIterator::getPath":{"desc":"Get path of current Iterator item without filename","long_desc":"Get the path to the current DirectoryIterator item.","ver":"PHP 5","ret_desc":"Returns the path to the file, omitting the file name and any trailing slash.","seealso":[],"url":"directoryiterator.getpath","name":"getPath","class":"DirectoryIterator","params":[{"list":[],"ret_type":"string"}]},"DirectoryIterator::getPathname":{"desc":"Return path and file name of current DirectoryIterator item","long_desc":"Get the path and file name of the current file.","ver":"PHP 5","ret_desc":"Returns the path and file name of current file. Directories do not have a trailing slash.","seealso":[],"url":"directoryiterator.getpathname","name":"getPathname","class":"DirectoryIterator","params":[{"list":[],"ret_type":"string"}]},"DirectoryIterator::getPerms":{"desc":"Get the permissions of current DirectoryIterator item","long_desc":"Get the permissions of the current DirectoryIterator item.","ver":"PHP 5","ret_desc":"Returns the permissions of the file, as a decimal integer.","seealso":[],"url":"directoryiterator.getperms","name":"getPerms","class":"DirectoryIterator","params":[{"list":[],"ret_type":"int"}]},"DirectoryIterator::getSize":{"desc":"Get size of current DirectoryIterator item","long_desc":"Get the file size for the current DirectoryIterator item.","ver":"PHP 5","ret_desc":"Returns the size of the file, in bytes.","seealso":[],"url":"directoryiterator.getsize","name":"getSize","class":"DirectoryIterator","params":[{"list":[],"ret_type":"int"}]},"DirectoryIterator::getType":{"desc":"Determine the type of the current DirectoryIterator item","long_desc":"Determines which file type the current DirectoryIterator item belongs to. One of file, link, or dir.","ver":"PHP 5","ret_desc":"Returns a string representing the type of the file. May be one of file, link, or dir.","seealso":[],"url":"directoryiterator.gettype","name":"getType","class":"DirectoryIterator","params":[{"list":[],"ret_type":"string"}]},"DirectoryIterator::isDir":{"desc":"Determine if current DirectoryIterator item is a directory","long_desc":"Determines if the current DirectoryIterator item is a directory.","ver":"PHP 5","ret_desc":"Returns TRUE if it is a directory, otherwise FALSE","seealso":[],"url":"directoryiterator.isdir","name":"isDir","class":"DirectoryIterator","params":[{"list":[],"ret_type":"bool"}]},"DirectoryIterator::isDot":{"desc":"Determine if current DirectoryIterator item is '.' or '..'","long_desc":"Determines if the current DirectoryIterator item is a directory and either . or ...","ver":"PHP 5","ret_desc":"TRUE if the entry is . or .., otherwise FALSE","seealso":[],"url":"directoryiterator.isdot","name":"isDot","class":"DirectoryIterator","params":[{"list":[],"ret_type":"bool"}]},"DirectoryIterator::isExecutable":{"desc":"Determine if current DirectoryIterator item is executable","long_desc":"Determines if the current DirectoryIterator item is executable.","ver":"PHP 5","ret_desc":"Returns TRUE if the entry is executable, otherwise FALSE","seealso":[],"url":"directoryiterator.isexecutable","name":"isExecutable","class":"DirectoryIterator","params":[{"list":[],"ret_type":"bool"}]},"DirectoryIterator::isFile":{"desc":"Determine if current DirectoryIterator item is a regular file","long_desc":"Determines if the current DirectoryIterator item is a regular file.","ver":"PHP 5","ret_desc":"Returns TRUE if the file exists and is a regular file (not a link or dir), otherwise FALSE","seealso":[],"url":"directoryiterator.isfile","name":"isFile","class":"DirectoryIterator","params":[{"list":[],"ret_type":"bool"}]},"DirectoryIterator::isLink":{"desc":"Determine if current DirectoryIterator item is a symbolic link","long_desc":"Determines if the current DirectoryIterator item is a symbolic link.","ver":"PHP 5","ret_desc":"Returns TRUE if the item is a symbolic link, otherwise FALSE","seealso":[],"url":"directoryiterator.islink","name":"isLink","class":"DirectoryIterator","params":[{"list":[],"ret_type":"bool"}]},"DirectoryIterator::isReadable":{"desc":"Determine if current DirectoryIterator item can be read","long_desc":"Determines if the current DirectoryIterator item is readable.","ver":"PHP 5","ret_desc":"Returns TRUE if the file is readable, otherwise FALSE","seealso":[],"url":"directoryiterator.isreadable","name":"isReadable","class":"DirectoryIterator","params":[{"list":[],"ret_type":"bool"}]},"DirectoryIterator::isWritable":{"desc":"Determine if current DirectoryIterator item can be written to","long_desc":"Determines if the current DirectoryIterator item is writable.","ver":"PHP 5","ret_desc":"Returns TRUE if the file\/directory is writable, otherwise FALSE","seealso":[],"url":"directoryiterator.iswritable","name":"isWritable","class":"DirectoryIterator","params":[{"list":[],"ret_type":"bool"}]},"DirectoryIterator::key":{"desc":"Return the key for the current DirectoryIterator item","long_desc":"Get the key for the current DirectoryIterator item.","ver":"PHP 5","ret_desc":"The key for the current DirectoryIterator item.","seealso":[],"url":"directoryiterator.key","name":"key","class":"DirectoryIterator","params":[{"list":[],"ret_type":"string"}]},"DirectoryIterator::next":{"desc":"Move forward to next DirectoryIterator item","long_desc":"Move forward to the next DirectoryIterator item.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"directoryiterator.next","name":"next","class":"DirectoryIterator","params":[{"list":[],"ret_type":"void"}]},"DirectoryIterator::rewind":{"desc":"Rewind the DirectoryIterator back to the start","long_desc":"Rewind the DirectoryIterator back to the start.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"directoryiterator.rewind","name":"rewind","class":"DirectoryIterator","params":[{"list":[],"ret_type":"void"}]},"DirectoryIterator::seek":{"desc":"Seek to a DirectoryIterator item","long_desc":"Seek to a given position in the DirectoryIterator.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","seealso":[],"url":"directoryiterator.seek","name":"seek","class":"DirectoryIterator","params":[{"list":[],"ret_type":"void"}]},"DirectoryIterator::valid":{"desc":"Check whether current DirectoryIterator position is a valid file","long_desc":"Check whether current DirectoryIterator position is a valid file.","ver":"PHP 5","ret_desc":"Returns TRUE if the position is valid, otherwise FALSE","seealso":[],"url":"directoryiterator.valid","name":"valid","class":"DirectoryIterator","params":[{"list":[],"ret_type":"bool"}]},"DomProcessingInstruction::data":{"desc":"Returns the data of ProcessingInstruction node","long_desc":"This method gets the data of the ProcessingInstruction node.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns the data of the Processing Instruction.","url":"function.domprocessinginstruction-data","name":"data","class":"DomProcessingInstruction","params":[{"list":[],"ret_type":"string"}]},"DomProcessingInstruction::target":{"desc":"Returns the target of a ProcessingInstruction node","long_desc":"This method gets the target of the ProcessingInstruction node.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns the target of the Processing Instruction.","url":"function.domprocessinginstruction-target","name":"target","class":"DomProcessingInstruction","params":[{"list":[],"ret_type":"string"}]},"DomXsltStylesheet::process":{"desc":"Applies the XSLT-Transformation on a DomDocument Object","long_desc":"Applies an XSLT Transformation on the given DomDocument object.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns the result of the processing, as a DomDocument object.","seealso":[],"url":"function.domxsltstylesheet-process","name":"process","class":"DomXsltStylesheet","params":[{"list":[{"type":"DomDocument","var":"$xml_doc","beh":1,"desc":"The XML document being transformed, as a DomDocument object."},{"type":"array","var":"$xslt_params","beh":1,"desc":"An associative array that takes pairs of parameter names and values."},{"type":"bool","var":"$is_xpath_param","beh":1,"desc":"If set to FALSE the values of the xslt_params will be quoted. This is the default behavior. It allows you to pass the values as PHP strings."},{"type":"string","var":"$profile_filename","beh":1,"desc":"Set this to the path of a filename, if you want profiling information."}],"ret_type":"DOMDocument"}]},"DomXsltStylesheet::result_dump_file":{"desc":"Dumps the result from a XSLT-Transformation into a file","long_desc":"Since DomXsltStylesheet::process always returns a well-formed XML DomDocument, no matter what output method was declared in This function on the contrary honors","ver":"PHP 4 >= 4.1.0","seealso":[],"url":"function.domxsltstylesheet-result-dump-file","name":"result_dump_file","class":"DomXsltStylesheet","params":[{"list":[{"type":"DomDocument","var":"$xmldoc","beh":0,"desc":""},{"type":"string","var":"$filename","beh":0,"desc":""}],"ret_type":"string"}]},"DomXsltStylesheet::result_dump_mem":{"desc":"Dumps the result from a XSLT-Transformation back into a string","long_desc":"Since DomXsltStylesheet::process always returns a well-formed XML DomDocument, no matter what output method was declared in This function on the contrary honors","ver":"PHP 4 >= 4.1.0","seealso":[],"url":"function.domxsltstylesheet-result-dump-mem","name":"result_dump_mem","class":"DomXsltStylesheet","params":[{"list":[],"ret_type":"string"}]},"Exception::__clone":{"desc":"Clone the exception","long_desc":"Tries to clone the Exception, which results in Fatal error.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","url":"exception.clone","name":"__clone","class":"Exception","params":[{"list":[],"ret_type":"void"}]},"Exception::__construct":{"desc":"Construct the exception","long_desc":"Constructs the Exception.","ver":"PHP 5 >= 5.1.0","url":"exception.construct","name":"__construct","class":"Exception","params":[]},"Exception::__toString":{"desc":"String representation of the exception","long_desc":"Returns the string representation of the exception.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the string representation of the exception.","url":"exception.tostring","name":"__toString","class":"Exception","params":[{"list":[],"ret_type":"string"}]},"Exception::getCode":{"desc":"Gets the Exception code","long_desc":"Returns the Exception code.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the exception code as integer in Exception but possibly as other type in Exception descendants (for example as string in PDOException).","url":"exception.getcode","name":"getCode","class":"Exception","params":[{"list":[],"ret_type":"mixed"}]},"Exception::getFile":{"desc":"Gets the file in which the exception occurred","long_desc":"Get the name of the file the exception was created.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the filename in which the exception was created.","url":"exception.getfile","name":"getFile","class":"Exception","params":[{"list":[],"ret_type":"string"}]},"Exception::getLine":{"desc":"Gets the line in which the exception occurred","long_desc":"Get line number where the exception was created.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the line number where the exception was created.","url":"exception.getline","name":"getLine","class":"Exception","params":[{"list":[],"ret_type":"int"}]},"Exception::getMessage":{"desc":"Gets the Exception message","long_desc":"Returns the Exception message.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the Exception message as a string.","url":"exception.getmessage","name":"getMessage","class":"Exception","params":[{"list":[],"ret_type":"string"}]},"Exception::getPrevious":{"desc":"Returns previous Exception","long_desc":"Returns previous Exception (the third parameter of Exception::__construct()).","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the previous Exception if available or NULL otherwise.","url":"exception.getprevious","name":"getPrevious","class":"Exception","params":[{"list":[],"ret_type":"Exception"}]},"Exception::getTrace":{"desc":"Gets the stack trace","long_desc":"Returns the Exception stack trace.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the Exception stack trace as an array.","url":"exception.gettrace","name":"getTrace","class":"Exception","params":[{"list":[],"ret_type":"array"}]},"Exception::getTraceAsString":{"desc":"Gets the stack trace as a string","long_desc":"Returns the Exception stack trace as a string.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the Exception stack trace as a string.","url":"exception.gettraceasstring","name":"getTraceAsString","class":"Exception","params":[{"list":[],"ret_type":"string"}]},"FrenchToJD":{"desc":"Converts a date from the French Republican Calendar to a Julian Day Count","long_desc":"Converts a date from the French Republican Calendar to a Julian Day Count. These routines only convert dates in years 1 through 14 (Gregorian dates 22 September 1792 through 22 September 1806). This more than covers the period when the calendar was in use.","ver":"PHP 4, PHP 5","ret_desc":"The julian day for the given french revolution date as an integer.","seealso":[],"url":"function.frenchtojd","name":"FrenchToJD","params":[{"list":[{"type":"int","var":"$month","beh":0,"desc":"The month as a number from 1 (for Vend\u00e9miaire) to 13 (for the period of 5-6 days at the end of each year)"},{"type":"int","var":"$day","beh":0,"desc":"The day as a number from 1 to 30"},{"type":"int","var":"$year","beh":1,"desc":"The year as a number between 1 and 14"}],"ret_type":"int"}]},"GregorianToJD":{"desc":"Converts a Gregorian date to Julian Day Count","long_desc":"Valid Range for Gregorian Calendar 4714 B.C. to 9999 A.D. Although this function can handle dates all the way back to 4714 B.C., such use may not be meaningful. The Gregorian calendar was not instituted until October 15, 1582 (or October 5, 1582 in the Julian calendar). Some countries did not accept it until much later. For example, Britain converted in 1752, The USSR in 1918 and Greece in 1923. Most European countries used the Julian calendar prior to the Gregorian.","ver":"PHP 4, PHP 5","ret_desc":"The julian day for the given gregorian date as an integer.","seealso":[],"url":"function.gregoriantojd","name":"GregorianToJD","params":[{"list":[{"type":"int","var":"$month","beh":0,"desc":"The month as a number from 1 (for January) to 12 (for December)"},{"type":"int","var":"$day","beh":0,"desc":"The day as a number from 1 to 31"},{"type":"int","var":"$year","beh":1,"desc":"The year as a number between -4714 and 9999"}],"ret_type":"int"}]},"JDDayOfWeek":{"desc":"Returns the day of the week","long_desc":"Returns the day of the week. Can return a string or an integer depending on the mode.","ver":"PHP 4, PHP 5","ret_desc":"The gregorian weekday as either an integer or string.","url":"function.jddayofweek","name":"JDDayOfWeek","params":[{"list":[{"type":"int","var":"$julianday","beh":0,"desc":"A julian day number as integer"},{"type":"int","var":"$mode","beh":0,"desc":"","def":"CAL_DOW_DAYNO"}],"ret_type":"mixed"}]},"JDMonthName":{"desc":"Returns a month name","long_desc":"Returns a string containing a month name. mode tells this function which calendar to convert the Julian Day Count to, and what type of month names are to be returned.","ver":"PHP 4, PHP 5","ret_desc":"The month name for the given Julian Day and calendar.","url":"function.jdmonthname","name":"JDMonthName","params":[{"list":[{"type":"int","var":"$julianday","beh":0,"desc":"The Julian Day to operate on"},{"type":"int","var":"$mode","beh":0,"desc":"The calendar to take the month name from"}],"ret_type":"string"}]},"JDToFrench":{"desc":"Converts a Julian Day Count to the French Republican Calendar","long_desc":"Converts a Julian Day Count to the French Republican Calendar.","ver":"PHP 4, PHP 5","ret_desc":"The french revolution date as a string in the form \"month\/day\/year\"","seealso":[],"url":"function.jdtofrench","name":"JDToFrench","params":[{"list":[],"ret_type":"string"}]},"JDToGregorian":{"desc":"Converts Julian Day Count to Gregorian date","long_desc":"Converts Julian Day Count to a string containing the Gregorian date in the format of \"month\/day\/year\".","ver":"PHP 4, PHP 5","ret_desc":"The gregorian date as a string in the form \"month\/day\/year\"","seealso":[],"url":"function.jdtogregorian","name":"JDToGregorian","params":[{"list":[],"ret_type":"string"}]},"JDToJulian":{"desc":"Converts a Julian Day Count to a Julian Calendar Date","long_desc":"Converts Julian Day Count to a string containing the Julian Calendar Date in the format of \"month\/day\/year\".","ver":"PHP 4, PHP 5","ret_desc":"The julian date as a string in the form \"month\/day\/year\"","seealso":[],"url":"function.jdtojulian","name":"JDToJulian","params":[{"list":[],"ret_type":"string"}]},"JewishToJD":{"desc":"Converts a date in the Jewish Calendar to Julian Day Count","long_desc":"Although this function can handle dates all the way back to the year 1 (3761 B.C.), such use may not be meaningful. The Jewish calendar has been in use for several thousand years, but in the early days there was no formula to determine the start of a month. A new month was started when the new moon was first observed.","ver":"PHP 4, PHP 5","ret_desc":"The julian day for the given jewish date as an integer.","seealso":[],"url":"function.jewishtojd","name":"JewishToJD","params":[{"list":[{"type":"int","var":"$month","beh":0,"desc":"The month as a number from 1 to 13"},{"type":"int","var":"$day","beh":0,"desc":"The day as a number from 1 to 30"},{"type":"int","var":"$year","beh":1,"desc":"The year as a number between 1 and 9999"}],"ret_type":"int"}]},"JulianToJD":{"desc":"Converts a Julian Calendar date to Julian Day Count","long_desc":"Valid Range for Julian Calendar 4713 B.C. to 9999 A.D. Although this function can handle dates all the way back to 4713 B.C., such use may not be meaningful. The calendar was created in 46 B.C., but the details did not stabilize until at least 8 A.D., and perhaps as late at the 4th century. Also, the beginning of a year varied from one culture to another - not all accepted January as the first month.","ver":"PHP 4, PHP 5","ret_desc":"The julian day for the given julian date as an integer.","seealso":[],"url":"function.juliantojd","name":"JulianToJD","params":[{"list":[{"type":"int","var":"$month","beh":0,"desc":"The month as a number from 1 (for January) to 12 (for December)"},{"type":"int","var":"$day","beh":0,"desc":"The day as a number from 1 to 31"},{"type":"int","var":"$year","beh":1,"desc":"The year as a number between -4713 and 9999"}],"ret_type":"int"}]},"Notes":{"url":"mysqli.notes","name":"Notes","params":[]},"OuterIterator::getInnerIterator":{"desc":"Returns the inner iterator for the current entry.","long_desc":"Returns the inner iterator for the current iterator entry.","ver":"PHP 5 >= 5.1.0","ret_desc":"The inner iterator for the current entry.","url":"outeriterator.getinneriterator","name":"getInnerIterator","class":"OuterIterator","params":[{"list":[],"ret_type":"Iterator"}]},"PDF_activate_item":{"desc":"Activate structure element or other content item","long_desc":"Activates a previously created structure element or other content item. Returns TRUE on success or FALSE on failure.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-activate-item","name":"PDF_activate_item","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$id","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_add_annotation":{"desc":"Add annotation [deprecated]","long_desc":"This function is deprecated, use PDF_create_annotation() with type=Text instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-add-annotation","name":"PDF_add_annotation","params":[]},"PDF_add_bookmark":{"desc":"Add bookmark for current page [deprecated]","long_desc":"This function is deprecated since PDFlib version 6, use PDF_create_bookmark() instead.","ver":"PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0","url":"function.pdf-add-bookmark","name":"PDF_add_bookmark","params":[]},"PDF_add_launchlink":{"desc":"Add launch annotation for current page [deprecated]","long_desc":"Adds a link to a web resource. This function is deprecated since PDFlib version 6, use PDF_create_action() with type=Launch and PDF_create_annotation() with type=Link instead.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-add-launchlink","name":"PDF_add_launchlink","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$llx","beh":0,"desc":""},{"type":"float","var":"$lly","beh":1,"desc":""},{"type":"float","var":"$urx","beh":1,"desc":""},{"type":"float","var":"$ury","beh":1,"desc":""},{"type":"string","var":"$filename","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_add_locallink":{"desc":"Add link annotation for current page [deprecated]","long_desc":"Add a link annotation to a target within the current PDF file. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 6, use PDF_create_action() with type=GoTo and PDF_create_annotation() with type=Link instead.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-add-locallink","name":"PDF_add_locallink","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$lowerleftx","beh":0,"desc":""},{"type":"float","var":"$lowerlefty","beh":1,"desc":""},{"type":"float","var":"$upperrightx","beh":1,"desc":""},{"type":"float","var":"$upperrighty","beh":1,"desc":""},{"type":"int","var":"$page","beh":1,"desc":""},{"type":"string","var":"$dest","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_add_nameddest":{"desc":"Create named destination","long_desc":"Creates a named destination on an arbitrary page in the current document. Returns TRUE on success or FALSE on failure.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-add-nameddest","name":"PDF_add_nameddest","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$name","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_add_note":{"desc":"Set annotation for current page [deprecated]","long_desc":"Sets an annotation for the current page. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 6, use PDF_create_annotation() with type=Text instead.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-add-note","name":"PDF_add_note","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$llx","beh":0,"desc":""},{"type":"float","var":"$lly","beh":1,"desc":""},{"type":"float","var":"$urx","beh":1,"desc":""},{"type":"float","var":"$ury","beh":1,"desc":""},{"type":"string","var":"$contents","beh":1,"desc":""},{"type":"string","var":"$title","beh":1,"desc":""},{"type":"string","var":"$icon","beh":1,"desc":""},{"type":"int","var":"$open","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_add_outline":{"desc":"Add bookmark for current page [deprecated]","long_desc":"This function is deprecated, use PDF_create_bookmark() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-add-outline","name":"PDF_add_outline","params":[]},"PDF_add_pdflink":{"desc":"Add file link annotation for current page [deprecated]","long_desc":"Add a file link annotation to a PDF target. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 6, use PDF_create_action() with type=GoToR and PDF_create_annotation() with type=Link instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-add-pdflink","name":"PDF_add_pdflink","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$bottom_left_x","beh":0,"desc":""},{"type":"float","var":"$bottom_left_y","beh":1,"desc":""},{"type":"float","var":"$up_right_x","beh":1,"desc":""},{"type":"float","var":"$up_right_y","beh":1,"desc":""},{"type":"string","var":"$filename","beh":1,"desc":""},{"type":"int","var":"$page","beh":1,"desc":""},{"type":"string","var":"$dest","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_add_table_cell":{"desc":"Add a cell to a new or existing table","long_desc":"Adds a cell to a new or existing table.","ver":"PECL pdflib >= 2.1.0","url":"function.pdf-add-table-cell","name":"PDF_add_table_cell","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$table","beh":0,"desc":""},{"type":"int","var":"$column","beh":1,"desc":""},{"type":"int","var":"$row","beh":1,"desc":""},{"type":"string","var":"$text","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_add_textflow":{"desc":"Create Textflow or add text to existing Textflow","long_desc":"Creates a Textflow object, or adds text and explicit options to an existing Textflow.","ver":"PECL pdflib >= 2.1.0","url":"function.pdf-add-textflow","name":"PDF_add_textflow","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$textflow","beh":0,"desc":""},{"type":"string","var":"$text","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_add_thumbnail":{"desc":"Add thumbnail for current page","long_desc":"Adds an existing image as thumbnail for the current page. Returns TRUE on success or FALSE on failure.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-add-thumbnail","name":"PDF_add_thumbnail","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$image","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_add_weblink":{"desc":"Add weblink for current page [deprecated]","long_desc":"Adds a weblink annotation to a target url on the Web. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 6, use PDF_create_action() with type=URI and PDF_create_annotation() with type=Link instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-add-weblink","name":"PDF_add_weblink","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$lowerleftx","beh":0,"desc":""},{"type":"float","var":"$lowerlefty","beh":1,"desc":""},{"type":"float","var":"$upperrightx","beh":1,"desc":""},{"type":"float","var":"$upperrighty","beh":1,"desc":""},{"type":"string","var":"$url","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_arc":{"desc":"Draw a counterclockwise circular arc segment","long_desc":"Adds a counterclockwise circular arc.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-arc","name":"PDF_arc","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$y","beh":1,"desc":""},{"type":"float","var":"$r","beh":1,"desc":""},{"type":"float","var":"$alpha","beh":1,"desc":""},{"type":"float","var":"$beta","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_arcn":{"desc":"Draw a clockwise circular arc segment","long_desc":"Except for the drawing direction, this function behaves exactly like PDF_arc().","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-arcn","name":"PDF_arcn","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$y","beh":1,"desc":""},{"type":"float","var":"$r","beh":1,"desc":""},{"type":"float","var":"$alpha","beh":1,"desc":""},{"type":"float","var":"$beta","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_attach_file":{"desc":"Add file attachment for current page [deprecated]","long_desc":"Adds a file attachment annotation. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 6, use PDF_create_annotation() with type=FileAttachment instead.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-attach-file","name":"PDF_attach_file","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$llx","beh":0,"desc":""},{"type":"float","var":"$lly","beh":1,"desc":""},{"type":"float","var":"$urx","beh":1,"desc":""},{"type":"float","var":"$ury","beh":1,"desc":""},{"type":"string","var":"$filename","beh":1,"desc":""},{"type":"string","var":"$description","beh":1,"desc":""},{"type":"string","var":"$author","beh":1,"desc":""},{"type":"string","var":"$mimetype","beh":1,"desc":""},{"type":"string","var":"$icon","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_begin_document":{"desc":"Create new PDF file","long_desc":"Creates a new PDF file subject to various options.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-begin-document","name":"PDF_begin_document","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$filename","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_begin_font":{"desc":"Start a Type 3 font definition","long_desc":"Starts a Type 3 font definition.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-begin-font","name":"PDF_begin_font","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$filename","beh":0,"desc":""},{"type":"float","var":"$a","beh":1,"desc":""},{"type":"float","var":"$b","beh":1,"desc":""},{"type":"float","var":"$c","beh":1,"desc":""},{"type":"float","var":"$d","beh":1,"desc":""},{"type":"float","var":"$e","beh":1,"desc":""},{"type":"float","var":"$f","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_begin_glyph":{"desc":"Start glyph definition for Type 3 font","long_desc":"Starts a glyph definition for a Type 3 font.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-begin-glyph","name":"PDF_begin_glyph","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$glyphname","beh":0,"desc":""},{"type":"float","var":"$wx","beh":1,"desc":""},{"type":"float","var":"$llx","beh":1,"desc":""},{"type":"float","var":"$lly","beh":1,"desc":""},{"type":"float","var":"$urx","beh":1,"desc":""},{"type":"float","var":"$ury","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_begin_item":{"desc":"Open structure element or other content item","long_desc":"Opens a structure element or other content item with attributes supplied as options.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-begin-item","name":"PDF_begin_item","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$tag","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_begin_layer":{"desc":"Start layer","long_desc":"Starts a layer for subsequent output on the page. Returns TRUE on success or FALSE on failure. This function requires PDF 1.5.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-begin-layer","name":"PDF_begin_layer","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$layer","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_begin_page":{"desc":"Start new page [deprecated]","long_desc":"Adds a new page to the document. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 6, use PDF_begin_page_ext() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-begin-page","name":"PDF_begin_page","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$width","beh":0,"desc":""},{"type":"float","var":"$height","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_begin_page_ext":{"desc":"Start new page","long_desc":"Adds a new page to the document, and specifies various options. The parameters width and height are the dimensions of the new page in points. Returns TRUE on success or FALSE on failure.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-begin-page-ext","name":"PDF_begin_page_ext","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$width","beh":0,"desc":""},{"type":"float","var":"$height","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_begin_pattern":{"desc":"Start pattern definition","long_desc":"Starts a new pattern definition.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-begin-pattern","name":"PDF_begin_pattern","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$width","beh":0,"desc":""},{"type":"float","var":"$height","beh":1,"desc":""},{"type":"float","var":"$xstep","beh":1,"desc":""},{"type":"float","var":"$ystep","beh":1,"desc":""},{"type":"int","var":"$painttype","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_begin_template":{"desc":"Start template definition [deprecated]","long_desc":"Starts a new template definition. This function is deprecated since PDFlib version 7, use PDF_begin_template_ext() instead.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-begin-template","name":"PDF_begin_template","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$width","beh":0,"desc":""},{"type":"float","var":"$height","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_begin_template_ext":{"desc":"Start template definition","long_desc":"Starts a new template definition.","ver":"PECL pdflib >= 2.1.0","url":"function.pdf-begin-template-ext","name":"PDF_begin_template_ext","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$width","beh":0,"desc":""},{"type":"float","var":"$height","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_circle":{"desc":"Draw a circle","long_desc":"Adds a circle. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-circle","name":"PDF_circle","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$y","beh":1,"desc":""},{"type":"float","var":"$r","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_clip":{"desc":"Clip to current path","long_desc":"Uses the current path as clipping path, and terminate the path. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-clip","name":"PDF_clip","params":[{"list":[],"ret_type":"bool"}]},"PDF_close":{"desc":"Close pdf resource [deprecated]","long_desc":"Closes the generated PDF file, and frees all document-related resources. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 6, use PDF_end_document() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-close","name":"PDF_close","params":[{"list":[],"ret_type":"bool"}]},"PDF_close_image":{"desc":"Close image","long_desc":"Closes an image retrieved with the PDF_open_image() function.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-close-image","name":"PDF_close_image","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"int","var":"$image","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_close_pdi":{"desc":"Close the input PDF document [deprecated]","long_desc":"Closes all open page handles, and closes the input PDF document. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 7, use PDF_close_pdi_document() instead.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-close-pdi","name":"PDF_close_pdi","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"int","var":"$doc","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_close_pdi_page":{"desc":"Close the page handle","long_desc":"Closes the page handle, and frees all page-related resources. Returns TRUE on success or FALSE on failure.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-close-pdi-page","name":"PDF_close_pdi_page","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"int","var":"$page","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_closepath":{"desc":"Close current path","long_desc":"Closes the current path. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-closepath","name":"PDF_closepath","params":[{"list":[],"ret_type":"bool"}]},"PDF_closepath_fill_stroke":{"desc":"Close, fill and stroke current path","long_desc":"Closes the path, fills, and strokes it. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-closepath-fill-stroke","name":"PDF_closepath_fill_stroke","params":[{"list":[],"ret_type":"bool"}]},"PDF_closepath_stroke":{"desc":"Close and stroke path","long_desc":"Closes the path, and strokes it. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-closepath-stroke","name":"PDF_closepath_stroke","params":[{"list":[],"ret_type":"bool"}]},"PDF_concat":{"desc":"Concatenate a matrix to the CTM","long_desc":"Concatenates a matrix to the current transformation matrix (CTM). Returns TRUE on success or FALSE on failure.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-concat","name":"PDF_concat","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$a","beh":0,"desc":""},{"type":"float","var":"$b","beh":1,"desc":""},{"type":"float","var":"$c","beh":1,"desc":""},{"type":"float","var":"$d","beh":1,"desc":""},{"type":"float","var":"$e","beh":1,"desc":""},{"type":"float","var":"$f","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_continue_text":{"desc":"Output text in next line","long_desc":"Prints text at the next line. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-continue-text","name":"PDF_continue_text","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$text","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_create_3dview":{"desc":"Create 3D view","long_desc":"Creates a 3D view. This function requires PDF 1.6.","ver":"PECL pdflib >= 2.1.0","url":"function.pdf-create-3dview","name":"PDF_create_3dview","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$username","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_create_action":{"desc":"Create action for objects or events","long_desc":"Creates an action which can be applied to various objects and events.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-create-action","name":"PDF_create_action","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$type","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_create_annotation":{"desc":"Create rectangular annotation","long_desc":"Creates a rectangular annotation on the current page.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-create-annotation","name":"PDF_create_annotation","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$llx","beh":0,"desc":""},{"type":"float","var":"$lly","beh":1,"desc":""},{"type":"float","var":"$urx","beh":1,"desc":""},{"type":"float","var":"$ury","beh":1,"desc":""},{"type":"string","var":"$type","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_create_bookmark":{"desc":"Create bookmark","long_desc":"Creates a bookmark subject to various options.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-create-bookmark","name":"PDF_create_bookmark","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$text","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_create_field":{"desc":"Create form field","long_desc":"Creates a form field on the current page subject to various options.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-create-field","name":"PDF_create_field","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$llx","beh":0,"desc":""},{"type":"float","var":"$lly","beh":1,"desc":""},{"type":"float","var":"$urx","beh":1,"desc":""},{"type":"float","var":"$ury","beh":1,"desc":""},{"type":"string","var":"$name","beh":1,"desc":""},{"type":"string","var":"$type","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_create_fieldgroup":{"desc":"Create form field group","long_desc":"Creates a form field group subject to various options.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-create-fieldgroup","name":"PDF_create_fieldgroup","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$name","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_create_gstate":{"desc":"Create graphics state object","long_desc":"Creates a graphics state object subject to various options.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-create-gstate","name":"PDF_create_gstate","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":0,"desc":""}],"ret_type":"int"}]},"PDF_create_pvf":{"desc":"Create PDFlib virtual file","long_desc":"Creates a named virtual read-only file from data provided in memory.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-create-pvf","name":"PDF_create_pvf","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$filename","beh":0,"desc":""},{"type":"string","var":"$data","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_create_textflow":{"desc":"Create textflow object","long_desc":"Preprocesses text for later formatting and creates a textflow object.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-create-textflow","name":"PDF_create_textflow","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$text","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_curveto":{"desc":"Draw Bezier curve","long_desc":"Draws a Bezier curve from the current point, using 3 more control points. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-curveto","name":"PDF_curveto","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$x1","beh":0,"desc":""},{"type":"float","var":"$y1","beh":1,"desc":""},{"type":"float","var":"$x2","beh":1,"desc":""},{"type":"float","var":"$y2","beh":1,"desc":""},{"type":"float","var":"$x3","beh":1,"desc":""},{"type":"float","var":"$y3","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_define_layer":{"desc":"Create layer definition","long_desc":"Creates a new layer definition. This function requires PDF 1.5.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-define-layer","name":"PDF_define_layer","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$name","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_delete":{"desc":"Delete PDFlib object","long_desc":"Deletes a PDFlib object, and frees all internal resources. Returns TRUE on success or FALSE on failure.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-delete","name":"PDF_delete","params":[{"list":[],"ret_type":"bool"}]},"PDF_delete_pvf":{"desc":"Delete PDFlib virtual file","long_desc":"Deletes a named virtual file and frees its data structures (but not the contents).","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-delete-pvf","name":"PDF_delete_pvf","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$filename","beh":0,"desc":""}],"ret_type":"int"}]},"PDF_delete_table":{"desc":"Delete table object","long_desc":"Deletes a table and all associated data structures.","ver":"PECL pdflib >= 2.1.0","url":"function.pdf-delete-table","name":"PDF_delete_table","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$table","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_delete_textflow":{"desc":"Delete textflow object","long_desc":"Deletes a textflow and the associated data structures.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-delete-textflow","name":"PDF_delete_textflow","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$textflow","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_encoding_set_char":{"desc":"Add glyph name and\/or Unicode value","long_desc":"Adds a glyph name and\/or Unicode value to a custom encoding.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-encoding-set-char","name":"PDF_encoding_set_char","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$encoding","beh":0,"desc":""},{"type":"int","var":"$slot","beh":1,"desc":""},{"type":"string","var":"$glyphname","beh":1,"desc":""},{"type":"int","var":"$uv","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_end_document":{"desc":"Close PDF file","long_desc":"Closes the generated PDF file and applies various options.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-end-document","name":"PDF_end_document","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_end_font":{"desc":"Terminate Type 3 font definition","long_desc":"Terminates a Type 3 font definition.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-end-font","name":"PDF_end_font","params":[{"list":[],"ret_type":"bool"}]},"PDF_end_glyph":{"desc":"Terminate glyph definition for Type 3 font","long_desc":"Terminates a glyph definition for a Type 3 font.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-end-glyph","name":"PDF_end_glyph","params":[{"list":[],"ret_type":"bool"}]},"PDF_end_item":{"desc":"Close structure element or other content item","long_desc":"Closes a structure element or other content item.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-end-item","name":"PDF_end_item","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$id","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_end_layer":{"desc":"Deactivate all active layers","long_desc":"Deactivates all active layers. Returns TRUE on success or FALSE on failure. This function requires PDF 1.5.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-end-layer","name":"PDF_end_layer","params":[{"list":[],"ret_type":"bool"}]},"PDF_end_page":{"desc":"Finish page","long_desc":"Finishes the page. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-end-page","name":"PDF_end_page","params":[{"list":[],"ret_type":"bool"}]},"PDF_end_page_ext":{"desc":"Finish page","long_desc":"Finishes a page, and applies various options. Returns TRUE on success or FALSE on failure.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-end-page-ext","name":"PDF_end_page_ext","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_end_pattern":{"desc":"Finish pattern","long_desc":"Finishes the pattern definition. Returns TRUE on success or FALSE on failure.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-end-pattern","name":"PDF_end_pattern","params":[{"list":[],"ret_type":"bool"}]},"PDF_end_template":{"desc":"Finish template","long_desc":"Finishes a template definition. Returns TRUE on success or FALSE on failure.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-end-template","name":"PDF_end_template","params":[{"list":[],"ret_type":"bool"}]},"PDF_endpath":{"desc":"End current path","long_desc":"Ends the current path without filling or stroking it.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-endpath","name":"PDF_endpath","params":[{"list":[],"ret_type":"bool"}]},"PDF_fill":{"desc":"Fill current path","long_desc":"Fills the interior of the current path with the current fill color. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-fill","name":"PDF_fill","params":[{"list":[],"ret_type":"bool"}]},"PDF_fill_imageblock":{"desc":"Fill image block with variable data","long_desc":"Fills an image block with variable data according to its properties. This function is only available in the PDFlib Personalization Server (PPS).","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-fill-imageblock","name":"PDF_fill_imageblock","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$page","beh":0,"desc":""},{"type":"string","var":"$blockname","beh":1,"desc":""},{"type":"int","var":"$image","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_fill_pdfblock":{"desc":"Fill PDF block with variable data","long_desc":"Fills a PDF block with variable data according to its properties. This function is only available in the PDFlib Personalization Server (PPS).","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-fill-pdfblock","name":"PDF_fill_pdfblock","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$page","beh":0,"desc":""},{"type":"string","var":"$blockname","beh":1,"desc":""},{"type":"int","var":"$contents","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_fill_stroke":{"desc":"Fill and stroke path","long_desc":"Fills and strokes the current path with the current fill and stroke color. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-fill-stroke","name":"PDF_fill_stroke","params":[{"list":[],"ret_type":"bool"}]},"PDF_fill_textblock":{"desc":"Fill text block with variable data","long_desc":"Fills a text block with variable data according to its properties. This function is only available in the PDFlib Personalization Server (PPS).","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-fill-textblock","name":"PDF_fill_textblock","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$page","beh":0,"desc":""},{"type":"string","var":"$blockname","beh":1,"desc":""},{"type":"string","var":"$text","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_findfont":{"desc":"Prepare font for later use [deprecated]","long_desc":"Search for a font and prepare it for later use with PDF_setfont(). The metrics will be loaded, and if embed is nonzero, the font file will be checked, but not yet used. encoding is one of builtin, macroman, winansi, host, a user-defined encoding name or the name of a CMap. Parameter embed is optional before PHP 4.3.5 or with PDFlib less than 5. This function is deprecated since PDFlib version 5, use PDF_load_font() instead.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-findfont","name":"PDF_findfont","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$fontname","beh":0,"desc":""},{"type":"string","var":"$encoding","beh":1,"desc":""},{"type":"int","var":"$embed","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_fit_image":{"desc":"Place image or template","long_desc":"Places an image or template on the page, subject to various options. Returns TRUE on success or FALSE on failure.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-fit-image","name":"PDF_fit_image","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$image","beh":0,"desc":""},{"type":"float","var":"$x","beh":1,"desc":""},{"type":"float","var":"$y","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_fit_pdi_page":{"desc":"Place imported PDF page","long_desc":"Places an imported PDF page on the page, subject to various options. Returns TRUE on success or FALSE on failure.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-fit-pdi-page","name":"PDF_fit_pdi_page","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$page","beh":0,"desc":""},{"type":"float","var":"$x","beh":1,"desc":""},{"type":"float","var":"$y","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_fit_table":{"desc":"Place table on page","long_desc":"Places a table on the page fully or partially.","ver":"PECL pdflib >= 2.1.0","url":"function.pdf-fit-table","name":"PDF_fit_table","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$table","beh":0,"desc":""},{"type":"float","var":"$llx","beh":1,"desc":""},{"type":"float","var":"$lly","beh":1,"desc":""},{"type":"float","var":"$urx","beh":1,"desc":""},{"type":"float","var":"$ury","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"string"}]},"PDF_fit_textflow":{"desc":"Format textflow in rectangular area","long_desc":"Formats the next portion of a textflow into a rectangular area.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-fit-textflow","name":"PDF_fit_textflow","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$textflow","beh":0,"desc":""},{"type":"float","var":"$llx","beh":1,"desc":""},{"type":"float","var":"$lly","beh":1,"desc":""},{"type":"float","var":"$urx","beh":1,"desc":""},{"type":"float","var":"$ury","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"string"}]},"PDF_fit_textline":{"desc":"Place single line of text","long_desc":"Places a single line of text on the page, subject to various options. Returns TRUE on success or FALSE on failure.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-fit-textline","name":"PDF_fit_textline","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$text","beh":0,"desc":""},{"type":"float","var":"$x","beh":1,"desc":""},{"type":"float","var":"$y","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_get_apiname":{"desc":"Get name of unsuccessfull API function","long_desc":"Gets the name of the API function which threw the last exception or failed.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-get-apiname","name":"PDF_get_apiname","params":[{"list":[],"ret_type":"string"}]},"PDF_get_buffer":{"desc":"Get PDF output buffer","long_desc":"Fetches the buffer containing the generated PDF data.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-get-buffer","name":"PDF_get_buffer","params":[{"list":[],"ret_type":"string"}]},"PDF_get_errmsg":{"desc":"Get error text","long_desc":"Gets the text of the last thrown exception or the reason for a failed function call.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-get-errmsg","name":"PDF_get_errmsg","params":[{"list":[],"ret_type":"string"}]},"PDF_get_errnum":{"desc":"Get error number","long_desc":"Gets the number of the last thrown exception or the reason for a failed function call.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-get-errnum","name":"PDF_get_errnum","params":[{"list":[],"ret_type":"int"}]},"PDF_get_font":{"desc":"Get font [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_get_value() with the parameter font instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-get-font","name":"PDF_get_font","params":[]},"PDF_get_fontname":{"desc":"Get font name [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_get_parameter() with the parameter fontname instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-get-fontname","name":"PDF_get_fontname","params":[]},"PDF_get_fontsize":{"desc":"Font handling [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_get_value() with the parameter fontsizeinstead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-get-fontsize","name":"PDF_get_fontsize","params":[]},"PDF_get_image_height":{"desc":"Get image height [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_get_value() with the parameter imageheight instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-get-image-height","name":"PDF_get_image_height","params":[]},"PDF_get_image_width":{"desc":"Get image width [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_get_value() with the parameter imagewidth instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-get-image-width","name":"PDF_get_image_width","params":[]},"PDF_get_majorversion":{"desc":"Get major version number [deprecated]","long_desc":"This function is deprecated since PDFlib version 5, use PDF_get_value() with the parameter major instead.","ver":"PHP 4 >= 4.2.0, PECL pdflib >= 1.0.0","url":"function.pdf-get-majorversion","name":"PDF_get_majorversion","params":[{"list":[],"ret_type":"int"}]},"PDF_get_minorversion":{"desc":"Get minor version number [deprecated]","long_desc":"Returns the minor version number of the PDFlib version. This function is deprecated since PDFlib version 5, use PDF_get_value() with the parameter minor instead.","ver":"PHP 4 >= 4.2.0, PECL pdflib >= 1.0.0","url":"function.pdf-get-minorversion","name":"PDF_get_minorversion","params":[{"list":[],"ret_type":"int"}]},"PDF_get_parameter":{"desc":"Get string parameter","long_desc":"Gets the contents of some PDFlib parameter with string type.","ver":"PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0","url":"function.pdf-get-parameter","name":"PDF_get_parameter","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$key","beh":0,"desc":""},{"type":"float","var":"$modifier","beh":1,"desc":""}],"ret_type":"string"}]},"PDF_get_pdi_parameter":{"desc":"Get PDI string parameter [deprecated]","long_desc":"Gets the contents of a PDI document parameter with string type. This function is deprecated since PDFlib version 7, use PDF_pcos_get_string() instead.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-get-pdi-parameter","name":"PDF_get_pdi_parameter","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$key","beh":0,"desc":""},{"type":"int","var":"$doc","beh":1,"desc":""},{"type":"int","var":"$page","beh":1,"desc":""},{"type":"int","var":"$reserved","beh":1,"desc":""}],"ret_type":"string"}]},"PDF_get_pdi_value":{"desc":"Get PDI numerical parameter [deprecated]","long_desc":"Gets the contents of a PDI document parameter with numerical type. This function is deprecated since PDFlib version 7, use PDF_pcos_get_number() instead.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-get-pdi-value","name":"PDF_get_pdi_value","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$key","beh":0,"desc":""},{"type":"int","var":"$doc","beh":1,"desc":""},{"type":"int","var":"$page","beh":1,"desc":""},{"type":"int","var":"$reserved","beh":1,"desc":""}],"ret_type":"float"}]},"PDF_get_value":{"desc":"Get numerical parameter","long_desc":"Gets the value of some PDFlib parameter with numerical type.","ver":"PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0","url":"function.pdf-get-value","name":"PDF_get_value","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$key","beh":0,"desc":""},{"type":"float","var":"$modifier","beh":1,"desc":""}],"ret_type":"float"}]},"PDF_info_font":{"desc":"Query detailed information about a loaded font","long_desc":"Queries detailed information about a loaded font.","ver":"PECL pdflib >= 2.1.0","url":"function.pdf-info-font","name":"PDF_info_font","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$font","beh":0,"desc":""},{"type":"string","var":"$keyword","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"float"}]},"PDF_info_matchbox":{"desc":"Query matchbox information","long_desc":"Queries information about a matchbox on the current page.","ver":"PECL pdflib >= 2.1.0","url":"function.pdf-info-matchbox","name":"PDF_info_matchbox","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$boxname","beh":0,"desc":""},{"type":"int","var":"$num","beh":1,"desc":""},{"type":"string","var":"$keyword","beh":1,"desc":""}],"ret_type":"float"}]},"PDF_info_table":{"desc":"Retrieve table information","long_desc":"Retrieves table information related to the most recently placed table instance.","ver":"PECL pdflib >= 2.1.0","url":"function.pdf-info-table","name":"PDF_info_table","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$table","beh":0,"desc":""},{"type":"string","var":"$keyword","beh":1,"desc":""}],"ret_type":"float"}]},"PDF_info_textflow":{"desc":"Query textflow state","long_desc":"Queries the current state of a textflow.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-info-textflow","name":"PDF_info_textflow","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$textflow","beh":0,"desc":""},{"type":"string","var":"$keyword","beh":1,"desc":""}],"ret_type":"float"}]},"PDF_info_textline":{"desc":"Perform textline formatting and query metrics","long_desc":"Performs textline formatting and queries the resulting metrics.","ver":"PECL pdflib >= 2.1.0","url":"function.pdf-info-textline","name":"PDF_info_textline","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$text","beh":0,"desc":""},{"type":"string","var":"$keyword","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"float"}]},"PDF_initgraphics":{"desc":"Reset graphic state","long_desc":"Reset all color and graphics state parameters to their defaults. Returns TRUE on success or FALSE on failure.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-initgraphics","name":"PDF_initgraphics","params":[{"list":[],"ret_type":"bool"}]},"PDF_lineto":{"desc":"Draw a line","long_desc":"Draws a line from the current point to another point. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-lineto","name":"PDF_lineto","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$y","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_load_3ddata":{"desc":"Load 3D model","long_desc":"Loads a 3D model from a disk-based or virtual file. This function requires PDF 1.6.","ver":"PECL pdflib >= 2.1.0","url":"function.pdf-load-3ddata","name":"PDF_load_3ddata","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$filename","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_load_font":{"desc":"Search and prepare font","long_desc":"Searches for a font and prepares it for later use.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-load-font","name":"PDF_load_font","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$fontname","beh":0,"desc":""},{"type":"string","var":"$encoding","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_load_iccprofile":{"desc":"Search and prepare ICC profile","long_desc":"Searches for an ICC profile, and prepares it for later use.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-load-iccprofile","name":"PDF_load_iccprofile","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$profilename","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_load_image":{"desc":"Open image file","long_desc":"Opens a disk-based or virtual image file subject to various options.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-load-image","name":"PDF_load_image","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$imagetype","beh":0,"desc":""},{"type":"string","var":"$filename","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_makespotcolor":{"desc":"Make spot color","long_desc":"Finds a built-in spot color name, or makes a named spot color from the current fill color. Returns TRUE on success or FALSE on failure.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-makespotcolor","name":"PDF_makespotcolor","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$spotname","beh":0,"desc":""}],"ret_type":"int"}]},"PDF_moveto":{"desc":"Set current point","long_desc":"Sets the current point for graphics output. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-moveto","name":"PDF_moveto","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$y","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_new":{"desc":"Create PDFlib object","long_desc":"Creates a new PDFlib object with default settings.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-new","name":"PDF_new","params":[{"list":[],"ret_type":"resource"}]},"PDF_open_ccitt":{"desc":"Open raw CCITT image [deprecated]","long_desc":"Opens a raw CCITT image. This function is deprecated since PDFlib version 5, use PDF_load_image() instead.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-open-ccitt","name":"PDF_open_ccitt","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$filename","beh":0,"desc":""},{"type":"int","var":"$width","beh":1,"desc":""},{"type":"int","var":"$height","beh":1,"desc":""},{"type":"int","var":"$BitReverse","beh":1,"desc":""},{"type":"int","var":"$k","beh":1,"desc":""},{"type":"int","var":"$Blackls1","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_open_file":{"desc":"Create PDF file [deprecated]","long_desc":"Creates a new PDF file using the supplied file name. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 6, use PDF_begin_document() instead.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-open-file","name":"PDF_open_file","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$filename","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_open_gif":{"desc":"Open GIF image [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_load_image() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-open-gif","name":"PDF_open_gif","params":[]},"PDF_open_image":{"desc":"Use image data [deprecated]","long_desc":"Uses image data from a variety of data sources. This function is deprecated since PDFlib version 5, use virtual files and PDF_load_image() instead.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-open-image","name":"PDF_open_image","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$imagetype","beh":0,"desc":""},{"type":"string","var":"$source","beh":1,"desc":""},{"type":"string","var":"$data","beh":1,"desc":""},{"type":"int","var":"$length","beh":1,"desc":""},{"type":"int","var":"$width","beh":1,"desc":""},{"type":"int","var":"$height","beh":1,"desc":""},{"type":"int","var":"$components","beh":1,"desc":""},{"type":"int","var":"$bpc","beh":1,"desc":""},{"type":"string","var":"$params","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_open_image_file":{"desc":"Read image from file [deprecated]","long_desc":"Opens an image file. This function is deprecated since PDFlib version 5, use PDF_load_image() with the colorize, ignoremask, invert, mask, masked, and page options instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-open-image-file","name":"PDF_open_image_file","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$imagetype","beh":0,"desc":""},{"type":"string","var":"$filename","beh":1,"desc":""},{"type":"string","var":"$stringparam","beh":1,"desc":""},{"type":"int","var":"$intparam","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_open_jpeg":{"desc":"Open JPEG image [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_load_image() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-open-jpeg","name":"PDF_open_jpeg","params":[]},"PDF_open_memory_image":{"desc":"Open image created with PHP's image functions [not supported]","long_desc":"This function is not supported by PDFlib GmbH.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-open-memory-image","name":"PDF_open_memory_image","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"resource","var":"$image","beh":0,"desc":""}],"ret_type":"int"}]},"PDF_open_pdi":{"desc":"Open PDF file [deprecated]","long_desc":"Opens a disk-based or virtual PDF document and prepares it for later use. This function is deprecated since PDFlib version 7, use PDF_open_pdi_document() instead.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-open-pdi","name":"PDF_open_pdi","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$filename","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""},{"type":"int","var":"$len","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_open_pdi_document":{"desc":"Prepare a pdi document","long_desc":"Open a disk-based or virtual PDF document and prepare it for later use.","ver":"PECL pdflib >= 2.1.0","url":"function.pdf-open-pdi-document","name":"PDF_open_pdi_document","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$filename","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_open_pdi_page":{"desc":"Prepare a page","long_desc":"Prepares a page for later use with PDF_fit_pdi_page().","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-open-pdi-page","name":"PDF_open_pdi_page","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"int","var":"$doc","beh":0,"desc":""},{"type":"int","var":"$pagenumber","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_open_tiff":{"desc":"Open TIFF image [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_load_image() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-open-tiff","name":"PDF_open_tiff","params":[]},"PDF_pcos_get_number":{"desc":"Get value of pCOS path with type number or boolean","long_desc":"Gets the value of a pCOS path with type number or boolean.","ver":"PECL pdflib >= 2.1.0","url":"function.pdf-pcos-get-number","name":"PDF_pcos_get_number","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"int","var":"$doc","beh":0,"desc":""},{"type":"string","var":"$path","beh":1,"desc":""}],"ret_type":"float"}]},"PDF_pcos_get_stream":{"desc":"Get contents of pCOS path with type stream, fstream, or string","long_desc":"Gets the contents of a pCOS path with type stream, fstream, or string.","ver":"PECL pdflib >= 2.1.0","url":"function.pdf-pcos-get-stream","name":"PDF_pcos_get_stream","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"int","var":"$doc","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""},{"type":"string","var":"$path","beh":1,"desc":""}],"ret_type":"string"}]},"PDF_pcos_get_string":{"desc":"Get value of pCOS path with type name, string, or boolean","long_desc":"Gets the value of a pCOS path with type name, string, or boolean.","ver":"PECL pdflib >= 2.1.0","url":"function.pdf-pcos-get-string","name":"PDF_pcos_get_string","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"int","var":"$doc","beh":0,"desc":""},{"type":"string","var":"$path","beh":1,"desc":""}],"ret_type":"string"}]},"PDF_place_image":{"desc":"Place image on the page [deprecated]","long_desc":"Places an image and scales it. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 5, use PDF_fit_image() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-place-image","name":"PDF_place_image","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$image","beh":0,"desc":""},{"type":"float","var":"$x","beh":1,"desc":""},{"type":"float","var":"$y","beh":1,"desc":""},{"type":"float","var":"$scale","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_place_pdi_page":{"desc":"Place PDF page [deprecated]","long_desc":"Places a PDF page and scales it. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 5, use PDF_fit_pdi_page() instead.","ver":"PHP 4 >= 4.0.6, PECL pdflib >= 1.0.0","url":"function.pdf-place-pdi-page","name":"PDF_place_pdi_page","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$page","beh":0,"desc":""},{"type":"float","var":"$x","beh":1,"desc":""},{"type":"float","var":"$y","beh":1,"desc":""},{"type":"float","var":"$sx","beh":1,"desc":""},{"type":"float","var":"$sy","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_process_pdi":{"desc":"Process imported PDF document","long_desc":"Processes certain elements of an imported PDF document.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-process-pdi","name":"PDF_process_pdi","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$doc","beh":0,"desc":""},{"type":"int","var":"$page","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_rect":{"desc":"Draw rectangle","long_desc":"Draws a rectangle. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-rect","name":"PDF_rect","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$y","beh":1,"desc":""},{"type":"float","var":"$width","beh":1,"desc":""},{"type":"float","var":"$height","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_restore":{"desc":"Restore graphics state","long_desc":"Restores the most recently saved graphics state. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-restore","name":"PDF_restore","params":[{"list":[],"ret_type":"bool"}]},"PDF_resume_page":{"desc":"Resume page","long_desc":"Resumes a page to add more content to it.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-resume-page","name":"PDF_resume_page","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_rotate":{"desc":"Rotate coordinate system","long_desc":"Rotates the coordinate system. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-rotate","name":"PDF_rotate","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$phi","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_save":{"desc":"Save graphics state","long_desc":"Saves the current graphics state. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-save","name":"PDF_save","params":[{"list":[],"ret_type":"bool"}]},"PDF_scale":{"desc":"Scale coordinate system","long_desc":"Scales the coordinate system. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-scale","name":"PDF_scale","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$sx","beh":0,"desc":""},{"type":"float","var":"$sy","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_set_border_color":{"desc":"Set border color of annotations [deprecated]","long_desc":"Sets the border color for all kinds of annotations. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 6, use the option annotcolor in PDF_create_annotation() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-border-color","name":"PDF_set_border_color","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$red","beh":0,"desc":""},{"type":"float","var":"$green","beh":1,"desc":""},{"type":"float","var":"$blue","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_set_border_dash":{"desc":"Set border dash style of annotations [deprecated]","long_desc":"Sets the border dash style for all kinds of annotations. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 6, use the option dasharray in PDF_create_annotation() instead.","ver":"PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0","url":"function.pdf-set-border-dash","name":"PDF_set_border_dash","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$black","beh":0,"desc":""},{"type":"float","var":"$white","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_set_border_style":{"desc":"Set border style of annotations [deprecated]","long_desc":"Sets the border style for all kinds of annotations. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 6, use the options borderstyle and linewidth in PDF_create_annotation() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-border-style","name":"PDF_set_border_style","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$style","beh":0,"desc":""},{"type":"float","var":"$width","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_set_char_spacing":{"desc":"Set character spacing [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_set_value() with parameter charspacing instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-char-spacing","name":"PDF_set_char_spacing","params":[]},"PDF_set_duration":{"desc":"Set duration between pages [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use the duration option in PDF_begin_page_ext() or PDF_end_page_ext() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-duration","name":"PDF_set_duration","params":[]},"PDF_set_gstate":{"desc":"Activate graphics state object","long_desc":"Activates a graphics state object.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-set-gstate","name":"PDF_set_gstate","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$gstate","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_set_horiz_scaling":{"desc":"Set horizontal text scaling [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_set_value() with parameter horizscaling instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-horiz-scaling","name":"PDF_set_horiz_scaling","params":[]},"PDF_set_info":{"desc":"Fill document info field","long_desc":"Fill document information field key with value. Returns TRUE on success or FALSE on failure.","ver":"PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0","url":"function.pdf-set-info","name":"PDF_set_info","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$key","beh":0,"desc":""},{"type":"string","var":"$value","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_set_info_author":{"desc":"Fill the author document info field [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_set_info() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-info-author","name":"PDF_set_info_author","params":[]},"PDF_set_info_creator":{"desc":"Fill the creator document info field [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_set_info() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-info-creator","name":"PDF_set_info_creator","params":[]},"PDF_set_info_keywords":{"desc":"Fill the keywords document info field [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_set_info() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-info-keywords","name":"PDF_set_info_keywords","params":[]},"PDF_set_info_subject":{"desc":"Fill the subject document info field [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_set_info() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-info-subject","name":"PDF_set_info_subject","params":[]},"PDF_set_info_title":{"desc":"Fill the title document info field [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_set_info() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-info-title","name":"PDF_set_info_title","params":[]},"PDF_set_layer_dependency":{"desc":"Define relationships among layers","long_desc":"Defines hierarchical and group relationships among layers. Returns TRUE on success or FALSE on failure. This function requires PDF 1.5.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-set-layer-dependency","name":"PDF_set_layer_dependency","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$type","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_set_leading":{"desc":"Set distance between text lines [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_set_value() with the parameter leading instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-leading","name":"PDF_set_leading","params":[]},"PDF_set_parameter":{"desc":"Set string parameter","long_desc":"Sets some PDFlib parameter with string type. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-parameter","name":"PDF_set_parameter","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$key","beh":0,"desc":""},{"type":"string","var":"$value","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_set_text_matrix":{"desc":"Set text matrix [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_scale(), PDF_translate(), PDF_rotate(), or PDF_skew() instead.","ver":"PHP 4 <= 4.0.4","url":"function.pdf-set-text-matrix","name":"PDF_set_text_matrix","params":[]},"PDF_set_text_pos":{"desc":"Set text position","long_desc":"Sets the position for text output on the page. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-text-pos","name":"PDF_set_text_pos","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$y","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_set_text_rendering":{"desc":"Determine text rendering [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_set_value() with the textrendering parameter instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-text-rendering","name":"PDF_set_text_rendering","params":[]},"PDF_set_text_rise":{"desc":"Set text rise [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_set_value() with the textrise parameter instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-text-rise","name":"PDF_set_text_rise","params":[]},"PDF_set_value":{"desc":"Set numerical parameter","long_desc":"Sets the value of some PDFlib parameter with numerical type. Returns TRUE on success or FALSE on failure.","ver":"PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0","url":"function.pdf-set-value","name":"PDF_set_value","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$key","beh":0,"desc":""},{"type":"float","var":"$value","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_set_word_spacing":{"desc":"Set spacing between words [deprecated]","long_desc":"This function is deprecated since PDFlib version 3, use PDF_set_value() with the wordspacing parameter instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-set-word-spacing","name":"PDF_set_word_spacing","params":[]},"PDF_setcolor":{"desc":"Set fill and stroke color","long_desc":"Sets the current color space and color. Returns TRUE on success or FALSE on failure.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-setcolor","name":"PDF_setcolor","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$fstype","beh":0,"desc":""},{"type":"string","var":"$colorspace","beh":1,"desc":""},{"type":"float","var":"$c1","beh":1,"desc":""},{"type":"float","var":"$c2","beh":1,"desc":""},{"type":"float","var":"$c3","beh":1,"desc":""},{"type":"float","var":"$c4","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_setdash":{"desc":"Set simple dash pattern","long_desc":"Sets the current dash pattern to b black and w white units. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-setdash","name":"PDF_setdash","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$b","beh":0,"desc":""},{"type":"float","var":"$w","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_setdashpattern":{"desc":"Set dash pattern","long_desc":"Sets a dash pattern defined by an option list. Returns TRUE on success or FALSE on failure.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-setdashpattern","name":"PDF_setdashpattern","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_setflat":{"desc":"Set flatness","long_desc":"Sets the flatness parameter. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-setflat","name":"PDF_setflat","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$flatness","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_setfont":{"desc":"Set font","long_desc":"Sets the current font in the specified size, using a font handle returned by PDF_load_font(). Returns TRUE on success or FALSE on failure.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-setfont","name":"PDF_setfont","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$font","beh":0,"desc":""},{"type":"float","var":"$fontsize","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_setgray":{"desc":"Set color to gray [deprecated]","long_desc":"Sets the current fill and stroke color to a gray value between 0 and 1 inclusive. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 4, use PDF_setcolor() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-setgray","name":"PDF_setgray","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$g","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_setgray_fill":{"desc":"Set fill color to gray [deprecated]","long_desc":"Sets the current fill color to a gray value between 0 and 1 inclusive. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 4, use PDF_setcolor() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-setgray-fill","name":"PDF_setgray_fill","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$g","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_setgray_stroke":{"desc":"Set stroke color to gray [deprecated]","long_desc":"Sets the current stroke color to a gray value between 0 and 1 inclusive. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 4, use PDF_setcolor() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-setgray-stroke","name":"PDF_setgray_stroke","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$g","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_setlinecap":{"desc":"Set linecap parameter","long_desc":"Sets the linecap parameter to control the shape at the end of a path with respect to stroking.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-setlinecap","name":"PDF_setlinecap","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"int","var":"$linecap","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_setlinejoin":{"desc":"Set linejoin parameter","long_desc":"Sets the linejoin parameter to specify the shape at the corners of paths that are stroked. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-setlinejoin","name":"PDF_setlinejoin","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"int","var":"$value","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_setlinewidth":{"desc":"Set line width","long_desc":"Sets the current line width. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-setlinewidth","name":"PDF_setlinewidth","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$width","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_setmatrix":{"desc":"Set current transformation matrix","long_desc":"Explicitly sets the current transformation matrix. Returns TRUE on success or FALSE on failure.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-setmatrix","name":"PDF_setmatrix","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$a","beh":0,"desc":""},{"type":"float","var":"$b","beh":1,"desc":""},{"type":"float","var":"$c","beh":1,"desc":""},{"type":"float","var":"$d","beh":1,"desc":""},{"type":"float","var":"$e","beh":1,"desc":""},{"type":"float","var":"$f","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_setmiterlimit":{"desc":"Set miter limit","long_desc":"Sets the miter limit.Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-setmiterlimit","name":"PDF_setmiterlimit","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"float","var":"$miter","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_setpolydash":{"desc":"Set complicated dash pattern [deprecated]","long_desc":"This function is deprecated since PDFlib version 5, use PDF_setdashpattern() instead.","ver":"PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0","url":"function.pdf-setpolydash","name":"PDF_setpolydash","params":[]},"PDF_setrgbcolor":{"desc":"Set fill and stroke rgb color values [deprecated]","long_desc":"Sets the current fill and stroke color to the supplied RGB values. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 4, use PDF_setcolor() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-setrgbcolor","name":"PDF_setrgbcolor","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$red","beh":0,"desc":""},{"type":"float","var":"$green","beh":1,"desc":""},{"type":"float","var":"$blue","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_setrgbcolor_fill":{"desc":"Set fill rgb color values [deprecated]","long_desc":"Sets the current fill color to the supplied RGB values. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 4, use PDF_setcolor() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-setrgbcolor-fill","name":"PDF_setrgbcolor_fill","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$red","beh":0,"desc":""},{"type":"float","var":"$green","beh":1,"desc":""},{"type":"float","var":"$blue","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_setrgbcolor_stroke":{"desc":"Set stroke rgb color values [deprecated]","long_desc":"Sets the current stroke color to the supplied RGB values. Returns TRUE on success or FALSE on failure. This function is deprecated since PDFlib version 4, use PDF_setcolor() instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-setrgbcolor-stroke","name":"PDF_setrgbcolor_stroke","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$red","beh":0,"desc":""},{"type":"float","var":"$green","beh":1,"desc":""},{"type":"float","var":"$blue","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_shading":{"desc":"Define blend","long_desc":"Defines a blend from the current fill color to another color. This function requires PDF 1.4 or above.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-shading","name":"PDF_shading","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$shtype","beh":0,"desc":""},{"type":"float","var":"$x0","beh":1,"desc":""},{"type":"float","var":"$y0","beh":1,"desc":""},{"type":"float","var":"$x1","beh":1,"desc":""},{"type":"float","var":"$y1","beh":1,"desc":""},{"type":"float","var":"$c1","beh":1,"desc":""},{"type":"float","var":"$c2","beh":1,"desc":""},{"type":"float","var":"$c3","beh":1,"desc":""},{"type":"float","var":"$c4","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_shading_pattern":{"desc":"Define shading pattern","long_desc":"Defines a shading pattern using a shading object. This function requires PDF 1.4 or above.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-shading-pattern","name":"PDF_shading_pattern","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$shading","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_shfill":{"desc":"Fill area with shading","long_desc":"Fills an area with a shading, based on a shading object. This function requires PDF 1.4 or above.","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-shfill","name":"PDF_shfill","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"int","var":"$shading","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_show":{"desc":"Output text at current position","long_desc":"Prints text in the current font and size at the current position. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-show","name":"PDF_show","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$text","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_show_boxed":{"desc":"Output text in a box [deprecated]","long_desc":"This function is deprecated since PDFlib version 6, use PDF_fit_textline() for single lines, or the PDF_*_textflow() functions for multi-line formatting instead.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-show-boxed","name":"PDF_show_boxed","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$text","beh":0,"desc":""},{"type":"float","var":"$left","beh":1,"desc":""},{"type":"float","var":"$top","beh":1,"desc":""},{"type":"float","var":"$width","beh":1,"desc":""},{"type":"float","var":"$height","beh":1,"desc":""},{"type":"string","var":"$mode","beh":1,"desc":""},{"type":"string","var":"$feature","beh":1,"desc":""}],"ret_type":"int"}]},"PDF_show_xy":{"desc":"Output text at given position","long_desc":"Prints text in the current font. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-show-xy","name":"PDF_show_xy","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$text","beh":0,"desc":""},{"type":"float","var":"$x","beh":1,"desc":""},{"type":"float","var":"$y","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_skew":{"desc":"Skew the coordinate system","long_desc":"Skews the coordinate system in x and y direction by alpha and beta degrees. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-skew","name":"PDF_skew","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$alpha","beh":0,"desc":""},{"type":"float","var":"$beta","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_stringwidth":{"desc":"Return width of text","long_desc":"Returns the width of text in an arbitrary font.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-stringwidth","name":"PDF_stringwidth","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"string","var":"$text","beh":0,"desc":""},{"type":"int","var":"$font","beh":1,"desc":""},{"type":"float","var":"$fontsize","beh":1,"desc":""}],"ret_type":"float"}]},"PDF_stroke":{"desc":"Stroke path","long_desc":"Strokes the path with the current color and line width, and clear it. Returns TRUE on success or FALSE on failure.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-stroke","name":"PDF_stroke","params":[{"list":[],"ret_type":"bool"}]},"PDF_suspend_page":{"desc":"Suspend page","long_desc":"Suspends the current page so that it can later be resumed with PDF_resume_page().","ver":"PECL pdflib >= 2.0.0","url":"function.pdf-suspend-page","name":"PDF_suspend_page","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$optlist","beh":0,"desc":""}],"ret_type":"bool"}]},"PDF_translate":{"desc":"Set origin of coordinate system","long_desc":"Translates the origin of the coordinate system.","ver":"PHP 4, PECL pdflib >= 1.0.0","url":"function.pdf-translate","name":"PDF_translate","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":""},{"type":"float","var":"$tx","beh":0,"desc":""},{"type":"float","var":"$ty","beh":1,"desc":""}],"ret_type":"bool"}]},"PDF_utf16_to_utf8":{"desc":"Convert string from UTF-16 to UTF-8","long_desc":"Converts a string from UTF-16 format to UTF-8.","ver":"PECL pdflib >= 2.0.3","url":"function.pdf-utf16-to-utf8","name":"PDF_utf16_to_utf8","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$utf16string","beh":0,"desc":""}],"ret_type":"string"}]},"PDF_utf32_to_utf16":{"desc":"Convert string from UTF-32 to UTF-16","long_desc":"Converts a string from UTF-32 format to UTF-16.","ver":"PECL pdflib >= Unknown future","url":"function.pdf-utf32-to-utf16","name":"PDF_utf32_to_utf16","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$utf32string","beh":0,"desc":""},{"type":"string","var":"$ordering","beh":1,"desc":""}],"ret_type":"string"}]},"PDF_utf8_to_utf16":{"desc":"Convert string from UTF-8 to UTF-16","long_desc":"Converts a string from UTF-8 format to UTF-16.","ver":"PECL pdflib >= 2.0.3","url":"function.pdf-utf8-to-utf16","name":"PDF_utf8_to_utf16","params":[{"list":[{"type":"resource","var":"$pdfdoc","beh":0,"desc":""},{"type":"string","var":"$utf8string","beh":0,"desc":""},{"type":"string","var":"$ordering","beh":1,"desc":""}],"ret_type":"string"}]},"Predefined Constants":{"url":"sqlite3.constants","name":"Predefined Constants","params":[]},"Quick start guide":{"url":"mysqli.quickstart","name":"Quick start guide","params":[]},"RecursiveIterator::getChildren":{"desc":"Returns an iterator for the current entry.","long_desc":"Returns an iterator for the current iterator entry.","ver":"PHP 5 >= 5.1.0","ret_desc":"An iterator for the current entry.","seealso":[],"url":"recursiveiterator.getchildren","name":"getChildren","class":"RecursiveIterator","params":[{"list":[],"ret_type":"RecursiveIterator"}]},"RecursiveIterator::hasChildren":{"desc":"Returns if an iterator can be created fot the current entry.","long_desc":"Returns if an iterator can be created fot the current entry. RecursiveIterator::getChildren().","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE if the current entry can be iterated over, otherwise returns FALSE.","seealso":[],"url":"recursiveiterator.haschildren","name":"hasChildren","class":"RecursiveIterator","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::__clone":{"desc":"Clones object","long_desc":"Clones.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"reflectionclass.clone","name":"__clone","class":"ReflectionClass","params":[{"list":[],"ret_type":"void"}]},"ReflectionClass::__construct":{"desc":"Constructs a ReflectionClass","long_desc":"Constructs a new ReflectionClass object.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"reflectionclass.construct","name":"__construct","class":"ReflectionClass","params":[{"list":[]}]},"ReflectionClass::__toString":{"desc":"Returns the string representation of the ReflectionClass object.","long_desc":"Returns the string representation of the ReflectionClass object.","ver":"PHP 5","ret_desc":"A string representation of this ReflectionClass instance.","seealso":[],"url":"reflectionclass.tostring","name":"__toString","class":"ReflectionClass","params":[{"list":[],"ret_type":"string"}]},"ReflectionClass::export":{"desc":"Exports a class","long_desc":"Exports a reflected class.","ver":"PHP 5","ret_desc":"If the return parameter is set to TRUE, then the export is returned as a string, otherwise NULL is returned.","seealso":[],"url":"reflectionclass.export","name":"export","class":"ReflectionClass","params":[{"list":[{"type":"mixed","var":"$argument","beh":0,"desc":"The reflection to export."},{"type":"bool","var":"$return","beh":0,"desc":"Setting to TRUE will return the export, as opposed to emitting it. Setting to FALSE (the default) will do the opposite.","def":"false"}],"ret_type":"string"}]},"ReflectionClass::getConstant":{"desc":"Gets defined constant","long_desc":"Gets the defined constant.","ver":"PHP 5","ret_desc":"Value of the constant.","seealso":[],"url":"reflectionclass.getconstant","name":"getConstant","class":"ReflectionClass","params":[{"list":[],"ret_type":"mixed"}]},"ReflectionClass::getConstants":{"desc":"Gets constants","long_desc":"Gets defined constants from a class.","ver":"PHP 5","ret_desc":"An array of constants. Constant name in key, constant value in value.","seealso":[],"url":"reflectionclass.getconstants","name":"getConstants","class":"ReflectionClass","params":[{"list":[],"ret_type":"array"}]},"ReflectionClass::getConstructor":{"desc":"Gets constructor","long_desc":"Gets the constructor from a class.","ver":"PHP 5","ret_desc":"A ReflectionMethod object.","seealso":[],"url":"reflectionclass.getconstructor","name":"getConstructor","class":"ReflectionClass","params":[{"list":[],"ret_type":"object"}]},"ReflectionClass::getDefaultProperties":{"desc":"Gets default properties","long_desc":"Gets default properties from a class (including inherited properties).","ver":"PHP 5","ret_desc":"An array of default properties, with the key being the name of the property and the value being the default value of the property or NULL if the property doesn't have a default value. The function does not distinguish between static and non static properties and does not take visibility modifiers into account.","seealso":[],"url":"reflectionclass.getdefaultproperties","name":"getDefaultProperties","class":"ReflectionClass","params":[{"list":[],"ret_type":"array"}]},"ReflectionClass::getDocComment":{"desc":"Gets doc comments","long_desc":"Gets doc comments from a class.","ver":"PHP 5 >= 5.1.0","ret_desc":"The doc comment if it exists, otherwise FALSE","seealso":[],"url":"reflectionclass.getdoccomment","name":"getDocComment","class":"ReflectionClass","params":[{"list":[],"ret_type":"string"}]},"ReflectionClass::getEndLine":{"desc":"Gets end line","long_desc":"Gets end line number from a user-defined class definition.","ver":"PHP 5","ret_desc":"The ending line number of the user defined class, or FALSE if unknown.","seealso":[],"url":"reflectionclass.getendline","name":"getEndLine","class":"ReflectionClass","params":[{"list":[],"ret_type":"int"}]},"ReflectionClass::getExtension":{"desc":"Gets extension info","long_desc":"Gets an extensions ReflectionExtension object.","ver":"PHP 5","ret_desc":"A ReflectionExtension object.","seealso":[],"url":"reflectionclass.getextension","name":"getExtension","class":"ReflectionClass","params":[{"list":[],"ret_type":"ReflectionExtension"}]},"ReflectionClass::getExtensionName":{"desc":"Gets an extensions name","long_desc":"Gets an extensions name.","ver":"PHP 5","ret_desc":"The extensions name.","seealso":[],"url":"reflectionclass.getextensionname","name":"getExtensionName","class":"ReflectionClass","params":[{"list":[],"ret_type":"string"}]},"ReflectionClass::getFileName":{"desc":"Gets the filename of the file in which the class has been defined","long_desc":"Gets the filename of the file in which the class has been defined.","ver":"PHP 5","ret_desc":"Returns the filename of the file in which the class has been defined. If the class is defined in the PHP core or in a PHP extension, FALSE is returned.","seealso":[],"url":"reflectionclass.getfilename","name":"getFileName","class":"ReflectionClass","params":[{"list":[],"ret_type":"string"}]},"ReflectionClass::getInterfaceNames":{"desc":"Gets the interface names","long_desc":"Get the interface names.","ver":"PHP 5 >= 5.2.0","ret_desc":"A numerical array with interface names as the values.","seealso":[],"url":"reflectionclass.getinterfacenames","name":"getInterfaceNames","class":"ReflectionClass","params":[{"list":[],"ret_type":"array"}]},"ReflectionClass::getInterfaces":{"desc":"Gets the interfaces","long_desc":"Gets the interfaces.","ver":"PHP 5","ret_desc":"An associative array of interfaces, with keys as interface names and the array values as ReflectionClass objects.","seealso":[],"url":"reflectionclass.getinterfaces","name":"getInterfaces","class":"ReflectionClass","params":[{"list":[],"ret_type":"array"}]},"ReflectionClass::getMethod":{"desc":"Gets a ReflectionMethod","long_desc":"Gets a ReflectionMethod about a method.","ver":"PHP 5","ret_desc":"A ReflectionMethod.","seealso":[],"url":"reflectionclass.getmethod","name":"getMethod","class":"ReflectionClass","params":[{"list":[],"ret_type":"ReflectionMethod"}]},"ReflectionClass::getMethods":{"desc":"Gets a list of methods","long_desc":"Gets a list of methods.","ver":"PHP 5","ret_desc":"An array of methods.","seealso":[],"url":"reflectionclass.getmethods","name":"getMethods","class":"ReflectionClass","params":[{"list":[],"ret_type":"array"}]},"ReflectionClass::getModifiers":{"desc":"Gets modifiers","long_desc":"Returns a bitfield of the access modifiers for this class.","ver":"PHP 5","ret_desc":"Returns bitmask of modifier constants.","seealso":[],"url":"reflectionclass.getmodifiers","name":"getModifiers","class":"ReflectionClass","params":[{"list":[],"ret_type":"int"}]},"ReflectionClass::getName":{"desc":"Gets class name","long_desc":"Gets the class name.","ver":"PHP 5","ret_desc":"The class name.","seealso":[],"url":"reflectionclass.getname","name":"getName","class":"ReflectionClass","params":[{"list":[],"ret_type":"string"}]},"ReflectionClass::getNamespaceName":{"desc":"Gets namespace name","long_desc":"Gets the namespace name.","ver":"PHP 5 >= 5.3.0","ret_desc":"The namespace name.","seealso":[],"url":"reflectionclass.getnamespacename","name":"getNamespaceName","class":"ReflectionClass","params":[{"list":[],"ret_type":"string"}]},"ReflectionClass::getParentClass":{"desc":"Gets parent class","long_desc":"","ver":"PHP 5","ret_desc":"A ReflectionClass.","seealso":[],"url":"reflectionclass.getparentclass","name":"getParentClass","class":"ReflectionClass","params":[{"list":[],"ret_type":"object"}]},"ReflectionClass::getProperties":{"desc":"Gets properties","long_desc":"Retrieves reflected properties.","ver":"PHP 5","ret_desc":"An array of ReflectionProperty objects.","seealso":[],"url":"reflectionclass.getproperties","name":"getProperties","class":"ReflectionClass","params":[{"list":[],"ret_type":"array"}]},"ReflectionClass::getProperty":{"desc":"Gets property","long_desc":"Gets a property.","ver":"PHP 5","ret_desc":"A ReflectionProperty.","seealso":[],"url":"reflectionclass.getproperty","name":"getProperty","class":"ReflectionClass","params":[{"list":[],"ret_type":"ReflectionProperty"}]},"ReflectionClass::getShortName":{"desc":"Gets short name","long_desc":"Gets the short name of the class, the part without the namespace.","ver":"PHP 5 >= 5.3.0","ret_desc":"The class short name.","seealso":[],"url":"reflectionclass.getshortname","name":"getShortName","class":"ReflectionClass","params":[{"list":[],"ret_type":"string"}]},"ReflectionClass::getStartLine":{"desc":"Gets starting line number","long_desc":"Get the starting line number.","ver":"PHP 5","ret_desc":"The starting line number, as an integer.","seealso":[],"url":"reflectionclass.getstartline","name":"getStartLine","class":"ReflectionClass","params":[{"list":[],"ret_type":"int"}]},"ReflectionClass::getStaticProperties":{"desc":"Gets static properties","long_desc":"Get the static properties.","ver":"PHP 5","ret_desc":"The static properties, as an array.","seealso":[],"url":"reflectionclass.getstaticproperties","name":"getStaticProperties","class":"ReflectionClass","params":[{"list":[],"ret_type":"array"}]},"ReflectionClass::getStaticPropertyValue":{"desc":"Gets static property value","long_desc":"Gets the static property values.","ver":"PHP 5 >= 5.1.0","ret_desc":"","seealso":[],"url":"reflectionclass.getstaticpropertyvalue","name":"getStaticPropertyValue","class":"ReflectionClass","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":""},{"type":"string","var":"$default","beh":1,"desc":""}],"ret_type":"mixed"}]},"ReflectionClass::getTraitAliases":{"desc":"Returns an array of trait aliases","long_desc":"","ver":"PHP >= 5.4.0","ret_desc":"Returns an array with new method names in keys and original names (in the format \"TraitName::original\") in values. Returns NULL in case of an error.","url":"reflectionclass.gettraitaliases","name":"getTraitAliases","class":"ReflectionClass","params":[{"list":[],"ret_type":"array"}]},"ReflectionClass::getTraitNames":{"desc":"Returns an array of names of traits used by this class","long_desc":"","ver":"PHP >= 5.4.0","ret_desc":"Returns an array with trait names in values. Returns NULL in case of an error.","url":"reflectionclass.gettraitnames","name":"getTraitNames","class":"ReflectionClass","params":[{"list":[],"ret_type":"array"}]},"ReflectionClass::getTraits":{"desc":"Returns an array of traits used by this class","long_desc":"","ver":"PHP >= 5.4.0","ret_desc":"Returns an array with trait names in keys and instances of trait's ReflectionClass in values. Returns NULL in case of an error.","url":"reflectionclass.gettraits","name":"getTraits","class":"ReflectionClass","params":[{"list":[],"ret_type":"array"}]},"ReflectionClass::hasConstant":{"desc":"Checks if constant is defined","long_desc":"Checks whether the class has a specific constant defined or not.","ver":"PHP 5 >= 5.1.0","ret_desc":"TRUE if the constant is defined, otherwise FALSE.","seealso":[],"url":"reflectionclass.hasconstant","name":"hasConstant","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::hasMethod":{"desc":"Checks if method is defined","long_desc":"Checks whether a specific method is defined in a class.","ver":"PHP 5 >= 5.1.0","ret_desc":"TRUE if it has the method, otherwise FALSE","seealso":[],"url":"reflectionclass.hasmethod","name":"hasMethod","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::hasProperty":{"desc":"Checks if property is defined","long_desc":"Checks whether the specified property is defined.","ver":"PHP 5 >= 5.1.0","ret_desc":"TRUE if it has the property, otherwise FALSE","seealso":[],"url":"reflectionclass.hasproperty","name":"hasProperty","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::implementsInterface":{"desc":"Implements interface","long_desc":"Checks whether it implements an interface.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"reflectionclass.implementsinterface","name":"implementsInterface","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::inNamespace":{"desc":"Checks if in namespace","long_desc":"Checks if this class is defined in a namespace.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"reflectionclass.innamespace","name":"inNamespace","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::isAbstract":{"desc":"Checks if class is abstract","long_desc":"Checks if the class is abstract.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"reflectionclass.isabstract","name":"isAbstract","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::isCloneable":{"desc":"Returns whether this class is cloneable","long_desc":"","ver":"PHP >= 5.4.0","ret_desc":"Returns TRUE if the class is cloneable, FALSE otherwise.","url":"reflectionclass.iscloneable","name":"isCloneable","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::isFinal":{"desc":"Checks if class is final","long_desc":"Checks if a class is final.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"reflectionclass.isfinal","name":"isFinal","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::isInstance":{"desc":"Checks class for instance","long_desc":"Checks if an object is an instance of a class.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"reflectionclass.isinstance","name":"isInstance","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::isInstantiable":{"desc":"Checks if instantiable","long_desc":"Checks if the class is instanciable.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"reflectionclass.isinstantiable","name":"isInstantiable","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::isInterface":{"desc":"Checks if interface","long_desc":"Checks whether the class is an interface.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"reflectionclass.isinterface","name":"isInterface","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::isInternal":{"desc":"Checks if internal","long_desc":"Checks whether the class is internal, as opposed to user-defined.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"reflectionclass.isinternal","name":"isInternal","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::isIterateable":{"desc":"Checks if iterateable","long_desc":"Checks whether the class is iterateable.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"reflectionclass.isiterateable","name":"isIterateable","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::isSubclassOf":{"desc":"Checks if a subclass","long_desc":"Checks if the class is a subclass of a specified class.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"reflectionclass.issubclassof","name":"isSubclassOf","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::isTrait":{"desc":"Returns whether this is a trait","long_desc":"","ver":"PHP >= 5.4.0","ret_desc":"Returns TRUE if this is a trait, FALSE otherwise. Returns NULL in case of an error.","url":"reflectionclass.istrait","name":"isTrait","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::isUserDefined":{"desc":"Checks if user defined","long_desc":"Checks whether the class is user-defined, as opposed to internal.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"reflectionclass.isuserdefined","name":"isUserDefined","class":"ReflectionClass","params":[{"list":[],"ret_type":"bool"}]},"ReflectionClass::newInstance":{"desc":"Creates a new class instance from given arguments.","long_desc":"Creates a new instance of the class. The given arguments are passed to the class constructor.","ver":"PHP 5","ret_desc":"","seealso":[],"url":"reflectionclass.newinstance","name":"newInstance","class":"ReflectionClass","params":[{"list":[{"type":"mixed","var":"$args","beh":0,"desc":"Accepts a variable number of arguments which are passed to the class constructor, much like call_user_func()."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"object"}]},"ReflectionClass::newInstanceArgs":{"desc":"Creates a new class instance from given arguments.","long_desc":"Creates a new instance of the class, the given arguments are passed to the class constructor.","ver":"PHP 5 >= 5.1.3","ret_desc":"Returns a new instance of the class.","seealso":[],"url":"reflectionclass.newinstanceargs","name":"newInstanceArgs","class":"ReflectionClass","params":[{"list":[],"ret_type":"object"}]},"ReflectionClass::newInstanceWithoutConstructor":{"desc":"Creates a new class instance without invoking the constructor.","long_desc":"Creates a new instance of the class without invoking the constructor.","ver":"PHP >= 5.4.0","ret_desc":"","seealso":[],"url":"reflectionclass.newinstancewithoutconstructor","name":"newInstanceWithoutConstructor","class":"ReflectionClass","params":[{"list":[],"ret_type":"object"}]},"ReflectionClass::setStaticPropertyValue":{"desc":"Sets static property value","long_desc":"Sets static property value.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"reflectionclass.setstaticpropertyvalue","name":"setStaticPropertyValue","class":"ReflectionClass","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"Property name."},{"type":"string","var":"$value","beh":0,"desc":"New property value."}],"ret_type":"void"}]},"ReflectionExtension::__clone":{"desc":"Clones","long_desc":"The clone method prevents an object from being cloned. Reflection objects cannot be cloned.","ver":"PHP 5","ret_desc":"No value is returned, if called a fatal error will occur.","seealso":[],"url":"reflectionextension.clone","name":"__clone","class":"ReflectionExtension","params":[{"list":[],"ret_type":"void"}]},"ReflectionExtension::__construct":{"desc":"Constructs a ReflectionExtension","long_desc":"Construct a ReflectionExtension object.","ver":"PHP 5","ret_desc":"A ReflectionExtension object.","seealso":[],"url":"reflectionextension.construct","name":"__construct","class":"ReflectionExtension","params":[{"list":[]}]},"ReflectionExtension::__toString":{"desc":"To string","long_desc":"Exports a reflected extension and returns it as a string. This is the same as the ReflectionExtension::export() with the return set to TRUE.","ver":"PHP 5","ret_desc":"Returns the exported extension as a string, in the same way as the ReflectionExtension::export().","seealso":[],"url":"reflectionextension.tostring","name":"__toString","class":"ReflectionExtension","params":[{"list":[],"ret_type":"string"}]},"ReflectionExtension::export":{"desc":"Export","long_desc":"Exports a reflected extension. The output format of this function is the same as the CLI argument --re [extension].","ver":"PHP 5","ret_desc":"If the return parameter is set to TRUE, then the export is returned as a string, otherwise NULL is returned.","seealso":[],"url":"reflectionextension.export","name":"export","class":"ReflectionExtension","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"The reflection to export."},{"type":"string","var":"$return","beh":0,"desc":"Setting to TRUE will return the export, as opposed to emitting it. Setting to FALSE (the default) will do the opposite.","def":"false"}],"ret_type":"string"}]},"ReflectionExtension::getClassNames":{"desc":"Gets class names","long_desc":"Gets a listing of class names as defined in the extension.","ver":"PHP 5","ret_desc":"An array of class names, as defined in the extension. If no classes are defined, an empty array is returned.","seealso":[],"url":"reflectionextension.getclassnames","name":"getClassNames","class":"ReflectionExtension","params":[{"list":[],"ret_type":"array"}]},"ReflectionExtension::getClasses":{"desc":"Gets classes","long_desc":"Gets a list of classes from an extension.","ver":"PHP 5","ret_desc":"An array of ReflectionClass objects, one for each class within the extension. If no classes are defined, an empty array is returned.","seealso":[],"url":"reflectionextension.getclasses","name":"getClasses","class":"ReflectionExtension","params":[{"list":[],"ret_type":"array"}]},"ReflectionExtension::getConstants":{"desc":"Gets constants","long_desc":"Get defined constants from an extension.","ver":"PHP 5","ret_desc":"An associative array with constant names as keys.","seealso":[],"url":"reflectionextension.getconstants","name":"getConstants","class":"ReflectionExtension","params":[{"list":[],"ret_type":"array"}]},"ReflectionExtension::getDependencies":{"desc":"Gets dependencies","long_desc":"Gets dependencies, by listing both required and conflicting dependencies.","ver":"PHP 5","ret_desc":"An associative array with dependencies as keys and either Required, Optional or Conflicts as the values.","seealso":[],"url":"reflectionextension.getdependencies","name":"getDependencies","class":"ReflectionExtension","params":[{"list":[],"ret_type":"array"}]},"ReflectionExtension::getFunctions":{"desc":"Gets extension functions","long_desc":"Get defined functions from an extension.","ver":"PHP 5","ret_desc":"An associative array of ReflectionFunction objects, for each function defined in the extension with the keys being the function names. If no function are defined, an empty array is returned.","seealso":[],"url":"reflectionextension.getfunctions","name":"getFunctions","class":"ReflectionExtension","params":[{"list":[],"ret_type":"array"}]},"ReflectionExtension::getINIEntries":{"desc":"Gets extension ini entries","long_desc":"Get the ini entries for an extension.","ver":"PHP 5","ret_desc":"An associative array with the ini entries as keys, with their defined values as values.","seealso":[],"url":"reflectionextension.getinientries","name":"getINIEntries","class":"ReflectionExtension","params":[{"list":[],"ret_type":"array"}]},"ReflectionExtension::getName":{"desc":"Gets extension name","long_desc":"Gets the extensions name.","ver":"PHP 5","ret_desc":"The extensions name.","seealso":[],"url":"reflectionextension.getname","name":"getName","class":"ReflectionExtension","params":[{"list":[],"ret_type":"string"}]},"ReflectionExtension::getVersion":{"desc":"Gets extension version","long_desc":"Gets the version of the extension.","ver":"PHP 5","ret_desc":"The version of the extension.","seealso":[],"url":"reflectionextension.getversion","name":"getVersion","class":"ReflectionExtension","params":[{"list":[],"ret_type":"string"}]},"ReflectionExtension::info":{"desc":"Print extension info","long_desc":"Prints out the \"phpinfo()\" snippet for the given extension.","ver":"PHP 5","ret_desc":"Information about the extension.","seealso":[],"url":"reflectionextension.info","name":"info","class":"ReflectionExtension","params":[{"list":[],"ret_type":"void"}]},"ReflectionExtension::isPersistent":{"desc":"Returns whether this extension is persistent","long_desc":"","ver":"PHP >= 5.4.0","ret_desc":"Returns TRUE for extensions loaded by extension, FALSE otherwise.","seealso":[],"url":"reflectionextension.ispersistent","name":"isPersistent","class":"ReflectionExtension","params":[{"list":[],"ret_type":"void"}]},"ReflectionExtension::isTemporary":{"desc":"Returns whether this extension is temporary","long_desc":"","ver":"PHP >= 5.4.0","ret_desc":"Returns TRUE for extensions loaded by dl(), FALSE otherwise.","seealso":[],"url":"reflectionextension.istemporary","name":"isTemporary","class":"ReflectionExtension","params":[{"list":[],"ret_type":"void"}]},"ReflectionFunction::__construct":{"desc":"Constructs a ReflectionFunction object","long_desc":"Constructs a ReflectionFunction object.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"reflectionfunction.construct","name":"__construct","class":"ReflectionFunction","params":[{"list":[]}]},"ReflectionFunction::__toString":{"desc":"To string","long_desc":"To string.","ver":"PHP 5","ret_desc":"Returns ReflectionFunction::export()-like output for the function.","seealso":[],"url":"reflectionfunction.tostring","name":"__toString","class":"ReflectionFunction","params":[{"list":[],"ret_type":"string"}]},"ReflectionFunction::export":{"desc":"Exports function","long_desc":"Exports a Reflected function.","ver":"PHP 5","ret_desc":"If the return parameter is set to TRUE, then the export is returned as a string, otherwise NULL is returned.","seealso":[],"url":"reflectionfunction.export","name":"export","class":"ReflectionFunction","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"The reflection to export."},{"type":"string","var":"$return","beh":1,"desc":"Setting to TRUE will return the export, as opposed to emitting it. Setting to FALSE (the default) will do the opposite."}],"ret_type":"string"}]},"ReflectionFunction::getClosure":{"desc":"Returns a dynamically created closure for the function","long_desc":"","ver":"No version information available, might only be in SVN","ret_desc":"Returns Closure. Returns NULL in case of an error.","url":"reflectionfunction.getclosure","name":"getClosure","class":"ReflectionFunction","params":[{"list":[],"ret_type":"Closure"}]},"ReflectionFunction::invoke":{"desc":"Invokes function","long_desc":"Invokes a reflected function.","ver":"PHP 5","ret_desc":"Returns the result of the invoked function call.","seealso":[],"url":"reflectionfunction.invoke","name":"invoke","class":"ReflectionFunction","params":[{"list":[{"type":"mixed","var":"$parameter","beh":1,"desc":"The passed in argument list. It accepts a variable number of arguments which are passed to the function much like call_user_func() is."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"mixed"}]},"ReflectionFunction::invokeArgs":{"desc":"Invokes function args","long_desc":"Invokes the function and pass its arguments as array.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the result of the invoked function","seealso":[],"url":"reflectionfunction.invokeargs","name":"invokeArgs","class":"ReflectionFunction","params":[{"list":[],"ret_type":"mixed"}]},"ReflectionFunction::isDisabled":{"desc":"Checks if function is disabled","long_desc":"Checks if the function is disabled, via the disable_functions directive.","ver":"PHP 5","ret_desc":"TRUE if it's disable, otherwise FALSE","seealso":[],"url":"reflectionfunction.isdisabled","name":"isDisabled","class":"ReflectionFunction","params":[{"list":[],"ret_type":"bool"}]},"ReflectionFunctionAbstract::__clone":{"desc":"Clones function","long_desc":"Clones a function.","ver":"PHP 5","ret_desc":"","seealso":[],"url":"reflectionfunctionabstract.clone","name":"__clone","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"void"}]},"ReflectionFunctionAbstract::__toString":{"desc":"To string","long_desc":"To string.","ver":"PHP 5","ret_desc":"The string.","seealso":[],"url":"reflectionfunctionabstract.tostring","name":"__toString","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"void"}]},"ReflectionFunctionAbstract::getClosureThis":{"desc":"Returns this pointer bound to closure","long_desc":"","ver":"No version information available, might only be in SVN","ret_desc":"Returns $this pointer. Returns NULL in case of an error.","url":"reflectionfunctionabstract.getclosurethis","name":"getClosureThis","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"object"}]},"ReflectionFunctionAbstract::getDocComment":{"desc":"Gets doc comment","long_desc":"Get a Doc comment from a function.","ver":"PHP 5 >= 5.1.0","ret_desc":"The doc comment if it exists, otherwise FALSE","seealso":[],"url":"reflectionfunctionabstract.getdoccomment","name":"getDocComment","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"string"}]},"ReflectionFunctionAbstract::getEndLine":{"desc":"Gets end line number","long_desc":"Get the ending line number.","ver":"PHP 5","ret_desc":"The ending line number of the user defined function, or FALSE if unknown.","seealso":[],"url":"reflectionfunctionabstract.getendline","name":"getEndLine","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"int"}]},"ReflectionFunctionAbstract::getExtension":{"desc":"Gets extension info","long_desc":"Get the extension information of a function.","ver":"PHP 5","ret_desc":"The extension information, as a ReflectionExtension object.","seealso":[],"url":"reflectionfunctionabstract.getextension","name":"getExtension","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"ReflectionExtension"}]},"ReflectionFunctionAbstract::getExtensionName":{"desc":"Gets extension name","long_desc":"Get the extensions name.","ver":"PHP 5","ret_desc":"The extensions name.","seealso":[],"url":"reflectionfunctionabstract.getextensionname","name":"getExtensionName","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"string"}]},"ReflectionFunctionAbstract::getFileName":{"desc":"Gets file name","long_desc":"Gets the file name from a user-defined function.","ver":"PHP 5","ret_desc":"The file name.","seealso":[],"url":"reflectionfunctionabstract.getfilename","name":"getFileName","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"string"}]},"ReflectionFunctionAbstract::getName":{"desc":"Gets function name","long_desc":"Get the name of the function.","ver":"PHP 5","ret_desc":"The name of the function.","seealso":[],"url":"reflectionfunctionabstract.getname","name":"getName","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"string"}]},"ReflectionFunctionAbstract::getNamespaceName":{"desc":"Gets namespace name","long_desc":"Get the namespace name where the class is defined.","ver":"PHP 5 >= 5.3.0","ret_desc":"The namespace name.","seealso":[],"url":"reflectionfunctionabstract.getnamespacename","name":"getNamespaceName","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"string"}]},"ReflectionFunctionAbstract::getNumberOfParameters":{"desc":"Gets number of parameters","long_desc":"Get the number of parameters that a function defines, both optional and required.","ver":"PHP 5 >= 5.0.3","ret_desc":"The number of parameters.","seealso":[],"url":"reflectionfunctionabstract.getnumberofparameters","name":"getNumberOfParameters","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"int"}]},"ReflectionFunctionAbstract::getNumberOfRequiredParameters":{"desc":"Gets number of required parameters","long_desc":"Get the number of required parameters that a function defines.","ver":"PHP 5 >= 5.0.3","ret_desc":"The number of required parameters.","seealso":[],"url":"reflectionfunctionabstract.getnumberofrequiredparameters","name":"getNumberOfRequiredParameters","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"int"}]},"ReflectionFunctionAbstract::getParameters":{"desc":"Gets parameters","long_desc":"Get the parameters as an array of ReflectionParameter.","ver":"PHP 5","ret_desc":"The parameters, as a ReflectionParameter object.","seealso":[],"url":"reflectionfunctionabstract.getparameters","name":"getParameters","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"array"}]},"ReflectionFunctionAbstract::getShortName":{"desc":"Gets function short name","long_desc":"Get the short name of the function (without the namespace part).","ver":"PHP 5 >= 5.3.0","ret_desc":"The short name of the function.","seealso":[],"url":"reflectionfunctionabstract.getshortname","name":"getShortName","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"string"}]},"ReflectionFunctionAbstract::getStartLine":{"desc":"Gets starting line number","long_desc":"Gets the starting line number of the function.","ver":"PHP 5","ret_desc":"The starting line number.","seealso":[],"url":"reflectionfunctionabstract.getstartline","name":"getStartLine","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"int"}]},"ReflectionFunctionAbstract::getStaticVariables":{"desc":"Gets static variables","long_desc":"Get the static variables.","ver":"PHP 5","ret_desc":"An array of static variables.","seealso":[],"url":"reflectionfunctionabstract.getstaticvariables","name":"getStaticVariables","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"array"}]},"ReflectionFunctionAbstract::inNamespace":{"desc":"Checks if function in namespace","long_desc":"Checks whether a function is defined in a namespace.","ver":"PHP 5 >= 5.3.0","ret_desc":"TRUE if it's in a namespace, otherwise FALSE","seealso":[],"url":"reflectionfunctionabstract.innamespace","name":"inNamespace","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"bool"}]},"ReflectionFunctionAbstract::isClosure":{"desc":"Checks if closure","long_desc":"Checks whether it's a closure.","ver":"PHP 5 >= 5.3.0","ret_desc":"TRUE if it's a closure, otherwise FALSE","seealso":[],"url":"reflectionfunctionabstract.isclosure","name":"isClosure","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"bool"}]},"ReflectionFunctionAbstract::isDeprecated":{"desc":"Checks if deprecated","long_desc":"Checks whether the function is deprecated.","ver":"PHP 5","ret_desc":"TRUE if it's deprecated, otherwise FALSE","seealso":[],"url":"reflectionfunctionabstract.isdeprecated","name":"isDeprecated","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"bool"}]},"ReflectionFunctionAbstract::isInternal":{"desc":"Checks if is internal","long_desc":"Checks whether the function is internal, as opposed to user-defined.","ver":"PHP 5","ret_desc":"TRUE if it's internal, otherwise FALSE","seealso":[],"url":"reflectionfunctionabstract.isinternal","name":"isInternal","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"bool"}]},"ReflectionFunctionAbstract::isUserDefined":{"desc":"Checks if user defined","long_desc":"Checks whether the function is user-defined, as opposed to internal.","ver":"PHP 5","ret_desc":"TRUE if it's user-defined, otherwise false;","seealso":[],"url":"reflectionfunctionabstract.isuserdefined","name":"isUserDefined","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"bool"}]},"ReflectionFunctionAbstract::returnsReference":{"desc":"Checks if returns reference","long_desc":"Checks whether the function returns a reference.","ver":"PHP 5","ret_desc":"TRUE if it returns a reference, otherwise FALSE","seealso":[],"url":"reflectionfunctionabstract.returnsreference","name":"returnsReference","class":"ReflectionFunctionAbstract","params":[{"list":[],"ret_type":"bool"}]},"ReflectionMethod::__construct":{"desc":"Constructs a ReflectionMethod","long_desc":"Constructs a new ReflectionMethod.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"reflectionmethod.construct","name":"__construct","class":"ReflectionMethod","params":[{"list":[{"type":"mixed","var":"$class","beh":0,"desc":"Classname or object (instance of the class) that contains the method."},{"type":"string","var":"$name","beh":0,"desc":"Name of the method."}]}]},"ReflectionMethod::__toString":{"desc":"Returns the string representation of the Reflection method object.","long_desc":"Returns the string representation of the Reflection method object.","ver":"PHP 5","ret_desc":"A string representation of this ReflectionMethod instance.","seealso":[],"url":"reflectionmethod.tostring","name":"__toString","class":"ReflectionMethod","params":[{"list":[],"ret_type":"string"}]},"ReflectionMethod::export":{"desc":"Export a reflection method.","long_desc":"Exports a ReflectionMethod.","ver":"PHP 5","ret_desc":"If the return parameter is set to TRUE, then the export is returned as a string, otherwise NULL is returned.","seealso":[],"url":"reflectionmethod.export","name":"export","class":"ReflectionMethod","params":[{"list":[{"type":"string","var":"$class","beh":0,"desc":"The class name."},{"type":"string","var":"$name","beh":1,"desc":"The name of the method."},{"type":"bool","var":"$return","beh":1,"desc":"Setting to TRUE will return the export, as opposed to emitting it. Setting to FALSE (the default) will do the opposite.","def":"false"}],"ret_type":"string"}]},"ReflectionMethod::getClosure":{"desc":"Returns a dynamically created closure for the method","long_desc":"","ver":"PHP >= 5.4.0","ret_desc":"Returns Closure. Returns NULL in case of an error.","url":"reflectionmethod.getclosure","name":"getClosure","class":"ReflectionMethod","params":[{"list":[],"ret_type":"Closure"}]},"ReflectionMethod::getDeclaringClass":{"desc":"Gets declaring class for the reflected method.","long_desc":"Gets the declaring class for the reflected method.","ver":"PHP 5","ret_desc":"A ReflectionClass object of the class that the reflected method is part of.","seealso":[],"url":"reflectionmethod.getdeclaringclass","name":"getDeclaringClass","class":"ReflectionMethod","params":[{"list":[],"ret_type":"ReflectionClass"}]},"ReflectionMethod::getModifiers":{"desc":"Gets the method modifiers","long_desc":"Returns a bitfield of the access modifiers for this method.","ver":"PHP 5","ret_desc":"A numeric representation of the modifiers. The modifiers are listed below. The actual meanings of these modifiers are described in the predefined constants.","seealso":[],"url":"reflectionmethod.getmodifiers","name":"getModifiers","class":"ReflectionMethod","params":[{"list":[],"ret_type":"int"}]},"ReflectionMethod::getPrototype":{"desc":"Gets the method prototype (if there is one).","long_desc":"Returns the methods prototype.","ver":"PHP 5","ret_desc":"A ReflectionMethod instance of the method prototype.","seealso":[],"url":"reflectionmethod.getprototype","name":"getPrototype","class":"ReflectionMethod","params":[{"list":[],"ret_type":"ReflectionMethod"}]},"ReflectionMethod::invoke":{"desc":"Invoke","long_desc":"Invokes a reflected method.","ver":"PHP 5","ret_desc":"Returns the method result.","seealso":[],"url":"reflectionmethod.invoke","name":"invoke","class":"ReflectionMethod","params":[{"list":[{"type":"object","var":"$object","beh":1,"desc":"The object to invoke the method on. For static methods, pass null to this parameter."},{"type":"mixed","var":"$parameter","beh":1,"desc":"Zero or more parameters to be passed to the method. It accepts a variable number of parameters which are passed to the method."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"mixed"}]},"ReflectionMethod::invokeArgs":{"desc":"Invoke args","long_desc":"Invokes the reflected method and pass its arguments as array.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the method result.","seealso":[],"url":"reflectionmethod.invokeargs","name":"invokeArgs","class":"ReflectionMethod","params":[{"list":[{"type":"object","var":"$object","beh":0,"desc":"The object to invoke the method on. In case of static methods, you can pass null to this parameter."},{"type":"array","var":"$args","beh":0,"desc":"The parameters to be passed to the function, as an array."}],"ret_type":"mixed"}]},"ReflectionMethod::isAbstract":{"desc":"Checks if method is abstract","long_desc":"Checks if the method is abstract.","ver":"PHP 5","ret_desc":"TRUE if the method is abstract, otherwise FALSE","seealso":[],"url":"reflectionmethod.isabstract","name":"isAbstract","class":"ReflectionMethod","params":[{"list":[],"ret_type":"bool"}]},"ReflectionMethod::isConstructor":{"desc":"Checks if method is a constructor","long_desc":"Checks if the method is a constructor.","ver":"PHP 5","ret_desc":"TRUE if the method is a constructor, otherwise FALSE","seealso":[],"url":"reflectionmethod.isconstructor","name":"isConstructor","class":"ReflectionMethod","params":[{"list":[],"ret_type":"bool"}]},"ReflectionMethod::isDestructor":{"desc":"Checks if method is a destructor","long_desc":"Checks if the method is a destructor.","ver":"PHP 5","ret_desc":"TRUE if the method is a destructor, otherwise FALSE","seealso":[],"url":"reflectionmethod.isdestructor","name":"isDestructor","class":"ReflectionMethod","params":[{"list":[],"ret_type":"bool"}]},"ReflectionMethod::isFinal":{"desc":"Checks if method is final","long_desc":"Checks if the method is final.","ver":"PHP 5","ret_desc":"TRUE if the method is final, otherwise FALSE","seealso":[],"url":"reflectionmethod.isfinal","name":"isFinal","class":"ReflectionMethod","params":[{"list":[],"ret_type":"bool"}]},"ReflectionMethod::isPrivate":{"desc":"Checks if method is private","long_desc":"Checks if the method is private.","ver":"PHP 5","ret_desc":"TRUE if the method is private, otherwise FALSE","seealso":[],"url":"reflectionmethod.isprivate","name":"isPrivate","class":"ReflectionMethod","params":[{"list":[],"ret_type":"bool"}]},"ReflectionMethod::isProtected":{"desc":"Checks if method is protected","long_desc":"Checks if the method is protected.","ver":"PHP 5","ret_desc":"TRUE if the method is protected, otherwise FALSE","seealso":[],"url":"reflectionmethod.isprotected","name":"isProtected","class":"ReflectionMethod","params":[{"list":[],"ret_type":"bool"}]},"ReflectionMethod::isPublic":{"desc":"Checks if method is public","long_desc":"Checks if the method is public.","ver":"PHP 5","ret_desc":"TRUE if the method is public, otherwise FALSE","seealso":[],"url":"reflectionmethod.ispublic","name":"isPublic","class":"ReflectionMethod","params":[{"list":[],"ret_type":"bool"}]},"ReflectionMethod::isStatic":{"desc":"Checks if method is static","long_desc":"Checks if the method is static.","ver":"PHP 5","ret_desc":"TRUE if the method is static, otherwise FALSE","seealso":[],"url":"reflectionmethod.isstatic","name":"isStatic","class":"ReflectionMethod","params":[{"list":[],"ret_type":"bool"}]},"ReflectionMethod::setAccessible":{"desc":"Set method accessibility","long_desc":"Sets a method to be accessible. For example, it may allow protected and private methods to be invoked.","ver":"PHP 5 >= 5.3.2","ret_desc":"No value is returned.","seealso":[],"url":"reflectionmethod.setaccessible","name":"setAccessible","class":"ReflectionMethod","params":[{"list":[],"ret_type":"void"}]},"ReflectionObject::__construct":{"desc":"Constructs a ReflectionObject","long_desc":"Constructs a ReflectionObject.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"reflectionobject.construct","name":"__construct","class":"ReflectionObject","params":[{"list":[]}]},"ReflectionObject::export":{"desc":"Export","long_desc":"Exports a reflection.","ver":"PHP 5","ret_desc":"If the return parameter is set to TRUE, then the export is returned as a string, otherwise NULL is returned.","seealso":[],"url":"reflectionobject.export","name":"export","class":"ReflectionObject","params":[{"list":[{"type":"string","var":"$argument","beh":0,"desc":"The reflection to export."},{"type":"bool","var":"$return","beh":1,"desc":"Setting to TRUE will return the export, as opposed to emitting it. Setting to FALSE (the default) will do the opposite."}],"ret_type":"string"}]},"ReflectionParameter::__clone":{"desc":"Clone","long_desc":"Clones.","ver":"PHP 5","ret_desc":"","seealso":[],"url":"reflectionparameter.clone","name":"__clone","class":"ReflectionParameter","params":[{"list":[],"ret_type":"void"}]},"ReflectionParameter::__construct":{"desc":"Construct","long_desc":"Constructs a ReflectionParameter class.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"reflectionparameter.construct","name":"__construct","class":"ReflectionParameter","params":[{"list":[{"type":"string","var":"$function","beh":0,"desc":"The function to reflect parameters from."},{"type":"string","var":"$parameter","beh":0,"desc":"The parameter."}]}]},"ReflectionParameter::__toString":{"desc":"To string","long_desc":"To string.","ver":"PHP 5","ret_desc":"","seealso":[],"url":"reflectionparameter.tostring","name":"__toString","class":"ReflectionParameter","params":[{"list":[],"ret_type":"string"}]},"ReflectionParameter::allowsNull":{"desc":"Checks if null is allowed","long_desc":"Checks whether the parameter allows NULL.","ver":"PHP 5","ret_desc":"TRUE if NULL is allowed, otherwise FALSE","seealso":[],"url":"reflectionparameter.allowsnull","name":"allowsNull","class":"ReflectionParameter","params":[{"list":[],"ret_type":"bool"}]},"ReflectionParameter::canBePassedByValue":{"desc":"Returns whether this parameter can be passed by value","long_desc":"","ver":"PHP >= 5.4.0","ret_desc":"Returns TRUE if the parameter can be passed by value, FALSE otherwise. Returns NULL in case of an error.","url":"reflectionparameter.canbepassedbyvalue","name":"canBePassedByValue","class":"ReflectionParameter","params":[{"list":[],"ret_type":"bool"}]},"ReflectionParameter::export":{"desc":"Exports","long_desc":"Exports.","ver":"PHP 5","ret_desc":"The exported reflection.","seealso":[],"url":"reflectionparameter.export","name":"export","class":"ReflectionParameter","params":[{"list":[{"type":"string","var":"$function","beh":0,"desc":"The function name."},{"type":"string","var":"$parameter","beh":1,"desc":"The parameter name."},{"type":"bool","var":"$return","beh":1,"desc":"Setting to TRUE will return the export, as opposed to emitting it. Setting to FALSE (the default) will do the opposite."}],"ret_type":"string"}]},"ReflectionParameter::getClass":{"desc":"Get class","long_desc":"Gets a class.","ver":"PHP 5","ret_desc":"A ReflectionClass object.","seealso":[],"url":"reflectionparameter.getclass","name":"getClass","class":"ReflectionParameter","params":[{"list":[],"ret_type":"ReflectionClass"}]},"ReflectionParameter::getDeclaringClass":{"desc":"Gets declaring class","long_desc":"Gets the declaring class.","ver":"PHP 5","ret_desc":"A ReflectionClass object.","seealso":[],"url":"reflectionparameter.getdeclaringclass","name":"getDeclaringClass","class":"ReflectionParameter","params":[{"list":[],"ret_type":"ReflectionClass"}]},"ReflectionParameter::getDeclaringFunction":{"desc":"Gets declaring function","long_desc":"Gets the declaring function.","ver":"PHP 5 >= 5.2.3","ret_desc":"A ReflectionFunction object.","seealso":[],"url":"reflectionparameter.getdeclaringfunction","name":"getDeclaringFunction","class":"ReflectionParameter","params":[{"list":[],"ret_type":"ReflectionFunction"}]},"ReflectionParameter::getDefaultValue":{"desc":"Gets default parameter value","long_desc":"Gets the default value of the parameter for a user-defined function or method. If the parameter is not optional a ReflectionException will be thrown.","ver":"PHP 5 >= 5.0.3","ret_desc":"The parameters default value.","seealso":[],"url":"reflectionparameter.getdefaultvalue","name":"getDefaultValue","class":"ReflectionParameter","params":[{"list":[],"ret_type":"mixed"}]},"ReflectionParameter::getName":{"desc":"Gets parameter name","long_desc":"Gets the name of the parameter.","ver":"PHP 5","ret_desc":"The name of the reflected parameter.","seealso":[],"url":"reflectionparameter.getname","name":"getName","class":"ReflectionParameter","params":[{"list":[],"ret_type":"string"}]},"ReflectionParameter::getPosition":{"desc":"Gets parameter position","long_desc":"Gets the position of the parameter.","ver":"PHP 5 >= 5.2.3","ret_desc":"The position of the parameter, left to right, starting at position #0.","seealso":[],"url":"reflectionparameter.getposition","name":"getPosition","class":"ReflectionParameter","params":[{"list":[],"ret_type":"int"}]},"ReflectionParameter::isArray":{"desc":"Checks if parameter expects an array","long_desc":"Checks if the parameter expects an array.","ver":"PHP 5 >= 5.1.0","ret_desc":"TRUE if an array is expected, FALSE otherwise.","seealso":[],"url":"reflectionparameter.isarray","name":"isArray","class":"ReflectionParameter","params":[{"list":[],"ret_type":"bool"}]},"ReflectionParameter::isDefaultValueAvailable":{"desc":"Checks if a default value is available","long_desc":"Checks if a default value for the parameter is available.","ver":"PHP 5 >= 5.0.3","ret_desc":"TRUE if a default value is available, otherwise FALSE","seealso":[],"url":"reflectionparameter.isdefaultvalueavailable","name":"isDefaultValueAvailable","class":"ReflectionParameter","params":[{"list":[],"ret_type":"bool"}]},"ReflectionParameter::isOptional":{"desc":"Checks if optional","long_desc":"Checks if the parameter is optional.","ver":"PHP 5 >= 5.0.3","ret_desc":"TRUE if the parameter is optional, otherwise FALSE","seealso":[],"url":"reflectionparameter.isoptional","name":"isOptional","class":"ReflectionParameter","params":[{"list":[],"ret_type":"bool"}]},"ReflectionParameter::isPassedByReference":{"desc":"Checks if passed by reference","long_desc":"Checks if the parameter is passed in by reference.","ver":"PHP 5","ret_desc":"TRUE if the parameter is passed in by reference, otherwise FALSE","seealso":[],"url":"reflectionparameter.ispassedbyreference","name":"isPassedByReference","class":"ReflectionParameter","params":[{"list":[],"ret_type":"bool"}]},"ReflectionProperty::__clone":{"desc":"Clone","long_desc":"Clones.","ver":"PHP 5","ret_desc":"","seealso":[],"url":"reflectionproperty.clone","name":"__clone","class":"ReflectionProperty","params":[{"list":[],"ret_type":"void"}]},"ReflectionProperty::__construct":{"desc":"Construct a ReflectionProperty object","long_desc":"","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"reflectionproperty.construct","name":"__construct","class":"ReflectionProperty","params":[{"list":[{"type":"mixed","var":"$class","beh":0,"desc":"The class name, that contains the property."},{"type":"string","var":"$name","beh":0,"desc":"The name of the property being reflected."}]}]},"ReflectionProperty::__toString":{"desc":"To string","long_desc":"To string.","ver":"PHP 5","ret_desc":"","seealso":[],"url":"reflectionproperty.tostring","name":"__toString","class":"ReflectionProperty","params":[{"list":[],"ret_type":"string"}]},"ReflectionProperty::export":{"desc":"Export","long_desc":"Exports a reflection.","ver":"PHP 5","ret_desc":"","seealso":[],"url":"reflectionproperty.export","name":"export","class":"ReflectionProperty","params":[{"list":[{"type":"mixed","var":"$class","beh":0,"desc":"The reflection to export."},{"type":"string","var":"$name","beh":1,"desc":"The property name."},{"type":"bool","var":"$return","beh":1,"desc":"Setting to TRUE will return the export, as opposed to emitting it. Setting to FALSE (the default) will do the opposite."}],"ret_type":"string"}]},"ReflectionProperty::getDeclaringClass":{"desc":"Gets declaring class","long_desc":"Gets the declaring class.","ver":"PHP 5","ret_desc":"A ReflectionClass object.","seealso":[],"url":"reflectionproperty.getdeclaringclass","name":"getDeclaringClass","class":"ReflectionProperty","params":[{"list":[],"ret_type":"ReflectionClass"}]},"ReflectionProperty::getDocComment":{"desc":"Gets doc comment","long_desc":"Gets the doc comment.","ver":"PHP 5 >= 5.1.0","ret_desc":"The doc comment.","seealso":[],"url":"reflectionproperty.getdoccomment","name":"getDocComment","class":"ReflectionProperty","params":[{"list":[],"ret_type":"string"}]},"ReflectionProperty::getModifiers":{"desc":"Gets modifiers","long_desc":"Gets the modifiers.","ver":"PHP 5","ret_desc":"A numeric representation of the modifiers.","seealso":[],"url":"reflectionproperty.getmodifiers","name":"getModifiers","class":"ReflectionProperty","params":[{"list":[],"ret_type":"int"}]},"ReflectionProperty::getName":{"desc":"Gets property name","long_desc":"Gets the properties name.","ver":"PHP 5","ret_desc":"The name of the reflected property.","seealso":[],"url":"reflectionproperty.getname","name":"getName","class":"ReflectionProperty","params":[{"list":[],"ret_type":"string"}]},"ReflectionProperty::getValue":{"desc":"Gets value","long_desc":"Gets the properties value.","ver":"PHP 5","ret_desc":"The current value of the property.","seealso":[],"url":"reflectionproperty.getvalue","name":"getValue","class":"ReflectionProperty","params":[{"list":[],"ret_type":"mixed"},{"list":[],"ret_type":"mixed"}]},"ReflectionProperty::isDefault":{"desc":"Checks if default value","long_desc":"Checks whether the property is the default.","ver":"PHP 5","ret_desc":"TRUE if the property was declared at compile-time, or FALSE if it was created at run-time.","seealso":[],"url":"reflectionproperty.isdefault","name":"isDefault","class":"ReflectionProperty","params":[{"list":[],"ret_type":"bool"}]},"ReflectionProperty::isPrivate":{"desc":"Checks if property is private","long_desc":"Checks whether the property is private.","ver":"PHP 5","ret_desc":"TRUE if the property is private, FALSE otherwise.","seealso":[],"url":"reflectionproperty.isprivate","name":"isPrivate","class":"ReflectionProperty","params":[{"list":[],"ret_type":"bool"}]},"ReflectionProperty::isProtected":{"desc":"Checks if property is protected","long_desc":"Checks whether the property is protected.","ver":"PHP 5","ret_desc":"TRUE if the property is protected, FALSE otherwise.","seealso":[],"url":"reflectionproperty.isprotected","name":"isProtected","class":"ReflectionProperty","params":[{"list":[],"ret_type":"bool"}]},"ReflectionProperty::isPublic":{"desc":"Checks if property is public","long_desc":"Checks whether the property is public.","ver":"PHP 5","ret_desc":"TRUE if the property is public, FALSE otherwise.","seealso":[],"url":"reflectionproperty.ispublic","name":"isPublic","class":"ReflectionProperty","params":[{"list":[],"ret_type":"bool"}]},"ReflectionProperty::isStatic":{"desc":"Checks if property is static","long_desc":"Checks whether the property is static.","ver":"PHP 5","ret_desc":"TRUE if the property is static, FALSE otherwise.","seealso":[],"url":"reflectionproperty.isstatic","name":"isStatic","class":"ReflectionProperty","params":[{"list":[],"ret_type":"bool"}]},"ReflectionProperty::setAccessible":{"desc":"Set property accessibility","long_desc":"Sets a property to be accessible. For example, it may allow protected and private properties to be accessed.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","seealso":[],"url":"reflectionproperty.setaccessible","name":"setAccessible","class":"ReflectionProperty","params":[{"list":[],"ret_type":"void"}]},"ReflectionProperty::setValue":{"desc":"Set property value","long_desc":"Sets (changes) the property's value.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"reflectionproperty.setvalue","name":"setValue","class":"ReflectionProperty","params":[{"list":[{"type":"object","var":"$object","beh":0,"desc":"If the property is non-static an object must be provided to change the property on. If the property is static this parameter is left out and only value needs to be provided."},{"type":"mixed","var":"$value","beh":0,"desc":"The new value."}],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"SAMConnection::__construct":{"desc":"Creates a new connection to a Messaging Server","long_desc":"Creates a new SAMConnection object.","ver":"PECL sam >= 0.1.0","url":"samconnection.construct","name":"__construct","class":"SAMConnection","params":[]},"SAMConnection::commit":{"desc":"Commits (completes) the current unit of work.","long_desc":"Calling the \"commit\" method on a Connection object commits (completes) all in-flight transactions that are part of the current unit of work.","ver":"PECL sam >= 0.1.0","ret_desc":"This method returns FALSE if an error occurs.","seealso":[],"url":"samconnection.commit","name":"commit","class":"SAMConnection","params":[{"list":[],"ret_type":"bool"}]},"SAMConnection::connect":{"desc":"Establishes a connection to a Messaging Server","long_desc":"Calling the \"connect\" method on a SAMConnection object connects the PHP script to a messaging server. No messages can be sent or received until a connection is made.","ver":"PECL sam >= 0.1.0","ret_desc":"This method returns FALSE if an error occurs.","seealso":[],"url":"samconnection.connect","name":"connect","class":"SAMConnection","params":[{"list":[{"type":"string","var":"$protocol","beh":0,"desc":""},{"type":"array","var":"$properties","beh":1,"desc":""}],"ret_type":"bool"}]},"SAMConnection::disconnect":{"desc":"Disconnects from a Messaging Server","long_desc":"Calling the \"disconnect\" method on a SAMConnection object disconnects the PHP script from a messaging server. No messages can be sent or received after a connection has been disconnected.","ver":"PECL sam >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"samconnection.disconnect","name":"disconnect","class":"SAMConnection","params":[{"list":[],"ret_type":"bool"}]},"SAMConnection::errno":{"desc":"Contains the unique numeric error code of the last executed SAM operation.","long_desc":"Contains the numeric error code of the last executed SAM operation on this connection. If the last operation completed successfully this property contains 0.","ver":"PECL sam >= 0.1.0","ret_desc":"An integer greater than zero indicates the last error type encountered on the connection. Zero indicates that the last operation on this connection completed successfully.","seealso":[],"url":"samconnection.errno","name":"errno","class":"SAMConnection","params":[]},"SAMConnection::error":{"desc":"Contains the text description of the last failed SAM operation.","long_desc":"Contains the text description of the last failed SAM operation on this connection. If the last operation completed successfully this property contains an empty string.","ver":"PECL sam >= 0.1.0","ret_desc":"A string containing the text description of the last error type encountered on the connection. An empty string indicates that the last operation on this connection completed successfully.","seealso":[],"url":"samconnection.error","name":"error","class":"SAMConnection","params":[]},"SAMConnection::isConnected":{"desc":"Queries whether a connection is established to a Messaging Server","long_desc":"Calling the \"isConnected\" method on a Connection object will check whether the PHP script is connected to a messaging server. No messages can be sent or received unless a connection has been established with a Messaging server.","ver":"PECL sam >= 0.1.0","ret_desc":"This method returns TRUE if the SAMConnection object is successfully connected to a Messaging server or FALSE otherwise.","seealso":[],"url":"samconnection.isconnected","name":"isConnected","class":"SAMConnection","params":[{"list":[],"ret_type":"bool"}]},"SAMConnection::peek":{"desc":"Read a message from a queue without removing it from the queue.","ver":"PECL sam >= 0.1.0","ret_desc":"This method returns a SAMMessage object or FALSE if an error occurs.","seealso":[],"url":"samconnection.peek","name":"peek","class":"SAMConnection","params":[{"list":[{"type":"string","var":"$target","beh":0,"desc":"The identity of the queue from which to peek the message."},{"type":"array","var":"$properties","beh":1,"desc":"An optional associative array of properties describing other parameters to control the peek operation."}],"ret_type":"SAMMessage"}]},"SAMConnection::peekAll":{"desc":"Read one or more messages from a queue without removing it from the queue.","ver":"PECL sam >= 0.2.0","ret_desc":"This method returns an array of SAMMessage objects or FALSE if an error occurs.","seealso":[],"url":"samconnection.peekall","name":"peekAll","class":"SAMConnection","params":[{"list":[{"type":"string","var":"$target","beh":0,"desc":"The identity of the queue from which messages should be peeked."},{"type":"array","var":"$properties","beh":1,"desc":"An optional associative array of properties describing other parameters to control the peek operation."}],"ret_type":"array"}]},"SAMConnection::receive":{"desc":"Receive a message from a queue or subscription.","ver":"PECL sam >= 0.1.0","ret_desc":"This method returns a SAMMessage object or FALSE if an error occurs.","seealso":[],"url":"samconnection.receive","name":"receive","class":"SAMConnection","params":[{"list":[{"type":"string","var":"$target","beh":0,"desc":"The identity of the queue, topic or subscription from which to receive the message."},{"type":"array","var":"$properties","beh":1,"desc":"An optional associative array of properties describing other parameters to control the receive operation."}],"ret_type":"SAMMessage"}]},"SAMConnection::remove":{"desc":"Remove a message from a queue.","long_desc":"Removes a message from a queue.","ver":"PECL sam >= 0.1.0","ret_desc":"This method returns FALSE if an error occurs.","url":"samconnection.remove","name":"remove","class":"SAMConnection","params":[{"list":[{"type":"string","var":"$target","beh":0,"desc":"The identity of the queue from which to remove the message."},{"type":"array","var":"$properties","beh":1,"desc":"An optional associative array of properties describing other parameters to control the remove operation."}],"ret_type":"SAMMessage"}]},"SAMConnection::rollback":{"desc":"Cancels (rolls back) an in-flight unit of work.","long_desc":"Rolls back an in-flight unit of work.","ver":"PECL sam >= 0.1.0","ret_desc":"This method returns FALSE if an error occurs.","seealso":[],"url":"samconnection.rollback","name":"rollback","class":"SAMConnection","params":[{"list":[],"ret_type":"bool"}]},"SAMConnection::send":{"desc":"Send a message to a queue or publish an item to a topic.","long_desc":"The \"send\" method is used to send a message to a specific queue or to publish to a specific topic. The method returns a correlation id that can be used as a selector to identify reply or response messages when these are requested.","ver":"PECL sam >= 0.1.0","ret_desc":"A correlation id string that can be used in a subsequent receive call as a selector to obtain any reply or response that has been requested or FALSE if an error occurred.","seealso":[],"url":"samconnection.send","name":"send","class":"SAMConnection","params":[{"list":[{"type":"string","var":"$target","beh":0,"desc":"If sending a message, the identity of the queue (queue:\/\/queuename) or if publishing to a topic the identity of the topic (topic:\/\/topicname) to which the message is to be delivered."},{"type":"SAMMessage","var":"$msg","beh":1,"desc":"The message to be sent or published."},{"type":"array","var":"$properties","beh":1,"desc":"An optional associative array of properties describing other parameters to control the receive operation."}],"ret_type":"string"}]},"SAMConnection::setDebug":{"desc":"Turn on or off additional debugging output.","long_desc":"The \"setdebug\" method is used to turn on or off additional debugging output. The SAM framework will provide method\/function entry and exit trace data plus additional information. Protocol specific implementations also provide extra output.","ver":"PECL sam >= 1.1.0","ret_desc":"No value is returned.","url":"samconnection.setdebug","name":"setDebug","class":"SAMConnection","params":[{"list":[],"ret_type":"void"}]},"SAMConnection::subscribe":{"desc":"Create a subscription to a specified topic.","long_desc":"The \"subscribe\" method is used to create a new subscription to a specified topic.","ver":"PECL sam >= 0.1.0","ret_desc":"A subscription identifier that can be used in a subsequent receive call as a selector to obtain any topic data or FALSE if an error occurred. The subscription identifier should be used in the receive call in place of the simple topic name.","seealso":[],"url":"samconnection.subscribe","name":"subscribe","class":"SAMConnection","params":[{"list":[],"ret_type":"string"}]},"SAMConnection::unsubscribe":{"desc":"Cancel a subscription to a specified topic.","long_desc":"The \"unsubscribe\" method is used to delete an existing subscription to a specified topic.","ver":"PECL sam >= 0.1.0","ret_desc":"This method returns FALSE if an error occurs.","seealso":[],"url":"samconnection.unsubscribe","name":"unsubscribe","class":"SAMConnection","params":[{"list":[{"type":"string","var":"$subscriptionId","beh":0,"desc":"The identifier of an existing subscription as returned by a call to the subscribe method."},{"type":"string","var":"$targetTopic","beh":1,"desc":""}],"ret_type":"bool"}]},"SQLite3::__construct":{"desc":"Instantiates an SQLite3 object and opens an SQLite 3 database","long_desc":"Instantiates an SQLite3 object and opens a connection to an SQLite 3 database. If the build includes encryption, then it will attempt to use the key.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an SQLite3 object on success.","url":"sqlite3.construct","name":"__construct","class":"SQLite3","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"Path to the SQLite database, or :memory: to use in-memory database."},{"type":"int","var":"$flags","beh":1,"desc":"Optional flags used to determine how to open the SQLite database. By default, open uses SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE."},{"type":"string","var":"$encryption_key","beh":1,"desc":"An optional encryption key used when encrypting and decrypting an SQLite database."}]}]},"SQLite3::busyTimeout":{"desc":"Sets the busy connection handler","long_desc":"Sets a busy handler that will sleep until the database is not locked or the timeout is reached.","ver":"PHP 5 >= 5.3.3","ret_desc":"Returns TRUE on success, FALSE on failure.","url":"sqlite3.busytimeout","name":"busyTimeout","class":"SQLite3","params":[{"list":[],"ret_type":"bool"}]},"SQLite3::changes":{"desc":"Returns the number of database rows that were changed (or inserted or deleted) by the most recent SQL statement","long_desc":"Returns the number of database rows that were changed (or inserted or deleted) by the most recent SQL statement.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an integer value corresponding to the number of database rows changed (or inserted or deleted) by the most recent SQL statement.","url":"sqlite3.changes","name":"changes","class":"SQLite3","params":[{"list":[],"ret_type":"int"}]},"SQLite3::close":{"desc":"Closes the database connection","long_desc":"Closes the database connection.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE on success, FALSE on failure.","url":"sqlite3.close","name":"close","class":"SQLite3","params":[{"list":[],"ret_type":"bool"}]},"SQLite3::createAggregate":{"desc":"Registers a PHP function for use as an SQL aggregate function","long_desc":"Registers a PHP function or user-defined function for use as an SQL aggregate function for use within SQL statements.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE upon successful creation of the aggregate, FALSE on failure.","url":"sqlite3.createaggregate","name":"createAggregate","class":"SQLite3","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"Name of the SQL aggregate to be created or redefined."},{"type":"mixed","var":"$step_callback","beh":1,"desc":"The name of a PHP function or user-defined function to apply as a callback for every item in the aggregate."},{"type":"mixed","var":"$final_callback","beh":1,"desc":"The name of a PHP function or user-defined function to apply as a callback at the end of the aggregate data."},{"type":"int","var":"$argument_count","beh":1,"desc":"The number of arguments that the SQL aggregate takes. If this parameter is negative, then the SQL aggregate may take any number of arguments.","def":-1}],"ret_type":"bool"}]},"SQLite3::createFunction":{"desc":"Registers a PHP function for use as an SQL scalar function","long_desc":"Registers a PHP function or user-defined function for use as an SQL scalar function for use within SQL statements.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE upon successful creation of the function, FALSE on failure.","url":"sqlite3.createfunction","name":"createFunction","class":"SQLite3","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"Name of the SQL function to be created or redefined."},{"type":"mixed","var":"$callback","beh":1,"desc":"The name of a PHP function or user-defined function to apply as a callback, defining the behavior of the SQL function."},{"type":"int","var":"$argument_count","beh":1,"desc":"The number of arguments that the SQL function takes. If this parameter is negative, then the SQL function may take any number of arguments.","def":-1}],"ret_type":"bool"}]},"SQLite3::escapeString":{"desc":"Returns a string that has been properly escaped","long_desc":"Returns a string that has been properly escaped for safe inclusion in an SQL statement.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns a properly escaped string that may be used safely in an SQL statement.","url":"sqlite3.escapestring","name":"escapeString","class":"SQLite3","params":[{"list":[],"ret_type":"string"}]},"SQLite3::exec":{"desc":"Executes a result-less query against a given database","long_desc":"Executes a result-less query against a given database.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE if the query succeeded, FALSE on failure.","url":"sqlite3.exec","name":"exec","class":"SQLite3","params":[{"list":[],"ret_type":"bool"}]},"SQLite3::lastErrorCode":{"desc":"Returns the numeric result code of the most recent failed SQLite request","long_desc":"Returns the numeric result code of the most recent failed SQLite request.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an integer value representing the numeric result code of the most recent failed SQLite request.","url":"sqlite3.lasterrorcode","name":"lastErrorCode","class":"SQLite3","params":[{"list":[],"ret_type":"int"}]},"SQLite3::lastErrorMsg":{"desc":"Returns English text describing the most recent failed SQLite request","long_desc":"Returns English text describing the most recent failed SQLite request.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an English string describing the most recent failed SQLite request.","url":"sqlite3.lasterrormsg","name":"lastErrorMsg","class":"SQLite3","params":[{"list":[],"ret_type":"string"}]},"SQLite3::lastInsertRowID":{"desc":"Returns the row ID of the most recent INSERT into the database","long_desc":"Returns the row ID of the most recent INSERT into the database.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the row ID of the most recent INSERT into the database","url":"sqlite3.lastinsertrowid","name":"lastInsertRowID","class":"SQLite3","params":[{"list":[],"ret_type":"int"}]},"SQLite3::loadExtension":{"desc":"Attempts to load an SQLite extension library","long_desc":"Attempts to load an SQLite extension library.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE if the extension is successfully loaded, FALSE on failure.","url":"sqlite3.loadextension","name":"loadExtension","class":"SQLite3","params":[{"list":[],"ret_type":"bool"}]},"SQLite3::open":{"desc":"Opens an SQLite database","long_desc":"Opens an SQLite 3 Database. If the build includes encryption, then it will attempt to use the key.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"sqlite3.open","name":"open","class":"SQLite3","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"Path to the SQLite database, or :memory: to use in-memory database."},{"type":"int","var":"$flags","beh":1,"desc":"Optional flags used to determine how to open the SQLite database. By default, open uses SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE.","def":"SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE"},{"type":"string","var":"$encryption_key","beh":1,"desc":"An optional encryption key used when encrypting and decrypting an SQLite database."}],"ret_type":"void"}]},"SQLite3::prepare":{"desc":"Prepares an SQL statement for execution","long_desc":"Prepares an SQL statement for execution and returns an SQLite3Stmt object.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an SQLite3Stmt object on success or FALSE on failure.","url":"sqlite3.prepare","name":"prepare","class":"SQLite3","params":[{"list":[],"ret_type":"SQLite3Stmt"}]},"SQLite3::query":{"desc":"Executes an SQL query","long_desc":"Executes an SQL query, returning an SQLite3Result object if the query returns results.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an SQLite3Result object if the query returns results. Otherwise, returns TRUE if the query succeeded, FALSE on failure.","url":"sqlite3.query","name":"query","class":"SQLite3","params":[{"list":[],"ret_type":"SQLite3Result"}]},"SQLite3::querySingle":{"desc":"Executes a query and returns a single result","long_desc":"Executes a query and returns a single result.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the value of the first column of results or an array of the entire first row (if entire_row is TRUE).","url":"sqlite3.querysingle","name":"querySingle","class":"SQLite3","params":[{"list":[{"type":"string","var":"$query","beh":0,"desc":"The SQL query to execute."},{"type":"bool","var":"$entire_row","beh":0,"desc":"By default, querySingle() returns the value of the first column returned by the query. If entire_row is TRUE, then it returns an array of the entire first row.","def":"false"}],"ret_type":"mixed"}]},"SQLite3::version":{"desc":"Returns the SQLite3 library version as a string constant and as a number","long_desc":"Returns the SQLite3 library version as a string constant and as a number.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an associative array with the keys \"versionString\" and \"versionNumber\".","url":"sqlite3.version","name":"version","class":"SQLite3","params":[{"list":[],"ret_type":"array"}]},"SQLite3Result::columnName":{"desc":"Returns the name of the nth column","long_desc":"Returns the name of the column specified by the column_number.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the string name of the column identified by column_number.","url":"sqlite3result.columnname","name":"columnName","class":"SQLite3Result","params":[{"list":[],"ret_type":"string"}]},"SQLite3Result::columnType":{"desc":"Returns the type of the nth column","long_desc":"Returns the type of the column identified by column_number.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the data type index of the column identified by column_number (one of SQLITE3_INTEGER, SQLITE3_FLOAT, SQLITE3_TEXT, SQLITE3_BLOB, or SQLITE3_NULL).","url":"sqlite3result.columntype","name":"columnType","class":"SQLite3Result","params":[{"list":[],"ret_type":"int"}]},"SQLite3Result::fetchArray":{"desc":"Fetches a result row as an associative or numerically indexed array or both","long_desc":"Fetches a result row as an associative or numerically indexed array or both. By default, fetches as both.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns a result row as an associatively or numerically indexed array or both.","url":"sqlite3result.fetcharray","name":"fetchArray","class":"SQLite3Result","params":[{"list":[],"ret_type":"array"}]},"SQLite3Result::finalize":{"desc":"Closes the result set","long_desc":"Closes the result set.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE.","url":"sqlite3result.finalize","name":"finalize","class":"SQLite3Result","params":[{"list":[],"ret_type":"bool"}]},"SQLite3Result::numColumns":{"desc":"Returns the number of columns in the result set","long_desc":"Returns the number of columns in the result set.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the number of columns in the result set.","url":"sqlite3result.numcolumns","name":"numColumns","class":"SQLite3Result","params":[{"list":[],"ret_type":"int"}]},"SQLite3Result::reset":{"desc":"Resets the result set back to the first row","long_desc":"Resets the result set back to the first row.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE if the result set is successfully reset back to the first row, FALSE on failure.","url":"sqlite3result.reset","name":"reset","class":"SQLite3Result","params":[{"list":[],"ret_type":"bool"}]},"SQLite3Stmt::bindParam":{"desc":"Binds a parameter to a statement variable","long_desc":"Binds a parameter to a statement variable.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE if the parameter is bound to the statement variable, FALSE on failure.","url":"sqlite3stmt.bindparam","name":"bindParam","class":"SQLite3Stmt","params":[{"list":[{"type":"string","var":"$sql_param","beh":0,"desc":"An string identifying the statement variable to which the parameter should be bound."},{"type":"mixed","var":"&$param","beh":1,"desc":"The parameter to bind to a statement variable."},{"type":"int","var":"$type","beh":1,"desc":"The data type of the parameter to bind."}],"ret_type":"bool"}]},"SQLite3Stmt::bindValue":{"desc":"Binds the value of a parameter to a statement variable","long_desc":"Binds the value of a parameter to a statement variable.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE if the value is bound to the statement variable, FALSE on failure.","url":"sqlite3stmt.bindvalue","name":"bindValue","class":"SQLite3Stmt","params":[{"list":[{"type":"string","var":"$sql_param","beh":0,"desc":"An string identifying the statement variable to which the value should be bound."},{"type":"mixed","var":"$value","beh":1,"desc":"The value to bind to a statement variable."},{"type":"int","var":"$type","beh":1,"desc":"The data type of the value to bind."}],"ret_type":"bool"}]},"SQLite3Stmt::clear":{"desc":"Clears all current bound parameters","long_desc":"Clears all current bound parameters.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE on successful clearing of bound parameters, FALSE on failure.","url":"sqlite3stmt.clear","name":"clear","class":"SQLite3Stmt","params":[{"list":[],"ret_type":"bool"}]},"SQLite3Stmt::close":{"desc":"Closes the prepared statement","long_desc":"Closes the prepared statement.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE","url":"sqlite3stmt.close","name":"close","class":"SQLite3Stmt","params":[{"list":[],"ret_type":"bool"}]},"SQLite3Stmt::execute":{"desc":"Executes a prepared statement and returns a result set object","long_desc":"Executes a prepared statement and returns a result set object.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an SQLite3Result object on successful execution of the prepared statement, FALSE on failure.","url":"sqlite3stmt.execute","name":"execute","class":"SQLite3Stmt","params":[{"list":[],"ret_type":"SQLite3Result"}]},"SQLite3Stmt::paramCount":{"desc":"Returns the number of parameters within the prepared statement","long_desc":"Returns the number of parameters within the prepared statement.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the number of parameters within the prepared statement.","url":"sqlite3stmt.paramcount","name":"paramCount","class":"SQLite3Stmt","params":[{"list":[],"ret_type":"int"}]},"SQLite3Stmt::reset":{"desc":"Resets the prepared statement","long_desc":"Resets the prepared statement to its state prior to execution. All bindings remain intact after reset.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE if the statement is successfully reset, FALSE on failure.","url":"sqlite3stmt.reset","name":"reset","class":"SQLite3Stmt","params":[{"list":[],"ret_type":"bool"}]},"SWFSound::__construct":{"desc":"Returns a new SWFSound object from given file","ver":"PHP 5 <= 5.3.0, PECL ming SVN","url":"swfsound.construct","name":"__construct","class":"SWFSound","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":""},{"type":"int","var":"$flags","beh":0,"desc":"","def":0}]}]},"SeekableIterator::seek":{"desc":"Seeks to a position","long_desc":"Seeks to a given position in the iterator.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"seekableiterator.seek","name":"seek","class":"SeekableIterator","params":[{"list":[],"ret_type":"void"}]},"SimpleXMLElement::__construct":{"desc":"Creates a new SimpleXMLElement object","long_desc":"Creates a new SimpleXMLElement object.","ver":"PHP 5 >= 5.0.1","ret_desc":"Returns a SimpleXMLElement object representing data.","seealso":[],"url":"simplexmlelement.construct","name":"__construct","class":"SimpleXMLElement","params":[]},"SimpleXMLElement::addAttribute":{"desc":"Adds an attribute to the SimpleXML element","long_desc":"Adds an attribute to the SimpleXML element.","ver":"PHP 5 >= 5.1.3","ret_desc":"No value is returned.","seealso":[],"url":"simplexmlelement.addattribute","name":"addAttribute","class":"SimpleXMLElement","params":[{"list":[{"type":"string","var":"$name","beh":1,"desc":"The name of the attribute to add."},{"type":"string","var":"$value","beh":1,"desc":"The value of the attribute."},{"type":"string","var":"$namespace","beh":1,"desc":"If specified, the namespace to which the attribute belongs."}],"ret_type":"void"}]},"SimpleXMLElement::addChild":{"desc":"Adds a child element to the XML node","long_desc":"Adds a child element to the node and returns a SimpleXMLElement of the child.","ver":"PHP 5 >= 5.1.3","ret_desc":"The addChild method returns a SimpleXMLElement object representing the child added to the XML node.","seealso":[],"url":"simplexmlelement.addchild","name":"addChild","class":"SimpleXMLElement","params":[{"list":[{"type":"string","var":"$name","beh":1,"desc":"The name of the child element to add."},{"type":"string","var":"$value","beh":1,"desc":"If specified, the value of the child element."},{"type":"string","var":"$namespace","beh":1,"desc":"If specified, the namespace to which the child element belongs."}],"ret_type":"SimpleXMLElement"}]},"SimpleXMLElement::asXML":{"desc":"Return a well-formed XML string based on SimpleXML element","long_desc":"The asXML method formats the parent object's data in XML version 1.0.","ver":"PHP 5 >= 5.0.1","ret_desc":"If the filename isn't specified, this function returns a string on success and FALSE on error. If the parameter is specified, it returns TRUE if the file was written successfully and FALSE otherwise.","seealso":[],"url":"simplexmlelement.asxml","name":"asXML","class":"SimpleXMLElement","params":[{"list":[],"ret_type":"mixed"}]},"SimpleXMLElement::attributes":{"desc":"Identifies an element's attributes","long_desc":"This function provides the attributes and values defined within an xml tag.","ver":"PHP 5 >= 5.0.1","ret_desc":"Returns a SimpleXMLElement object that can be iterated over to loop through the attributes on the tag.","seealso":[],"url":"simplexmlelement.attributes","name":"attributes","class":"SimpleXMLElement","params":[{"list":[{"type":"string","var":"$ns","beh":0,"desc":"An optional namespace for the retrieved attributes","def":"NULL"},{"type":"bool","var":"$is_prefix","beh":1,"desc":"Default to FALSE","def":"false"}],"ret_type":"SimpleXMLElement"}]},"SimpleXMLElement::children":{"desc":"Finds children of given node","long_desc":"This method finds the children of an element. The result follows normal iteration rules.","ver":"PHP 5 >= 5.0.1","ret_desc":"Returns a SimpleXMLElement element, whether the node has children or not.","seealso":[],"url":"simplexmlelement.children","name":"children","class":"SimpleXMLElement","params":[{"list":[{"type":"string","var":"$ns","beh":1,"desc":"An XML namespace."},{"type":"bool","var":"$is_prefix","beh":1,"desc":"If is_prefix is TRUE, ns will be regarded as a prefix. If FALSE, ns will be regarded as a namespace URL.","def":"false"}],"ret_type":"SimpleXMLElement"}]},"SimpleXMLElement::count":{"desc":"Counts the children of an element","long_desc":"This method counts the number of children of an element.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the number of elements of an element.","seealso":[],"url":"simplexmlelement.count","name":"count","class":"SimpleXMLElement","params":[{"list":[],"ret_type":"int"}]},"SimpleXMLElement::getDocNamespaces":{"desc":"Returns namespaces declared in document","long_desc":"Returns namespaces declared in document","ver":"PHP 5 >= 5.1.2","ret_desc":"The getDocNamespaces method returns an array of namespace names with their associated URIs.","seealso":[],"url":"simplexmlelement.getdocnamespaces","name":"getDocNamespaces","class":"SimpleXMLElement","params":[{"list":[],"ret_type":"array"}]},"SimpleXMLElement::getName":{"desc":"Gets the name of the XML element","long_desc":"Gets the name of the XML element.","ver":"PHP 5 >= 5.1.3","ret_desc":"The getName method returns as a string the name of the XML tag referenced by the SimpleXMLElement object.","url":"simplexmlelement.getname","name":"getName","class":"SimpleXMLElement","params":[{"list":[],"ret_type":"string"}]},"SimpleXMLElement::getNamespaces":{"desc":"Returns namespaces used in document","long_desc":"Returns namespaces used in document","ver":"PHP 5 >= 5.1.2","ret_desc":"The getNamespaces method returns an array of namespace names with their associated URIs.","seealso":[],"url":"simplexmlelement.getnamespaces","name":"getNamespaces","class":"SimpleXMLElement","params":[{"list":[],"ret_type":"array"}]},"SimpleXMLElement::registerXPathNamespace":{"desc":"Creates a prefix\/ns context for the next XPath query","long_desc":"Creates a prefix\/ns context for the next XPath query. In particular, this is helpful if the provider of the given XML document alters the namespace prefixes. registerXPathNamespace will create a prefix for the associated namespace, allowing one to access nodes in that namespace without the need to change code to allow for the new prefixes dictated by the provider.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"simplexmlelement.registerxpathnamespace","name":"registerXPathNamespace","class":"SimpleXMLElement","params":[{"list":[{"type":"string","var":"$prefix","beh":0,"desc":"The namespace prefix to use in the XPath query for the namespace given in ns."},{"type":"string","var":"$ns","beh":0,"desc":"The namespace to use for the XPath query. This must match a namespace in use by the XML document or the XPath query using prefix will not return any results."}],"ret_type":"bool"}]},"SimpleXMLElement::saveXML":{"desc":"Alias of SimpleXMLElement::asXML()","long_desc":"This method is an alias of: SimpleXMLElement::asXML()","ver":"PHP 5 >= 5.2.0","url":"simplexmlelement.savexml","name":"saveXML","class":"SimpleXMLElement","params":[]},"SimpleXMLElement::xpath":{"desc":"Runs XPath query on XML data","long_desc":"The xpath method searches the SimpleXML node for children matching the XPath path.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns an array of SimpleXMLElement objects or FALSE in case of an error.","seealso":[],"url":"simplexmlelement.xpath","name":"xpath","class":"SimpleXMLElement","params":[{"list":[],"ret_type":"array"}]},"SimpleXMLIterator::current":{"desc":"Returns the current element","long_desc":"This method returns the current element as a SimpleXMLIterator object or NULL.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the current element as a SimpleXMLIterator object or NULL on failure.","seealso":[],"url":"simplexmliterator.current","name":"current","class":"SimpleXMLIterator","params":[{"list":[],"ret_type":"mixed"}]},"SimpleXMLIterator::getChildren":{"desc":"Returns the sub-elements of the current element","long_desc":"This method returns a SimpleXMLIterator object containing sub-elements of the current SimpleXMLIterator element.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns a SimpleXMLIterator object containing the sub-elements of the current element.","url":"simplexmliterator.getchildren","name":"getChildren","class":"SimpleXMLIterator","params":[{"list":[],"ret_type":"SimpleXMLIterator"}]},"SimpleXMLIterator::hasChildren":{"desc":"Checks whether the current element has sub elements.","long_desc":"This method checks whether the current SimpleXMLIterator element has sub-elements.","ver":"PHP 5 >= 5.1.0","ret_desc":"TRUE if the current element has sub-elements, otherwise FALSE","url":"simplexmliterator.haschildren","name":"hasChildren","class":"SimpleXMLIterator","params":[{"list":[],"ret_type":"bool"}]},"SimpleXMLIterator::key":{"desc":"Return current key","long_desc":"This method gets the XML tag name of the current element.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the XML tag name of the element referenced by the current SimpleXMLIterator object or FALSE","url":"simplexmliterator.key","name":"key","class":"SimpleXMLIterator","params":[{"list":[],"ret_type":"mixed"}]},"SimpleXMLIterator::next":{"desc":"Move to next element","long_desc":"This method moves the SimpleXMLIterator to the next element.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","url":"simplexmliterator.next","name":"next","class":"SimpleXMLIterator","params":[{"list":[],"ret_type":"void"}]},"SimpleXMLIterator::rewind":{"desc":"Rewind to the first element","long_desc":"This method rewinds the SimpleXMLIterator to the first element.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","url":"simplexmliterator.rewind","name":"rewind","class":"SimpleXMLIterator","params":[{"list":[],"ret_type":"void"}]},"SimpleXMLIterator::valid":{"desc":"Check whether the current element is valid","long_desc":"This method checks if the current element is valid after calls to SimpleXMLIterator::rewind() or SimpleXMLIterator::next().","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE if the current element is valid, otherwise FALSE","url":"simplexmliterator.valid","name":"valid","class":"SimpleXMLIterator","params":[{"list":[],"ret_type":"bool"}]},"SplDoublyLinkedList::__construct":{"desc":"Constructs a new doubly linked list","long_desc":"This constructs a new empty doubly linked list.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"spldoublylinkedlist.construct","name":"__construct","class":"SplDoublyLinkedList","params":[]},"SplDoublyLinkedList::bottom":{"desc":"Peeks at the node from the beginning of the doubly linked list","ver":"PHP 5 >= 5.3.0","ret_desc":"The value of the first node.","url":"spldoublylinkedlist.bottom","name":"bottom","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"mixed"}]},"SplDoublyLinkedList::count":{"desc":"Counts the number of elements in the doubly linked list.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the number of elements in the doubly linked list.","url":"spldoublylinkedlist.count","name":"count","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"int"}]},"SplDoublyLinkedList::current":{"desc":"Return current array entry","long_desc":"Get the current doubly linked list node.","ver":"PHP 5 >= 5.3.0","ret_desc":"The current node value.","url":"spldoublylinkedlist.current","name":"current","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"mixed"}]},"SplDoublyLinkedList::getIteratorMode":{"desc":"Returns the mode of iteration","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the different modes and flags that affect the iteration.","url":"spldoublylinkedlist.getiteratormode","name":"getIteratorMode","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"int"}]},"SplDoublyLinkedList::isEmpty":{"desc":"Checks whether the doubly linked list is empty.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns whether the doubly linked list is empty.","url":"spldoublylinkedlist.isempty","name":"isEmpty","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"bool"}]},"SplDoublyLinkedList::key":{"desc":"Return current node index","long_desc":"This function returns the current node index","ver":"PHP 5 >= 5.3.0","ret_desc":"The current node index.","url":"spldoublylinkedlist.key","name":"key","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"mixed"}]},"SplDoublyLinkedList::next":{"desc":"Move to next entry","long_desc":"Move the iterator to the next node.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"spldoublylinkedlist.next","name":"next","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"void"}]},"SplDoublyLinkedList::offsetExists":{"desc":"Returns whether the requested $index exists","ver":"PHP 5 >= 5.3.0","ret_desc":"TRUE if the requested index exists, otherwise FALSE","url":"spldoublylinkedlist.offsetexists","name":"offsetExists","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"bool"}]},"SplDoublyLinkedList::offsetGet":{"desc":"Returns the value at the specified $index","ver":"PHP 5 >= 5.3.0","ret_desc":"The value at the specified index.","url":"spldoublylinkedlist.offsetget","name":"offsetGet","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"mixed"}]},"SplDoublyLinkedList::offsetSet":{"desc":"Sets the value at the specified $index to $newval","long_desc":"Sets the value at the specified index to newval.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"spldoublylinkedlist.offsetset","name":"offsetSet","class":"SplDoublyLinkedList","params":[{"list":[{"type":"mixed","var":"$index","beh":0,"desc":"The index being set."},{"type":"mixed","var":"$newval","beh":0,"desc":"The new value for the index."}],"ret_type":"void"}]},"SplDoublyLinkedList::offsetUnset":{"desc":"Unsets the value at the specified $index","long_desc":"Unsets the value at the specified index.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"spldoublylinkedlist.offsetunset","name":"offsetUnset","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"void"}]},"SplDoublyLinkedList::pop":{"desc":"Pops a node from the end of the doubly linked list","ver":"PHP 5 >= 5.3.0","ret_desc":"The value of the popped node.","url":"spldoublylinkedlist.pop","name":"pop","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"mixed"}]},"SplDoublyLinkedList::prev":{"desc":"Move to previous entry","long_desc":"Move the iterator to the previous node.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"spldoublylinkedlist.prev","name":"prev","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"void"}]},"SplDoublyLinkedList::push":{"desc":"Pushes an element at the end of the doubly linked list","long_desc":"Pushes value at the end of the doubly linked list.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"spldoublylinkedlist.push","name":"push","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"void"}]},"SplDoublyLinkedList::rewind":{"desc":"Rewind iterator back to the start","long_desc":"This rewinds the iterator to the beginning.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"spldoublylinkedlist.rewind","name":"rewind","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"void"}]},"SplDoublyLinkedList::serialize":{"desc":"Serializes the storage","long_desc":"Serializes the storage.","ver":"PHP 5 >= 5.4.0","ret_desc":"The serialized string.","seealso":[],"url":"spldoublylinkedlist.serialize","name":"serialize","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"string"}]},"SplDoublyLinkedList::setIteratorMode":{"desc":"Sets the mode of iteration","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"spldoublylinkedlist.setiteratormode","name":"setIteratorMode","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"void"}]},"SplDoublyLinkedList::shift":{"desc":"Shifts a node from the beginning of the doubly linked list","ver":"PHP 5 >= 5.3.0","ret_desc":"The value of the shifted node.","url":"spldoublylinkedlist.shift","name":"shift","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"mixed"}]},"SplDoublyLinkedList::top":{"desc":"Peeks at the node from the end of the doubly linked list","ver":"PHP 5 >= 5.3.0","ret_desc":"The value of the last node.","url":"spldoublylinkedlist.top","name":"top","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"mixed"}]},"SplDoublyLinkedList::unserialize":{"desc":"Unserializes the storage","long_desc":"Unserializes the storage, from SplDoublyLinkedList::serialize().","ver":"PHP 5 >= 5.4.0","ret_desc":"No value is returned.","seealso":[],"url":"spldoublylinkedlist.unserialize","name":"unserialize","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"void"}]},"SplDoublyLinkedList::unshift":{"desc":"Prepends the doubly linked list with an element","long_desc":"Prepends value at the beginning of the doubly linked list.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"spldoublylinkedlist.unshift","name":"unshift","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"void"}]},"SplDoublyLinkedList::valid":{"desc":"Check whether the doubly linked list contains more nodes","long_desc":"Checks if the doubly linked list contains any more nodes.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE if the doubly linked list contains any more nodes, FALSE otherwise.","url":"spldoublylinkedlist.valid","name":"valid","class":"SplDoublyLinkedList","params":[{"list":[],"ret_type":"bool"}]},"SplFileInfo::__construct":{"desc":"Construct a new SplFileInfo object","long_desc":"Creates a new SplFileInfo object for the file_name specified. The file does not need to exist, or be readable.","ver":"PHP 5 >= 5.1.2","url":"splfileinfo.construct","name":"__construct","class":"SplFileInfo","params":[{"list":[]}]},"SplFileInfo::__toString":{"desc":"Returns the path to the file as a string","long_desc":"This method will return the file name of the referenced file.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns the path to the file.","url":"splfileinfo.tostring","name":"__toString","class":"SplFileInfo","params":[{"list":[],"ret_type":"void"}]},"SplFileInfo::getATime":{"desc":"Gets last access time of the file","long_desc":"Gets the last access time for the file.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns the time the file was last accessed.","seealso":[],"url":"splfileinfo.getatime","name":"getATime","class":"SplFileInfo","params":[{"list":[],"ret_type":"int"}]},"SplFileInfo::getBasename":{"desc":"Gets the base name of the file","long_desc":"This method returns the base name of the file, directory, or link without path info.","ver":"PHP 5 >= 5.2.2","ret_desc":"Returns the base name without path information.","seealso":[],"url":"splfileinfo.getbasename","name":"getBasename","class":"SplFileInfo","params":[{"list":[],"ret_type":"string"}]},"SplFileInfo::getCTime":{"desc":"Gets the inode change time","long_desc":"Returns the inode change time for the file. The time returned is a Unix timestamp.","ver":"PHP 5 >= 5.1.2","ret_desc":"The last change time, in a Unix timestamp.","seealso":[],"url":"splfileinfo.getctime","name":"getCTime","class":"SplFileInfo","params":[{"list":[],"ret_type":"int"}]},"SplFileInfo::getExtension":{"desc":"Gets the file extension","long_desc":"Retrieves the file extension.","ver":"PHP 5 >= 5.3.6","ret_desc":"Returns a string containing the file extension, or an empty string if the file has no extension.","seealso":[],"url":"splfileinfo.getextension","name":"getExtension","class":"SplFileInfo","params":[{"list":[],"ret_type":"string"}]},"SplFileInfo::getFileInfo":{"desc":"Gets an SplFileInfo object for the file","long_desc":"This method gets an SplFileInfo object for the referenced file.","ver":"PHP 5 >= 5.1.2","ret_desc":"An SplFileInfo object created for the file.","seealso":[],"url":"splfileinfo.getfileinfo","name":"getFileInfo","class":"SplFileInfo","params":[{"list":[],"ret_type":"SplFileInfo"}]},"SplFileInfo::getFilename":{"desc":"Gets the filename","long_desc":"Gets the filename without any path information.","ver":"PHP 5 >= 5.1.2","ret_desc":"The filename.","seealso":[],"url":"splfileinfo.getfilename","name":"getFilename","class":"SplFileInfo","params":[{"list":[],"ret_type":"string"}]},"SplFileInfo::getGroup":{"desc":"Gets the file group","long_desc":"Gets the file group. The group ID is returned in numerical format.","ver":"PHP 5 >= 5.1.2","ret_desc":"The group id in numerical format.","seealso":[],"url":"splfileinfo.getgroup","name":"getGroup","class":"SplFileInfo","params":[{"list":[],"ret_type":"int"}]},"SplFileInfo::getInode":{"desc":"Gets the inode for the file","long_desc":"Gets the inode number for the filesystem object.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns the inode number for the filesystem object.","seealso":[],"url":"splfileinfo.getinode","name":"getInode","class":"SplFileInfo","params":[{"list":[],"ret_type":"int"}]},"SplFileInfo::getLinkTarget":{"desc":"Gets the target of a link","long_desc":"Gets the target of a filesystem link.","ver":"PHP 5 >= 5.2.2","ret_desc":"Returns the target of the filesystem link.","seealso":[],"url":"splfileinfo.getlinktarget","name":"getLinkTarget","class":"SplFileInfo","params":[{"list":[],"ret_type":"string"}]},"SplFileInfo::getMTime":{"desc":"Gets the last modified time","long_desc":"Returns the time when the contents of the file were changed. The time returned is a Unix timestamp.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns the last modified time for the file, in a Unix timestamp.","seealso":[],"url":"splfileinfo.getmtime","name":"getMTime","class":"SplFileInfo","params":[{"list":[],"ret_type":"int"}]},"SplFileInfo::getOwner":{"desc":"Gets the owner of the file","long_desc":"Gets the file owner. The owner ID is returned in numerical format.","ver":"PHP 5 >= 5.1.2","ret_desc":"The owner id in numerical format.","seealso":[],"url":"splfileinfo.getowner","name":"getOwner","class":"SplFileInfo","params":[{"list":[],"ret_type":"int"}]},"SplFileInfo::getPath":{"desc":"Gets the path without filename","long_desc":"Returns the path to the file, omitting the filename and any trailing slash.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns the path to the file.","seealso":[],"url":"splfileinfo.getpath","name":"getPath","class":"SplFileInfo","params":[{"list":[],"ret_type":"string"}]},"SplFileInfo::getPathInfo":{"desc":"Gets an SplFileInfo object for the path","long_desc":"Gets an SplFileInfo object for the parent of the current file.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns an SplFileInfo object for the parent path of the file.","seealso":[],"url":"splfileinfo.getpathinfo","name":"getPathInfo","class":"SplFileInfo","params":[{"list":[],"ret_type":"SplFileInfo"}]},"SplFileInfo::getPathname":{"desc":"Gets the path to the file","long_desc":"Returns the path to the file.","ver":"PHP 5 >= 5.1.2","ret_desc":"The path to the file.","seealso":[],"url":"splfileinfo.getpathname","name":"getPathname","class":"SplFileInfo","params":[{"list":[],"ret_type":"string"}]},"SplFileInfo::getPerms":{"desc":"Gets file permissions","long_desc":"Gets the file permissions for the file.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns the file permissions.","url":"splfileinfo.getperms","name":"getPerms","class":"SplFileInfo","params":[{"list":[],"ret_type":"int"}]},"SplFileInfo::getRealPath":{"desc":"Gets absolute path to file","long_desc":"This method expands all symbolic links, resolves relative references and returns the real path to the file.","ver":"PHP 5 >= 5.2.2","ret_desc":"Returns the path to the file.","seealso":[],"url":"splfileinfo.getrealpath","name":"getRealPath","class":"SplFileInfo","params":[{"list":[],"ret_type":"string"}]},"SplFileInfo::getSize":{"desc":"Gets file size","long_desc":"Returns the filesize in bytes for the file referenced.","ver":"PHP 5 >= 5.1.2","ret_desc":"The filesize in bytes.","seealso":[],"url":"splfileinfo.getsize","name":"getSize","class":"SplFileInfo","params":[{"list":[],"ret_type":"int"}]},"SplFileInfo::getType":{"desc":"Gets file type","long_desc":"Returns the type of the file referenced.","ver":"PHP 5 >= 5.1.2","ret_desc":"A string representing the type of the entry. May be one of file, link, or dir","url":"splfileinfo.gettype","name":"getType","class":"SplFileInfo","params":[{"list":[],"ret_type":"string"}]},"SplFileInfo::isDir":{"desc":"Tells if the file is a directory","long_desc":"This method can be used to determine if the file is a directory.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE if a directory, FALSE otherwise.","url":"splfileinfo.isdir","name":"isDir","class":"SplFileInfo","params":[{"list":[],"ret_type":"bool"}]},"SplFileInfo::isExecutable":{"desc":"Tells if the file is executable","long_desc":"Checks if the file is executable.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE if executable, FALSE otherwise.","url":"splfileinfo.isexecutable","name":"isExecutable","class":"SplFileInfo","params":[{"list":[],"ret_type":"bool"}]},"SplFileInfo::isFile":{"desc":"Tells if the object references a regular file","long_desc":"Checks if the file referenced by this SplFileInfo object exists and is a regular file.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE if the file exists and is a regular file (not a link), FALSE otherwise.","url":"splfileinfo.isfile","name":"isFile","class":"SplFileInfo","params":[{"list":[],"ret_type":"bool"}]},"SplFileInfo::isLink":{"desc":"Tells if the file is a link","long_desc":"Use this method to check if the file referenced by the SplFileInfo object is a link.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE if the file is a link, FALSE otherwise.","seealso":[],"url":"splfileinfo.islink","name":"isLink","class":"SplFileInfo","params":[{"list":[],"ret_type":"bool"}]},"SplFileInfo::isReadable":{"desc":"Tells if file is readable","long_desc":"Check if the file is readable.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE if readable, FALSE otherwise.","url":"splfileinfo.isreadable","name":"isReadable","class":"SplFileInfo","params":[{"list":[],"ret_type":"bool"}]},"SplFileInfo::isWritable":{"desc":"Tells if the entry is writable","long_desc":"Checks if the current entry is writable.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE if writable, FALSE otherwise;","url":"splfileinfo.iswritable","name":"isWritable","class":"SplFileInfo","params":[{"list":[],"ret_type":"bool"}]},"SplFileInfo::openFile":{"desc":"Gets an SplFileObject object for the file","long_desc":"Creates an SplFileObject object of the file. This is useful because SplFileObject contains additional methods for manipulating the file whereas SplFileInfo is only useful for gaining information, like whether the file is writable.","ver":"PHP 5 >= 5.1.2","ret_desc":"The opened file as an SplFileObject object.","seealso":[],"url":"splfileinfo.openfile","name":"openFile","class":"SplFileInfo","params":[{"list":[{"type":"string","var":"$open_mode","beh":1,"desc":"The mode for opening the file. See the fopen() documentation for descriptions of possible modes. The default is read only.","def":"r"},{"type":"bool","var":"$use_include_path","beh":1,"desc":"When set to TRUE, the filename is also searched for within the include_path","def":"false"},{"type":"resource","var":"$context","beh":1,"desc":"Refer to the context section of the manual for a description of contexts.","def":"NULL"}],"ret_type":"SplFileObject"}]},"SplFileInfo::setFileClass":{"desc":"Sets the class name used with SplFileInfo::openFile()","long_desc":"Set the class name which SplFileInfo will use to open files with when openFile() is called. The class name passed to this method must be derived from SplFileObject.","ver":"PHP 5 >= 5.1.2","ret_desc":"No value is returned.","seealso":[],"url":"splfileinfo.setfileclass","name":"setFileClass","class":"SplFileInfo","params":[{"list":[],"ret_type":"void"}]},"SplFileInfo::setInfoClass":{"desc":"Sets the class used with getFileInfo and getPathInfo","long_desc":"Use this method to set a custom class which will be used when getFileInfo and getPathInfo are called. The class name passed to this method must be derived from SplFileInfo.","ver":"PHP 5 >= 5.1.2","ret_desc":"No value is returned.","seealso":[],"url":"splfileinfo.setinfoclass","name":"setInfoClass","class":"SplFileInfo","params":[{"list":[],"ret_type":"void"}]},"SplFileObject::__construct":{"desc":"Construct a new file object.","long_desc":"Construct a new file object.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"splfileobject.construct","name":"__construct","class":"SplFileObject","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"The file to read."},{"type":"string","var":"$open_mode","beh":1,"desc":"The mode in which to open the file. See fopen() for a list of allowed modes.","def":"\"r\""},{"type":"bool","var":"$use_include_path","beh":1,"desc":"Whether to search in the include_path for filename.","def":"false"},{"type":"resource","var":"$context","beh":1,"desc":"A valid context resource created with stream_context_create()."}]}]},"SplFileObject::__toString":{"desc":"Alias of SplFileObject::current()","long_desc":"This method is an alias of SplFileObject::current().","ver":"PHP 5 >= 5.1.0","url":"splfileobject.tostring","name":"__toString","class":"SplFileObject","params":[]},"SplFileObject::current":{"desc":"Retrieve current line of file","long_desc":"Retrieves the current line of the file.","ver":"PHP 5 >= 5.1.0","ret_desc":"Retrieves the current line of the file. If the SplFileObject::READ_CSV flag is set, this method returns an array containing the current line parsed as CSV data.","seealso":[],"url":"splfileobject.current","name":"current","class":"SplFileObject","params":[{"list":[],"ret_type":"string|array"}]},"SplFileObject::eof":{"desc":"Reached end of file","long_desc":"Determine whether the end of file has been reached","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE if file is at EOF, FALSE otherwise.","seealso":[],"url":"splfileobject.eof","name":"eof","class":"SplFileObject","params":[{"list":[],"ret_type":"bool"}]},"SplFileObject::fflush":{"desc":"Flushes the output to the file","long_desc":"Forces a write of all buffered output to the file.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"splfileobject.fflush","name":"fflush","class":"SplFileObject","params":[{"list":[],"ret_type":"bool"}]},"SplFileObject::fgetc":{"desc":"Gets character from file","long_desc":"Gets a character from the file.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns a string containing a single character read from the file or FALSE on EOF.","seealso":[],"url":"splfileobject.fgetc","name":"fgetc","class":"SplFileObject","params":[{"list":[],"ret_type":"string"}]},"SplFileObject::fgetcsv":{"desc":"Gets line from file and parse as CSV fields","long_desc":"Gets a line from the file which is in CSV format and returns an array containing the fields read.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns an indexed array containing the fields read, or FALSE on error.","seealso":[],"url":"splfileobject.fgetcsv","name":"fgetcsv","class":"SplFileObject","params":[{"list":[{"type":"string","var":"$delimiter","beh":1,"desc":"The field delimiter (one character only). Defaults as a comma or the value set using SplFileObject::setCsvControl().","def":"\",\""},{"type":"string","var":"$enclosure","beh":1,"desc":"The field enclosure character (one character only). Defaults as a double quotation mark or the value set using SplFileObject::setCsvControl().","def":"\"\\\"\""},{"type":"string","var":"$escape","beh":1,"desc":"The escape character (one character only). Defaults as a backslash (\\) or the value set using SplFileObject::setCsvControl().","def":"\"\\\\\""}],"ret_type":"array"}]},"SplFileObject::fgets":{"desc":"Gets line from file","long_desc":"Gets a line from the file.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns a string containing the next line from the file, or FALSE on error.","seealso":[],"url":"splfileobject.fgets","name":"fgets","class":"SplFileObject","params":[{"list":[],"ret_type":"string"}]},"SplFileObject::fgetss":{"desc":"Gets line from file and strip HTML tags","long_desc":"Identical to SplFileObject::fgets(), except that SplFileObject::fgetss() attempts to strip any HTML and PHP tags from the text it reads.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns a string containing the next line of the file with HTML and PHP code stripped, or FALSE on error.","seealso":[],"url":"splfileobject.fgetss","name":"fgetss","class":"SplFileObject","params":[{"list":[],"ret_type":"string"}]},"SplFileObject::flock":{"desc":"Portable file locking","long_desc":"Locks or unlocks the file in the same portable way as flock().","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"splfileobject.flock","name":"flock","class":"SplFileObject","params":[{"list":[{"type":"int","var":"$operation","beh":0,"desc":"operation is one of the following:"},{"type":"int","var":"&$wouldblock","beh":1,"desc":"Set to TRUE if the lock would block (EWOULDBLOCK errno condition)."}],"ret_type":"bool"}]},"SplFileObject::fpassthru":{"desc":"Output all remaining data on a file pointer","long_desc":"Reads to EOF on the given file pointer from the current position and writes the results to the output buffer. You may need to call SplFileObject::rewind() to reset the file pointer to the beginning of the file if you have already written data to the file.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the number of characters read from handle and passed through to the output.","seealso":[],"url":"splfileobject.fpassthru","name":"fpassthru","class":"SplFileObject","params":[{"list":[],"ret_type":"int"}]},"SplFileObject::fputcsv":{"desc":"Output a field array as a CSV line","long_desc":"","ver":"No version information available, might only be in SVN","ret_desc":"","url":"splfileobject.fputcsv","name":"fputcsv","class":"SplFileObject","params":[{"list":[{"type":"string","var":"$fields","beh":1,"desc":""},{"type":"string","var":"$delimiter","beh":1,"desc":""},{"type":"string","var":"$enclosure","beh":1,"desc":""}],"ret_type":"int"}]},"SplFileObject::fscanf":{"desc":"Parses input from file according to a format","long_desc":"Reads a line from the file and interprets it according to the specified format, which is described in the documentation for sprintf(). Any whitespace in the format string matches any whitespace in the line from the file. This means that even a tab \\t in the format string can match a single space character in the input stream.","ver":"PHP 5 >= 5.1.0","ret_desc":"If only one parameter is passed to this method, the values parsed will be returned as an array. Otherwise, if optional parameters are passed, the function will return the number of assigned values. The optional parameters must be passed by reference.","seealso":[],"url":"splfileobject.fscanf","name":"fscanf","class":"SplFileObject","params":[{"list":[{"type":"string","var":"$format","beh":0,"desc":"The specified format as described in the sprintf() documentation."},{"type":"mixed","var":"&$...","beh":1,"desc":"The optional assigned values."}],"ret_type":"mixed"}]},"SplFileObject::fseek":{"desc":"Seek to a position","long_desc":"Seek to a position in the file measured in bytes from the beginning of the file, obtained by adding offset to the position specified by whence.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns 0 if the seek was successful, -1 otherwise. Note that seeking past EOF is not considered an error.","seealso":[],"url":"splfileobject.fseek","name":"fseek","class":"SplFileObject","params":[{"list":[{"type":"int","var":"$offset","beh":0,"desc":"The offset. A negative value can be used to move backwards through the file which is useful when SEEK_END is used as the whence value."},{"type":"int","var":"$whence","beh":0,"desc":"whence values are: If whence is not specified, it is assumed to be SEEK_SET.","def":"SEEK_SET"}],"ret_type":"int"}]},"SplFileObject::fstat":{"desc":"Gets information about the file","long_desc":"Gathers the statistics of the file. Behaves identically to fstat().","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns an array with the statistics of the file; the format of the array is described in detail on the stat() manual page.","seealso":[],"url":"splfileobject.fstat","name":"fstat","class":"SplFileObject","params":[{"list":[],"ret_type":"array"}]},"SplFileObject::ftell":{"desc":"Return current file position","long_desc":"Returns the position of the file pointer which represents the current offset in the file stream.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the position of the file pointer as an integer, or FALSE on error.","seealso":[],"url":"splfileobject.ftell","name":"ftell","class":"SplFileObject","params":[{"list":[],"ret_type":"int"}]},"SplFileObject::ftruncate":{"desc":"Truncates the file to a given length","long_desc":"Truncates the file to size bytes.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"splfileobject.ftruncate","name":"ftruncate","class":"SplFileObject","params":[{"list":[],"ret_type":"bool"}]},"SplFileObject::fwrite":{"desc":"Write to file","long_desc":"Writes the contents of string to the file","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the number of bytes written, or NULL on error.","seealso":[],"url":"splfileobject.fwrite","name":"fwrite","class":"SplFileObject","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string to be written to the file."},{"type":"int","var":"$length","beh":1,"desc":"If the length argument is given, writing will stop after length bytes have been written or the end of string is reached, whichever comes first."}],"ret_type":"int"}]},"SplFileObject::getChildren":{"desc":"No purpose","long_desc":"An SplFileObject does not have children so this method returns NULL.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"splfileobject.getchildren","name":"getChildren","class":"SplFileObject","params":[{"list":[],"ret_type":"void"}]},"SplFileObject::getCsvControl":{"desc":"Get the delimiter and enclosure character for CSV","long_desc":"Gets the delimiter and enclosure character used for parsing CSV fields.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns an indexed array containing the delimiter and enclosure character.","seealso":[],"url":"splfileobject.getcsvcontrol","name":"getCsvControl","class":"SplFileObject","params":[{"list":[],"ret_type":"array"}]},"SplFileObject::getCurrentLine":{"desc":"Alias of SplFileObject::fgets()","long_desc":"This method is an alias of SplFileObject::fgets().","ver":"PHP 5 >= 5.1.2","url":"splfileobject.getcurrentline","name":"getCurrentLine","class":"SplFileObject","params":[]},"SplFileObject::getFlags":{"desc":"Gets flags for the SplFileObject","long_desc":"Gets the flags set for an instance of SplFileObject as an integer.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns an integer representing the flags.","seealso":[],"url":"splfileobject.getflags","name":"getFlags","class":"SplFileObject","params":[{"list":[],"ret_type":"int"}]},"SplFileObject::getMaxLineLen":{"desc":"Get maximum line length","long_desc":"Gets the maximum line length as set by SplFileObject::setMaxLineLen().","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the maximum line length if one has been set with SplFileObject::setMaxLineLen(), default is 0.","seealso":[],"url":"splfileobject.getmaxlinelen","name":"getMaxLineLen","class":"SplFileObject","params":[{"list":[],"ret_type":"int"}]},"SplFileObject::hasChildren":{"desc":"SplFileObject does not have children","long_desc":"An SplFileObject does not have children so this method always return FALSE.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns FALSE","seealso":[],"url":"splfileobject.haschildren","name":"hasChildren","class":"SplFileObject","params":[{"list":[],"ret_type":"bool"}]},"SplFileObject::key":{"desc":"Get line number","long_desc":"Gets the current line number.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the current line number.","seealso":[],"url":"splfileobject.key","name":"key","class":"SplFileObject","params":[{"list":[],"ret_type":"int"}]},"SplFileObject::next":{"desc":"Read next line","long_desc":"Moves ahead to the next line in the file.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"splfileobject.next","name":"next","class":"SplFileObject","params":[{"list":[],"ret_type":"void"}]},"SplFileObject::rewind":{"desc":"Rewind the file to the first line","long_desc":"Rewinds the file back to the first line.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"splfileobject.rewind","name":"rewind","class":"SplFileObject","params":[{"list":[],"ret_type":"void"}]},"SplFileObject::seek":{"desc":"Seek to specified line","long_desc":"Seek to specified line in the file.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"splfileobject.seek","name":"seek","class":"SplFileObject","params":[{"list":[],"ret_type":"void"}]},"SplFileObject::setCsvControl":{"desc":"Set the delimiter and enclosure character for CSV","long_desc":"Sets the delimiter and enclosure character for parsing CSV fields.","ver":"PHP 5 >= 5.2.0","ret_desc":"No value is returned.","seealso":[],"url":"splfileobject.setcsvcontrol","name":"setCsvControl","class":"SplFileObject","params":[{"list":[{"type":"string","var":"$delimiter","beh":1,"desc":"The field delimiter (one character only).","def":"\",\""},{"type":"string","var":"$enclosure","beh":1,"desc":"The field enclosure character (one character only).","def":"\"\\\"\""},{"type":"string","var":"$escape","beh":1,"desc":"The field escape character (one character only).","def":"\"\\\\\""}],"ret_type":"void"}]},"SplFileObject::setFlags":{"desc":"Sets flags for the SplFileObject","long_desc":"Sets the flags to be used by the SplFileObject.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"splfileobject.setflags","name":"setFlags","class":"SplFileObject","params":[{"list":[],"ret_type":"void"}]},"SplFileObject::setMaxLineLen":{"desc":"Set maximum line length","long_desc":"Sets the maximum length of a line to be read.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"splfileobject.setmaxlinelen","name":"setMaxLineLen","class":"SplFileObject","params":[{"list":[],"ret_type":"void"}]},"SplFileObject::valid":{"desc":"Not at EOF","long_desc":"Check whether EOF has been reached.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE if not reached EOF, FALSE otherwise.","seealso":[],"url":"splfileobject.valid","name":"valid","class":"SplFileObject","params":[{"list":[],"ret_type":"bool"}]},"SplFixedArray::__construct":{"desc":"Constructs a new fixed array","long_desc":"Initializes a fixed array with a number of NULL values equal to size.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splfixedarray.construct","name":"__construct","class":"SplFixedArray","params":[]},"SplFixedArray::count":{"desc":"Returns the size of the array","long_desc":"Returns the size of the array.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the size of the array.","seealso":[],"url":"splfixedarray.count","name":"count","class":"SplFixedArray","params":[{"list":[],"ret_type":"int"}]},"SplFixedArray::current":{"desc":"Return current array entry","long_desc":"Get the current array element.","ver":"PHP 5 >= 5.3.0","ret_desc":"The current element value.","url":"splfixedarray.current","name":"current","class":"SplFixedArray","params":[{"list":[],"ret_type":"mixed"}]},"SplFixedArray::fromArray":{"desc":"Import a PHP array in a SplFixedArray instance","long_desc":"Import the PHP array array in a new SplFixedArray instance","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an instance of SplFixedArray containing the array content.","url":"splfixedarray.fromarray","name":"fromArray","class":"SplFixedArray","params":[{"list":[{"type":"array","var":"$array","beh":0,"desc":"The array to import."},{"type":"bool","var":"$save_indexes","beh":0,"desc":"Try to save the numeric indexes used in the original array.","def":"true"}],"ret_type":"SplFixedArray"}]},"SplFixedArray::getSize":{"desc":"Gets the size of the array","long_desc":"Gets the size of the array.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the size of the array, as an integer.","seealso":[],"url":"splfixedarray.getsize","name":"getSize","class":"SplFixedArray","params":[{"list":[],"ret_type":"int"}]},"SplFixedArray::key":{"desc":"Return current array index","long_desc":"Returns the current array index.","ver":"PHP 5 >= 5.3.0","ret_desc":"The current array index.","url":"splfixedarray.key","name":"key","class":"SplFixedArray","params":[{"list":[],"ret_type":"int"}]},"SplFixedArray::next":{"desc":"Move to next entry","long_desc":"Move the iterator to the next array entry.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splfixedarray.next","name":"next","class":"SplFixedArray","params":[{"list":[],"ret_type":"void"}]},"SplFixedArray::offsetExists":{"desc":"Returns whether the requested index exists","long_desc":"Checks whether the requested index index exists.","ver":"PHP 5 >= 5.3.0","ret_desc":"TRUE if the requested index exists, otherwise FALSE","url":"splfixedarray.offsetexists","name":"offsetExists","class":"SplFixedArray","params":[{"list":[],"ret_type":"bool"}]},"SplFixedArray::offsetGet":{"desc":"Returns the value at the specified index","long_desc":"Returns the value at the index index.","ver":"PHP 5 >= 5.3.0","ret_desc":"The value at the specified index.","url":"splfixedarray.offsetget","name":"offsetGet","class":"SplFixedArray","params":[{"list":[],"ret_type":"mixed"}]},"SplFixedArray::offsetSet":{"desc":"Sets a new value at a specified index","long_desc":"Sets the value at the specified index to newval.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splfixedarray.offsetset","name":"offsetSet","class":"SplFixedArray","params":[{"list":[{"type":"int","var":"$index","beh":0,"desc":"The index being set."},{"type":"mixed","var":"$newval","beh":0,"desc":"The new value for the index."}],"ret_type":"void"}]},"SplFixedArray::offsetUnset":{"desc":"Unsets the value at the specified $index","long_desc":"Unsets the value at the specified index.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splfixedarray.offsetunset","name":"offsetUnset","class":"SplFixedArray","params":[{"list":[],"ret_type":"void"}]},"SplFixedArray::rewind":{"desc":"Rewind iterator back to the start","long_desc":"Rewinds the iterator to the beginning.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splfixedarray.rewind","name":"rewind","class":"SplFixedArray","params":[{"list":[],"ret_type":"void"}]},"SplFixedArray::setSize":{"desc":"Change the size of an array","long_desc":"Change the size of an array to the new size of size. If size is less than the current array size, any values after the new size will be discarded. If size is greater than the current array size, the array will be padded with NULL values.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splfixedarray.setsize","name":"setSize","class":"SplFixedArray","params":[{"list":[],"ret_type":"int"}]},"SplFixedArray::toArray":{"desc":"Returns a PHP array from the fixed array","long_desc":"Returns a PHP array from the fixed array.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns a PHP array, similar to the fixed array.","url":"splfixedarray.toarray","name":"toArray","class":"SplFixedArray","params":[{"list":[],"ret_type":"array"}]},"SplFixedArray::valid":{"desc":"Check whether the array contains more elements","long_desc":"Checks if the array contains any more elements.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE if the array contains any more elements, FALSE otherwise.","url":"splfixedarray.valid","name":"valid","class":"SplFixedArray","params":[{"list":[],"ret_type":"bool"}]},"SplHeap::__construct":{"desc":"Constructs a new empty heap","long_desc":"This constructs a new empty heap.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splheap.construct","name":"__construct","class":"SplHeap","params":[]},"SplHeap::compare":{"desc":"Compare elements in order to place them correctly in the heap while sifting up.","long_desc":"Compare value1 with value2.","ver":"PHP 5 >= 5.3.0","ret_desc":"Result of the comparison, positive integer if value1 is greater than value2, 0 if they are equal, negative integer otherwise.","url":"splheap.compare","name":"compare","class":"SplHeap","params":[{"list":[{"type":"mixed","var":"$value1","beh":0,"desc":"The value of the first node being compared."},{"type":"mixed","var":"$value2","beh":0,"desc":"The value of the second node being compared."}],"ret_type":"int"}]},"SplHeap::count":{"desc":"Counts the number of elements in the heap.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the number of elements in the heap.","url":"splheap.count","name":"count","class":"SplHeap","params":[{"list":[],"ret_type":"int"}]},"SplHeap::current":{"desc":"Return current node pointed by the iterator","long_desc":"Get the current datastructure node.","ver":"PHP 5 >= 5.3.0","ret_desc":"The current node value.","url":"splheap.current","name":"current","class":"SplHeap","params":[{"list":[],"ret_type":"mixed"}]},"SplHeap::extract":{"desc":"Extracts a node from top of the heap and sift up.","ver":"PHP 5 >= 5.3.0","ret_desc":"The value of the extracted node.","url":"splheap.extract","name":"extract","class":"SplHeap","params":[{"list":[],"ret_type":"mixed"}]},"SplHeap::insert":{"desc":"Inserts an element in the heap by sifting it up.","long_desc":"Insert value in the heap.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splheap.insert","name":"insert","class":"SplHeap","params":[{"list":[],"ret_type":"void"}]},"SplHeap::isEmpty":{"desc":"Checks whether the heap is empty.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns whether the heap is empty.","url":"splheap.isempty","name":"isEmpty","class":"SplHeap","params":[{"list":[],"ret_type":"bool"}]},"SplHeap::key":{"desc":"Return current node index","long_desc":"This function returns the current node index","ver":"PHP 5 >= 5.3.0","ret_desc":"The current node index.","url":"splheap.key","name":"key","class":"SplHeap","params":[{"list":[],"ret_type":"mixed"}]},"SplHeap::next":{"desc":"Move to the next node","long_desc":"Move to the next node.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splheap.next","name":"next","class":"SplHeap","params":[{"list":[],"ret_type":"void"}]},"SplHeap::recoverFromCorruption":{"desc":"Recover from the corrupted state and allow further actions on the heap.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splheap.recoverfromcorruption","name":"recoverFromCorruption","class":"SplHeap","params":[{"list":[],"ret_type":"void"}]},"SplHeap::rewind":{"desc":"Rewind iterator back to the start (no-op)","long_desc":"This rewinds the iterator to the beginning. This is a no-op for heaps as the iterator is virtual and in fact never moves from the top of the heap.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splheap.rewind","name":"rewind","class":"SplHeap","params":[{"list":[],"ret_type":"void"}]},"SplHeap::top":{"desc":"Peeks at the node from the top of the heap","ver":"PHP 5 >= 5.3.0","ret_desc":"The value of the node on the top.","url":"splheap.top","name":"top","class":"SplHeap","params":[{"list":[],"ret_type":"mixed"}]},"SplHeap::valid":{"desc":"Check whether the heap contains more nodes","long_desc":"Checks if the heap contains any more nodes.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE if the heap contains any more nodes, FALSE otherwise.","url":"splheap.valid","name":"valid","class":"SplHeap","params":[{"list":[],"ret_type":"bool"}]},"SplObjectStorage::addAll":{"desc":"Adds all objects from another storage","long_desc":"Adds all objects-data pairs from a different storage in the current storage.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","seealso":[],"url":"splobjectstorage.addall","name":"addAll","class":"SplObjectStorage","params":[{"list":[],"ret_type":"void"}]},"SplObjectStorage::attach":{"desc":"Adds an object in the storage","long_desc":"Adds an object inside the storage, and optionaly associate it to some data.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"splobjectstorage.attach","name":"attach","class":"SplObjectStorage","params":[{"list":[{"type":"object","var":"$object","beh":0,"desc":"The object to add."},{"type":"mixed","var":"$data","beh":0,"desc":"The data to associate with the object.","def":"NULL"}],"ret_type":"void"}]},"SplObjectStorage::contains":{"desc":"Checks if the storage contains a specific object","long_desc":"Checks if the storage contains the object provided.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE if the object is in the storage, FALSE otherwise.","seealso":[],"url":"splobjectstorage.contains","name":"contains","class":"SplObjectStorage","params":[{"list":[],"ret_type":"bool"}]},"SplObjectStorage::count":{"desc":"Returns the number of objects in the storage","long_desc":"Counts the number of objects in the storage.","ver":"PHP 5 >= 5.1.0","ret_desc":"The number of objects in the storage.","seealso":[],"url":"splobjectstorage.count","name":"count","class":"SplObjectStorage","params":[{"list":[],"ret_type":"int"}]},"SplObjectStorage::current":{"desc":"Returns the current storage entry","long_desc":"Returns the current storage entry.","ver":"PHP 5 >= 5.1.0","ret_desc":"The object at the current iterator position.","seealso":[],"url":"splobjectstorage.current","name":"current","class":"SplObjectStorage","params":[{"list":[],"ret_type":"object"}]},"SplObjectStorage::detach":{"desc":"Removes an object from the storage","long_desc":"Removes the object from the storage.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"splobjectstorage.detach","name":"detach","class":"SplObjectStorage","params":[{"list":[],"ret_type":"void"}]},"SplObjectStorage::getHash":{"desc":"Calculate a unique identifier for the contained objects","long_desc":"The function calculates an identifier for the objects added to this SplObjectStorage object. The implementation in SplObjectStorage returns the same value as spl_object_hash(). This identifier must be unique among the objects contained. This means this object will never contain more than one object with the same identifier. As such, it can be used to implement a set (a collection of unique values) where the quality of an object being unique is determined by the value returned by this function being unique.","ver":"No version information available, might only be in SVN","ret_desc":"A string with the calculated identifier. An exception is thrown if any other type is returned.","url":"splobjectstorage.gethash","name":"getHash","class":"SplObjectStorage","params":[{"list":[],"ret_type":"string"}]},"SplObjectStorage::getInfo":{"desc":"Returns the data associated with the current iterator entry","long_desc":"Returns the data, or info, associated with the object pointed by the current iterator position.","ver":"PHP 5 >= 5.3.0","ret_desc":"The data associated with the current iterator position.","seealso":[],"url":"splobjectstorage.getinfo","name":"getInfo","class":"SplObjectStorage","params":[{"list":[],"ret_type":"mixed"}]},"SplObjectStorage::key":{"desc":"Returns the index at which the iterator currently is","long_desc":"Returns the index at which the iterator currently is.","ver":"PHP 5 >= 5.1.0","ret_desc":"The index corresponding to the position of the iterator.","seealso":[],"url":"splobjectstorage.key","name":"key","class":"SplObjectStorage","params":[{"list":[],"ret_type":"int"}]},"SplObjectStorage::next":{"desc":"Move to the next entry","long_desc":"Moves the iterator to the next object in the storage.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"splobjectstorage.next","name":"next","class":"SplObjectStorage","params":[{"list":[],"ret_type":"void"}]},"SplObjectStorage::offsetExists":{"desc":"Checks whether an object exists in the storage","long_desc":"Checks whether an object exists in the storage.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE if the object exists in the storage, and FALSE otherwise.","seealso":[],"url":"splobjectstorage.offsetexists","name":"offsetExists","class":"SplObjectStorage","params":[{"list":[],"ret_type":"bool"}]},"SplObjectStorage::offsetGet":{"desc":"Returns the data associated with an object","long_desc":"Returns the data associated with an object in the storage.","ver":"PHP 5 >= 5.3.0","ret_desc":"The data previously associated with the object in the storage.","seealso":[],"url":"splobjectstorage.offsetget","name":"offsetGet","class":"SplObjectStorage","params":[{"list":[],"ret_type":"mixed"}]},"SplObjectStorage::offsetSet":{"desc":"Associates data to an object in the storage","long_desc":"Associate data to an object in the storage.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","seealso":[],"url":"splobjectstorage.offsetset","name":"offsetSet","class":"SplObjectStorage","params":[{"list":[{"type":"object","var":"$object","beh":0,"desc":"The object to associate data with."},{"type":"mixed","var":"$data","beh":0,"desc":"The data to associate with the object.","def":"NULL"}],"ret_type":"void"}]},"SplObjectStorage::offsetUnset":{"desc":"Removes an object from the storage","long_desc":"Removes an object from the storage.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","seealso":[],"url":"splobjectstorage.offsetunset","name":"offsetUnset","class":"SplObjectStorage","params":[{"list":[],"ret_type":"void"}]},"SplObjectStorage::removeAll":{"desc":"Removes objects contained in another storage from the current storage","long_desc":"Removes objects contained in another storage from the current storage.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","seealso":[],"url":"splobjectstorage.removeall","name":"removeAll","class":"SplObjectStorage","params":[{"list":[],"ret_type":"void"}]},"SplObjectStorage::removeAllExcept":{"desc":"Removes all objects except for those contained in another storage from the current storage","long_desc":"Removes all objects except for those contained in another storage from the current storage.","ver":"PHP 5 >= 5.3.6","ret_desc":"No value is returned.","url":"splobjectstorage.removeallexcept","name":"removeAllExcept","class":"SplObjectStorage","params":[{"list":[],"ret_type":"void"}]},"SplObjectStorage::rewind":{"desc":"Rewind the iterator to the first storage element","long_desc":"Rewind the iterator to the first storage element.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"splobjectstorage.rewind","name":"rewind","class":"SplObjectStorage","params":[{"list":[],"ret_type":"void"}]},"SplObjectStorage::serialize":{"desc":"Serializes the storage","long_desc":"Returns a string representation of the storage.","ver":"PHP 5 >= 5.2.2","ret_desc":"A string representing the storage.","seealso":[],"url":"splobjectstorage.serialize","name":"serialize","class":"SplObjectStorage","params":[{"list":[],"ret_type":"string"}]},"SplObjectStorage::setInfo":{"desc":"Sets the data associated with the current iterator entry","long_desc":"Associates data, or info, with the object currently pointed to by the iterator.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","seealso":[],"url":"splobjectstorage.setinfo","name":"setInfo","class":"SplObjectStorage","params":[{"list":[],"ret_type":"void"}]},"SplObjectStorage::unserialize":{"desc":"Unserializes a storage from its string representation","long_desc":"Unserializes storage entries and attach them to the current storage.","ver":"PHP 5 >= 5.2.2","ret_desc":"No value is returned.","seealso":[],"url":"splobjectstorage.unserialize","name":"unserialize","class":"SplObjectStorage","params":[{"list":[],"ret_type":"void"}]},"SplObjectStorage::valid":{"desc":"Returns if the current iterator entry is valid","long_desc":"Returns if the current iterator entry is valid.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE if the iterator entry is valid, FALSE otherwise.","seealso":[],"url":"splobjectstorage.valid","name":"valid","class":"SplObjectStorage","params":[{"list":[],"ret_type":"bool"}]},"SplPriorityQueue::__construct":{"desc":"Constructs a new empty queue","long_desc":"This constructs a new empty queue.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splpriorityqueue.construct","name":"__construct","class":"SplPriorityQueue","params":[]},"SplPriorityQueue::compare":{"desc":"Compare priorities in order to place elements correctly in the heap while sifting up.","long_desc":"Compare priority1 with priority2.","ver":"PHP 5 >= 5.3.0","ret_desc":"Result of the comparison, positive integer if priority1 is greater than priority2, 0 if they are equal, negative integer otherwise.","url":"splpriorityqueue.compare","name":"compare","class":"SplPriorityQueue","params":[{"list":[{"type":"mixed","var":"$priority1","beh":0,"desc":"The priority of the first node being compared."},{"type":"mixed","var":"$priority2","beh":0,"desc":"The priority of the second node being compared."}],"ret_type":"int"}]},"SplPriorityQueue::count":{"desc":"Counts the number of elements in the queue.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the number of elements in the queue.","url":"splpriorityqueue.count","name":"count","class":"SplPriorityQueue","params":[{"list":[],"ret_type":"int"}]},"SplPriorityQueue::current":{"desc":"Return current node pointed by the iterator","long_desc":"Get the current datastructure node.","ver":"PHP 5 >= 5.3.0","ret_desc":"The value or priority (or both) of the current node, depending on the extract flag.","url":"splpriorityqueue.current","name":"current","class":"SplPriorityQueue","params":[{"list":[],"ret_type":"mixed"}]},"SplPriorityQueue::extract":{"desc":"Extracts a node from top of the heap and sift up.","ver":"PHP 5 >= 5.3.0","ret_desc":"The value or priority (or both) of the extracted node, depending on the extract flag.","url":"splpriorityqueue.extract","name":"extract","class":"SplPriorityQueue","params":[{"list":[],"ret_type":"mixed"}]},"SplPriorityQueue::insert":{"desc":"Inserts an element in the queue by sifting it up.","long_desc":"Insert value with the priority priority in the queue.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splpriorityqueue.insert","name":"insert","class":"SplPriorityQueue","params":[{"list":[{"type":"mixed","var":"$value","beh":0,"desc":"The value to insert."},{"type":"mixed","var":"$priority","beh":0,"desc":"The associated priority."}],"ret_type":"void"}]},"SplPriorityQueue::isEmpty":{"desc":"Checks whether the queue is empty.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns whether the queue is empty.","url":"splpriorityqueue.isempty","name":"isEmpty","class":"SplPriorityQueue","params":[{"list":[],"ret_type":"bool"}]},"SplPriorityQueue::key":{"desc":"Return current node index","long_desc":"This function returns the current node index","ver":"PHP 5 >= 5.3.0","ret_desc":"The current node index.","url":"splpriorityqueue.key","name":"key","class":"SplPriorityQueue","params":[{"list":[],"ret_type":"mixed"}]},"SplPriorityQueue::next":{"desc":"Move to the next node","long_desc":"Extracts the top node from the queue.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splpriorityqueue.next","name":"next","class":"SplPriorityQueue","params":[{"list":[],"ret_type":"void"}]},"SplPriorityQueue::recoverFromCorruption":{"desc":"Recover from the corrupted state and allow further actions on the queue.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splpriorityqueue.recoverfromcorruption","name":"recoverFromCorruption","class":"SplPriorityQueue","params":[{"list":[],"ret_type":"void"}]},"SplPriorityQueue::rewind":{"desc":"Rewind iterator back to the start (no-op)","long_desc":"This rewinds the iterator to the beginning. This is a no-op for heaps as the iterator is virtual and in fact never moves from the top of the heap.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splpriorityqueue.rewind","name":"rewind","class":"SplPriorityQueue","params":[{"list":[],"ret_type":"void"}]},"SplPriorityQueue::setExtractFlags":{"desc":"Sets the mode of extraction","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splpriorityqueue.setextractflags","name":"setExtractFlags","class":"SplPriorityQueue","params":[{"list":[],"ret_type":"void"}]},"SplPriorityQueue::top":{"desc":"Peeks at the node from the top of the queue","ver":"PHP 5 >= 5.3.0","ret_desc":"The value or priority (or both) of the top node, depending on the extract flag.","url":"splpriorityqueue.top","name":"top","class":"SplPriorityQueue","params":[{"list":[],"ret_type":"mixed"}]},"SplPriorityQueue::valid":{"desc":"Check whether the queue contains more nodes","long_desc":"Checks if the queue contains any more nodes.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE if the queue contains any more nodes, FALSE otherwise.","url":"splpriorityqueue.valid","name":"valid","class":"SplPriorityQueue","params":[{"list":[],"ret_type":"bool"}]},"SplStack::__construct":{"desc":"Constructs a new stack implemented using a doubly linked list","long_desc":"This constructs a new empty stack.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splstack.construct","name":"__construct","class":"SplStack","params":[]},"SplStack::setIteratorMode":{"desc":"Sets the mode of iteration","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","url":"splstack.setiteratormode","name":"setIteratorMode","class":"SplStack","params":[{"list":[],"ret_type":"void"}]},"Supported Date and Time Formats":{"url":"datetime.formats","name":"Supported Date and Time Formats","params":[]},"XMLReader::XML":{"desc":"Set the data containing the XML to parse","long_desc":"Set the data containing the XML to parse.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure. If called statically, returns an XMLReader or FALSE on failure.","seealso":[],"url":"xmlreader.xml","name":"XML","class":"XMLReader","params":[{"list":[{"type":"string","var":"$source","beh":1,"desc":"String containing the XML to be parsed."},{"type":"string","var":"$encoding","beh":1,"desc":"The document encoding or NULL."},{"type":"int","var":"$options","beh":1,"desc":"A bitmask of the LIBXML_* constants.","def":0}],"ret_type":"bool"}]},"XMLReader::close":{"desc":"Close the XMLReader input","long_desc":"Closes the input the XMLReader object is currently parsing.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"xmlreader.close","name":"close","class":"XMLReader","params":[{"list":[],"ret_type":"bool"}]},"XMLReader::expand":{"desc":"Returns a copy of the current node as a DOM object","long_desc":"This method copies the current node and returns the appropriate DOM object.","ver":"PHP 5 >= 5.1.2","ret_desc":"The resulting DOMNode or FALSE on error.","url":"xmlreader.expand","name":"expand","class":"XMLReader","params":[{"list":[],"ret_type":"DOMNode"}]},"XMLReader::getAttribute":{"desc":"Get the value of a named attribute","long_desc":"Returns the value of a named attribute or NULL if the attribute does not exist or not positioned on an element node.","ver":"PHP 5 >= 5.1.2","ret_desc":"The value of the attribute, or NULL if no attribute with the given name is found or not positioned on an element node.","seealso":[],"url":"xmlreader.getattribute","name":"getAttribute","class":"XMLReader","params":[{"list":[],"ret_type":"string"}]},"XMLReader::getAttributeNo":{"desc":"Get the value of an attribute by index","long_desc":"Returns the value of an attribute based on its position or an empty string if attribute does not exist or not positioned on an element node.","ver":"PHP 5 >= 5.1.2","ret_desc":"The value of the attribute, or an empty string if no attribute exists at index or not positioned of element.","seealso":[],"url":"xmlreader.getattributeno","name":"getAttributeNo","class":"XMLReader","params":[{"list":[],"ret_type":"string"}]},"XMLReader::getAttributeNs":{"desc":"Get the value of an attribute by localname and URI","long_desc":"Returns the value of an attribute by name and namespace URI or an empty string if attribute does not exist or not positioned on an element node.","ver":"PHP 5 >= 5.1.2","ret_desc":"The value of the attribute, or an empty string if no attribute with the given localName and namespaceURI is found or not positioned of element.","seealso":[],"url":"xmlreader.getattributens","name":"getAttributeNs","class":"XMLReader","params":[{"list":[{"type":"string","var":"$localName","beh":0,"desc":"The local name."},{"type":"string","var":"$namespaceURI","beh":0,"desc":"The namespace URI."}],"ret_type":"string"}]},"XMLReader::getParserProperty":{"desc":"Indicates if specified property has been set","long_desc":"Indicates if specified property has been set.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"xmlreader.getparserproperty","name":"getParserProperty","class":"XMLReader","params":[{"list":[],"ret_type":"bool"}]},"XMLReader::isValid":{"desc":"Indicates if the parsed document is valid","long_desc":"Returns a boolean indicating if the document being parsed is currently valid.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"xmlreader.isvalid","name":"isValid","class":"XMLReader","params":[{"list":[],"ret_type":"bool"}]},"XMLReader::lookupNamespace":{"desc":"Lookup namespace for a prefix","long_desc":"Lookup in scope namespace for a given prefix.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"xmlreader.lookupnamespace","name":"lookupNamespace","class":"XMLReader","params":[{"list":[],"ret_type":"bool"}]},"XMLReader::moveToAttribute":{"desc":"Move cursor to a named attribute","long_desc":"Positions cursor on the named attribute.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"xmlreader.movetoattribute","name":"moveToAttribute","class":"XMLReader","params":[{"list":[],"ret_type":"bool"}]},"XMLReader::moveToAttributeNo":{"desc":"Move cursor to an attribute by index","long_desc":"Positions cursor on attribute based on its position.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"xmlreader.movetoattributeno","name":"moveToAttributeNo","class":"XMLReader","params":[{"list":[],"ret_type":"bool"}]},"XMLReader::moveToAttributeNs":{"desc":"Move cursor to a named attribute","long_desc":"Positions cursor on the named attribute in specified namespace.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"xmlreader.movetoattributens","name":"moveToAttributeNs","class":"XMLReader","params":[{"list":[{"type":"string","var":"$localName","beh":0,"desc":"The local name."},{"type":"string","var":"$namespaceURI","beh":0,"desc":"The namespace URI."}],"ret_type":"bool"}]},"XMLReader::moveToElement":{"desc":"Position cursor on the parent Element of current Attribute","long_desc":"Moves cursor to the parent Element of current Attribute.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE if successful and FALSE if it fails or not positioned on Attribute when this method is called.","seealso":[],"url":"xmlreader.movetoelement","name":"moveToElement","class":"XMLReader","params":[{"list":[],"ret_type":"bool"}]},"XMLReader::moveToFirstAttribute":{"desc":"Position cursor on the first Attribute","long_desc":"Moves cursor to the first Attribute.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"xmlreader.movetofirstattribute","name":"moveToFirstAttribute","class":"XMLReader","params":[{"list":[],"ret_type":"bool"}]},"XMLReader::moveToNextAttribute":{"desc":"Position cursor on the next Attribute","long_desc":"Moves cursor to the next Attribute if positioned on an Attribute or moves to first attribute if positioned on an Element.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"xmlreader.movetonextattribute","name":"moveToNextAttribute","class":"XMLReader","params":[{"list":[],"ret_type":"bool"}]},"XMLReader::next":{"desc":"Move cursor to next node skipping all subtrees","long_desc":"Positions cursor on the next node skipping all subtrees.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"xmlreader.next","name":"next","class":"XMLReader","params":[{"list":[],"ret_type":"bool"}]},"XMLReader::open":{"desc":"Set the URI containing the XML to parse","long_desc":"Set the URI containing the XML document to be parsed.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure. If called statically, returns an XMLReader or FALSE on failure.","seealso":[],"url":"xmlreader.open","name":"open","class":"XMLReader","params":[{"list":[{"type":"string","var":"$URI","beh":1,"desc":"URI pointing to the document."},{"type":"string","var":"$encoding","beh":1,"desc":"The document encoding or NULL."},{"type":"int","var":"$options","beh":1,"desc":"A bitmask of the LIBXML_* constants.","def":0}],"ret_type":"bool"}]},"XMLReader::read":{"desc":"Move to next node in document","long_desc":"Moves cursor to the next node in the document.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"xmlreader.read","name":"read","class":"XMLReader","params":[{"list":[],"ret_type":"bool"}]},"XMLReader::readInnerXML":{"desc":"Retrieve XML from current node","long_desc":"Reads the contents of the current node, including child nodes and markup.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the contents of the current node as a string. Empty string on failure.","seealso":[],"url":"xmlreader.readinnerxml","name":"readInnerXML","class":"XMLReader","params":[{"list":[],"ret_type":"string"}]},"XMLReader::readOuterXML":{"desc":"Retrieve XML from current node, including it self","long_desc":"Reads the contents of the current node, including the node itself.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the contents of current node, including itself, as a string. Empty string on failure.","seealso":[],"url":"xmlreader.readouterxml","name":"readOuterXML","class":"XMLReader","params":[{"list":[],"ret_type":"string"}]},"XMLReader::readString":{"desc":"Reads the contents of the current node as a string","long_desc":"Reads the contents of the current node as a string.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the content of the current node as a string. Empty string on failure.","seealso":[],"url":"xmlreader.readstring","name":"readString","class":"XMLReader","params":[{"list":[],"ret_type":"string"}]},"XMLReader::setParserProperty":{"desc":"Set parser options","long_desc":"Set parser options. The options must be set after XMLReader::open() or XMLReader::xml() are called and before the first XMLReader::read() call.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"xmlreader.setparserproperty","name":"setParserProperty","class":"XMLReader","params":[{"list":[{"type":"int","var":"$property","beh":0,"desc":"One of the parser option constants."},{"type":"bool","var":"$value","beh":0,"desc":"If set to TRUE the option will be enabled otherwise will be disabled."}],"ret_type":"bool"}]},"XMLReader::setRelaxNGSchema":{"desc":"Set the filename or URI for a RelaxNG Schema","long_desc":"Set the filename or URI for the RelaxNG Schema to use for validation.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"xmlreader.setrelaxngschema","name":"setRelaxNGSchema","class":"XMLReader","params":[{"list":[],"ret_type":"bool"}]},"XMLReader::setRelaxNGSchemaSource":{"desc":"Set the data containing a RelaxNG Schema","long_desc":"Set the data containing a RelaxNG Schema to use for validation.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"xmlreader.setrelaxngschemasource","name":"setRelaxNGSchemaSource","class":"XMLReader","params":[{"list":[],"ret_type":"bool"}]},"XMLReader::setSchema":{"desc":"Validate document against XSD","long_desc":"Use W3C XSD schema to validate the document as it is processed. Activation is only possible before the first Read().","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"xmlreader.setschema","name":"setSchema","class":"XMLReader","params":[{"list":[],"ret_type":"bool"}]},"XMLWriter::endAttribute":{"desc":"End attribute","long_desc":"Object oriented styleProcedural style Ends the current attribute.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-end-attribute","name":"endAttribute","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"XMLWriter::endCData":{"desc":"End current CDATA","long_desc":"Object oriented styleProcedural style Ends the current CDATA section.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-end-cdata","name":"endCData","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"XMLWriter::endComment":{"desc":"Create end comment","long_desc":"Object oriented styleProcedural style Ends the current comment.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-end-comment","name":"endComment","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"XMLWriter::endDTD":{"desc":"End current DTD","long_desc":"Object oriented styleProcedural style Ends the DTD of the document.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-end-dtd","name":"endDTD","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"XMLWriter::endDTDAttlist":{"desc":"End current DTD AttList","long_desc":"Object oriented styleProcedural style Ends the current DTD attribute list.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-end-dtd-attlist","name":"endDTDAttlist","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"XMLWriter::endDTDElement":{"desc":"End current DTD element","long_desc":"Object oriented styleProcedural style Ends the current DTD element.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-end-dtd-element","name":"endDTDElement","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"XMLWriter::endDTDEntity":{"desc":"End current DTD Entity","long_desc":"Object oriented styleProcedural style Ends the current DTD entity.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-end-dtd-entity","name":"endDTDEntity","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"XMLWriter::endDocument":{"desc":"End current document","long_desc":"Object oriented styleProcedural style Ends the current document.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-end-document","name":"endDocument","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"XMLWriter::endElement":{"desc":"End current element","long_desc":"Object oriented styleProcedural style Ends the current element.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-end-element","name":"endElement","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"XMLWriter::endPI":{"desc":"End current PI","long_desc":"Object oriented styleProcedural style Ends the current processing instruction.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-end-pi","name":"endPI","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"XMLWriter::flush":{"desc":"Flush current buffer","long_desc":"Object oriented styleProcedural style Flushes the current buffer.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0","ret_desc":"If you opened the writer in memory, this function returns the generated XML buffer, Else, if using URI, this function will write the buffer and return the number of written bytes.","url":"function.xmlwriter-flush","name":"flush","class":"XMLWriter","params":[{"list":[],"ret_type":"mixed"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"bool","var":"$empty","beh":0,"desc":"Whether to empty the buffer or not. Default is TRUE.","def":"true"}],"ret_type":"mixed"}]},"XMLWriter::fullEndElement":{"desc":"End current element","long_desc":"Object oriented styleProcedural style End the current xml element. Writes an end tag even if the element is empty.","ver":"PHP 5 >= 5.2.0, PECL xmlwriter >= 2.0.4","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-full-end-element","name":"fullEndElement","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"XMLWriter::openMemory":{"desc":"Create new xmlwriter using memory for string output","long_desc":"Object oriented styleProcedural style Creates a new XMLWriter using memory for string output.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Object oriented style: Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-open-memory","name":"openMemory","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"resource"}]},"XMLWriter::openURI":{"desc":"Create new xmlwriter using source uri for output","long_desc":"Object oriented styleProcedural style Creates a new XMLWriter using uri for the output.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Object oriented style: Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-open-uri","name":"openURI","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"resource"}]},"XMLWriter::outputMemory":{"desc":"Returns current buffer","long_desc":"Object oriented styleProcedural style Returns the current buffer.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns the current buffer as a string.","seealso":[],"url":"function.xmlwriter-output-memory","name":"outputMemory","class":"XMLWriter","params":[{"list":[],"ret_type":"string"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"bool","var":"$flush","beh":0,"desc":"Whether to flush the output buffer or not. Default is TRUE.","def":"true"}],"ret_type":"string"}]},"XMLWriter::setIndent":{"desc":"Toggle indentation on\/off","long_desc":"Object oriented styleProcedural style Toggles indentation on or off.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-set-indent","name":"setIndent","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"bool","var":"$indent","beh":0,"desc":"Whether indentation is enabled."}],"ret_type":"bool"}]},"XMLWriter::setIndentString":{"desc":"Set string used for indenting","long_desc":"Object oriented styleProcedural style Sets the string which will be used to indent each element\/attribute of the resulting xml.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-set-indent-string","name":"setIndentString","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$indentString","beh":0,"desc":"The indentation string."}],"ret_type":"bool"}]},"XMLWriter::startAttribute":{"desc":"Create start attribute","long_desc":"Object oriented styleProcedural style Starts an attribute.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-start-attribute","name":"startAttribute","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$name","beh":0,"desc":"The attribute name."}],"ret_type":"bool"}]},"XMLWriter::startAttributeNS":{"desc":"Create start namespaced attribute","long_desc":"Object oriented styleProcedural style Starts a namespaced attribute.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-start-attribute-ns","name":"startAttributeNS","class":"XMLWriter","params":[{"list":[{"type":"string","var":"$prefix","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$name","beh":0,"desc":"The namespace prefix."},{"type":"string","var":"$uri","beh":1,"desc":"The attribute name."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$prefix","beh":0,"desc":"The namespace prefix."},{"type":"string","var":"$name","beh":1,"desc":"The attribute name."},{"type":"string","var":"$uri","beh":1,"desc":"The namespace URI."}],"ret_type":"bool"}]},"XMLWriter::startCData":{"desc":"Create start CDATA tag","long_desc":"Object oriented styleProcedural style Starts a CDATA.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-start-cdata","name":"startCData","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"XMLWriter::startComment":{"desc":"Create start comment","long_desc":"Object oriented styleProcedural style Starts a comment.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-start-comment","name":"startComment","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"XMLWriter::startDTD":{"desc":"Create start DTD tag","long_desc":"Object oriented styleProcedural style Starts a DTD.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-start-dtd","name":"startDTD","class":"XMLWriter","params":[{"list":[{"type":"string","var":"$qualifiedName","beh":1,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$publicId","beh":1,"desc":"The qualified name of the document type to create."},{"type":"string","var":"$systemId","beh":1,"desc":"The external subset public identifier."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":1,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$qualifiedName","beh":1,"desc":"The qualified name of the document type to create."},{"type":"string","var":"$publicId","beh":1,"desc":"The external subset public identifier."},{"type":"string","var":"$systemId","beh":1,"desc":"The external subset system identifier."}],"ret_type":"bool"}]},"XMLWriter::startDTDAttlist":{"desc":"Create start DTD AttList","long_desc":"Object oriented styleProcedural style Starts a DTD attribute list.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-start-dtd-attlist","name":"startDTDAttlist","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$name","beh":0,"desc":"The attribute list name."}],"ret_type":"bool"}]},"XMLWriter::startDTDElement":{"desc":"Create start DTD element","long_desc":"Object oriented styleProcedural style Starts a DTD element.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-start-dtd-element","name":"startDTDElement","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$qualifiedName","beh":0,"desc":"The qualified name of the document type to create."}],"ret_type":"bool"}]},"XMLWriter::startDTDEntity":{"desc":"Create start DTD Entity","long_desc":"Object oriented styleProcedural style Starts a DTD entity.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-start-dtd-entity","name":"startDTDEntity","class":"XMLWriter","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"bool","var":"$isparam","beh":0,"desc":"The name of the entity."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$name","beh":0,"desc":"The name of the entity."},{"type":"bool","var":"$isparam","beh":1,"desc":""}],"ret_type":"bool"}]},"XMLWriter::startDocument":{"desc":"Create document tag","long_desc":"Object oriented styleProcedural style Starts a document.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-start-document","name":"startDocument","class":"XMLWriter","params":[{"list":[{"type":"string","var":"$version","beh":1,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$encoding","beh":1,"desc":"The version number of the document as part of the XML declaration. Defaults to 1.0."},{"type":"string","var":"$standalone","beh":1,"desc":"The encoding of the document as part of the XML declaration. NULL by default."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":1,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$version","beh":1,"desc":"The version number of the document as part of the XML declaration. Defaults to 1.0."},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding of the document as part of the XML declaration. NULL by default."},{"type":"string","var":"$standalone","beh":1,"desc":"yes or no.","def":"NULL"}],"ret_type":"bool"}]},"XMLWriter::startElement":{"desc":"Create start element tag","long_desc":"Object oriented styleProcedural style Starts an element.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-start-element","name":"startElement","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$name","beh":0,"desc":"The element name."}],"ret_type":"bool"}]},"XMLWriter::startElementNS":{"desc":"Create start namespaced element tag","long_desc":"Object oriented styleProcedural style Starts a namespaced element.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-start-element-ns","name":"startElementNS","class":"XMLWriter","params":[{"list":[{"type":"string","var":"$prefix","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$name","beh":0,"desc":"The namespace prefix."},{"type":"string","var":"$uri","beh":1,"desc":"The element name."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$prefix","beh":0,"desc":"The namespace prefix."},{"type":"string","var":"$name","beh":1,"desc":"The element name."},{"type":"string","var":"$uri","beh":1,"desc":"The namespace URI."}],"ret_type":"bool"}]},"XMLWriter::startPI":{"desc":"Create start PI tag","long_desc":"Object oriented styleProcedural style Starts a processing instruction tag.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-start-pi","name":"startPI","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$target","beh":0,"desc":"The target of the processing instruction."}],"ret_type":"bool"}]},"XMLWriter::text":{"desc":"Write text","long_desc":"Object oriented styleProcedural style Writes a text.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.xmlwriter-text","name":"text","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$content","beh":0,"desc":"The contents of the text."}],"ret_type":"bool"}]},"XMLWriter::writeAttribute":{"desc":"Write full attribute","long_desc":"Object oriented styleProcedural style Writes a full attribute.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-write-attribute","name":"writeAttribute","class":"XMLWriter","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$value","beh":0,"desc":"The name of the attribute."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$name","beh":0,"desc":"The name of the attribute."},{"type":"string","var":"$value","beh":1,"desc":"The value of the attribute."}],"ret_type":"bool"}]},"XMLWriter::writeAttributeNS":{"desc":"Write full namespaced attribute","long_desc":"Object oriented styleProcedural style Writes a full namespaced attribute.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-write-attribute-ns","name":"writeAttributeNS","class":"XMLWriter","params":[{"list":[{"type":"string","var":"$prefix","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$name","beh":0,"desc":"The namespace prefix."},{"type":"string","var":"$uri","beh":1,"desc":"The attribute name."},{"type":"string","var":"$content","beh":1,"desc":"The namespace URI."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$prefix","beh":0,"desc":"The namespace prefix."},{"type":"string","var":"$name","beh":1,"desc":"The attribute name."},{"type":"string","var":"$uri","beh":1,"desc":"The namespace URI."},{"type":"string","var":"$content","beh":1,"desc":"The attribute value."}],"ret_type":"bool"}]},"XMLWriter::writeCData":{"desc":"Write full CDATA tag","long_desc":"Object oriented styleProcedural style Writes a full CDATA.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-write-cdata","name":"writeCData","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$content","beh":0,"desc":"The contents of the CDATA."}],"ret_type":"bool"}]},"XMLWriter::writeComment":{"desc":"Write full comment tag","long_desc":"Object oriented styleProcedural style Writes a full comment.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-write-comment","name":"writeComment","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$content","beh":0,"desc":"The contents of the comment."}],"ret_type":"bool"}]},"XMLWriter::writeDTD":{"desc":"Write full DTD tag","long_desc":"Object oriented styleProcedural style Writes a full DTD.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-write-dtd","name":"writeDTD","class":"XMLWriter","params":[{"list":[{"type":"string","var":"$name","beh":1,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$publicId","beh":1,"desc":"The DTD name."},{"type":"string","var":"$systemId","beh":1,"desc":"The external subset public identifier."},{"type":"string","var":"$subset","beh":1,"desc":"The external subset system identifier."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":1,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$name","beh":1,"desc":"The DTD name."},{"type":"string","var":"$publicId","beh":1,"desc":"The external subset public identifier."},{"type":"string","var":"$systemId","beh":1,"desc":"The external subset system identifier."},{"type":"string","var":"$subset","beh":1,"desc":"The content of the DTD."}],"ret_type":"bool"}]},"XMLWriter::writeDTDAttlist":{"desc":"Write full DTD AttList tag","long_desc":"Object oriented styleProcedural style Writes a DTD attribute list.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-write-dtd-attlist","name":"writeDTDAttlist","class":"XMLWriter","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$content","beh":0,"desc":"The name of the DTD attribute list."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$name","beh":0,"desc":"The name of the DTD attribute list."},{"type":"string","var":"$content","beh":1,"desc":"The content of the DTD attribute list."}],"ret_type":"bool"}]},"XMLWriter::writeDTDElement":{"desc":"Write full DTD element tag","long_desc":"Object oriented styleProcedural style Writes a full DTD element.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-write-dtd-element","name":"writeDTDElement","class":"XMLWriter","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$content","beh":0,"desc":"The name of the DTD element."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$name","beh":0,"desc":"The name of the DTD element."},{"type":"string","var":"$content","beh":1,"desc":"The content of the element."}],"ret_type":"bool"}]},"XMLWriter::writeDTDEntity":{"desc":"Write full DTD Entity tag","long_desc":"Object oriented styleProcedural style Writes a full DTD entity.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-write-dtd-entity","name":"writeDTDEntity","class":"XMLWriter","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$content","beh":0,"desc":"The name of the entity."},{"type":"bool","var":"$pe","beh":1,"desc":"The content of the entity."},{"type":"string","var":"$pubid","beh":1,"desc":""},{"type":"string","var":"$sysid","beh":1,"desc":""},{"type":"string","var":"$ndataid","beh":1,"desc":""}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$name","beh":0,"desc":"The name of the entity."},{"type":"string","var":"$content","beh":1,"desc":"The content of the entity."},{"type":"bool","var":"$pe","beh":1,"desc":""},{"type":"string","var":"$pubid","beh":1,"desc":""},{"type":"string","var":"$sysid","beh":1,"desc":""},{"type":"string","var":"$ndataid","beh":1,"desc":""}],"ret_type":"bool"}]},"XMLWriter::writeElement":{"desc":"Write full element tag","long_desc":"Object oriented styleProcedural style Writes a full element tag.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-write-element","name":"writeElement","class":"XMLWriter","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$content","beh":1,"desc":"The element name."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$name","beh":1,"desc":"The element name."},{"type":"string","var":"$content","beh":1,"desc":"The element contents."}],"ret_type":"bool"}]},"XMLWriter::writeElementNS":{"desc":"Write full namespaced element tag","long_desc":"Object oriented styleProcedural style Writes a full namespaced element tag.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-write-element-ns","name":"writeElementNS","class":"XMLWriter","params":[{"list":[{"type":"string","var":"$prefix","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$name","beh":1,"desc":"The namespace prefix."},{"type":"string","var":"$uri","beh":1,"desc":"The element name."},{"type":"string","var":"$content","beh":1,"desc":"The namespace URI."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$prefix","beh":1,"desc":"The namespace prefix."},{"type":"string","var":"$name","beh":1,"desc":"The element name."},{"type":"string","var":"$uri","beh":1,"desc":"The namespace URI."},{"type":"string","var":"$content","beh":1,"desc":"The element contents."}],"ret_type":"bool"}]},"XMLWriter::writePI":{"desc":"Writes a PI","long_desc":"Object oriented styleProcedural style Writes a processing instruction.","ver":"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-write-pi","name":"writePI","class":"XMLWriter","params":[{"list":[{"type":"string","var":"$target","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$content","beh":0,"desc":"The target of the processing instruction."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$target","beh":0,"desc":"The target of the processing instruction."},{"type":"string","var":"$content","beh":1,"desc":"The content of the processing instruction."}],"ret_type":"bool"}]},"XMLWriter::writeRaw":{"desc":"Write a raw XML text","long_desc":"Object oriented styleProcedural style Writes a raw xml text.","ver":"PHP 5 >= 5.2.0, PECL xmlwriter >= 2.0.4","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xmlwriter-write-raw","name":"writeRaw","class":"XMLWriter","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"resource","var":"$xmlwriter","beh":0,"desc":"Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory()."},{"type":"string","var":"$content","beh":0,"desc":"The text string to write."}],"ret_type":"bool"}]},"__autoload":{"desc":"Attempt to load undefined class","long_desc":"You can define this function to enable classes autoloading.","ver":"No version information available, might only be in SVN","ret_desc":"No value is returned.","seealso":[],"url":"function.autoload","name":"__autoload","params":[{"list":[],"ret_type":"void"}]},"__halt_compiler":{"desc":"Halts the compiler execution","long_desc":"Halts the execution of the compiler. This can be useful to embed data in PHP scripts, like the installation files. Byte position of the data start can be determined by the __COMPILER_HALT_OFFSET__ constant which is defined only if there is a __halt_compiler() presented in the file.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","url":"function.halt-compiler","name":"__halt_compiler","params":[{"list":[],"ret_type":"void"}]},"abs":{"desc":"Absolute value","long_desc":"Returns the absolute value of number.","ver":"PHP 4, PHP 5","ret_desc":"The absolute value of number. If the argument number is of type float, the return type is also float, otherwise it is integer (as float usually has a bigger value range than integer).","seealso":[],"url":"function.abs","name":"abs","params":[{"list":[],"ret_type":"number"}]},"acos":{"desc":"Arc cosine","long_desc":"Returns the arc cosine of arg in radians. acos() is the complementary function of cos(), which means that a==cos(acos(a)) for every value of a that is within acos()' range.","ver":"PHP 4, PHP 5","ret_desc":"The arc cosine of arg in radians.","seealso":[],"url":"function.acos","name":"acos","params":[{"list":[],"ret_type":"float"}]},"acosh":{"desc":"Inverse hyperbolic cosine","long_desc":"Returns the inverse hyperbolic cosine of arg, i.e. the value whose hyperbolic cosine is arg.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"The inverse hyperbolic cosine of arg","seealso":[],"url":"function.acosh","name":"acosh","params":[{"list":[],"ret_type":"float"}]},"addcslashes":{"desc":"Quote string with slashes in a C style","long_desc":"Returns a string with backslashes before characters that are listed in charlist parameter.","ver":"PHP 4, PHP 5","ret_desc":"Returns the escaped string.","seealso":[],"url":"function.addcslashes","name":"addcslashes","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string to be escaped."},{"type":"string","var":"$charlist","beh":0,"desc":"A list of characters to be escaped. If charlist contains characters \\n, \\r etc., they are converted in C-like style, while other non-alphanumeric characters with ASCII codes lower than 32 and higher than 126 converted to octal representation. When you define a sequence of characters in the charlist argument make sure that you know what characters come between the characters that you set as the start and end of the range. Be careful if you choose to escape characters 0, a, b, f, n, r, t and v. They will be converted to \\0, \\a, \\b, \\f, \\n, \\r, \\t and \\v. In PHP \\0 (NULL), \\r (carriage return), \\n (newline), \\f (form feed), \\v (vertical tab) and \\t (tab) are predefined escape sequences, while in C all of these are predefined escape sequences."}],"ret_type":"string"}]},"addslashes":{"desc":"Quote string with slashes","long_desc":"Returns a string with backslashes before characters that need to be quoted in database queries etc. These characters are single quote ('), double quote (\"), backslash (\\) and NUL (the NULL byte). An example use of addslashes() is when you're entering data into a database. For example, to insert the name O'reilly into a database, you will need to escape it. It's highly recommended to use DBMS specific escape function (e.g. mysqli_real_escape_string() for MySQL or pg_escape_string() for PostgreSQL), but if the DBMS you're using doesn't have an escape function and the DBMS uses \\ to escape special chars, you can use this function. This would only be to get the data into the database, the extra \\ will not be inserted. Having the PHP directive magic_quotes_sybase set to on will mean ' is instead escaped with another '. The PHP directive magic_quotes_gpc is on by default, and it essentially runs addslashes() on all GET, POST, and COOKIE data. Do not use addslashes() on strings that have already been escaped with magic_quotes_gpc as you'll then do double escaping. The function get_magic_quotes_gpc() may come in handy for checking this.","ver":"PHP 4, PHP 5","ret_desc":"Returns the escaped string.","seealso":[],"url":"function.addslashes","name":"addslashes","params":[{"list":[],"ret_type":"string"}]},"aggregate":{"desc":"Dynamic class and object aggregation of methods and properties","long_desc":"Aggregates methods and properties defined in a class to an existing object. Methods and properties with names starting with an underscore character (_) are considered private to the aggregated class and are not used, constructors are also excluded from the aggregation procedure.","ver":"PHP 4 >= 4.2.0","ret_desc":"No value is returned.","seealso":[],"url":"function.aggregate","name":"aggregate","params":[{"list":[{"type":"object","var":"$object","beh":0,"desc":""},{"type":"string","var":"$class_name","beh":0,"desc":""}],"ret_type":"void"}]},"aggregate_info":{"desc":"Gets aggregation information for a given object","long_desc":"Gets the aggregation information for the given object.","ver":"PHP 4 >= 4.3.0","ret_desc":"Returns the aggregation information as an associative array of arrays of methods and properties. The key for the main array is the name of the aggregated class.","seealso":[],"url":"function.aggregate-info","name":"aggregate_info","params":[{"list":[],"ret_type":"array"}]},"aggregate_methods":{"desc":"Dynamic class and object aggregation of methods","long_desc":"Aggregates all methods defined in a class to an existing object, except for the class constructor, or methods whose names start with an underscore character (_) which are considered private to the aggregated class.","ver":"PHP 4 >= 4.2.0","ret_desc":"No value is returned.","seealso":[],"url":"function.aggregate-methods","name":"aggregate_methods","params":[{"list":[{"type":"object","var":"$object","beh":0,"desc":""},{"type":"string","var":"$class_name","beh":0,"desc":""}],"ret_type":"void"}]},"aggregate_methods_by_list":{"desc":"Selective dynamic class methods aggregation to an object","long_desc":"Aggregates methods from a class to an existing object using a list of method names. The class constructor or methods whose names start with an underscore character (_), which are considered private to the aggregated class, are always excluded.","ver":"PHP 4 >= 4.2.0","ret_desc":"No value is returned.","seealso":[],"url":"function.aggregate-methods-by-list","name":"aggregate_methods_by_list","params":[{"list":[{"type":"object","var":"$object","beh":0,"desc":""},{"type":"string","var":"$class_name","beh":1,"desc":""},{"type":"array","var":"$methods_list","beh":1,"desc":""},{"type":"bool","var":"$exclude","beh":1,"desc":"The optional parameter exclude is used to decide whether the list contains the names of methods to include in the aggregation (i.e. exclude is FALSE), or to exclude from the aggregation (exclude is TRUE).","def":"false"}],"ret_type":"void"}]},"aggregate_methods_by_regexp":{"desc":"Selective class methods aggregation to an object using a regular expression","long_desc":"Aggregates methods from a class to an existing object using a regular expression to match method names. The class constructor or methods whose names start with an underscore character (_), which are considered private to the aggregated class, are always excluded.","ver":"PHP 4 >= 4.2.0","ret_desc":"No value is returned.","seealso":[],"url":"function.aggregate-methods-by-regexp","name":"aggregate_methods_by_regexp","params":[{"list":[{"type":"object","var":"$object","beh":0,"desc":""},{"type":"string","var":"$class_name","beh":1,"desc":""},{"type":"string","var":"$regexp","beh":1,"desc":""},{"type":"bool","var":"$exclude","beh":1,"desc":"The optional parameter exclude is used to decide whether the regular expression will select the names of methods to include in the aggregation (i.e. exclude is FALSE), or to exclude from the aggregation (exclude is TRUE).","def":"false"}],"ret_type":"void"}]},"aggregate_properties":{"desc":"Dynamic aggregation of class properties to an object","long_desc":"Aggregates all properties defined in a class to an existing object, except for properties whose names start with an underscore character (_) which are considered private to the aggregated class.","ver":"PHP 4 >= 4.2.0","ret_desc":"No value is returned.","seealso":[],"url":"function.aggregate-properties","name":"aggregate_properties","params":[{"list":[{"type":"object","var":"$object","beh":0,"desc":""},{"type":"string","var":"$class_name","beh":0,"desc":""}],"ret_type":"void"}]},"aggregate_properties_by_list":{"desc":"Selective dynamic class properties aggregation to an object","long_desc":"Aggregates properties from a class to an existing object using a list of property names. The properties whose names start with an underscore character (_), which are considered private to the aggregated class, are always excluded.","ver":"PHP 4 >= 4.2.0","ret_desc":"No value is returned.","seealso":[],"url":"function.aggregate-properties-by-list","name":"aggregate_properties_by_list","params":[{"list":[{"type":"object","var":"$object","beh":0,"desc":""},{"type":"string","var":"$class_name","beh":1,"desc":""},{"type":"array","var":"$properties_list","beh":1,"desc":""},{"type":"bool","var":"$exclude","beh":1,"desc":"The optional parameter exclude is used to decide whether the list contains the names of class properties to include in the aggregation (i.e. exclude is FALSE), or to exclude from the aggregation (exclude is TRUE).","def":"false"}],"ret_type":"void"}]},"aggregate_properties_by_regexp":{"desc":"Selective class properties aggregation to an object using a regular expression","long_desc":"Aggregates properties from a class to an existing object using a regular expression to match their names. The properties whose names start with an underscore character (_), which are considered private to the aggregated class, are always excluded.","ver":"PHP 4 >= 4.2.0","ret_desc":"No value is returned.","seealso":[],"url":"function.aggregate-properties-by-regexp","name":"aggregate_properties_by_regexp","params":[{"list":[{"type":"object","var":"$object","beh":0,"desc":""},{"type":"string","var":"$class_name","beh":1,"desc":""},{"type":"string","var":"$regexp","beh":1,"desc":""},{"type":"bool","var":"$exclude","beh":1,"desc":"The optional parameter exclude is used to decide whether the regular expression will select the names of class properties to include in the aggregation (i.e. exclude is FALSE), or to exclude from the aggregation (exclude is TRUE).","def":"false"}],"ret_type":"void"}]},"aggregation_info":{"desc":"Alias of aggregate_info()","long_desc":"This function is an alias of: aggregate_info().","ver":"PHP 4 >= 4.2.0 and < 4.3.0","url":"function.aggregation-info","name":"aggregation_info","params":[]},"apache_child_terminate":{"desc":"Terminate apache process after this request","long_desc":"apache_child_terminate() will register the Apache process executing the current PHP request for termination once execution of PHP code is completed. It may be used to terminate a process after a script with high memory consumption has been run as memory will usually only be freed internally but not given back to the operating system.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns TRUE if PHP is running as an Apache 1 module, the Apache version is non-multithreaded, and the child_terminate PHP directive is enabled (disabled by default). If these conditions are not met, FALSE is returned and an error of level E_WARNING is generated.","seealso":[],"url":"function.apache-child-terminate","name":"apache_child_terminate","params":[{"list":[],"ret_type":"bool"}]},"apache_get_modules":{"desc":"Get a list of loaded Apache modules","long_desc":"Get a list of loaded Apache modules.","ver":"PHP 4 >= 4.3.2, PHP 5","ret_desc":"An array of loaded Apache modules.","url":"function.apache-get-modules","name":"apache_get_modules","params":[{"list":[],"ret_type":"array"}]},"apache_get_version":{"desc":"Fetch Apache version","long_desc":"Fetch the Apache version.","ver":"PHP 4 >= 4.3.2, PHP 5","ret_desc":"Returns the Apache version on success or FALSE on failure.","seealso":[],"url":"function.apache-get-version","name":"apache_get_version","params":[{"list":[],"ret_type":"string"}]},"apache_getenv":{"desc":"Get an Apache subprocess_env variable","long_desc":"Retrieve an Apache environment variable specified by variable. This function requires Apache 2 otherwise it's undefined.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"The value of the Apache environment variable on success, or FALSE on failure","seealso":[],"url":"function.apache-getenv","name":"apache_getenv","params":[{"list":[{"type":"string","var":"$variable","beh":0,"desc":"The Apache environment variable"},{"type":"bool","var":"$walk_to_top","beh":0,"desc":"Whether to get the top-level variable available to all Apache layers.","def":"false"}],"ret_type":"string"}]},"apache_lookup_uri":{"desc":"Perform a partial request for the specified URI and return all info about it","long_desc":"This performs a partial request for a URI. It goes just far enough to obtain all the important information about the given resource. This function is only supported when PHP is installed as an Apache module.","ver":"PHP 4, PHP 5","ret_desc":"An object of related URI information. The properties of this object are:","url":"function.apache-lookup-uri","name":"apache_lookup_uri","params":[{"list":[],"ret_type":"object"}]},"apache_note":{"desc":"Get and set apache request notes","long_desc":"This function is a wrapper for Apache's table_get and table_set. It edits the table of notes that exists during a request. The table's purpose is to allow Apache modules to communicate. The main use for apache_note() is to pass information from one module to another within the same request.","ver":"PHP 4, PHP 5","ret_desc":"If called with one argument, it returns the current value of note note_name. If called with two arguments, it sets the value of note note_name to note_value and returns the previous value of note note_name. If the note cannot be retrieved, FALSE is returned.","seealso":[],"url":"function.apache-note","name":"apache_note","params":[{"list":[{"type":"string","var":"$note_name","beh":0,"desc":"The name of the note."},{"type":"string","var":"$note_value","beh":0,"desc":"The value of the note.","def":"\"\""}],"ret_type":"string"}]},"apache_request_headers":{"desc":"Fetch all HTTP request headers","long_desc":"Fetches all HTTP request headers from the current request.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"An associative array of all the HTTP headers in the current request, or FALSE on failure.","seealso":[],"url":"function.apache-request-headers","name":"apache_request_headers","params":[{"list":[],"ret_type":"array"}]},"apache_reset_timeout":{"desc":"Reset the Apache write timer","long_desc":"apache_reset_timeout() resets the Apache write timer, which defaults to 300 seconds. With set_time_limit(0); ignore_user_abort(true) and periodic apache_reset_timeout() calls, Apache can theoretically run forever. This function requires Apache 1.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.apache-reset-timeout","name":"apache_reset_timeout","params":[{"list":[],"ret_type":"bool"}]},"apache_response_headers":{"desc":"Fetch all HTTP response headers","long_desc":"Fetch all HTTP response headers.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"An array of all Apache response headers on success or FALSE on failure.","seealso":[],"url":"function.apache-response-headers","name":"apache_response_headers","params":[{"list":[],"ret_type":"array"}]},"apache_setenv":{"desc":"Set an Apache subprocess_env variable","long_desc":"apache_setenv() sets the value of the Apache environment variable specified by variable.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.apache-setenv","name":"apache_setenv","params":[{"list":[{"type":"string","var":"$variable","beh":0,"desc":"The environment variable that's being set."},{"type":"string","var":"$value","beh":1,"desc":"The new variable value."},{"type":"bool","var":"$walk_to_top","beh":1,"desc":"Whether to set the top-level variable available to all Apache layers.","def":"false"}],"ret_type":"bool"}]},"apc_add":{"desc":"Cache a new variable in the data store","long_desc":"Caches a variable in the data store, only if it's not already stored.","ver":"PECL apc >= 3.0.13","ret_desc":"Returns TRUE on success or FALSE on failure. Second syntax returns array with error keys.","seealso":[],"url":"function.apc-add","name":"apc_add","params":[{"list":[{"type":"string","var":"$key","beh":1,"desc":"Store the variable using this name. keys are cache-unique, so attempting to use apc_add() to store data with a key that already exists will not overwrite the existing data, and will instead return FALSE. (This is the only difference between apc_add() and apc_store().)"},{"type":"mixed","var":"$var","beh":1,"desc":"The variable to store"},{"type":"int","var":"$ttl","beh":1,"desc":"Time To Live; store var in the cache for ttl seconds. After the ttl has passed, the stored variable will be expunged from the cache (on the next request). If no ttl is supplied (or if the ttl is 0), the value will persist until it is removed from the cache manually, or otherwise fails to exist in the cache (clear, restart, etc.).","def":0}],"ret_type":"bool"},{"list":[{"type":"array","var":"$values","beh":1,"desc":"Store the variable using this name. keys are cache-unique, so attempting to use apc_add() to store data with a key that already exists will not overwrite the existing data, and will instead return FALSE. (This is the only difference between apc_add() and apc_store().)"},{"type":"mixed","var":"$unused","beh":1,"desc":"The variable to store"},{"type":"int","var":"$ttl","beh":1,"desc":"Time To Live; store var in the cache for ttl seconds. After the ttl has passed, the stored variable will be expunged from the cache (on the next request). If no ttl is supplied (or if the ttl is 0), the value will persist until it is removed from the cache manually, or otherwise fails to exist in the cache (clear, restart, etc.).","def":0}],"ret_type":"array"}]},"apc_bin_dump":{"desc":"Get a binary dump of the given files and user variables","long_desc":"Returns a binary dump of the given files and user variables from the APC cache. A NULL for files or user_vars signals a dump of every entry, whereas array() will dump nothing.","ver":"PECL apc >= 3.1.4","ret_desc":"Returns a binary dump of the given files and user variables from the APC cache, FALSE if APC is not enabled, or NULL if an unknown error is encountered.","seealso":[],"url":"function.apc-bin-dump","name":"apc_bin_dump","params":[{"list":[{"type":"array","var":"$files","beh":1,"desc":"The files. Passing in NULL signals a dump of every entry, while passing in array() will dump nothing."},{"type":"array","var":"$user_vars","beh":1,"desc":"The user vars. Passing in NULL signals a dump of every entry, while passing in array() will dump nothing."}],"ret_type":"string"}]},"apc_bin_dumpfile":{"desc":"Output a binary dump of cached files and user variables to a file","long_desc":"Outputs a binary dump of the given files and user variables from the APC cache to the named file.","ver":"PECL apc >= 3.1.4","ret_desc":"The number of bytes written to the file, otherwise FALSE if APC is not enabled, filename is an invalid file name, filename can't be opened, the file dump can't be completed (e.g., the hard drive is out of disk space), or an unknown error was encountered.","seealso":[],"url":"function.apc-bin-dumpfile","name":"apc_bin_dumpfile","params":[{"list":[{"type":"array","var":"$files","beh":1,"desc":"The file names being dumped."},{"type":"array","var":"$user_vars","beh":1,"desc":"The user variables being dumped."},{"type":"string","var":"$filename","beh":1,"desc":"The filename where the dump is being saved."},{"type":"int","var":"$flags","beh":1,"desc":"Flags passed to the filename stream. See the file_put_contents() documentation for details.","def":0},{"type":"resource","var":"$context","beh":1,"desc":"The context passed to the filename stream. See the file_put_contents() documentation for details."}],"ret_type":"int"}]},"apc_bin_load":{"desc":"Load a binary dump into the APC file\/user cache","long_desc":"Loads the given binary dump into the APC file\/user cache.","ver":"PECL apc >= 3.1.4","ret_desc":"Returns TRUE if the binary dump data was loaded with success, otherwise FALSE is returned. FALSE is returned if APC is not enabled, or if the data is not a valid APC binary dump (e.g., unexpected size).","seealso":[],"url":"function.apc-bin-load","name":"apc_bin_load","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":"The binary dump being loaded, likely from apc_bin_dump()."},{"type":"int","var":"$flags","beh":0,"desc":"Either APC_BIN_VERIFY_CRC32, APC_BIN_VERIFY_MD5, or both.","def":0}],"ret_type":"bool"}]},"apc_bin_loadfile":{"desc":"Load a binary dump from a file into the APC file\/user cache","long_desc":"Loads a binary dump from a file into the APC file\/user cache.","ver":"PECL apc >= 3.1.4","ret_desc":"Returns TRUE on success, otherwise FALSE Reasons it may return FALSE include APC is not enabled, filename is an invalid file name or empty, filename can't be opened, the file dump can't be completed, or if the data is not a valid APC binary dump (e.g., unexpected size).","seealso":[],"url":"function.apc-bin-loadfile","name":"apc_bin_loadfile","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"The file name containing the dump, likely from apc_bin_dumpfile()."},{"type":"resource","var":"$context","beh":1,"desc":"The files context."},{"type":"int","var":"$flags","beh":1,"desc":"Either APC_BIN_VERIFY_CRC32, APC_BIN_VERIFY_MD5, or both."}],"ret_type":"bool"}]},"apc_cache_info":{"desc":"Retrieves cached information from APC's data store","long_desc":"Retrieves cached information and meta-data from APC's data store.","ver":"PECL apc >= 2.0.0","ret_desc":"Array of cached data (and meta-data) or FALSE on failure","seealso":[],"url":"function.apc-cache-info","name":"apc_cache_info","params":[{"list":[{"type":"string","var":"$cache_type","beh":1,"desc":"If cache_type is \"user\", information about the user cache will be returned. If cache_type is \"filehits\", information about which files have been served from the bytecode cache for the current request will be returned. This feature must be enabled at compile time using --enable-filehits . If an invalid or no cache_type is specified, information about the system cache (cached files) will be returned."},{"type":"bool","var":"$limited","beh":1,"desc":"If limited is TRUE, the return value will exclude the individual list of cache entries. This is useful when trying to optimize calls for statistics gathering.","def":"false"}],"ret_type":"array"}]},"apc_cas":{"desc":"Updates an old value with a new value","long_desc":"apc_cas() updates an already existing integer value if the old parameter matches the currently stored value with the value of the new parameter.","ver":"PECL apc >= 3.1.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.apc-cas","name":"apc_cas","params":[{"list":[{"type":"string","var":"$key","beh":0,"desc":"The key of the value being updated."},{"type":"int","var":"$old","beh":0,"desc":"The old value (the value currently stored)."},{"type":"int","var":"$new","beh":1,"desc":"The new value to update to."}],"ret_type":"bool"}]},"apc_clear_cache":{"desc":"Clears the APC cache","long_desc":"Clears the user\/system cache.","ver":"PECL apc >= 2.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.apc-clear-cache","name":"apc_clear_cache","params":[{"list":[],"ret_type":"bool"}]},"apc_compile_file":{"desc":"Stores a file in the bytecode cache, bypassing all filters.","long_desc":"Stores a file in the bytecode cache, bypassing all filters.","ver":"PECL apc >= 3.0.13","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.apc-compile-file","name":"apc_compile_file","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"Full or relative path to a PHP file that will be compiled and stored in the bytecode cache."},{"type":"bool","var":"$atomic","beh":0,"desc":"","def":"true"}],"ret_type":"mixed"}]},"apc_dec":{"desc":"Decrease a stored number","long_desc":"Decreases a stored integer value.","ver":"PECL apc >= 3.1.1","ret_desc":"Returns the current value of key's value on success, or FALSE on failure","seealso":[],"url":"function.apc-dec","name":"apc_dec","params":[{"list":[{"type":"string","var":"$key","beh":1,"desc":"The key of the value being decreased."},{"type":"int","var":"$step","beh":1,"desc":"The step, or value to decrease.","def":1},{"type":"bool","var":"&$success","beh":1,"desc":"Optionally pass the success or fail boolean value to this referenced variable."}],"ret_type":"int"}]},"apc_define_constants":{"desc":"Defines a set of constants for retrieval and mass-definition","long_desc":"define() is notoriously slow. Since the main benefit of APC is to increase the performance of scripts\/applications, this mechanism is provided to streamline the process of mass constant definition. However, this function does not perform as well as anticipated. For a better-performing solution, try the \u00bb\u00a0hidef extension from PECL.","ver":"PECL apc >= 3.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.apc-define-constants","name":"apc_define_constants","params":[{"list":[{"type":"string","var":"$key","beh":0,"desc":"The key serves as the name of the constant set being stored. This key is used to retrieve the stored constants in apc_load_constants()."},{"type":"array","var":"$constants","beh":1,"desc":"An associative array of constant_name => value pairs. The constant_name must follow the normal constant naming rules. value must evaluate to a scalar value."},{"type":"bool","var":"$case_sensitive","beh":1,"desc":"The default behaviour for constants is to be declared case-sensitive; i.e. CONSTANT and Constant represent different values. If this parameter evaluates to FALSE the constants will be declared as case-insensitive symbols.","def":"true"}],"ret_type":"bool"}]},"apc_delete":{"desc":"Removes a stored variable from the cache","long_desc":"Removes a stored variable from the cache.","ver":"PECL apc >= 3.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.apc-delete","name":"apc_delete","params":[{"list":[],"ret_type":"mixed"}]},"apc_delete_file":{"desc":"Deletes files from the opcode cache","long_desc":"Deletes the given files from the opcode cache.","ver":"PECL apc >= 3.1.1","ret_desc":"Returns TRUE on success or FALSE on failure. Or if keys is an array, then an empty array is returned on success, or an array of failed files is returned.","seealso":[],"url":"function.apc-delete-file","name":"apc_delete_file","params":[{"list":[],"ret_type":"mixed"}]},"apc_exists":{"desc":"Checks if APC key exists","long_desc":"Checks if one ore more APC keys exist.","ver":"PECL apc >= 3.1.4","ret_desc":"Returns TRUE if the key exists, otherwise FALSE Or if an array was passed to keys, then an array is returned that contains all existing keys, or an empty array if none exist.","seealso":[],"url":"function.apc-exists","name":"apc_exists","params":[{"list":[],"ret_type":"mixed"}]},"apc_fetch":{"desc":"Fetch a stored variable from the cache","long_desc":"Fetchs a stored variable from the cache.","ver":"PECL apc >= 3.0.0","ret_desc":"The stored variable or array of variables on success; FALSE on failure","seealso":[],"url":"function.apc-fetch","name":"apc_fetch","params":[{"list":[{"type":"mixed","var":"$key","beh":0,"desc":"The key used to store the value (with apc_store()). If an array is passed then each element is fetched and returned."},{"type":"bool","var":"&$success","beh":1,"desc":"Set to TRUE in success and FALSE in failure."}],"ret_type":"mixed"}]},"apc_inc":{"desc":"Increase a stored number","long_desc":"Increases a stored number.","ver":"PECL apc >= 3.1.1","ret_desc":"Returns the current value of key's value on success, or FALSE on failure","seealso":[],"url":"function.apc-inc","name":"apc_inc","params":[{"list":[{"type":"string","var":"$key","beh":1,"desc":"The key of the value being increased."},{"type":"int","var":"$step","beh":1,"desc":"The step, or value to increase.","def":1},{"type":"bool","var":"&$success","beh":1,"desc":"Optionally pass the success or fail boolean value to this referenced variable."}],"ret_type":"int"}]},"apc_load_constants":{"desc":"Loads a set of constants from the cache","long_desc":"Loads a set of constants from the cache.","ver":"PECL apc >= 3.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.apc-load-constants","name":"apc_load_constants","params":[{"list":[{"type":"string","var":"$key","beh":0,"desc":"The name of the constant set (that was stored with apc_define_constants()) to be retrieved."},{"type":"bool","var":"$case_sensitive","beh":0,"desc":"The default behaviour for constants is to be declared case-sensitive; i.e. CONSTANT and Constant represent different values. If this parameter evaluates to FALSE the constants will be declared as case-insensitive symbols.","def":"true"}],"ret_type":"bool"}]},"apc_sma_info":{"desc":"Retrieves APC's Shared Memory Allocation information","long_desc":"Retrieves APC's Shared Memory Allocation information.","ver":"PECL apc >= 2.0.0","ret_desc":"Array of Shared Memory Allocation data; FALSE on failure.","seealso":[],"url":"function.apc-sma-info","name":"apc_sma_info","params":[{"list":[],"ret_type":"array"}]},"apc_store":{"desc":"Cache a variable in the data store","long_desc":"Cache a variable in the data store.","ver":"PECL apc >= 3.0.0","ret_desc":"Returns TRUE on success or FALSE on failure. Second syntax returns array with error keys.","seealso":[],"url":"function.apc-store","name":"apc_store","params":[{"list":[{"type":"string","var":"$key","beh":0,"desc":"Store the variable using this name. keys are cache-unique, so storing a second value with the same key will overwrite the original value."},{"type":"mixed","var":"$var","beh":1,"desc":"The variable to store"},{"type":"int","var":"$ttl","beh":1,"desc":"Time To Live; store var in the cache for ttl seconds. After the ttl has passed, the stored variable will be expunged from the cache (on the next request). If no ttl is supplied (or if the ttl is 0), the value will persist until it is removed from the cache manually, or otherwise fails to exist in the cache (clear, restart, etc.).","def":0}],"ret_type":"bool"},{"list":[{"type":"array","var":"$values","beh":1,"desc":"Store the variable using this name. keys are cache-unique, so storing a second value with the same key will overwrite the original value."},{"type":"mixed","var":"$unused","beh":1,"desc":"The variable to store"},{"type":"int","var":"$ttl","beh":1,"desc":"Time To Live; store var in the cache for ttl seconds. After the ttl has passed, the stored variable will be expunged from the cache (on the next request). If no ttl is supplied (or if the ttl is 0), the value will persist until it is removed from the cache manually, or otherwise fails to exist in the cache (clear, restart, etc.).","def":0}],"ret_type":"array"}]},"apd_breakpoint":{"desc":"Stops the interpreter and waits on a CR from the socket","long_desc":"This can be used to stop the running of your script, and await responses on the connected socket. To step the program, just send enter (a blank line), or enter a php command to be executed.","ver":"PECL apd >= 0.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.apd-breakpoint","name":"apd_breakpoint","params":[{"list":[],"ret_type":"bool"}]},"apd_callstack":{"desc":"Returns the current call stack as an array","long_desc":"Returns the current call stack as an array","ver":"PECL apd 0.2-0.4","ret_desc":"An array containing the current call stack.","url":"function.apd-callstack","name":"apd_callstack","params":[{"list":[],"ret_type":"array"}]},"apd_clunk":{"desc":"Throw a warning and a callstack","long_desc":"Behaves like perl's Carp::cluck. Throw a warning and a callstack.","ver":"PECL apd 0.2-0.4","ret_desc":"No value is returned.","seealso":[],"url":"function.apd-clunk","name":"apd_clunk","params":[{"list":[{"type":"string","var":"$warning","beh":0,"desc":"The warning to throw."},{"type":"string","var":"$delimiter","beh":1,"desc":"The delimiter. Default to <BR \/>."}],"ret_type":"void"}]},"apd_continue":{"desc":"Restarts the interpreter","long_desc":"Usually sent via the socket to restart the interpreter.","ver":"PECL apd >= 0.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.apd-continue","name":"apd_continue","params":[{"list":[],"ret_type":"bool"}]},"apd_croak":{"desc":"Throw an error, a callstack and then exit","long_desc":"Behaves like perl's Carp::croak. Throw an error, a callstack and then exit.","ver":"PECL apd 0.2-0.4","ret_desc":"No value is returned.","seealso":[],"url":"function.apd-croak","name":"apd_croak","params":[{"list":[{"type":"string","var":"$warning","beh":0,"desc":"The warning to throw."},{"type":"string","var":"$delimiter","beh":1,"desc":"The delimiter. Default to <BR \/>."}],"ret_type":"void"}]},"apd_dump_function_table":{"desc":"Outputs the current function table","long_desc":"Outputs the current function table.","ver":"Unknown","ret_desc":"No value is returned.","url":"function.apd-dump-function-table","name":"apd_dump_function_table","params":[{"list":[],"ret_type":"void"}]},"apd_dump_persistent_resources":{"desc":"Return all persistent resources as an array","long_desc":"Return all persistent resources as an array.","ver":"PECL apd 0.2-0.4","ret_desc":"An array containing the current call stack.","seealso":[],"url":"function.apd-dump-persistent-resources","name":"apd_dump_persistent_resources","params":[{"list":[],"ret_type":"array"}]},"apd_dump_regular_resources":{"desc":"Return all current regular resources as an array","long_desc":"Return all current regular resources as an array.","ver":"PECL apd 0.2-0.4","ret_desc":"An array containing the current regular resources.","seealso":[],"url":"function.apd-dump-regular-resources","name":"apd_dump_regular_resources","params":[{"list":[],"ret_type":"array"}]},"apd_echo":{"desc":"Echo to the debugging socket","long_desc":"Usually sent via the socket to request information about the running script.","ver":"PECL apd >= 0.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.apd-echo","name":"apd_echo","params":[{"list":[],"ret_type":"bool"}]},"apd_get_active_symbols":{"desc":"Get an array of the current variables names in the local scope","long_desc":"Returns the names of all the variables defined in the active scope, (not their values).","ver":"PECL apd 0.2","ret_desc":"A multidimensional array with all the variables.","url":"function.apd-get-active-symbols","name":"apd_get_active_symbols","params":[{"list":[],"ret_type":"array"}]},"apd_set_pprof_trace":{"desc":"Starts the session debugging","long_desc":"Starts debugging to pprof_{process_id} in the dump directory.","ver":"PECL apd >= 0.2","ret_desc":"Returns path of the destination file.","seealso":[],"url":"function.apd-set-pprof-trace","name":"apd_set_pprof_trace","params":[{"list":[{"type":"string","var":"$dump_directory","beh":1,"desc":"The directory in which the profile dump file is written. If not set, the apd.dumpdir setting from the php.ini file is used."},{"type":"string","var":"$fragment","beh":1,"desc":"","def":"\"pprof\""}],"ret_type":"string"}]},"apd_set_session":{"desc":"Changes or sets the current debugging level","long_desc":"This can be used to increase or decrease debugging in a different area of your application.","ver":"PECL apd 0.2-0.4","ret_desc":"No value is returned.","url":"function.apd-set-session","name":"apd_set_session","params":[{"list":[],"ret_type":"void"}]},"apd_set_session_trace":{"desc":"Starts the session debugging","long_desc":"Starts debugging to apd_dump_{process_id} in the dump directory.","ver":"PECL apd 0.2-0.4","ret_desc":"No value is returned.","url":"function.apd-set-session-trace","name":"apd_set_session_trace","params":[{"list":[{"type":"int","var":"$debug_level","beh":0,"desc":"An integer which is formed by adding together the XXX_TRACE constants. It is not recommended to use MEMORY_TRACE. It is very slow and does not appear to be accurate. ASSIGNMENT_TRACE is not implemented yet. To turn on all functional traces (TIMING, FUNCTIONS, ARGS SUMMARY (like strace -c)) use the value 99"},{"type":"string","var":"$dump_directory","beh":1,"desc":"The directory in which the profile dump file is written. If not set, the apd.dumpdir setting from the php.ini file is used."}],"ret_type":"void"}]},"apd_set_session_trace_socket":{"desc":"Starts the remote session debugging","long_desc":"Connects to the specified tcp_server (eg. tcplisten) and sends debugging data to the socket.","ver":"PECL apd >= 0.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.apd-set-session-trace-socket","name":"apd_set_session_trace_socket","params":[{"list":[{"type":"string","var":"$tcp_server","beh":0,"desc":"IP or Unix Domain socket (like a file) of the TCP server."},{"type":"int","var":"$socket_type","beh":0,"desc":"Can be AF_UNIX for file based sockets or APD_AF_INET for standard tcp\/ip."},{"type":"int","var":"$port","beh":1,"desc":"You can use any port, but higher numbers are better as most of the lower numbers may be used by other system services."},{"type":"int","var":"$debug_level","beh":1,"desc":"An integer which is formed by adding together the XXX_TRACE constants. It is not recommended to use MEMORY_TRACE. It is very slow and does not appear to be accurate. ASSIGNMENT_TRACE is not implemented yet. To turn on all functional traces (TIMING, FUNCTIONS, ARGS SUMMARY (like strace -c)) use the value 99"}],"ret_type":"bool"}]},"array":{"desc":"Create an array","long_desc":"Creates an array. Read the section on the array type for more information on what an array is.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of the parameters. The parameters can be given an index with the => operator. Read the section on the array type for more information on what an array is.","seealso":[],"url":"function.array","name":"array","params":[{"list":[],"ret_type":"array"}]},"array_change_key_case":{"desc":"Changes all keys in an array","long_desc":"Returns an array with all keys from input lowercased or uppercased. Numbered indices are left as is.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns an array with its keys lower or uppercased, or FALSE if input is not an array.","url":"function.array-change-key-case","name":"array_change_key_case","params":[{"list":[{"type":"array","var":"$input","beh":0,"desc":"The array to work on"},{"type":"int","var":"$case","beh":0,"desc":"Either CASE_UPPER or CASE_LOWER (default)","def":"CASE_LOWER"}],"ret_type":"array"}]},"array_chunk":{"desc":"Split an array into chunks","long_desc":"Chunks an array into size large chunks. The last chunk may contain less than size elements.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns a multidimensional numerically indexed array, starting with zero, with each dimension containing size elements.","seealso":[],"url":"function.array-chunk","name":"array_chunk","params":[{"list":[{"type":"array","var":"$input","beh":0,"desc":"The array to work on"},{"type":"int","var":"$size","beh":1,"desc":"The size of each chunk"},{"type":"bool","var":"$preserve_keys","beh":1,"desc":"When set to TRUE keys will be preserved. Default is FALSE which will reindex the chunk numerically","def":"false"}],"ret_type":"array"}]},"array_combine":{"desc":"Creates an array by using one array for keys and another for its values","long_desc":"Creates an array by using the values from the keys array as keys and the values from the values array as the corresponding values.","ver":"PHP 5","ret_desc":"Returns the combined array, FALSE if the number of elements for each array isn't equal.","seealso":[],"url":"function.array-combine","name":"array_combine","params":[{"list":[{"type":"array","var":"$keys","beh":0,"desc":"Array of keys to be used. Illegal values for key will be converted to string."},{"type":"array","var":"$values","beh":0,"desc":"Array of values to be used"}],"ret_type":"array"}]},"array_count_values":{"desc":"Counts all the values of an array","long_desc":"array_count_values() returns an array using the values of the input array as keys and their frequency in input as values.","ver":"PHP 4, PHP 5","ret_desc":"Returns an associative array of values from input as keys and their count as value.","seealso":[],"url":"function.array-count-values","name":"array_count_values","params":[{"list":[],"ret_type":"array"}]},"array_diff":{"desc":"Computes the difference of arrays","long_desc":"Compares array1 against array2 and returns the difference.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns an array containing all the entries from array1 that are not present in any of the other arrays.","seealso":[],"url":"function.array-diff","name":"array_diff","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"The array to compare from"},{"type":"array","var":"$array2","beh":1,"desc":"An array to compare against"},{"type":"array","var":"$...","beh":1,"desc":"More arrays to compare against"}],"ret_type":"array"}]},"array_diff_assoc":{"desc":"Computes the difference of arrays with additional index check","long_desc":"Compares array1 against array2 and returns the difference. Unlike array_diff() the array keys are used in the comparison.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns an array containing all the values from array1 that are not present in any of the other arrays.","seealso":[],"url":"function.array-diff-assoc","name":"array_diff_assoc","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"The array to compare from"},{"type":"array","var":"$array2","beh":1,"desc":"An array to compare against"},{"type":"array","var":"$...","beh":1,"desc":"More arrays to compare against"}],"ret_type":"array"}]},"array_diff_key":{"desc":"Computes the difference of arrays using keys for comparison","long_desc":"Compares the keys from array1 against the keys from array2 and returns the difference. This function is like array_diff() except the comparison is done on the keys instead of the values.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns an array containing all the entries from array1 whose keys are not present in any of the other arrays.","seealso":[],"url":"function.array-diff-key","name":"array_diff_key","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"The array to compare from"},{"type":"array","var":"$array2","beh":1,"desc":"An array to compare against"},{"type":"array","var":"$...","beh":1,"desc":"More arrays to compare against"}],"ret_type":"array"}]},"array_diff_uassoc":{"desc":"Computes the difference of arrays with additional index check which is performed by a user supplied callback function","long_desc":"Compares array1 against array2 and returns the difference. Unlike array_diff() the array keys are used in the comparison. Unlike array_diff_assoc() an user supplied callback function is used for the indices comparison, not internal function.","ver":"PHP 5","ret_desc":"Returns an array containing all the entries from array1 that are not present in any of the other arrays.","seealso":[],"url":"function.array-diff-uassoc","name":"array_diff_uassoc","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"The array to compare from"},{"type":"array","var":"$array2","beh":1,"desc":"An array to compare against"},{"type":"array","var":"$...","beh":1,"desc":"More arrays to compare against"},{"type":"callable","var":"$key_compare_func","beh":1,"desc":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}],"ret_type":"array"},{"list":[{"type":"mixed","var":"$a","beh":0,"desc":"The array to compare from"},{"type":"mixed","var":"$b","beh":0,"desc":"An array to compare against"}],"ret_type":"int"}]},"array_diff_ukey":{"desc":"Computes the difference of arrays using a callback function on the keys for comparison","long_desc":"Compares the keys from array1 against the keys from array2 and returns the difference. This function is like array_diff() except the comparison is done on the keys instead of the values. Unlike array_diff_key() an user supplied callback function is used for the indices comparison, not internal function.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns an array containing all the entries from array1 that are not present in any of the other arrays.","seealso":[],"url":"function.array-diff-ukey","name":"array_diff_ukey","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"The array to compare from"},{"type":"array","var":"$array2","beh":1,"desc":"An array to compare against"},{"type":"array","var":"$ ...","beh":1,"desc":"More arrays to compare against"},{"type":"callable","var":"$key_compare_func","beh":1,"desc":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}],"ret_type":"array"},{"list":[{"type":"mixed","var":"$a","beh":0,"desc":"The array to compare from"},{"type":"mixed","var":"$b","beh":0,"desc":"An array to compare against"}],"ret_type":"int"}]},"array_fill":{"desc":"Fill an array with values","long_desc":"Fills an array with num entries of the value of the value parameter, keys starting at the start_index parameter.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns the filled array","seealso":[],"url":"function.array-fill","name":"array_fill","params":[{"list":[{"type":"int","var":"$start_index","beh":0,"desc":"The first index of the returned array. If start_index is negative, the first index of the returned array will be start_index and the following indices will start from zero (see example)."},{"type":"int","var":"$num","beh":0,"desc":"Number of elements to insert. Must be greater than zero."},{"type":"mixed","var":"$value","beh":1,"desc":"Value to use for filling"}],"ret_type":"array"}]},"array_fill_keys":{"desc":"Fill an array with values, specifying keys","long_desc":"Fills an array with the value of the value parameter, using the values of the keys array as keys.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the filled array","seealso":[],"url":"function.array-fill-keys","name":"array_fill_keys","params":[{"list":[{"type":"array","var":"$keys","beh":0,"desc":"Array of values that will be used as keys. Illegal values for key will be converted to string."},{"type":"mixed","var":"$value","beh":0,"desc":"Value to use for filling"}],"ret_type":"array"}]},"array_filter":{"desc":"Filters elements of an array using a callback function","long_desc":"Iterates over each value in the input array passing them to the callback function. If the callback function returns true, the current value from input is returned into the result array. Array keys are preserved.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the filtered array.","seealso":[],"url":"function.array-filter","name":"array_filter","params":[{"list":[{"type":"array","var":"$input","beh":0,"desc":"The array to iterate over"},{"type":"callable","var":"$callback","beh":0,"desc":"The callback function to use If no callback is supplied, all entries of input equal to FALSE (see converting to boolean) will be removed.","def":"\"\""}],"ret_type":"array"}]},"array_flip":{"desc":"Exchanges all keys with their associated values in an array","long_desc":"array_flip() returns an array in flip order, i.e. keys from trans become values and values from trans become keys. Note that the values of trans need to be valid keys, i.e. they need to be either integer or string. A warning will be emitted if a value has the wrong type, and the key\/value pair in question will not be flipped. If a value has several occurrences, the latest key will be used as its values, and all others will be lost.","ver":"PHP 4, PHP 5","ret_desc":"Returns the flipped array on success and NULL on failure.","seealso":[],"url":"function.array-flip","name":"array_flip","params":[{"list":[],"ret_type":"array"}]},"array_intersect":{"desc":"Computes the intersection of arrays","long_desc":"array_intersect() returns an array containing all the values of array1 that are present in all the arguments. Note that keys are preserved.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns an array containing all of the values in array1 whose values exist in all of the parameters.","seealso":[],"url":"function.array-intersect","name":"array_intersect","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"The array with master values to check."},{"type":"array","var":"$array2","beh":1,"desc":"An array to compare values against."},{"type":"array","var":"$ ...","beh":1,"desc":"A variable list of arrays to compare."}],"ret_type":"array"}]},"array_intersect_assoc":{"desc":"Computes the intersection of arrays with additional index check","long_desc":"array_intersect_assoc() returns an array containing all the values of array1 that are present in all the arguments. Note that the keys are used in the comparison unlike in array_intersect().","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns an associative array containing all the values in array1 that are present in all of the arguments.","seealso":[],"url":"function.array-intersect-assoc","name":"array_intersect_assoc","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"The array with master values to check."},{"type":"array","var":"$array2","beh":1,"desc":"An array to compare values against."},{"type":"array","var":"$ ...","beh":1,"desc":"A variable list of arrays to compare."}],"ret_type":"array"}]},"array_intersect_key":{"desc":"Computes the intersection of arrays using keys for comparison","long_desc":"array_intersect_key() returns an array containing all the entries of array1 which have keys that are present in all the arguments.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns an associative array containing all the entries of array1 which have keys that are present in all arguments.","seealso":[],"url":"function.array-intersect-key","name":"array_intersect_key","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"The array with master keys to check."},{"type":"array","var":"$array2","beh":1,"desc":"An array to compare keys against."},{"type":"array","var":"$ ...","beh":1,"desc":"A variable list of arrays to compare."}],"ret_type":"array"}]},"array_intersect_uassoc":{"desc":"Computes the intersection of arrays with additional index check, compares indexes by a callback function","long_desc":"array_intersect_uassoc() returns an array containing all the values of array1 that are present in all the arguments. Note that the keys are used in the comparison unlike in array_intersect().","ver":"PHP 5","ret_desc":"Returns the values of array1 whose values exist in all of the arguments.","seealso":[],"url":"function.array-intersect-uassoc","name":"array_intersect_uassoc","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"Initial array for comparison of the arrays."},{"type":"array","var":"$array2","beh":1,"desc":"First array to compare keys against."},{"type":"array","var":"$ ...","beh":1,"desc":"Variable list of array arguments to compare values against."},{"type":"callable","var":"$key_compare_func","beh":1,"desc":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}],"ret_type":"array"},{"list":[{"type":"mixed","var":"$a","beh":0,"desc":"Initial array for comparison of the arrays."},{"type":"mixed","var":"$b","beh":0,"desc":"First array to compare keys against."}],"ret_type":"int"}]},"array_intersect_ukey":{"desc":"Computes the intersection of arrays using a callback function on the keys for comparison","long_desc":"array_intersect_ukey() returns an array containing all the values of array1 which have matching keys that are present in all the arguments.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the values of array1 whose keys exist in all the arguments.","seealso":[],"url":"function.array-intersect-ukey","name":"array_intersect_ukey","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"Initial array for comparison of the arrays."},{"type":"array","var":"$array2","beh":1,"desc":"First array to compare keys against."},{"type":"array","var":"$...","beh":1,"desc":"Variable list of array arguments to compare keys against."},{"type":"callable","var":"$key_compare_func","beh":1,"desc":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}],"ret_type":"array"},{"list":[{"type":"mixed","var":"$a","beh":0,"desc":"Initial array for comparison of the arrays."},{"type":"mixed","var":"$b","beh":0,"desc":"First array to compare keys against."}],"ret_type":"int"}]},"array_key_exists":{"desc":"Checks if the given key or index exists in the array","long_desc":"array_key_exists() returns TRUE if the given key is set in the array. key can be any value possible for an array index.","ver":"PHP 4 >= 4.0.7, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.array-key-exists","name":"array_key_exists","params":[{"list":[{"type":"mixed","var":"$key","beh":0,"desc":"Value to check."},{"type":"array","var":"$search","beh":0,"desc":"An array with keys to check."}],"ret_type":"bool"}]},"array_keys":{"desc":"Return all the keys or a subset of the keys of an array","long_desc":"array_keys() returns the keys, numeric and string, from the input array. If the optional search_value is specified, then only the keys for that value are returned. Otherwise, all the keys from the input are returned.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of all the keys in input.","seealso":[],"url":"function.array-keys","name":"array_keys","params":[{"list":[{"type":"array","var":"$input","beh":1,"desc":"An array containing keys to return."},{"type":"mixed","var":"$search_value","beh":1,"desc":"If specified, then only keys containing these values are returned.","def":"NULL"},{"type":"bool","var":"$strict","beh":1,"desc":"Determines if strict comparison (===) should be used during the search.","def":"false"}],"ret_type":"array"}]},"array_map":{"desc":"Applies the callback to the elements of the given arrays","long_desc":"array_map() returns an array containing all the elements of arr1 after applying the callback function to each one. The number of parameters that the callback function accepts should match the number of arrays passed to the array_map()","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns an array containing all the elements of arr1 after applying the callback function to each one.","seealso":[],"url":"function.array-map","name":"array_map","params":[{"list":[{"type":"callable","var":"$callback","beh":0,"desc":"Callback function to run for each element in each array."},{"type":"array","var":"$arr1","beh":1,"desc":"An array to run through the callback function."},{"type":"array","var":"$...","beh":1,"desc":"Variable list of array arguments to run through the callback function."}],"ret_type":"array"}]},"array_merge":{"desc":"Merge one or more arrays","long_desc":"Merges the elements of one or more arrays together so that the values of one are appended to the end of the previous one. It returns the resulting array. If the input arrays have the same string keys, then the later value for that key will overwrite the previous one. If, however, the arrays contain numeric keys, the later value will not overwrite the original value, but will be appended. Values in the input array with numeric keys will be renumbered with incrementing keys starting from zero in the result array.","ver":"PHP 4, PHP 5","ret_desc":"Returns the resulting array.","seealso":[],"url":"function.array-merge","name":"array_merge","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"Initial array to merge."},{"type":"array","var":"$...","beh":1,"desc":"Variable list of arrays to merge."}],"ret_type":"array"}]},"array_merge_recursive":{"desc":"Merge two or more arrays recursively","long_desc":"array_merge_recursive() merges the elements of one or more arrays together so that the values of one are appended to the end of the previous one. It returns the resulting array. If the input arrays have the same string keys, then the values for these keys are merged together into an array, and this is done recursively, so that if one of the values is an array itself, the function will merge it with a corresponding entry in another array too. If, however, the arrays have the same numeric key, the later value will not overwrite the original value, but will be appended.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"An array of values resulted from merging the arguments together.","seealso":[],"url":"function.array-merge-recursive","name":"array_merge_recursive","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"Initial array to merge."},{"type":"array","var":"$...","beh":1,"desc":"Variable list of arrays to recursively merge."}],"ret_type":"array"}]},"array_multisort":{"desc":"Sort multiple or multi-dimensional arrays","long_desc":"array_multisort() can be used to sort several arrays at once, or a multi-dimensional array by one or more dimensions. Associative (string) keys will be maintained, but numeric keys will be re-indexed.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.array-multisort","name":"array_multisort","params":[{"list":[{"type":"array","var":"&$arr","beh":1,"desc":"An array being sorted."},{"type":"mixed","var":"$arg","beh":1,"desc":"Optionally another array, or sort options for the previous array argument: SORT_ASC, SORT_DESC, SORT_REGULAR, SORT_NUMERIC, SORT_STRING.","def":"SORT_ASC"},{"type":"mixed","var":"$arg","beh":1,"desc":"Additional arg's.","def":"SORT_REGULAR"},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"bool"}]},"array_pad":{"desc":"Pad array to the specified length with a value","long_desc":"array_pad() returns a copy of the input padded to size specified by pad_size with value pad_value. If pad_size is positive then the array is padded on the right, if it's negative then on the left. If the absolute value of pad_size is less than or equal to the length of the input then no padding takes place. It is possible to add most 1048576 elements at a time.","ver":"PHP 4, PHP 5","ret_desc":"Returns a copy of the input padded to size specified by pad_size with value pad_value. If pad_size is positive then the array is padded on the right, if it's negative then on the left. If the absolute value of pad_size is less than or equal to the length of the input then no padding takes place.","seealso":[],"url":"function.array-pad","name":"array_pad","params":[{"list":[{"type":"array","var":"$input","beh":0,"desc":"Initial array of values to pad."},{"type":"int","var":"$pad_size","beh":0,"desc":"New size of the array."},{"type":"mixed","var":"$pad_value","beh":1,"desc":"Value to pad if input is less than pad_size."}],"ret_type":"array"}]},"array_pop":{"desc":"Pop the element off the end of array","long_desc":"array_pop() pops and returns the last value of the array, shortening the array by one element. If array is empty (or is not an array), NULL will be returned. Will additionally produce a Warning when called on a non-array.","ver":"PHP 4, PHP 5","ret_desc":"Returns the last value of array. If array is empty (or is not an array), NULL will be returned.","seealso":[],"url":"function.array-pop","name":"array_pop","params":[{"list":[],"ret_type":"mixed"}]},"array_product":{"desc":"Calculate the product of values in an array","long_desc":"array_product() returns the product of values in an array.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the product as an integer or float.","url":"function.array-product","name":"array_product","params":[{"list":[],"ret_type":"number"}]},"array_push":{"desc":"Push one or more elements onto the end of array","long_desc":"array_push() treats array as a stack, and pushes the passed variables onto the end of array. The length of array increases by the number of variables pushed. Has the same effect as:","ver":"PHP 4, PHP 5","ret_desc":"Returns the new number of elements in the array.","seealso":[],"url":"function.array-push","name":"array_push","params":[{"list":[{"type":"array","var":"&$array","beh":0,"desc":"The input array."},{"type":"mixed","var":"$var","beh":1,"desc":"The pushed value."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"int"}]},"array_rand":{"desc":"Pick one or more random entries out of an array","long_desc":"Picks one or more random entries out of an array, and returns the key (or keys) of the random entries.","ver":"PHP 4, PHP 5","ret_desc":"If you are picking only one entry, array_rand() returns the key for a random entry. Otherwise, it returns an array of keys for the random entries. This is done so that you can pick random keys as well as values out of the array.","seealso":[],"url":"function.array-rand","name":"array_rand","params":[{"list":[{"type":"array","var":"$input","beh":0,"desc":"The input array."},{"type":"int","var":"$num_req","beh":0,"desc":"Specifies how many entries you want to pick. Trying to pick more elements than there are in the array will result in an E_WARNING level error.","def":1}],"ret_type":"mixed"}]},"array_reduce":{"desc":"Iteratively reduce the array to a single value using a callback function","long_desc":"array_reduce() applies iteratively the function function to the elements of the array input, so as to reduce the array to a single value.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns the resulting value.","seealso":[],"url":"function.array-reduce","name":"array_reduce","params":[{"list":[{"type":"array","var":"$input","beh":0,"desc":"The input array."},{"type":"callable","var":"$function","beh":1,"desc":"The callback function."},{"type":"mixed","var":"$initial","beh":1,"desc":"If the optional initial is available, it will be used at the beginning of the process, or as a final result in case the array is empty.","def":"NULL"}],"ret_type":"mixed"},{"list":[{"type":"mixed","var":"&$result","beh":0,"desc":"The input array."},{"type":"mixed","var":"$item","beh":0,"desc":"The callback function."}],"ret_type":"mixed"}]},"array_replace":{"desc":"Replaces elements from passed arrays into the first array","long_desc":"array_replace() replaces the values of the first array with the same values from all the following arrays. If a key from the first array exists in the second array, its value will be replaced by the value from the second array. If the key exists in the second array, and not the first, it will be created in the first array. If a key only exists in the first array, it will be left as is. If several arrays are passed for replacement, they will be processed in order, the later arrays overwriting the previous values. array_replace() is not recursive : it will replace values in the first array by whatever type is in the second array.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an array, or NULL if an error occurs.","seealso":[],"url":"function.array-replace","name":"array_replace","params":[{"list":[{"type":"array","var":"&$array","beh":0,"desc":"The array in which elements are replaced."},{"type":"array","var":"&$array1","beh":1,"desc":"The array from which elements will be extracted."},{"type":"array","var":"&$...","beh":1,"desc":"More arrays from which elements will be extracted. Values from later arrays overwrite the previous values."}],"ret_type":"array"}]},"array_replace_recursive":{"desc":"Replaces elements from passed arrays into the first array recursively","long_desc":"array_replace_recursive() replaces the values of the first array with the same values from all the following arrays. If a key from the first array exists in the second array, its value will be replaced by the value from the second array. If the key exists in the second array, and not the first, it will be created in the first array. If a key only exists in the first array, it will be left as is. If several arrays are passed for replacement, they will be processed in order, the later array overwriting the previous values. array_replace_recursive() is recursive : it will recurse into arrays and apply the same process to the inner value. When the value in array is scalar, it will be replaced by the value in array1, may it be scalar or array. When the value in array and array1 are both arrays, array_replace_recursive() will replace their respective value recursively.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an array, or NULL if an error occurs.","seealso":[],"url":"function.array-replace-recursive","name":"array_replace_recursive","params":[{"list":[{"type":"array","var":"&$array","beh":0,"desc":"The array in which elements are replaced."},{"type":"array","var":"&$array1","beh":1,"desc":"The array from which elements will be extracted."},{"type":"array","var":"&$...","beh":1,"desc":"Optional. More arrays from which elements will be extracted."}],"ret_type":"array"}]},"array_reverse":{"desc":"Return an array with elements in reverse order","long_desc":"Takes an input array and returns a new array with the order of the elements reversed.","ver":"PHP 4, PHP 5","ret_desc":"Returns the reversed array.","seealso":[],"url":"function.array-reverse","name":"array_reverse","params":[{"list":[{"type":"array","var":"$array","beh":0,"desc":"The input array."},{"type":"bool","var":"$preserve_keys","beh":0,"desc":"If set to TRUE numeric keys are preserved. Non-numeric keys are not affected by this setting and will always be preserved.","def":"false"}],"ret_type":"array"}]},"array_search":{"desc":"Searches the array for a given value and returns the corresponding key if successful","long_desc":"Searches haystack for needle.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns the key for needle if it is found in the array, FALSE otherwise.","seealso":[],"url":"function.array-search","name":"array_search","params":[{"list":[{"type":"mixed","var":"$needle","beh":0,"desc":"The searched value."},{"type":"array","var":"$haystack","beh":1,"desc":"The array."},{"type":"bool","var":"$strict","beh":1,"desc":"If the third parameter strict is set to TRUE then the array_search() function will search for identical elements in the haystack. This means it will also check the types of the needle in the haystack, and objects must be the same instance.","def":"false"}],"ret_type":"mixed"}]},"array_shift":{"desc":"Shift an element off the beginning of array","long_desc":"array_shift() shifts the first value of the array off and returns it, shortening the array by one element and moving everything down. All numerical array keys will be modified to start counting from zero while literal keys won't be touched.","ver":"PHP 4, PHP 5","ret_desc":"Returns the shifted value, or NULL if array is empty or is not an array.","seealso":[],"url":"function.array-shift","name":"array_shift","params":[{"list":[],"ret_type":"mixed"}]},"array_slice":{"desc":"Extract a slice of the array","long_desc":"array_slice() returns the sequence of elements from the array array as specified by the offset and length parameters.","ver":"PHP 4, PHP 5","ret_desc":"Returns the slice.","seealso":[],"url":"function.array-slice","name":"array_slice","params":[{"list":[{"type":"array","var":"$array","beh":1,"desc":"The input array."},{"type":"int","var":"$offset","beh":1,"desc":"If offset is non-negative, the sequence will start at that offset in the array. If offset is negative, the sequence will start that far from the end of the array."},{"type":"int","var":"$length","beh":1,"desc":"If length is given and is positive, then the sequence will have up to that many elements in it. If the array is shorter than the length, then only the available array elements will be present. If length is given and is negative then the sequence will stop that many elements from the end of the array. If it is omitted, then the sequence will have everything from offset up until the end of the array.","def":"NULL"},{"type":"bool","var":"$preserve_keys","beh":1,"desc":"Note that array_slice() will reorder and reset the numeric array indices by default. You can change this behaviour by setting preserve_keys to TRUE.","def":"false"}],"ret_type":"array"}]},"array_splice":{"desc":"Remove a portion of the array and replace it with something else","long_desc":"Removes the elements designated by offset and length from the input array, and replaces them with the elements of the replacement array, if supplied. Note that numeric keys in input are not preserved.","ver":"PHP 4, PHP 5","ret_desc":"Returns the array consisting of the extracted elements.","seealso":[],"url":"function.array-splice","name":"array_splice","params":[{"list":[{"type":"array","var":"&$input","beh":1,"desc":"The input array."},{"type":"int","var":"$offset","beh":1,"desc":"If offset is positive then the start of removed portion is at that offset from the beginning of the input array. If offset is negative then it starts that far from the end of the input array."},{"type":"int","var":"$length","beh":1,"desc":"If length is omitted, removes everything from offset to the end of the array. If length is specified and is positive, then that many elements will be removed. If length is specified and is negative then the end of the removed portion will be that many elements from the end of the array. Tip: to remove everything from offset to the end of the array when replacement is also specified, use count($input) for length.","def":0},{"type":"mixed","var":"$replacement","beh":1,"desc":"If replacement array is specified, then the removed elements are replaced with elements from this array. If offset and length are such that nothing is removed, then the elements from the replacement array are inserted in the place specified by the offset. Note that keys in replacement array are not preserved. If replacement is just one element it is not necessary to put array() around it, unless the element is an array itself, an object or NULL."}],"ret_type":"array"}]},"array_sum":{"desc":"Calculate the sum of values in an array","long_desc":"array_sum() returns the sum of values in an array.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns the sum of values as an integer or float.","url":"function.array-sum","name":"array_sum","params":[{"list":[],"ret_type":"number"}]},"array_udiff":{"desc":"Computes the difference of arrays by using a callback function for data comparison","long_desc":"Computes the difference of arrays by using a callback function for data comparison. This is unlike array_diff() which uses an internal function for comparing the data.","ver":"PHP 5","ret_desc":"Returns an array containing all the values of array1 that are not present in any of the other arguments.","seealso":[],"url":"function.array-udiff","name":"array_udiff","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"The first array."},{"type":"array","var":"$array2","beh":1,"desc":"The second array."},{"type":"array","var":"$ ...","beh":1,"desc":"The callback comparison function. The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."},{"type":"callable","var":"$data_compare_func","beh":1,"desc":""}],"ret_type":"array"},{"list":[{"type":"mixed","var":"$a","beh":0,"desc":"The first array."},{"type":"mixed","var":"$b","beh":0,"desc":"The second array."}],"ret_type":"int"}]},"array_udiff_assoc":{"desc":"Computes the difference of arrays with additional index check, compares data by a callback function","long_desc":"Computes the difference of arrays with additional index check, compares data by a callback function.","ver":"PHP 5","ret_desc":"array_udiff_assoc() returns an array containing all the values from array1 that are not present in any of the other arguments. Note that the keys are used in the comparison unlike array_diff() and array_udiff(). The comparison of arrays' data is performed by using an user-supplied callback. In this aspect the behaviour is opposite to the behaviour of array_diff_assoc() which uses internal function for comparison.","seealso":[],"url":"function.array-udiff-assoc","name":"array_udiff_assoc","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"The first array."},{"type":"array","var":"$array2","beh":1,"desc":"The second array."},{"type":"array","var":"$ ...","beh":1,"desc":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."},{"type":"callable","var":"$data_compare_func","beh":1,"desc":""}],"ret_type":"array"},{"list":[{"type":"mixed","var":"$a","beh":0,"desc":"The first array."},{"type":"mixed","var":"$b","beh":0,"desc":"The second array."}],"ret_type":"int"}]},"array_udiff_uassoc":{"desc":"Computes the difference of arrays with additional index check, compares data and indexes by a callback function","long_desc":"Computes the difference of arrays with additional index check, compares data and indexes by a callback function. Note that the keys are used in the comparison unlike array_diff() and array_udiff().","ver":"PHP 5","ret_desc":"Returns an array containing all the values from array1 that are not present in any of the other arguments.","seealso":[],"url":"function.array-udiff-uassoc","name":"array_udiff_uassoc","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"The first array."},{"type":"array","var":"$array2","beh":1,"desc":"The second array."},{"type":"array","var":"$ ...","beh":1,"desc":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."},{"type":"callable","var":"$data_compare_func","beh":1,"desc":"The comparison of keys (indices) is done also by the callback function key_compare_func. This behaviour is unlike what array_udiff_assoc() does, since the latter compares the indices by using an internal function."},{"type":"callable","var":"$key_compare_func","beh":1,"desc":""}],"ret_type":"array"},{"list":[{"type":"mixed","var":"$a","beh":0,"desc":"The first array."},{"type":"mixed","var":"$b","beh":0,"desc":"The second array."}],"ret_type":"int"}]},"array_uintersect":{"desc":"Computes the intersection of arrays, compares data by a callback function","long_desc":"Computes the intersection of arrays, compares data by a callback function.","ver":"PHP 5","ret_desc":"Returns an array containing all the values of array1 that are present in all the arguments.","seealso":[],"url":"function.array-uintersect","name":"array_uintersect","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"The first array."},{"type":"array","var":"$array2","beh":1,"desc":"The second array."},{"type":"array","var":"$ ...","beh":1,"desc":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."},{"type":"callable","var":"$data_compare_func","beh":1,"desc":""}],"ret_type":"array"},{"list":[{"type":"mixed","var":"$a","beh":0,"desc":"The first array."},{"type":"mixed","var":"$b","beh":0,"desc":"The second array."}],"ret_type":"int"}]},"array_uintersect_assoc":{"desc":"Computes the intersection of arrays with additional index check, compares data by a callback function","long_desc":"Computes the intersection of arrays with additional index check, compares data by a callback function. Note that the keys are used in the comparison unlike in array_uintersect(). The data is compared by using a callback function.","ver":"PHP 5","ret_desc":"Returns an array containing all the values of array1 that are present in all the arguments.","seealso":[],"url":"function.array-uintersect-assoc","name":"array_uintersect_assoc","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"The first array."},{"type":"array","var":"$array2","beh":1,"desc":"The second array."},{"type":"array","var":"$ ...","beh":1,"desc":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."},{"type":"callable","var":"$data_compare_func","beh":1,"desc":""}],"ret_type":"array"},{"list":[{"type":"mixed","var":"$a","beh":0,"desc":"The first array."},{"type":"mixed","var":"$b","beh":0,"desc":"The second array."}],"ret_type":"int"}]},"array_uintersect_uassoc":{"desc":"Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions","long_desc":"Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions Note that the keys are used in the comparison unlike in array_uintersect(). Both the data and the indexes are compared by using separate callback functions.","ver":"PHP 5","ret_desc":"Returns an array containing all the values of array1 that are present in all the arguments.","seealso":[],"url":"function.array-uintersect-uassoc","name":"array_uintersect_uassoc","params":[{"list":[{"type":"array","var":"$array1","beh":0,"desc":"The first array."},{"type":"array","var":"$array2","beh":1,"desc":"The second array."},{"type":"array","var":"$ ...","beh":1,"desc":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."},{"type":"callable","var":"$data_compare_func","beh":1,"desc":"Key comparison callback function."},{"type":"callable","var":"$key_compare_func","beh":1,"desc":""}],"ret_type":"array"},{"list":[{"type":"mixed","var":"$a","beh":0,"desc":"The first array."},{"type":"mixed","var":"$b","beh":0,"desc":"The second array."}],"ret_type":"int"}]},"array_unique":{"desc":"Removes duplicate values from an array","long_desc":"Takes an input array and returns a new array without duplicate values. Note that keys are preserved. array_unique() sorts the values treated as string at first, then will keep the first key encountered for every value, and ignore all following keys. It does not mean that the key of the first related value from the unsorted array will be kept.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns the filtered array.","seealso":[],"url":"function.array-unique","name":"array_unique","params":[{"list":[{"type":"array","var":"$array","beh":0,"desc":"The input array."},{"type":"int","var":"$sort_flags","beh":0,"desc":"The optional second parameter sort_flags may be used to modify the sorting behavior using these values: Sorting type flags:","def":"SORT_STRING"}],"ret_type":"array"}]},"array_unshift":{"desc":"Prepend one or more elements to the beginning of an array","long_desc":"array_unshift() prepends passed elements to the front of the array. Note that the list of elements is prepended as a whole, so that the prepended elements stay in the same order. All numerical array keys will be modified to start counting from zero while literal keys won't be touched.","ver":"PHP 4, PHP 5","ret_desc":"Returns the new number of elements in the array.","seealso":[],"url":"function.array-unshift","name":"array_unshift","params":[{"list":[{"type":"array","var":"&$array","beh":0,"desc":"The input array."},{"type":"mixed","var":"$var","beh":1,"desc":"The prepended variable."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"int"}]},"array_values":{"desc":"Return all the values of an array","long_desc":"array_values() returns all the values from the input array and indexes numerically the array.","ver":"PHP 4, PHP 5","ret_desc":"Returns an indexed array of values.","seealso":[],"url":"function.array-values","name":"array_values","params":[{"list":[],"ret_type":"array"}]},"array_walk":{"desc":"Apply a user function to every member of an array","long_desc":"Applies the user-defined function funcname to each element of the array array. array_walk() is not affected by the internal array pointer of array. array_walk() will walk through the entire array regardless of pointer position.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.array-walk","name":"array_walk","params":[{"list":[{"type":"array","var":"&$array","beh":0,"desc":"The input array."},{"type":"callable","var":"$funcname","beh":1,"desc":"Typically, funcname takes on two parameters. The array parameter's value being the first, and the key\/index second. Only the values of the array may potentially be changed; its structure cannot be altered, i.e., the programmer cannot add, unset or reorder elements. If the callback does not respect this requirement, the behavior of this function is undefined, and unpredictable."},{"type":"mixed","var":"$userdata","beh":1,"desc":"If the optional userdata parameter is supplied, it will be passed as the third parameter to the callback funcname.","def":"NULL"}],"ret_type":"bool"}]},"array_walk_recursive":{"desc":"Apply a user function recursively to every member of an array","long_desc":"Applies the user-defined function funcname to each element of the input array. This function will recurse into deeper arrays.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.array-walk-recursive","name":"array_walk_recursive","params":[{"list":[{"type":"array","var":"&$input","beh":0,"desc":"The input array."},{"type":"callable","var":"$funcname","beh":1,"desc":"Typically, funcname takes on two parameters. The input parameter's value being the first, and the key\/index second."},{"type":"mixed","var":"$userdata","beh":1,"desc":"If the optional userdata parameter is supplied, it will be passed as the third parameter to the callback funcname.","def":"NULL"}],"ret_type":"bool"}]},"arrayaccess":{"name":"ArrayAccess","class":"ArrayAccess"},"arrayiterator":{"name":"ArrayIterator","class":"ArrayIterator"},"arrayobject":{"name":"ArrayObject","class":"ArrayObject"},"arsort":{"desc":"Sort an array in reverse order and maintain index association","long_desc":"This function sorts an array such that array indices maintain their correlation with the array elements they are associated with. This is used mainly when sorting associative arrays where the actual element order is significant.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.arsort","name":"arsort","params":[{"list":[{"type":"array","var":"&$array","beh":0,"desc":"The input array."},{"type":"int","var":"$sort_flags","beh":0,"desc":"You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().","def":"SORT_REGULAR"}],"ret_type":"bool"}]},"asin":{"desc":"Arc sine","long_desc":"Returns the arc sine of arg in radians. asin() is the complementary function of sin(), which means that a==sin(asin(a)) for every value of a that is within asin()'s range.","ver":"PHP 4, PHP 5","ret_desc":"The arc sine of arg in radians","seealso":[],"url":"function.asin","name":"asin","params":[{"list":[],"ret_type":"float"}]},"asinh":{"desc":"Inverse hyperbolic sine","long_desc":"Returns the inverse hyperbolic sine of arg, i.e. the value whose hyperbolic sine is arg.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"The inverse hyperbolic sine of arg","seealso":[],"url":"function.asinh","name":"asinh","params":[{"list":[],"ret_type":"float"}]},"asort":{"desc":"Sort an array and maintain index association","long_desc":"This function sorts an array such that array indices maintain their correlation with the array elements they are associated with. This is used mainly when sorting associative arrays where the actual element order is significant.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.asort","name":"asort","params":[{"list":[{"type":"array","var":"&$array","beh":0,"desc":"The input array."},{"type":"int","var":"$sort_flags","beh":0,"desc":"You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().","def":"SORT_REGULAR"}],"ret_type":"bool"}]},"assert":{"desc":"Checks if assertion is FALSE","long_desc":"assert() will check the given assertion and take appropriate action if its result is FALSE. If the assertion is given as a string it will be evaluated as PHP code by assert(). The advantages of a string assertion are less overhead when assertion checking is off and messages containing the assertion expression when an assertion fails. This means that if you pass a boolean condition as assertion this condition will not show up as parameter to the assertion function which you may have defined with the assert_options() function, the condition is converted to a string before calling that handler function, and the boolean FALSE is converted as the empty string. Assertions should be used as a debugging feature only. You may use them for sanity-checks that test for conditions that should always be TRUE and that indicate some programming errors if not or to check for the presence of certain features like extension functions or certain system limits and features. Assertions should not be used for normal runtime operations like input parameter checks. As a rule of thumb your code should always be able to work correctly if assertion checking is not activated. The behavior of assert() may be configured by assert_options() or by .ini-settings described in that functions manual page. The assert_options() function and\/or ASSERT_CALLBACK configuration directive allow a callback function to be set to handle failed assertions. assert() callbacks are particularly useful for building automated test suites because they allow you to easily capture the code passed to the assertion, along with information on where the assertion was made. While this information can be captured via other methods, using assertions makes it much faster and easier! The callback function should accept three arguments. The first argument will contain the file the assertion failed in. The second argument will contain the line the assertion failed on and the third argument will contain the expression that failed (if any - literal values such as 1 or \"two\" will not be passed via this argument)","ver":"PHP 4, PHP 5","ret_desc":"FALSE if the assertion is false, TRUE otherwise.","seealso":[],"url":"function.assert","name":"assert","params":[{"list":[],"ret_type":"bool"}]},"assert_options":{"desc":"Set\/get the various assert flags","long_desc":"Set the various assert() control options or just query their current settings.","ver":"PHP 4, PHP 5","ret_desc":"Returns the original setting of any option or FALSE on errors.","seealso":[],"url":"function.assert-options","name":"assert_options","params":[{"list":[{"type":"int","var":"$what","beh":0,"desc":""},{"type":"mixed","var":"$value","beh":1,"desc":"An optional new value for the option."}],"ret_type":"mixed"}]},"atan":{"desc":"Arc tangent","long_desc":"Returns the arc tangent of arg in radians. atan() is the complementary function of tan(), which means that a==tan(atan(a)) for every value of a that is within atan()'s range.","ver":"PHP 4, PHP 5","ret_desc":"The arc tangent of arg in radians.","seealso":[],"url":"function.atan","name":"atan","params":[{"list":[],"ret_type":"float"}]},"atan2":{"desc":"Arc tangent of two variables","long_desc":"This function calculates the arc tangent of the two variables x and y. It is similar to calculating the arc tangent of y \/ x, except that the signs of both arguments are used to determine the quadrant of the result. The function returns the result in radians, which is between -PI and PI (inclusive).","ver":"PHP 4, PHP 5","ret_desc":"The arc tangent of y\/x in radians.","seealso":[],"url":"function.atan2","name":"atan2","params":[{"list":[{"type":"float","var":"$y","beh":0,"desc":"Dividend parameter"},{"type":"float","var":"$x","beh":0,"desc":"Divisor parameter"}],"ret_type":"float"}]},"atanh":{"desc":"Inverse hyperbolic tangent","long_desc":"Returns the inverse hyperbolic tangent of arg, i.e. the value whose hyperbolic tangent is arg.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Inverse hyperbolic tangent of arg","seealso":[],"url":"function.atanh","name":"atanh","params":[{"list":[],"ret_type":"float"}]},"base64_decode":{"desc":"Decodes data encoded with MIME base64","long_desc":"Decodes a base64 encoded data.","ver":"PHP 4, PHP 5","ret_desc":"Returns the original data or FALSE on failure. The returned data may be binary.","seealso":[],"url":"function.base64-decode","name":"base64_decode","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":"The encoded data."},{"type":"bool","var":"$strict","beh":0,"desc":"Returns FALSE if input contains character from outside the base64 alphabet.","def":"false"}],"ret_type":"string"}]},"base64_encode":{"desc":"Encodes data with MIME base64","long_desc":"Encodes the given data with base64. This encoding is designed to make binary data survive transport through transport layers that are not 8-bit clean, such as mail bodies. Base64-encoded data takes about 33% more space than the original data.","ver":"PHP 4, PHP 5","ret_desc":"The encoded data, as a string or FALSE on failure.","seealso":[],"url":"function.base64-encode","name":"base64_encode","params":[{"list":[],"ret_type":"string"}]},"base_convert":{"desc":"Convert a number between arbitrary bases","long_desc":"Returns a string containing number represented in base tobase. The base in which number is given is specified in frombase. Both frombase and tobase have to be between 2 and 36, inclusive. Digits in numbers with a base higher than 10 will be represented with the letters a-z, with a meaning 10, b meaning 11 and z meaning 35.","ver":"PHP 4, PHP 5","ret_desc":"number converted to base tobase","seealso":[],"url":"function.base-convert","name":"base_convert","params":[{"list":[{"type":"string","var":"$number","beh":0,"desc":"The number to convert"},{"type":"int","var":"$frombase","beh":0,"desc":"The base number is in"},{"type":"int","var":"$tobase","beh":1,"desc":"The base to convert number to"}],"ret_type":"string"}]},"basename":{"desc":"Returns trailing name component of path","long_desc":"Given a string containing the path to a file or directory, this function will return the trailing name component.","ver":"PHP 4, PHP 5","ret_desc":"Returns the base name of the given path.","seealso":[],"url":"function.basename","name":"basename","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":"A path. On Windows, both slash (\/) and backslash (\\) are used as directory separator character. In other environments, it is the forward slash (\/)."},{"type":"string","var":"$suffix","beh":1,"desc":"If the name component ends in suffix this will also be cut off."}],"ret_type":"string"}]},"bbcode_add_element":{"desc":"Adds a bbcode element","long_desc":"Adds a tag to an existing BBCode_Container tag_set using tag_rules.","ver":"PECL bbcode >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.bbcode-add-element","name":"bbcode_add_element","params":[{"list":[{"type":"resource","var":"$bbcode_container","beh":0,"desc":"BBCode_Container resource, returned by bbcode_create()."},{"type":"string","var":"$tag_name","beh":0,"desc":"The new tag to add to the BBCode_Container tag_set."},{"type":"array","var":"$tag_rules","beh":1,"desc":"An associative array containing the parsing rules; see bbcode_create() for the available keys."}],"ret_type":"bool"}]},"bbcode_add_smiley":{"desc":"Adds a smiley to the parser","long_desc":"Adds a smiley to the parser","ver":"PECL bbcode >= 0.10.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.bbcode-add-smiley","name":"bbcode_add_smiley","params":[{"list":[{"type":"resource","var":"$bbcode_container","beh":0,"desc":"BBCode_Container resource, returned by bbcode_create()."},{"type":"string","var":"$smiley","beh":0,"desc":"The string that will be replaced when found."},{"type":"string","var":"$replace_by","beh":1,"desc":"The string that replace smiley when found."}],"ret_type":"bool"}]},"bbcode_create":{"desc":"Create a BBCode Resource","long_desc":"This function returns a new BBCode Resource used to parse BBCode strings.","ver":"PECL bbcode >= 0.9.0","ret_desc":"Returns a BBCode_Container","url":"function.bbcode-create","name":"bbcode_create","params":[{"list":[],"ret_type":"resource"}]},"bbcode_destroy":{"desc":"Close BBCode_container resource","long_desc":"This function closes the resource opened by bbcode_create().","ver":"PECL bbcode >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.bbcode-destroy","name":"bbcode_destroy","params":[{"list":[],"ret_type":"bool"}]},"bbcode_parse":{"desc":"Parse a string following a given rule set","long_desc":"This function parse the string to_parse following the rules in the bbcode_container created by bbcode_create()","ver":"PECL bbcode >= 0.9.0","ret_desc":"Returns the parsed string, or FALSE on failure.","url":"function.bbcode-parse","name":"bbcode_parse","params":[{"list":[{"type":"resource","var":"$bbcode_container","beh":0,"desc":"BBCode_Container resource returned by bbcode_create()."},{"type":"string","var":"$to_parse","beh":0,"desc":"The string we need to parse."}],"ret_type":"string"}]},"bbcode_set_arg_parser":{"desc":"Attach another parser in order to use another rule set for argument parsing","long_desc":"Attaches another parser to the bbcode_container. This parser is used only when arguments must be parsed. If this function is not used, the default argument parser is the parser itself.","ver":"PECL bbcode >= 0.10.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.bbcode-set-arg-parser","name":"bbcode_set_arg_parser","params":[{"list":[{"type":"resource","var":"$bbcode_container","beh":0,"desc":"BBCode_Container resource, returned by bbcode_create()."},{"type":"resource","var":"$bbcode_arg_parser","beh":0,"desc":"BBCode_Container resource, returned by bbcode_create(). It will be used only for parsed arguments"}],"ret_type":"bool"}]},"bbcode_set_flags":{"desc":"Set or alter parser options","long_desc":"Set or alter parser options","ver":"PECL bbcode >= 0.10.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.bbcode-set-flags","name":"bbcode_set_flags","params":[{"list":[{"type":"resource","var":"$bbcode_container","beh":0,"desc":"BBCode_Container resource, returned by bbcode_create()."},{"type":"int","var":"$flags","beh":1,"desc":"The flag set that must be applied to the bbcode_container options"},{"type":"int","var":"$mode","beh":1,"desc":"One of the BBCODE_SET_FLAGS_* constant to set, unset a specific flag set or to replace the flag set by flags.","def":"BBCODE_SET_FLAGS_SET"}],"ret_type":"bool"}]},"bcadd":{"desc":"Add two arbitrary precision numbers","long_desc":"Sums left_operand and right_operand.","ver":"PHP 4, PHP 5","ret_desc":"The sum of the two operands, as a string.","seealso":[],"url":"function.bcadd","name":"bcadd","params":[{"list":[{"type":"string","var":"$left_operand","beh":0,"desc":"The left operand, as a string."},{"type":"string","var":"$right_operand","beh":1,"desc":"The right operand, as a string."},{"type":"int","var":"$scale","beh":1,"desc":"This optional parameter is used to set the number of digits after the decimal place in the result. You can also set the global default scale for all functions by using bcscale()."}],"ret_type":"string"}]},"bccomp":{"desc":"Compare two arbitrary precision numbers","long_desc":"Compares the left_operand to the right_operand and returns the result as an integer.","ver":"PHP 4, PHP 5","ret_desc":"Returns 0 if the two operands are equal, 1 if the left_operand is larger than the right_operand, -1 otherwise.","url":"function.bccomp","name":"bccomp","params":[{"list":[{"type":"string","var":"$left_operand","beh":0,"desc":"The left operand, as a string."},{"type":"string","var":"$right_operand","beh":1,"desc":"The right operand, as a string."},{"type":"int","var":"$scale","beh":1,"desc":"The optional scale parameter is used to set the number of digits after the decimal place which will be used in the comparison."}],"ret_type":"int"}]},"bcdiv":{"desc":"Divide two arbitrary precision numbers","long_desc":"Divides the left_operand by the right_operand.","ver":"PHP 4, PHP 5","ret_desc":"Returns the result of the division as a string, or NULL if right_operand is 0.","seealso":[],"url":"function.bcdiv","name":"bcdiv","params":[{"list":[{"type":"string","var":"$left_operand","beh":0,"desc":"The left operand, as a string."},{"type":"string","var":"$right_operand","beh":1,"desc":"The right operand, as a string."},{"type":"int","var":"$scale","beh":1,"desc":"This optional parameter is used to set the number of digits after the decimal place in the result. You can also set the global default scale for all functions by using bcscale()."}],"ret_type":"string"}]},"bcmod":{"desc":"Get modulus of an arbitrary precision number","long_desc":"Get the modulus of the left_operand using modulus.","ver":"PHP 4, PHP 5","ret_desc":"Returns the modulus as a string, or NULL if modulus is 0.","seealso":[],"url":"function.bcmod","name":"bcmod","params":[{"list":[{"type":"string","var":"$left_operand","beh":0,"desc":"The left operand, as a string."},{"type":"string","var":"$modulus","beh":0,"desc":"The modulus, as a string."}],"ret_type":"string"}]},"bcmul":{"desc":"Multiply two arbitrary precision number","long_desc":"Multiply the left_operand by the right_operand.","ver":"PHP 4, PHP 5","ret_desc":"Returns the result as a string.","seealso":[],"url":"function.bcmul","name":"bcmul","params":[{"list":[{"type":"string","var":"$left_operand","beh":0,"desc":"The left operand, as a string."},{"type":"string","var":"$right_operand","beh":1,"desc":"The right operand, as a string."},{"type":"int","var":"$scale","beh":1,"desc":"This optional parameter is used to set the number of digits after the decimal place in the result. You can also set the global default scale for all functions by using bcscale()."}],"ret_type":"string"}]},"bcompiler_load":{"desc":"Reads and creates classes from a bz compressed file","long_desc":"Reads data from a bzcompressed file and creates classes from the bytecodes.","ver":"PECL bcompiler >= 0.4","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.bcompiler-load","name":"bcompiler_load","params":[{"list":[],"ret_type":"bool"}]},"bcompiler_load_exe":{"desc":"Reads and creates classes from a bcompiler exe file","long_desc":"Reads data from a bcompiler exe file and creates classes from the bytecodes.","ver":"PECL bcompiler >= 0.4","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.bcompiler-load-exe","name":"bcompiler_load_exe","params":[{"list":[],"ret_type":"bool"}]},"bcompiler_parse_class":{"desc":"Reads the bytecodes of a class and calls back to a user function","long_desc":"Reads the bytecodes of a class and calls back to a user function.","ver":"PECL bcompiler >= 0.4","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.bcompiler-parse-class","name":"bcompiler_parse_class","params":[{"list":[{"type":"string","var":"$class","beh":0,"desc":"The class name, as a string."},{"type":"string","var":"$callback","beh":0,"desc":""}],"ret_type":"bool"}]},"bcompiler_read":{"desc":"Reads and creates classes from a filehandle","long_desc":"Reads data from a open file handle and creates classes from the bytecodes.","ver":"PECL bcompiler >= 0.4","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.bcompiler-read","name":"bcompiler_read","params":[{"list":[],"ret_type":"bool"}]},"bcompiler_write_class":{"desc":"Writes a defined class as bytecodes","long_desc":"Reads the bytecodes from PHP for an existing class, and writes them to the open file handle.","ver":"PECL bcompiler >= 0.4","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.bcompiler-write-class","name":"bcompiler_write_class","params":[{"list":[{"type":"resource","var":"$filehandle","beh":0,"desc":"A file handle as returned by fopen()."},{"type":"string","var":"$className","beh":1,"desc":"The class name, as a string."},{"type":"string","var":"$extends","beh":1,"desc":""}],"ret_type":"bool"}]},"bcompiler_write_constant":{"desc":"Writes a defined constant as bytecodes","long_desc":"Reads the bytecodes from PHP for an existing constant, and writes them to the open file handle.","ver":"PECL bcompiler >= 0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.bcompiler-write-constant","name":"bcompiler_write_constant","params":[{"list":[{"type":"resource","var":"$filehandle","beh":0,"desc":"A file handle as returned by fopen()."},{"type":"string","var":"$constantName","beh":0,"desc":"The name of the defined constant, as a string."}],"ret_type":"bool"}]},"bcompiler_write_exe_footer":{"desc":"Writes the start pos, and sig to the end of a exe type file","long_desc":"An EXE (or self executable) file consists of 3 parts: To obtain a suitable stub you can compile php_embed-based stub phpe.c located in the examples\/embed directory on bcompiler's CVS.","ver":"PECL bcompiler >= 0.4","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.bcompiler-write-exe-footer","name":"bcompiler_write_exe_footer","params":[{"list":[{"type":"resource","var":"$filehandle","beh":0,"desc":"A file handle as returned by fopen()."},{"type":"int","var":"$startpos","beh":0,"desc":"The file position at which the Bytecodes start, and can be obtained using ftell()."}],"ret_type":"bool"}]},"bcompiler_write_file":{"desc":"Writes a php source file as bytecodes","long_desc":"This function complies specified source file into bytecodes, and writes them to the open file handle.","ver":"PECL bcompiler >= 0.6","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.bcompiler-write-file","name":"bcompiler_write_file","params":[{"list":[{"type":"resource","var":"$filehandle","beh":0,"desc":"A file handle as returned by fopen()."},{"type":"string","var":"$filename","beh":0,"desc":"The source file path, as a string."}],"ret_type":"bool"}]},"bcompiler_write_footer":{"desc":"Writes the single character \\x00 to indicate End of compiled data","long_desc":"Writes the single character \\x00 to indicate End of compiled data.","ver":"PECL bcompiler >= 0.4","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.bcompiler-write-footer","name":"bcompiler_write_footer","params":[{"list":[],"ret_type":"bool"}]},"bcompiler_write_function":{"desc":"Writes a defined function as bytecodes","long_desc":"Reads the bytecodes from PHP for an existing function, and writes them to the open file handle. Order is not important, (eg. if function b uses function a, and you compile it like the example below, it will work perfectly OK).","ver":"PECL bcompiler >= 0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.bcompiler-write-function","name":"bcompiler_write_function","params":[{"list":[{"type":"resource","var":"$filehandle","beh":0,"desc":"A file handle as returned by fopen()."},{"type":"string","var":"$functionName","beh":0,"desc":"The function name, as a string."}],"ret_type":"bool"}]},"bcompiler_write_functions_from_file":{"desc":"Writes all functions defined in a file as bytecodes","long_desc":"Searches for all functions declared in the given file, and writes their correspondent bytecodes to the open file handle.","ver":"PECL bcompiler >= 0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.bcompiler-write-functions-from-file","name":"bcompiler_write_functions_from_file","params":[{"list":[{"type":"resource","var":"$filehandle","beh":0,"desc":"A file handle as returned by fopen()."},{"type":"string","var":"$fileName","beh":0,"desc":"The file to be compiled. You must always include or require the file you intend to compile."}],"ret_type":"bool"}]},"bcompiler_write_header":{"desc":"Writes the bcompiler header","long_desc":"Writes the header part of a bcompiler file.","ver":"PECL bcompiler >= 0.3","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.bcompiler-write-header","name":"bcompiler_write_header","params":[{"list":[{"type":"resource","var":"$filehandle","beh":0,"desc":"A file handle as returned by fopen()."},{"type":"string","var":"$write_ver","beh":1,"desc":"Can be used to write bytecode in a previously used format, so that you can use it with older versions of bcompiler."}],"ret_type":"bool"}]},"bcompiler_write_included_filename":{"desc":"Writes an included file as bytecodes","ver":"PECL bcompiler >= 0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.bcompiler-write-included-filename","name":"bcompiler_write_included_filename","params":[{"list":[{"type":"resource","var":"$filehandle","beh":0,"desc":""},{"type":"string","var":"$filename","beh":0,"desc":""}],"ret_type":"bool"}]},"bcpow":{"desc":"Raise an arbitrary precision number to another","long_desc":"Raise left_operand to the power right_operand.","ver":"PHP 4, PHP 5","ret_desc":"Returns the result as a string.","seealso":[],"url":"function.bcpow","name":"bcpow","params":[{"list":[{"type":"string","var":"$left_operand","beh":0,"desc":"The left operand, as a string."},{"type":"string","var":"$right_operand","beh":1,"desc":"The right operand, as a string."},{"type":"int","var":"$scale","beh":1,"desc":"This optional parameter is used to set the number of digits after the decimal place in the result. You can also set the global default scale for all functions by using bcscale()."}],"ret_type":"string"}]},"bcpowmod":{"desc":"Raise an arbitrary precision number to another, reduced by a specified modulus","long_desc":"Use the fast-exponentiation method to raise left_operand to the power right_operand with respect to the modulus modulus.","ver":"PHP 5","ret_desc":"Returns the result as a string, or NULL if modulus is 0.","seealso":[],"url":"function.bcpowmod","name":"bcpowmod","params":[{"list":[{"type":"string","var":"$left_operand","beh":0,"desc":"The left operand, as a string."},{"type":"string","var":"$right_operand","beh":1,"desc":"The right operand, as a string."},{"type":"string","var":"$modulus","beh":1,"desc":"The modulus, as a string."},{"type":"int","var":"$scale","beh":1,"desc":"This optional parameter is used to set the number of digits after the decimal place in the result. You can also set the global default scale for all functions by using bcscale()."}],"ret_type":"string"}]},"bcscale":{"desc":"Set default scale parameter for all bc math functions","long_desc":"Sets the default scale parameter for all subsequent bc math functions that do not explicitly specify a scale parameter.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.bcscale","name":"bcscale","params":[{"list":[],"ret_type":"bool"}]},"bcsqrt":{"desc":"Get the square root of an arbitrary precision number","long_desc":"Return the square root of the operand.","ver":"PHP 4, PHP 5","ret_desc":"Returns the square root as a string, or NULL if operand is negative.","seealso":[],"url":"function.bcsqrt","name":"bcsqrt","params":[{"list":[{"type":"string","var":"$operand","beh":0,"desc":"The operand, as a string."},{"type":"int","var":"$scale","beh":1,"desc":"This optional parameter is used to set the number of digits after the decimal place in the result. You can also set the global default scale for all functions by using bcscale()."}],"ret_type":"string"}]},"bcsub":{"desc":"Subtract one arbitrary precision number from another","long_desc":"Subtracts the right_operand from the left_operand.","ver":"PHP 4, PHP 5","ret_desc":"The result of the subtraction, as a string.","seealso":[],"url":"function.bcsub","name":"bcsub","params":[{"list":[{"type":"string","var":"$left_operand","beh":0,"desc":"The left operand, as a string."},{"type":"string","var":"$right_operand","beh":1,"desc":"The right operand, as a string."},{"type":"int","var":"$scale","beh":1,"desc":"This optional parameter is used to set the number of digits after the decimal place in the result. You can also set the global default scale for all functions by using bcscale()."}],"ret_type":"string"}]},"bin2hex":{"desc":"Convert binary data into hexadecimal representation","long_desc":"Returns an ASCII string containing the hexadecimal representation of str. The conversion is done byte-wise with the high-nibble first.","ver":"PHP 4, PHP 5","ret_desc":"Returns the hexadecimal representation of the given string.","seealso":[],"url":"function.bin2hex","name":"bin2hex","params":[{"list":[],"ret_type":"string"}]},"bind_textdomain_codeset":{"desc":"Specify the character encoding in which the messages from the DOMAIN message catalog will be returned","long_desc":"With bind_textdomain_codeset(), you can set in which encoding will be messages from domain returned by gettext() and similar functions.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"A string on success.","url":"function.bind-textdomain-codeset","name":"bind_textdomain_codeset","params":[{"list":[{"type":"string","var":"$domain","beh":0,"desc":"The domain"},{"type":"string","var":"$codeset","beh":0,"desc":"The code set"}],"ret_type":"string"}]},"bindec":{"desc":"Binary to decimal","long_desc":"Returns the decimal equivalent of the binary number represented by the binary_string argument. bindec() converts a binary number to an integer or, if needed for size reasons, float. bindec() interprets all binary_string values as unsigned integers. This is because bindec() sees the most significant bit as another order of magnitude rather than as the sign bit.","ver":"PHP 4, PHP 5","ret_desc":"The decimal value of binary_string","seealso":[],"url":"function.bindec","name":"bindec","params":[{"list":[],"ret_type":"number"}]},"bindtextdomain":{"desc":"Sets the path for a domain","long_desc":"The bindtextdomain() function sets the path for a domain.","ver":"PHP 4, PHP 5","ret_desc":"The full pathname for the domain currently being set.","url":"function.bindtextdomain","name":"bindtextdomain","params":[{"list":[{"type":"string","var":"$domain","beh":0,"desc":"The domain"},{"type":"string","var":"$directory","beh":0,"desc":"The directory path"}],"ret_type":"string"}]},"bson_decode":{"desc":"Deserializes a BSON object into a PHP array","long_desc":"This function is very beta and entirely useless for 99% of users. It is only useful if you're doing something weird, such as writing your own driver on top of the PHP driver.","ver":"PECL mongo >=1.0.1","ret_desc":"Returns the deserialized BSON object.","url":"function.bson-decode","name":"bson_decode","params":[{"list":[],"ret_type":"array"}]},"bson_encode":{"desc":"Serializes a PHP variable into a BSON string","long_desc":"This function is very beta and entirely useless for 99% of users. It is only useful if you're doing something weird, such as writing your own driver on top of the PHP driver.","ver":"PECL mongo >=1.0.1","ret_desc":"Returns the serialized string.","url":"function.bson-encode","name":"bson_encode","params":[{"list":[],"ret_type":"string"}]},"bzclose":{"desc":"Close a bzip2 file","long_desc":"Closes the given bzip2 file pointer.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.bzclose","name":"bzclose","params":[{"list":[],"ret_type":"int"}]},"bzcompress":{"desc":"Compress a string into bzip2 encoded data","long_desc":"bzcompress() compresses the given string and returns it as bzip2 encoded data.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"The compressed string, or an error number if an error occurred.","seealso":[],"url":"function.bzcompress","name":"bzcompress","params":[{"list":[{"type":"string","var":"$source","beh":1,"desc":"The string to compress."},{"type":"int","var":"$blocksize","beh":1,"desc":"Specifies the blocksize used during compression and should be a number from 1 to 9 with 9 giving the best compression, but using more resources to do so.","def":4},{"type":"int","var":"$workfactor","beh":1,"desc":"Controls how the compression phase behaves when presented with worst case, highly repetitive, input data. The value can be between 0 and 250 with 0 being a special case. Regardless of the workfactor, the generated output is the same.","def":0}],"ret_type":"mixed"}]},"bzdecompress":{"desc":"Decompresses bzip2 encoded data","long_desc":"bzdecompress() decompresses the given string containing bzip2 encoded data.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"The decompressed string, or an error number if an error occurred.","seealso":[],"url":"function.bzdecompress","name":"bzdecompress","params":[{"list":[{"type":"string","var":"$source","beh":0,"desc":"The string to decompress."},{"type":"int","var":"$small","beh":0,"desc":"If TRUE, an alternative decompression algorithm will be used which uses less memory (the maximum memory requirement drops to around 2300K) but works at roughly half the speed. See the \u00bb\u00a0bzip2 documentation for more information about this feature.","def":0}],"ret_type":"mixed"}]},"bzerrno":{"desc":"Returns a bzip2 error number","long_desc":"Returns the error number of any bzip2 error returned by the given file pointer.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns the error number as an integer.","seealso":[],"url":"function.bzerrno","name":"bzerrno","params":[{"list":[],"ret_type":"int"}]},"bzerror":{"desc":"Returns the bzip2 error number and error string in an array","long_desc":"Returns the error number and error string of any bzip2 error returned by the given file pointer.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns an associative array, with the error code in the errno entry, and the error message in the errstr entry.","seealso":[],"url":"function.bzerror","name":"bzerror","params":[{"list":[],"ret_type":"array"}]},"bzerrstr":{"desc":"Returns a bzip2 error string","long_desc":"Gets the error string of any bzip2 error returned by the given file pointer.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns a string containing the error message.","seealso":[],"url":"function.bzerrstr","name":"bzerrstr","params":[{"list":[],"ret_type":"string"}]},"bzflush":{"desc":"Force a write of all buffered data","long_desc":"Forces a write of all buffered bzip2 data for the file pointer bz.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.bzflush","name":"bzflush","params":[{"list":[],"ret_type":"int"}]},"bzopen":{"desc":"Opens a bzip2 compressed file","long_desc":"bzopen() opens a bzip2 (.bz2) file for reading or writing.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"If the open fails, bzopen() returns FALSE, otherwise it returns a pointer to the newly opened file.","seealso":[],"url":"function.bzopen","name":"bzopen","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The name of the file to open."},{"type":"string","var":"$mode","beh":0,"desc":"Similar to the fopen() function, only 'r' (read) and 'w' (write) are supported. Everything else will cause bzopen to return FALSE."}],"ret_type":"resource"}]},"bzread":{"desc":"Binary safe bzip2 file read","long_desc":"bzread() reads from the given bzip2 file pointer. Reading stops when length (uncompressed) bytes have been read or EOF is reached, whichever comes first.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns the uncompressed data, or FALSE on error.","seealso":[],"url":"function.bzread","name":"bzread","params":[{"list":[{"type":"resource","var":"$bz","beh":0,"desc":"The file pointer. It must be valid and must point to a file successfully opened by bzopen()."},{"type":"int","var":"$length","beh":0,"desc":"If not specified, bzread() will read 1024 (uncompressed) bytes at a time. A maximum of 8192 uncompressed bytes will be read at a time.","def":1024}],"ret_type":"string"}]},"bzwrite":{"desc":"Binary safe bzip2 file write","long_desc":"bzwrite() writes a string into the given bzip2 file stream.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns the number of bytes written, or FALSE on error.","seealso":[],"url":"function.bzwrite","name":"bzwrite","params":[{"list":[{"type":"resource","var":"$bz","beh":0,"desc":"The file pointer. It must be valid and must point to a file successfully opened by bzopen()."},{"type":"string","var":"$data","beh":1,"desc":"The written data."},{"type":"int","var":"$length","beh":1,"desc":"If supplied, writing will stop after length (uncompressed) bytes have been written or the end of data is reached, whichever comes first."}],"ret_type":"int"}]},"cairo_create":{"desc":"Returns a new CairoContext object on the requested surface.","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-create","name":"cairo_create","params":[{"list":[],"ret_type":"CairoContext"}]},"cairo_font_face_get_type":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-font-face-get-type","name":"cairo_font_face_get_type","params":[{"list":[],"ret_type":"int"}]},"cairo_font_face_status":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-font-face-status","name":"cairo_font_face_status","params":[{"list":[],"ret_type":"int"}]},"cairo_font_options_create":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-font-options-create","name":"cairo_font_options_create","params":[{"list":[],"ret_type":"CairoFontOptions"}]},"cairo_font_options_equal":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-font-options-equal","name":"cairo_font_options_equal","params":[{"list":[{"type":"CairoFontOptions","var":"$options","beh":0,"desc":"Description..."},{"type":"CairoFontOptions","var":"$other","beh":0,"desc":"Description..."}],"ret_type":"bool"}]},"cairo_font_options_get_antialias":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-font-options-get-antialias","name":"cairo_font_options_get_antialias","params":[{"list":[],"ret_type":"int"}]},"cairo_font_options_get_hint_metrics":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-font-options-get-hint-metrics","name":"cairo_font_options_get_hint_metrics","params":[{"list":[],"ret_type":"int"}]},"cairo_font_options_get_hint_style":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-font-options-get-hint-style","name":"cairo_font_options_get_hint_style","params":[{"list":[],"ret_type":"int"}]},"cairo_font_options_get_subpixel_order":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-font-options-get-subpixel-order","name":"cairo_font_options_get_subpixel_order","params":[{"list":[],"ret_type":"int"}]},"cairo_font_options_hash":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-font-options-hash","name":"cairo_font_options_hash","params":[{"list":[],"ret_type":"int"}]},"cairo_font_options_merge":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-font-options-merge","name":"cairo_font_options_merge","params":[{"list":[{"type":"CairoFontOptions","var":"$options","beh":0,"desc":"Description..."},{"type":"CairoFontOptions","var":"$other","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"cairo_font_options_set_antialias":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-font-options-set-antialias","name":"cairo_font_options_set_antialias","params":[{"list":[{"type":"CairoFontOptions","var":"$options","beh":0,"desc":"Description..."},{"type":"int","var":"$antialias","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"cairo_font_options_set_hint_metrics":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-font-options-set-hint-metrics","name":"cairo_font_options_set_hint_metrics","params":[{"list":[{"type":"CairoFontOptions","var":"$options","beh":0,"desc":"Description..."},{"type":"int","var":"$hint_metrics","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"cairo_font_options_set_hint_style":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-font-options-set-hint-style","name":"cairo_font_options_set_hint_style","params":[{"list":[{"type":"CairoFontOptions","var":"$options","beh":0,"desc":"Description..."},{"type":"int","var":"$hint_style","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"cairo_font_options_set_subpixel_order":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-font-options-set-subpixel-order","name":"cairo_font_options_set_subpixel_order","params":[{"list":[{"type":"CairoFontOptions","var":"$options","beh":0,"desc":"Description..."},{"type":"int","var":"$subpixel_order","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"cairo_font_options_status":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-font-options-status","name":"cairo_font_options_status","params":[{"list":[],"ret_type":"int"}]},"cairo_format_stride_for_width":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-format-stride-for-width","name":"cairo_format_stride_for_width","params":[{"list":[{"type":"int","var":"$format","beh":0,"desc":"Description..."},{"type":"int","var":"$width","beh":0,"desc":"Description..."}],"ret_type":"int"}]},"cairo_image_surface_create":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-image-surface-create","name":"cairo_image_surface_create","params":[{"list":[{"type":"int","var":"$format","beh":0,"desc":"Description..."},{"type":"int","var":"$width","beh":0,"desc":"Description..."},{"type":"int","var":"$height","beh":1,"desc":"Description..."}],"ret_type":"CairoImageSurface"}]},"cairo_image_surface_create_for_data":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-image-surface-create-for-data","name":"cairo_image_surface_create_for_data","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":"Description..."},{"type":"int","var":"$format","beh":1,"desc":"Description..."},{"type":"int","var":"$width","beh":1,"desc":"Description..."},{"type":"int","var":"$height","beh":1,"desc":"Description..."},{"type":"int","var":"$stride","beh":1,"desc":"Description...","def":-1}],"ret_type":"CairoImageSurface"}]},"cairo_image_surface_create_from_png":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-image-surface-create-from-png","name":"cairo_image_surface_create_from_png","params":[{"list":[],"ret_type":"CairoImageSurface"}]},"cairo_image_surface_get_data":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-image-surface-get-data","name":"cairo_image_surface_get_data","params":[{"list":[],"ret_type":"string"}]},"cairo_image_surface_get_format":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-image-surface-get-format","name":"cairo_image_surface_get_format","params":[{"list":[],"ret_type":"int"}]},"cairo_image_surface_get_height":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-image-surface-get-height","name":"cairo_image_surface_get_height","params":[{"list":[],"ret_type":"int"}]},"cairo_image_surface_get_stride":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-image-surface-get-stride","name":"cairo_image_surface_get_stride","params":[{"list":[],"ret_type":"int"}]},"cairo_image_surface_get_width":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-image-surface-get-width","name":"cairo_image_surface_get_width","params":[{"list":[],"ret_type":"int"}]},"cairo_matrix_create_scale":{"desc":"Alias of CairoMatrix::initScale()","long_desc":"This function is an alias of: CairoMatrix::initScale(). This function alias is deprecated and only exists for backwards compatibility reasons. The use of this function is not recommended, as it may be removed from PHP in the future.","ver":"PECL cairo >= 0.1.0","url":"function.cairo-matrix-create-scale","name":"cairo_matrix_create_scale","params":[]},"cairo_matrix_create_translate":{"desc":"Alias of CairoMatrix::initTranslate()","long_desc":"This function is an alias of: CairoMatrix::initTranslate(). This function alias is deprecated and only exists for backwards compatibility reasons. The use of this function is not recommended, as it may be removed from PHP in the future.","ver":"PECL cairo >= 0.1.0","url":"function.cairo-matrix-create-translate","name":"cairo_matrix_create_translate","params":[]},"cairo_matrix_invert":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-matrix-invert","name":"cairo_matrix_invert","params":[{"list":[],"ret_type":"void"}]},"cairo_matrix_multiply":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-matrix-multiply","name":"cairo_matrix_multiply","params":[{"list":[{"type":"CairoMatrix","var":"$matrix1","beh":0,"desc":"Description..."},{"type":"CairoMatrix","var":"$matrix2","beh":0,"desc":"Description..."}],"ret_type":"CairoMatrix"}]},"cairo_matrix_rotate":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-matrix-rotate","name":"cairo_matrix_rotate","params":[{"list":[{"type":"CairoMatrix","var":"$matrix","beh":0,"desc":"Description..."},{"type":"float","var":"$radians","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"cairo_matrix_transform_distance":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-matrix-transform-distance","name":"cairo_matrix_transform_distance","params":[{"list":[{"type":"CairoMatrix","var":"$matrix","beh":0,"desc":"Description..."},{"type":"float","var":"$dx","beh":0,"desc":"Description..."},{"type":"float","var":"$dy","beh":1,"desc":"Description..."}],"ret_type":"array"}]},"cairo_matrix_transform_point":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-matrix-transform-point","name":"cairo_matrix_transform_point","params":[{"list":[{"type":"CairoMatrix","var":"$matrix","beh":0,"desc":"Description..."},{"type":"float","var":"$dx","beh":0,"desc":"Description..."},{"type":"float","var":"$dy","beh":1,"desc":"Description..."}],"ret_type":"array"}]},"cairo_matrix_translate":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-matrix-translate","name":"cairo_matrix_translate","params":[{"list":[{"type":"CairoMatrix","var":"$matrix","beh":0,"desc":"Description..."},{"type":"float","var":"$tx","beh":0,"desc":"Description..."},{"type":"float","var":"$ty","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"cairo_pattern_add_color_stop_rgb":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-add-color-stop-rgb","name":"cairo_pattern_add_color_stop_rgb","params":[{"list":[{"type":"CairoGradientPattern","var":"$pattern","beh":0,"desc":"Description..."},{"type":"float","var":"$offset","beh":0,"desc":"Description..."},{"type":"float","var":"$red","beh":1,"desc":"Description..."},{"type":"float","var":"$green","beh":1,"desc":"Description..."},{"type":"float","var":"$blue","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"cairo_pattern_add_color_stop_rgba":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-add-color-stop-rgba","name":"cairo_pattern_add_color_stop_rgba","params":[{"list":[{"type":"CairoGradientPattern","var":"$pattern","beh":0,"desc":"Description..."},{"type":"float","var":"$offset","beh":0,"desc":"Description..."},{"type":"float","var":"$red","beh":1,"desc":"Description..."},{"type":"float","var":"$green","beh":1,"desc":"Description..."},{"type":"float","var":"$blue","beh":1,"desc":"Description..."},{"type":"float","var":"$alpha","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"cairo_pattern_create_for_surface":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-create-for-surface","name":"cairo_pattern_create_for_surface","params":[{"list":[],"ret_type":"CairoPattern"}]},"cairo_pattern_create_linear":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-create-linear","name":"cairo_pattern_create_linear","params":[{"list":[{"type":"float","var":"$x0","beh":0,"desc":"Description..."},{"type":"float","var":"$y0","beh":0,"desc":"Description..."},{"type":"float","var":"$x1","beh":1,"desc":"Description..."},{"type":"float","var":"$y1","beh":1,"desc":"Description..."}],"ret_type":"CairoPattern"}]},"cairo_pattern_create_radial":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-create-radial","name":"cairo_pattern_create_radial","params":[{"list":[{"type":"float","var":"$x0","beh":0,"desc":"Description..."},{"type":"float","var":"$y0","beh":0,"desc":"Description..."},{"type":"float","var":"$r0","beh":1,"desc":"Description..."},{"type":"float","var":"$x1","beh":1,"desc":"Description..."},{"type":"float","var":"$y1","beh":1,"desc":"Description..."},{"type":"float","var":"$r1","beh":1,"desc":"Description..."}],"ret_type":"CairoPattern"}]},"cairo_pattern_create_rgb":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-create-rgb","name":"cairo_pattern_create_rgb","params":[{"list":[{"type":"float","var":"$red","beh":0,"desc":"Description..."},{"type":"float","var":"$green","beh":0,"desc":"Description..."},{"type":"float","var":"$blue","beh":1,"desc":"Description..."}],"ret_type":"CairoPattern"}]},"cairo_pattern_create_rgba":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-create-rgba","name":"cairo_pattern_create_rgba","params":[{"list":[{"type":"float","var":"$red","beh":0,"desc":"Description..."},{"type":"float","var":"$green","beh":0,"desc":"Description..."},{"type":"float","var":"$blue","beh":1,"desc":"Description..."},{"type":"float","var":"$alpha","beh":1,"desc":"Description..."}],"ret_type":"CairoPattern"}]},"cairo_pattern_get_color_stop_count":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-get-color-stop-count","name":"cairo_pattern_get_color_stop_count","params":[{"list":[],"ret_type":"int"}]},"cairo_pattern_get_color_stop_rgba":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-get-color-stop-rgba","name":"cairo_pattern_get_color_stop_rgba","params":[{"list":[{"type":"CairoGradientPattern","var":"$pattern","beh":0,"desc":"Description..."},{"type":"int","var":"$index","beh":0,"desc":"Description..."}],"ret_type":"array"}]},"cairo_pattern_get_extend":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-get-extend","name":"cairo_pattern_get_extend","params":[{"list":[],"ret_type":"int"}]},"cairo_pattern_get_filter":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-get-filter","name":"cairo_pattern_get_filter","params":[{"list":[],"ret_type":"int"}]},"cairo_pattern_get_linear_points":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-get-linear-points","name":"cairo_pattern_get_linear_points","params":[{"list":[],"ret_type":"array"}]},"cairo_pattern_get_matrix":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-get-matrix","name":"cairo_pattern_get_matrix","params":[{"list":[],"ret_type":"CairoMatrix"}]},"cairo_pattern_get_radial_circles":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-get-radial-circles","name":"cairo_pattern_get_radial_circles","params":[{"list":[],"ret_type":"array"}]},"cairo_pattern_get_rgba":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-get-rgba","name":"cairo_pattern_get_rgba","params":[{"list":[],"ret_type":"array"}]},"cairo_pattern_get_surface":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-get-surface","name":"cairo_pattern_get_surface","params":[{"list":[],"ret_type":"CairoSurface"}]},"cairo_pattern_get_type":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-get-type","name":"cairo_pattern_get_type","params":[{"list":[],"ret_type":"int"}]},"cairo_pattern_set_extend":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-set-extend","name":"cairo_pattern_set_extend","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"Description..."},{"type":"string","var":"$extend","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"cairo_pattern_set_filter":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-set-filter","name":"cairo_pattern_set_filter","params":[{"list":[{"type":"CairoSurfacePattern","var":"$pattern","beh":0,"desc":"Description..."},{"type":"int","var":"$filter","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"cairo_pattern_set_matrix":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-set-matrix","name":"cairo_pattern_set_matrix","params":[{"list":[{"type":"CairoPattern","var":"$pattern","beh":0,"desc":"Description..."},{"type":"CairoMatrix","var":"$matrix","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"cairo_pattern_status":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pattern-status","name":"cairo_pattern_status","params":[{"list":[],"ret_type":"int"}]},"cairo_pdf_surface_create":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pdf-surface-create","name":"cairo_pdf_surface_create","params":[{"list":[{"type":"string","var":"$file","beh":0,"desc":"Description..."},{"type":"float","var":"$width","beh":0,"desc":"Description..."},{"type":"float","var":"$height","beh":1,"desc":"Description..."}],"ret_type":"CairoPdfSurface"}]},"cairo_pdf_surface_set_size":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-pdf-surface-set-size","name":"cairo_pdf_surface_set_size","params":[{"list":[{"type":"CairoPdfSurface","var":"$surface","beh":0,"desc":"Description..."},{"type":"float","var":"$width","beh":0,"desc":"Description..."},{"type":"float","var":"$height","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"cairo_ps_get_levels":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-ps-get-levels","name":"cairo_ps_get_levels","params":[{"list":[],"ret_type":"array"}]},"cairo_ps_level_to_string":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-ps-level-to-string","name":"cairo_ps_level_to_string","params":[{"list":[],"ret_type":"string"}]},"cairo_ps_surface_create":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-ps-surface-create","name":"cairo_ps_surface_create","params":[{"list":[{"type":"string","var":"$file","beh":0,"desc":"Description..."},{"type":"float","var":"$width","beh":0,"desc":"Description..."},{"type":"float","var":"$height","beh":1,"desc":"Description..."}],"ret_type":"CairoPsSurface"}]},"cairo_ps_surface_dsc_begin_page_setup":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-ps-surface-dsc-begin-page-setup","name":"cairo_ps_surface_dsc_begin_page_setup","params":[{"list":[],"ret_type":"void"}]},"cairo_ps_surface_dsc_begin_setup":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-ps-surface-dsc-begin-setup","name":"cairo_ps_surface_dsc_begin_setup","params":[{"list":[],"ret_type":"void"}]},"cairo_ps_surface_dsc_comment":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-ps-surface-dsc-comment","name":"cairo_ps_surface_dsc_comment","params":[{"list":[{"type":"CairoPsSurface","var":"$surface","beh":0,"desc":"Description..."},{"type":"string","var":"$comment","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"cairo_ps_surface_get_eps":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-ps-surface-get-eps","name":"cairo_ps_surface_get_eps","params":[{"list":[],"ret_type":"bool"}]},"cairo_ps_surface_restrict_to_level":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-ps-surface-restrict-to-level","name":"cairo_ps_surface_restrict_to_level","params":[{"list":[{"type":"CairoPsSurface","var":"$surface","beh":0,"desc":"Description..."},{"type":"int","var":"$level","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"cairo_ps_surface_set_eps":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-ps-surface-set-eps","name":"cairo_ps_surface_set_eps","params":[{"list":[{"type":"CairoPsSurface","var":"$surface","beh":0,"desc":"Description..."},{"type":"bool","var":"$level","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"cairo_ps_surface_set_size":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-ps-surface-set-size","name":"cairo_ps_surface_set_size","params":[{"list":[{"type":"CairoPsSurface","var":"$surface","beh":0,"desc":"Description..."},{"type":"float","var":"$width","beh":0,"desc":"Description..."},{"type":"float","var":"$height","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"cairo_scaled_font_create":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-scaled-font-create","name":"cairo_scaled_font_create","params":[{"list":[{"type":"CairoFontFace","var":"$fontface","beh":0,"desc":"Description..."},{"type":"CairoMatrix","var":"$matrix","beh":0,"desc":"Description..."},{"type":"CairoMatrix","var":"$ctm","beh":1,"desc":"Description..."},{"type":"CairoFontOptions","var":"$fontoptions","beh":1,"desc":"Description..."}],"ret_type":"CairoScaledFont"}]},"cairo_scaled_font_extents":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-scaled-font-extents","name":"cairo_scaled_font_extents","params":[{"list":[],"ret_type":"array"}]},"cairo_scaled_font_get_ctm":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-scaled-font-get-ctm","name":"cairo_scaled_font_get_ctm","params":[{"list":[],"ret_type":"CairoMatrix"}]},"cairo_scaled_font_get_font_face":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-scaled-font-get-font-face","name":"cairo_scaled_font_get_font_face","params":[{"list":[],"ret_type":"CairoFontFace"}]},"cairo_scaled_font_get_font_matrix":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-scaled-font-get-font-matrix","name":"cairo_scaled_font_get_font_matrix","params":[{"list":[],"ret_type":"CairoFontOptions"}]},"cairo_scaled_font_get_font_options":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-scaled-font-get-font-options","name":"cairo_scaled_font_get_font_options","params":[{"list":[],"ret_type":"CairoFontOptions"}]},"cairo_scaled_font_get_scale_matrix":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-scaled-font-get-scale-matrix","name":"cairo_scaled_font_get_scale_matrix","params":[{"list":[],"ret_type":"CairoMatrix"}]},"cairo_scaled_font_get_type":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-scaled-font-get-type","name":"cairo_scaled_font_get_type","params":[{"list":[],"ret_type":"int"}]},"cairo_scaled_font_glyph_extents":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-scaled-font-glyph-extents","name":"cairo_scaled_font_glyph_extents","params":[{"list":[{"type":"CairoScaledFont","var":"$scaledfont","beh":0,"desc":"Description..."},{"type":"array","var":"$glyphs","beh":0,"desc":"Description..."}],"ret_type":"array"}]},"cairo_scaled_font_status":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-scaled-font-status","name":"cairo_scaled_font_status","params":[{"list":[],"ret_type":"int"}]},"cairo_scaled_font_text_extents":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-scaled-font-text-extents","name":"cairo_scaled_font_text_extents","params":[{"list":[{"type":"CairoScaledFont","var":"$scaledfont","beh":0,"desc":"Description..."},{"type":"string","var":"$text","beh":0,"desc":"Description..."}],"ret_type":"array"}]},"cairo_surface_copy_page":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-surface-copy-page","name":"cairo_surface_copy_page","params":[{"list":[],"ret_type":"void"}]},"cairo_surface_create_similar":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-surface-create-similar","name":"cairo_surface_create_similar","params":[{"list":[{"type":"CairoSurface","var":"$surface","beh":0,"desc":"Description..."},{"type":"int","var":"$content","beh":0,"desc":"Description..."},{"type":"float","var":"$width","beh":1,"desc":"Description..."},{"type":"float","var":"$height","beh":1,"desc":"Description..."}],"ret_type":"CairoSurface"}]},"cairo_surface_finish":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-surface-finish","name":"cairo_surface_finish","params":[{"list":[],"ret_type":"void"}]},"cairo_surface_flush":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-surface-flush","name":"cairo_surface_flush","params":[{"list":[],"ret_type":"void"}]},"cairo_surface_get_content":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-surface-get-content","name":"cairo_surface_get_content","params":[{"list":[],"ret_type":"int"}]},"cairo_surface_get_device_offset":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-surface-get-device-offset","name":"cairo_surface_get_device_offset","params":[{"list":[],"ret_type":"array"}]},"cairo_surface_get_font_options":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-surface-get-font-options","name":"cairo_surface_get_font_options","params":[{"list":[],"ret_type":"CairoFontOptions"}]},"cairo_surface_get_type":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-surface-get-type","name":"cairo_surface_get_type","params":[{"list":[],"ret_type":"int"}]},"cairo_surface_mark_dirty":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-surface-mark-dirty","name":"cairo_surface_mark_dirty","params":[{"list":[],"ret_type":"void"}]},"cairo_surface_mark_dirty_rectangle":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-surface-mark-dirty-rectangle","name":"cairo_surface_mark_dirty_rectangle","params":[{"list":[{"type":"CairoSurface","var":"$surface","beh":0,"desc":"Description..."},{"type":"float","var":"$x","beh":0,"desc":"Description..."},{"type":"float","var":"$y","beh":1,"desc":"Description..."},{"type":"float","var":"$width","beh":1,"desc":"Description..."},{"type":"float","var":"$height","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"cairo_surface_set_device_offset":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-surface-set-device-offset","name":"cairo_surface_set_device_offset","params":[{"list":[{"type":"CairoSurface","var":"$surface","beh":0,"desc":"Description..."},{"type":"float","var":"$x","beh":0,"desc":"Description..."},{"type":"float","var":"$y","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"cairo_surface_set_fallback_resolution":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-surface-set-fallback-resolution","name":"cairo_surface_set_fallback_resolution","params":[{"list":[{"type":"CairoSurface","var":"$surface","beh":0,"desc":"Description..."},{"type":"float","var":"$x","beh":0,"desc":"Description..."},{"type":"float","var":"$y","beh":1,"desc":"Description..."}],"ret_type":"void"}]},"cairo_surface_show_page":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-surface-show-page","name":"cairo_surface_show_page","params":[{"list":[],"ret_type":"void"}]},"cairo_surface_status":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-surface-status","name":"cairo_surface_status","params":[{"list":[],"ret_type":"int"}]},"cairo_surface_write_to_png":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-surface-write-to-png","name":"cairo_surface_write_to_png","params":[{"list":[{"type":"CairoSurface","var":"$surface","beh":0,"desc":"Description..."},{"type":"resource","var":"$stream","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"cairo_svg_surface_create":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-svg-surface-create","name":"cairo_svg_surface_create","params":[{"list":[{"type":"string","var":"$file","beh":0,"desc":"Description..."},{"type":"float","var":"$width","beh":0,"desc":"Description..."},{"type":"float","var":"$height","beh":1,"desc":"Description..."}],"ret_type":"CairoSvgSurface"}]},"cairo_svg_surface_restrict_to_version":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-svg-surface-restrict-to-version","name":"cairo_svg_surface_restrict_to_version","params":[{"list":[{"type":"CairoSvgSurface","var":"$surface","beh":0,"desc":"Description..."},{"type":"int","var":"$version","beh":0,"desc":"Description..."}],"ret_type":"void"}]},"cairo_svg_version_to_string":{"desc":"Description","long_desc":"The function description goes here.","ver":"PECL cairo >= 0.1.0","ret_desc":"What is returned on success and failure","seealso":[],"url":"function.cairo-svg-version-to-string","name":"cairo_svg_version_to_string","params":[{"list":[],"ret_type":"string"}]},"cairocontext":{"name":"CairoContext","class":"CairoContext"},"cal_days_in_month":{"desc":"Return the number of days in a month for a given year and calendar","long_desc":"This function will return the number of days in the month of year for the specified calendar.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"The length in days of the selected month in the given calendar","url":"function.cal-days-in-month","name":"cal_days_in_month","params":[{"list":[{"type":"int","var":"$calendar","beh":0,"desc":"Calendar to use for calculation"},{"type":"int","var":"$month","beh":0,"desc":"Month in the selected calendar"},{"type":"int","var":"$year","beh":1,"desc":"Year in the selected calendar"}],"ret_type":"int"}]},"cal_from_jd":{"desc":"Converts from Julian Day Count to a supported calendar","long_desc":"cal_from_jd() converts the Julian day given in jd into a date of the specified calendar. Supported calendar values are CAL_GREGORIAN, CAL_JULIAN, CAL_JEWISH and CAL_FRENCH.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns an array containing calendar information like month, day, year, day of week, abbreviated and full names of weekday and month and the date in string form \"month\/day\/year\".","seealso":[],"url":"function.cal-from-jd","name":"cal_from_jd","params":[{"list":[{"type":"int","var":"$jd","beh":0,"desc":"Julian day as integer"},{"type":"int","var":"$calendar","beh":0,"desc":"Calendar to convert to"}],"ret_type":"array"}]},"cal_info":{"desc":"Returns information about a particular calendar","long_desc":"cal_info() returns information on the specified calendar. Calendar information is returned as an array containing the elements calname, calsymbol, month, abbrevmonth and maxdaysinmonth. The names of the different calendars which can be used as calendar are as follows: If no calendar is specified information on all supported calendars is returned as an array.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"","url":"function.cal-info","name":"cal_info","params":[{"list":[],"ret_type":"array"}]},"cal_to_jd":{"desc":"Converts from a supported calendar to Julian Day Count","long_desc":"cal_to_jd() calculates the Julian day count for a date in the specified calendar. Supported calendars are CAL_GREGORIAN, CAL_JULIAN, CAL_JEWISH and CAL_FRENCH.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"A Julian Day number.","seealso":[],"url":"function.cal-to-jd","name":"cal_to_jd","params":[{"list":[{"type":"int","var":"$calendar","beh":0,"desc":"Calendar to convert from, one of CAL_GREGORIAN, CAL_JULIAN, CAL_JEWISH or CAL_FRENCH."},{"type":"int","var":"$month","beh":0,"desc":"The month as a number, the valid range depends on the calendar"},{"type":"int","var":"$day","beh":1,"desc":"The day as a number, the valid range depends on the calendar"},{"type":"int","var":"$year","beh":1,"desc":"The year as a number, the valid range depends on the calendar"}],"ret_type":"int"}]},"calcul_hmac":{"desc":"Obtain a hmac key (needs 8 arguments)","ver":"PECL spplus >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.calcul-hmac","name":"calcul_hmac","params":[{"list":[{"type":"string","var":"$clent","beh":0,"desc":""},{"type":"string","var":"$siretcode","beh":0,"desc":""},{"type":"string","var":"$price","beh":1,"desc":""},{"type":"string","var":"$reference","beh":1,"desc":""},{"type":"string","var":"$validity","beh":1,"desc":""},{"type":"string","var":"$taxation","beh":1,"desc":""},{"type":"string","var":"$devise","beh":1,"desc":""},{"type":"string","var":"$language","beh":1,"desc":""}],"ret_type":"string"}]},"calculhmac":{"desc":"Obtain a hmac key (needs 2 arguments)","ver":"PECL spplus >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.calculhmac","name":"calculhmac","params":[{"list":[{"type":"string","var":"$clent","beh":0,"desc":""},{"type":"string","var":"$data","beh":0,"desc":""}],"ret_type":"string"}]},"call_user_func":{"desc":"Call the callback given by the first parameter","long_desc":"Calls the callback given by the first parameter and passes the remaining parameters as arguments.","ver":"PHP 4, PHP 5","ret_desc":"Returns the return value of the callback, or FALSE on error.","seealso":[],"url":"function.call-user-func","name":"call_user_func","params":[{"list":[{"type":"callable","var":"$callback","beh":1,"desc":"The callable to be called."},{"type":"mixed","var":"$parameter","beh":1,"desc":"Zero or more parameters to be passed to the callback."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"mixed"}]},"call_user_func_array":{"desc":"Call a callback with an array of parameters","long_desc":"Calls the callback given by the first parameter with the parameters in param_arr.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns the return value of the callback, or FALSE on error.","seealso":[],"url":"function.call-user-func-array","name":"call_user_func_array","params":[{"list":[{"type":"callable","var":"$callback","beh":0,"desc":"The callable to be called."},{"type":"array","var":"$param_arr","beh":0,"desc":"The parameters to be passed to the callback, as an indexed array."}],"ret_type":"mixed"}]},"call_user_method":{"desc":"Call a user method on an specific object [deprecated]","ver":"PHP 4, PHP 5","seealso":[],"url":"function.call-user-method","name":"call_user_method","params":[{"list":[{"type":"string","var":"$method_name","beh":1,"desc":"The method name being called."},{"type":"object","var":"&$obj","beh":1,"desc":"The object that method_name is being called on."},{"type":"mixed","var":"$parameter","beh":1,"desc":"The optional parameters."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"mixed"}]},"call_user_method_array":{"desc":"Call a user method given with an array of parameters [deprecated]","ver":"PHP 4 >= 4.0.5, PHP 5","seealso":[],"url":"function.call-user-method-array","name":"call_user_method_array","params":[{"list":[{"type":"string","var":"$method_name","beh":0,"desc":"The method name being called."},{"type":"object","var":"&$obj","beh":0,"desc":"The object that method_name is being called on."},{"type":"array","var":"$params","beh":1,"desc":"An array of parameters."}],"ret_type":"mixed"}]},"ceil":{"desc":"Round fractions up","long_desc":"Returns the next highest integer value by rounding up value if necessary.","ver":"PHP 4, PHP 5","ret_desc":"value rounded up to the next highest integer. The return value of ceil() is still of type float as the value range of float is usually bigger than that of integer.","seealso":[],"url":"function.ceil","name":"ceil","params":[{"list":[],"ret_type":"float"}]},"chdb_create":{"desc":"Creates a chdb file","long_desc":"chdb_create() creates a chdb file containing the specified key-value pairs.","ver":"PECL chdb >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.chdb-create","name":"chdb_create","params":[{"list":[{"type":"string","var":"$pathname","beh":0,"desc":"The name of the file to create. If a file with the same name already exists, it is overwritten."},{"type":"array","var":"$data","beh":0,"desc":"An array containing the key-value pairs to store in the chdb file. Keys and values are converted to strings before being written to the file, as chdb only support the string type. Note that binary strings are supported as well, both as keys and values."}],"ret_type":"bool"}]},"chdir":{"desc":"Change directory","long_desc":"Changes PHP's current directory to directory.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.chdir","name":"chdir","params":[{"list":[],"ret_type":"bool"}]},"checkdate":{"desc":"Validate a Gregorian date","long_desc":"Checks the validity of the date formed by the arguments. A date is considered valid if each parameter is properly defined.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the date given is valid; otherwise returns FALSE.","seealso":[],"url":"function.checkdate","name":"checkdate","params":[{"list":[{"type":"int","var":"$month","beh":0,"desc":"The month is between 1 and 12 inclusive."},{"type":"int","var":"$day","beh":0,"desc":"The day is within the allowed number of days for the given month. Leap years are taken into consideration."},{"type":"int","var":"$year","beh":1,"desc":"The year is between 1 and 32767 inclusive."}],"ret_type":"bool"}]},"checkdnsrr":{"desc":"Check DNS records corresponding to a given Internet host name or IP address","long_desc":"Searches DNS for records of type type corresponding to host.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if any records are found; returns FALSE if no records were found or if an error occurred.","seealso":[],"url":"function.checkdnsrr","name":"checkdnsrr","params":[{"list":[{"type":"string","var":"$host","beh":0,"desc":"host may either be the IP address in dotted-quad notation or the host name."},{"type":"string","var":"$type","beh":0,"desc":"type may be any one of: A, MX, NS, SOA, PTR, CNAME, AAAA, A6, SRV, NAPTR, TXT or ANY.","def":"\"MX\""}],"ret_type":"bool"}]},"chgrp":{"desc":"Changes file group","long_desc":"Attempts to change the group of the file filename to group. Only the superuser may change the group of a file arbitrarily; other users may change the group of a file to any group of which that user is a member.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.chgrp","name":"chgrp","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"Path to the file."},{"type":"mixed","var":"$group","beh":0,"desc":"A group name or number."}],"ret_type":"bool"}]},"chmod":{"desc":"Changes file mode","long_desc":"Attempts to change the mode of the specified file to that given in mode.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.chmod","name":"chmod","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"Path to the file."},{"type":"int","var":"$mode","beh":0,"desc":"Note that mode is not automatically assumed to be an octal value, so strings (such as \"g+w\") will not work properly. To ensure the expected operation, you need to prefix mode with a zero (0): The mode parameter consists of three octal number components specifying access restrictions for the owner, the user group in which the owner is in, and to everybody else in this order. One component can be computed by adding up the needed permissions for that target user base. Number 1 means that you grant execute rights, number 2 means that you make the file writeable, number 4 means that you make the file readable. Add up these numbers to specify needed rights. You can also read more about modes on Unix systems with 'man 1 chmod' and 'man 2 chmod'."}],"ret_type":"bool"}]},"chop":{"desc":"Alias of rtrim()","long_desc":"This function is an alias of: rtrim().","ver":"PHP 4, PHP 5","url":"function.chop","name":"chop","params":[]},"chown":{"desc":"Changes file owner","long_desc":"Attempts to change the owner of the file filename to user user. Only the superuser may change the owner of a file.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.chown","name":"chown","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"Path to the file."},{"type":"mixed","var":"$user","beh":0,"desc":"A user name or number."}],"ret_type":"bool"}]},"chr":{"desc":"Return a specific character","long_desc":"Returns a one-character string containing the character specified by ascii. This function complements ord().","ver":"PHP 4, PHP 5","ret_desc":"Returns the specified character.","seealso":[],"url":"function.chr","name":"chr","params":[{"list":[],"ret_type":"string"}]},"chroot":{"desc":"Change the root directory","long_desc":"Changes the root directory of the current process to directory, and changes the current working directory to \"\/\". This function is only available to GNU and BSD systems, and only when using the CLI, CGI or Embed SAPI. Also, this function requires root privileges.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.chroot","name":"chroot","params":[{"list":[],"ret_type":"bool"}]},"chunk_split":{"desc":"Split a string into smaller chunks","long_desc":"Can be used to split a string into smaller chunks which is useful for e.g. converting base64_encode() output to match RFC 2045 semantics. It inserts end every chunklen characters.","ver":"PHP 4, PHP 5","ret_desc":"Returns the chunked string.","seealso":[],"url":"function.chunk-split","name":"chunk_split","params":[{"list":[{"type":"string","var":"$body","beh":1,"desc":"The string to be chunked."},{"type":"int","var":"$chunklen","beh":1,"desc":"The chunk length.","def":76},{"type":"string","var":"$end","beh":1,"desc":"The line ending sequence.","def":"\"\\r\\n\""}],"ret_type":"string"}]},"class_alias":{"desc":"Creates an alias for a class","long_desc":"Creates an alias named alias based on the defined class original. The aliased class is exactly the same as the original class.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.class-alias","name":"class_alias","params":[{"list":[{"type":"string","var":"$original","beh":1,"desc":"The original class."},{"type":"string","var":"$alias","beh":1,"desc":"The alias name for the class."}],"ret_type":"bool"}]},"class_exists":{"desc":"Checks if the class has been defined","long_desc":"This function checks whether or not the given class has been defined.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if class_name is a defined class, FALSE otherwise.","seealso":[],"url":"function.class-exists","name":"class_exists","params":[{"list":[{"type":"string","var":"$class_name","beh":0,"desc":"The class name. The name is matched in a case-insensitive manner."},{"type":"bool","var":"$autoload","beh":0,"desc":"Whether or not to call __autoload by default.","def":"true"}],"ret_type":"bool"}]},"class_implements":{"desc":"Return the interfaces which are implemented by the given class","long_desc":"This function returns an array with the names of the interfaces that the given class and its parents implement.","ver":"PHP 5 >= 5.1.0","ret_desc":"An array on success, or FALSE on error.","seealso":[],"url":"function.class-implements","name":"class_implements","params":[{"list":[{"type":"mixed","var":"$class","beh":0,"desc":"An object (class instance) or a string (class name)."},{"type":"bool","var":"$autoload","beh":0,"desc":"Whether to allow this function to load the class automatically through the __autoload() magic method.","def":"true"}],"ret_type":"array"}]},"class_parents":{"desc":"Return the parent classes of the given class","long_desc":"This function returns an array with the name of the parent classes of the given class.","ver":"PHP 5 >= 5.1.0","ret_desc":"An array on success, or FALSE on error.","seealso":[],"url":"function.class-parents","name":"class_parents","params":[{"list":[{"type":"mixed","var":"$class","beh":0,"desc":"An object (class instance) or a string (class name)."},{"type":"bool","var":"$autoload","beh":0,"desc":"Whether to allow this function to load the class automatically through the __autoload() magic method.","def":"true"}],"ret_type":"array"}]},"class_uses":{"desc":"Return the traits used by the given class","long_desc":"This function returns an array with the names of the traits that the given class uses. This does however not include any traits used by a parent class.","ver":"PHP 5 >= 5.4.0","ret_desc":"An array on success, or FALSE on error.","seealso":[],"url":"function.class-uses","name":"class_uses","params":[{"list":[{"type":"mixed","var":"$class","beh":0,"desc":"An object (class instance) or a string (class name)."},{"type":"bool","var":"$autoload","beh":0,"desc":"Whether to allow this function to load the class automatically through the __autoload() magic method.","def":"true"}],"ret_type":"array"}]},"classkit_import":{"desc":"Import new class method definitions from a file","ver":"PECL classkit >= 0.3","ret_desc":"Associative array of imported methods","seealso":[],"url":"function.classkit-import","name":"classkit_import","params":[{"list":[],"ret_type":"array"}]},"classkit_method_add":{"desc":"Dynamically adds a new method to a given class","ver":"PECL classkit >= 0.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.classkit-method-add","name":"classkit_method_add","params":[{"list":[{"type":"string","var":"$classname","beh":0,"desc":"The class to which this method will be added"},{"type":"string","var":"$methodname","beh":1,"desc":"The name of the method to add"},{"type":"string","var":"$args","beh":1,"desc":"Comma-delimited list of arguments for the newly-created method"},{"type":"string","var":"$code","beh":1,"desc":"The code to be evaluated when methodname is called"},{"type":"int","var":"$flags","beh":1,"desc":"The type of method to create, can be CLASSKIT_ACC_PUBLIC, CLASSKIT_ACC_PROTECTED or CLASSKIT_ACC_PRIVATE","def":"CLASSKIT_ACC_PUBLIC"}],"ret_type":"bool"}]},"classkit_method_copy":{"desc":"Copies a method from class to another","ver":"PECL classkit >= 0.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.classkit-method-copy","name":"classkit_method_copy","params":[{"list":[{"type":"string","var":"$dClass","beh":0,"desc":"Destination class for copied method"},{"type":"string","var":"$dMethod","beh":1,"desc":"Destination method name"},{"type":"string","var":"$sClass","beh":1,"desc":"Source class of the method to copy"},{"type":"string","var":"$sMethod","beh":1,"desc":"Name of the method to copy from the source class. If this parameter is omitted, the value of dMethod is assumed."}],"ret_type":"bool"}]},"classkit_method_redefine":{"desc":"Dynamically changes the code of the given method","ver":"PECL classkit >= 0.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.classkit-method-redefine","name":"classkit_method_redefine","params":[{"list":[{"type":"string","var":"$classname","beh":0,"desc":"The class in which to redefine the method"},{"type":"string","var":"$methodname","beh":1,"desc":"The name of the method to redefine"},{"type":"string","var":"$args","beh":1,"desc":"Comma-delimited list of arguments for the redefined method"},{"type":"string","var":"$code","beh":1,"desc":"The new code to be evaluated when methodname is called"},{"type":"int","var":"$flags","beh":1,"desc":"The redefined method can be CLASSKIT_ACC_PUBLIC, CLASSKIT_ACC_PROTECTED or CLASSKIT_ACC_PRIVATE","def":"CLASSKIT_ACC_PUBLIC"}],"ret_type":"bool"}]},"classkit_method_remove":{"desc":"Dynamically removes the given method","ver":"PECL classkit >= 0.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.classkit-method-remove","name":"classkit_method_remove","params":[{"list":[{"type":"string","var":"$classname","beh":0,"desc":"The class in which to remove the method"},{"type":"string","var":"$methodname","beh":0,"desc":"The name of the method to remove"}],"ret_type":"bool"}]},"classkit_method_rename":{"desc":"Dynamically changes the name of the given method","ver":"PECL classkit >= 0.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.classkit-method-rename","name":"classkit_method_rename","params":[{"list":[{"type":"string","var":"$classname","beh":0,"desc":"The class in which to rename the method"},{"type":"string","var":"$methodname","beh":0,"desc":"The name of the method to rename"},{"type":"string","var":"$newname","beh":1,"desc":"The new name to give to the renamed method"}],"ret_type":"bool"}]},"clearstatcache":{"desc":"Clears file status cache","long_desc":"When you use stat(), lstat(), or any of the other functions listed in the affected functions list (below), PHP caches the information those functions return in order to provide faster performance. However, in certain cases, you may want to clear the cached information. For instance, if the same file is being checked multiple times within a single script, and that file is in danger of being removed or changed during that script's operation, you may elect to clear the status cache. In these cases, you can use the clearstatcache() function to clear the information that PHP caches about a file. You should also note that PHP doesn't cache information about non-existent files. So, if you call file_exists() on a file that doesn't exist, it will return FALSE until you create the file. If you create the file, it will return TRUE even if you then delete the file. However unlink() clears the cache automatically. Affected functions include stat(), lstat(), file_exists(), is_writable(), is_readable(), is_executable(), is_file(), is_dir(), is_link(), filectime(), fileatime(), filemtime(), fileinode(), filegroup(), fileowner(), filesize(), filetype(), and fileperms().","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","url":"function.clearstatcache","name":"clearstatcache","params":[{"list":[{"type":"bool","var":"$clear_realpath_cache","beh":0,"desc":"Whether to clear the realpath cache or not.","def":"false"},{"type":"string","var":"$filename","beh":1,"desc":"Clear the realpath cache for a specific filename; only used if clear_realpath_cache is TRUE."}],"ret_type":"void"}]},"closedir":{"desc":"Close directory handle","long_desc":"Closes the directory stream indicated by dir_handle. The stream must have previously been opened by opendir().","ver":"PHP 4, PHP 5","url":"function.closedir","name":"closedir","params":[{"list":[],"ret_type":"void"}]},"closelog":{"desc":"Close connection to system logger","long_desc":"closelog() closes the descriptor being used to write to the system logger. The use of closelog() is optional.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.closelog","name":"closelog","params":[{"list":[],"ret_type":"bool"}]},"com_addref":{"desc":"Increases the components reference counter [deprecated]","long_desc":"Increases the components reference counter.","ver":"PHP 4 >= 4.1.0","ret_desc":"No value is returned.","url":"function.com-addref","name":"com_addref","params":[{"list":[],"ret_type":"void"}]},"com_create_guid":{"desc":"Generate a globally unique identifier (GUID)","long_desc":"Generates a Globally Unique Identifier (GUID). A GUID is generated in the same way as DCE UUID's, except that the Microsoft convention is to enclose a GUID in curly braces.","ver":"PHP 5","ret_desc":"Returns the GUID as a string.","seealso":[],"url":"function.com-create-guid","name":"com_create_guid","params":[{"list":[],"ret_type":"string"}]},"com_event_sink":{"desc":"Connect events from a COM object to a PHP object","long_desc":"Instructs COM to sink events generated by comobject into the PHP object sinkobject. Be careful how you use this feature; if you are doing something similar to the example below, then it doesn't really make sense to run it in a web server context.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.com-event-sink","name":"com_event_sink","params":[{"list":[{"type":"variant","var":"$comobject","beh":0,"desc":""},{"type":"object","var":"$sinkobject","beh":1,"desc":"sinkobject should be an instance of a class with methods named after those of the desired dispinterface; you may use com_print_typeinfo() to help generate a template class for this purpose."},{"type":"mixed","var":"$sinkinterface","beh":1,"desc":"PHP will attempt to use the default dispinterface type specified by the typelibrary associated with comobject, but you may override this choice by setting sinkinterface to the name of the dispinterface that you want to use."}],"ret_type":"bool"}]},"com_get":{"desc":"Gets the value of a COM Component's property [deprecated]","long_desc":"Deprecated, use the OO syntax instead.","ver":"PHP 4","url":"function.com-get","name":"com_get","params":[]},"com_get_active_object":{"desc":"Returns a handle to an already running instance of a COM object","long_desc":"com_get_active_object() is similar to creating a new instance of a COM object, except that it will only return an object to your script if the object is already running. OLE applications use something known as the Running Object Table to allow well-known applications to be launched only once; this function exposes the COM library function GetActiveObject() to get a handle on a running instance.","ver":"PHP 5","ret_desc":"If the requested object is running, it will be returned to your script just like any other COM object.","url":"function.com-get-active-object","name":"com_get_active_object","params":[{"list":[{"type":"string","var":"$progid","beh":0,"desc":"progid must be either the ProgID or CLSID for the object that you want to access (for example Word.Application)."},{"type":"int","var":"$code_page","beh":1,"desc":"Acts in precisely the same way that it does for the COM class."}],"ret_type":"variant"}]},"com_invoke":{"desc":"Calls a COM component's method [deprecated]","ver":"PHP 4","url":"function.com-invoke","name":"com_invoke","params":[{"list":[{"type":"resource","var":"$com_object","beh":0,"desc":""},{"type":"string","var":"$function_name","beh":1,"desc":""},{"type":"mixed","var":"$function_parameters","beh":1,"desc":""}],"ret_type":"mixed"}]},"com_isenum":{"desc":"Indicates if a COM object has an IEnumVariant interface for iteration [deprecated]","long_desc":"Checks to see if a COM object can be enumerated using the Next() method hack. See COM class for more details on these methods.","ver":"PHP 4 >= 4.1.0","ret_desc":"Returns TRUE if the object can be enumerated, FALSE otherwise.","url":"function.com-isenum","name":"com_isenum","params":[{"list":[],"ret_type":"bool"}]},"com_load":{"desc":"Creates a new reference to a COM component [deprecated]","long_desc":"Deprecated, use the OO syntax instead.","ver":"PHP 4","url":"function.com-load","name":"com_load","params":[]},"com_load_typelib":{"desc":"Loads a Typelib","long_desc":"Loads a type-library and registers its constants in the engine, as though they were defined using define(). Note that it is much more efficient to use the configuration setting to pre-load and register the constants, although not so flexible. If you have turned on , then PHP will attempt to automatically register the constants associated with a COM object when you instantiate it. This depends on the interfaces provided by the COM object itself, and may not always be possible.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.com-load-typelib","name":"com_load_typelib","params":[{"list":[{"type":"string","var":"$typelib_name","beh":0,"desc":"typelib_name can be one of the following:"},{"type":"bool","var":"$case_insensitive","beh":0,"desc":"The case_insensitive behaves in the same way as the parameter with the same name in the define() function.","def":"true"}],"ret_type":"bool"}]},"com_message_pump":{"desc":"Process COM messages, sleeping for up to timeoutms milliseconds","long_desc":"This function will sleep for up to timeoutms milliseconds, or until a message arrives in the queue. The purpose of this function is to route COM calls between apartments and handle various synchronization issues. This allows your script to wait efficiently for events to be triggered, while still handling other events or running other code in the background. You should use it in a loop, as demonstrated by the example in the com_event_sink() function, until you are finished using event bound COM objects.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"If a message or messages arrives before the timeout, they will be dispatched, and the function will return TRUE. If the timeout occurs and no messages were processed, the return value will be FALSE.","url":"function.com-message-pump","name":"com_message_pump","params":[{"list":[],"ret_type":"bool"}]},"com_print_typeinfo":{"desc":"Print out a PHP class definition for a dispatchable interface","long_desc":"The purpose of this function is to help generate a skeleton class for use as an event sink. You may also use it to generate a dump of any COM object, provided that it supports enough of the introspection interfaces, and that you know the name of the interface you want to display.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.com-print-typeinfo","name":"com_print_typeinfo","params":[{"list":[{"type":"object","var":"$comobject","beh":1,"desc":"comobject should be either an instance of a COM object, or be the name of a typelibrary (which will be resolved according to the rules set out in com_load_typelib())."},{"type":"string","var":"$dispinterface","beh":1,"desc":"The name of an IDispatch descendant interface that you want to display."},{"type":"bool","var":"$wantsink","beh":1,"desc":"If set to TRUE, the corresponding sink interface will be displayed instead.","def":"false"}],"ret_type":"bool"}]},"com_propget":{"desc":"Alias of com_get()","long_desc":"This function is an alias of: com_get().","ver":"PHP 4","url":"function.com-propget","name":"com_propget","params":[]},"com_propput":{"desc":"Alias of com_set()","long_desc":"This function is an alias of: com_set().","ver":"PHP 4","url":"function.com-propput","name":"com_propput","params":[]},"com_propset":{"desc":"Alias of com_set()","long_desc":"This function is an alias of: com_set().","ver":"PHP 4","url":"function.com-propset","name":"com_propset","params":[]},"com_release":{"desc":"Decreases the components reference counter [deprecated]","long_desc":"Decreases the components reference counter.","ver":"PHP 4 >= 4.1.0","ret_desc":"No value is returned.","url":"function.com-release","name":"com_release","params":[{"list":[],"ret_type":"void"}]},"com_set":{"desc":"Assigns a value to a COM component's property","long_desc":"Deprecated, use the OO syntax instead.","ver":"PHP 4","url":"function.com-set","name":"com_set","params":[]},"compact":{"desc":"Create array containing variables and their values","long_desc":"Creates an array containing variables and their values. For each of these, compact() looks for a variable with that name in the current symbol table and adds it to the output array such that the variable name becomes the key and the contents of the variable become the value for that key. In short, it does the opposite of extract(). Any strings that are not set will simply be skipped.","ver":"PHP 4, PHP 5","ret_desc":"Returns the output array with all the variables added to it.","seealso":[],"url":"function.compact","name":"compact","params":[{"list":[{"type":"mixed","var":"$varname","beh":0,"desc":"compact() takes a variable number of parameters. Each parameter can be either a string containing the name of the variable, or an array of variable names. The array can contain other arrays of variable names inside it; compact() handles it recursively."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"array"}]},"connection_aborted":{"desc":"Check whether client disconnected","long_desc":"Checks whether the client disconnected.","ver":"PHP 4, PHP 5","ret_desc":"Returns 1 if client disconnected, 0 otherwise.","seealso":[],"url":"function.connection-aborted","name":"connection_aborted","params":[{"list":[],"ret_type":"int"}]},"connection_status":{"desc":"Returns connection status bitfield","long_desc":"Gets the connection status bitfield.","ver":"PHP 4, PHP 5","ret_desc":"Returns the connection status bitfield, which can be used against the CONNECTION_XXX constants to determine the connection status.","seealso":[],"url":"function.connection-status","name":"connection_status","params":[{"list":[],"ret_type":"int"}]},"connection_timeout":{"desc":"Check if the script timed out","long_desc":"Determines whether the script timed out.","ver":"PHP 4 <= 4.0.4","ret_desc":"Returns 1 if the script timed out, 0 otherwise.","seealso":[],"url":"function.connection-timeout","name":"connection_timeout","params":[{"list":[],"ret_type":"int"}]},"constant":{"desc":"Returns the value of a constant","long_desc":"Return the value of the constant indicated by name. constant() is useful if you need to retrieve the value of a constant, but do not know its name. I.e. it is stored in a variable or returned by a function. This function works also with class constants.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns the value of the constant, or NULL if the constant is not defined.","seealso":[],"url":"function.constant","name":"constant","params":[{"list":[],"ret_type":"mixed"}]},"convert_cyr_string":{"desc":"Convert from one Cyrillic character set to another","long_desc":"Converts from one Cyrillic character set to another.","ver":"PHP 4, PHP 5","ret_desc":"Returns the converted string.","url":"function.convert-cyr-string","name":"convert_cyr_string","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string to be converted."},{"type":"string","var":"$from","beh":0,"desc":"The source Cyrillic character set, as a single character."},{"type":"string","var":"$to","beh":1,"desc":"The target Cyrillic character set, as a single character."}],"ret_type":"string"}]},"convert_uudecode":{"desc":"Decode a uuencoded string","long_desc":"convert_uudecode() decodes a uuencoded string.","ver":"PHP 5","ret_desc":"Returns the decoded data as a string.","seealso":[],"url":"function.convert-uudecode","name":"convert_uudecode","params":[{"list":[],"ret_type":"string"}]},"convert_uuencode":{"desc":"Uuencode a string","long_desc":"convert_uuencode() encodes a string using the uuencode algorithm. Uuencode translates all strings (including binary's ones) into printable characters, making them safe for network transmissions. Uuencoded data is about 35% larger than the original.","ver":"PHP 5","ret_desc":"Returns the uuencoded data.","seealso":[],"url":"function.convert-uuencode","name":"convert_uuencode","params":[{"list":[],"ret_type":"string"}]},"copy":{"desc":"Copies file","long_desc":"Makes a copy of the file source to dest. If you wish to move a file, use the rename() function.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.copy","name":"copy","params":[{"list":[{"type":"string","var":"$source","beh":0,"desc":"Path to the source file."},{"type":"string","var":"$dest","beh":1,"desc":"The destination path. If dest is a URL, the copy operation may fail if the wrapper does not support overwriting of existing files."},{"type":"resource","var":"$context","beh":1,"desc":"A valid context resource created with stream_context_create()."}],"ret_type":"bool"}]},"cos":{"desc":"Cosine","long_desc":"cos() returns the cosine of the arg parameter. The arg parameter is in radians.","ver":"PHP 4, PHP 5","ret_desc":"The cosine of arg","seealso":[],"url":"function.cos","name":"cos","params":[{"list":[],"ret_type":"float"}]},"cosh":{"desc":"Hyperbolic cosine","long_desc":"Returns the hyperbolic cosine of arg, defined as (exp(arg) + exp(-arg))\/2.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"The hyperbolic cosine of arg","seealso":[],"url":"function.cosh","name":"cosh","params":[{"list":[],"ret_type":"float"}]},"count":{"desc":"Count all elements in an array, or something in an object","long_desc":"Counts all elements in an array, or something in an object. For objects, if you have SPL installed, you can hook into count() by implementing interface Countable. The interface has exactly one method, Countable::count(), which returns the return value for the count() function. Please see the Array section of the manual for a detailed explanation of how arrays are implemented and used in PHP.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of elements in var. If var is not an array or an object with implemented Countable interface, 1 will be returned. There is one exception, if var is NULL, 0 will be returned.","seealso":[],"url":"function.count","name":"count","params":[{"list":[{"type":"mixed","var":"$var","beh":0,"desc":"The array or the object."},{"type":"int","var":"$mode","beh":0,"desc":"If the optional mode parameter is set to COUNT_RECURSIVE (or 1), count() will recursively count the array. This is particularly useful for counting all the elements of a multidimensional array. count() does not detect infinite recursion.","def":"COUNT_NORMAL"}],"ret_type":"int"}]},"count_chars":{"desc":"Return information about characters used in a string","long_desc":"Counts the number of occurrences of every byte-value (0..255) in string and returns it in various ways.","ver":"PHP 4, PHP 5","ret_desc":"Depending on mode count_chars() returns one of the following:","seealso":[],"url":"function.count-chars","name":"count_chars","params":[{"list":[{"type":"string","var":"$string","beh":0,"desc":"The examined string."},{"type":"int","var":"$mode","beh":0,"desc":"See return values.","def":0}],"ret_type":"mixed"}]},"countable":{"name":"Countable","class":"Countable"},"crack_check":{"desc":"Performs an obscure check with the given password","long_desc":"Performs an obscure check with the given password on the specified dictionary.","ver":"PECL crack >= 0.1","ret_desc":"Returns TRUE if password is strong, or FALSE otherwise.","url":"function.crack-check","name":"crack_check","params":[{"list":[{"type":"resource","var":"$dictionary","beh":0,"desc":"The crack lib dictionary. If not specified, the last opened dictionary is used."},{"type":"string","var":"$password","beh":0,"desc":"The tested password."}],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"crack_closedict":{"desc":"Closes an open CrackLib dictionary","long_desc":"crack_closedict() closes the specified dictionary identifier.","ver":"PECL crack >= 0.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.crack-closedict","name":"crack_closedict","params":[{"list":[],"ret_type":"bool"}]},"crack_getlastmessage":{"desc":"Returns the message from the last obscure check","long_desc":"crack_getlastmessage() returns the message from the last obscure check.","ver":"PECL crack >= 0.1","ret_desc":"The message from the last obscure check or FALSE if there was no obscure checks made so far.","seealso":[],"url":"function.crack-getlastmessage","name":"crack_getlastmessage","params":[{"list":[],"ret_type":"string"}]},"crack_opendict":{"desc":"Opens a new CrackLib dictionary","long_desc":"crack_opendict() opens the specified CrackLib dictionary for use with crack_check().","ver":"PECL crack >= 0.1","ret_desc":"Returns a dictionary resource identifier on success or FALSE on failure.","seealso":[],"url":"function.crack-opendict","name":"crack_opendict","params":[{"list":[],"ret_type":"resource"}]},"crc32":{"desc":"Calculates the crc32 polynomial of a string","long_desc":"Generates the cyclic redundancy checksum polynomial of 32-bit lengths of the str. This is usually used to validate the integrity of data being transmitted. Because PHP's integer type is signed, and many crc32 checksums will result in negative integers, you need to use the \"%u\" formatter of sprintf() or printf() to get the string representation of the unsigned crc32 checksum.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns the crc32 checksum of str as an integer.","seealso":[],"url":"function.crc32","name":"crc32","params":[{"list":[],"ret_type":"int"}]},"create_function":{"desc":"Create an anonymous (lambda-style) function","long_desc":"Creates an anonymous function from the parameters passed, and returns a unique name for it.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns a unique function name as a string, or FALSE on error.","seealso":[],"url":"function.create-function","name":"create_function","params":[{"list":[{"type":"string","var":"$args","beh":0,"desc":"The function arguments."},{"type":"string","var":"$code","beh":0,"desc":"The function code."}],"ret_type":"string"}]},"crypt":{"desc":"One-way string hashing","long_desc":"crypt() will return a hashed string using the standard Unix DES-based algorithm or alternative algorithms that may be available on the system. Some operating systems support more than one type of hash. In fact, sometimes the standard DES-based algorithm is replaced by an MD5-based algorithm. The hash type is triggered by the salt argument. Prior to 5.3, PHP would determine the available algorithms at install-time based on the system's crypt(). If no salt is provided, PHP will auto-generate either a standard two character (DES) salt, or a twelve character (MD5), depending on the availability of MD5 crypt(). PHP sets a constant named CRYPT_SALT_LENGTH which indicates the longest valid salt allowed by the available hashes. The standard DES-based crypt() returns the salt as the first two characters of the output. It also only uses the first eight characters of str, so longer strings that start with the same eight characters will generate the same result (when the same salt is used). On systems where the crypt() function supports multiple hash types, the following constants are set to 0 or 1 depending on whether the given type is available:","ver":"PHP 4, PHP 5","ret_desc":"Returns the hashed string or a string that is shorter than 13 characters and is guaranteed to differ from the salt on failure.","seealso":[],"url":"function.crypt","name":"crypt","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string to be hashed."},{"type":"string","var":"$salt","beh":1,"desc":"An optional salt string to base the hashing on. If not provided, the behaviour is defined by the algorithm implementation and can lead to unexpected results."}],"ret_type":"string"}]},"ctype_alnum":{"desc":"Check for alphanumeric character(s)","long_desc":"Checks if all of the characters in the provided string, text, are alphanumeric. In the standard C locale letters are just [A-Za-z].","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE if every character in text is either a letter or a digit, FALSE otherwise.","seealso":[],"url":"function.ctype-alnum","name":"ctype_alnum","params":[{"list":[],"ret_type":"bool"}]},"ctype_alpha":{"desc":"Check for alphabetic character(s)","long_desc":"Checks if all of the characters in the provided string, text, are alphabetic. In the standard C locale letters are just [A-Za-z] and ctype_alpha() is equivalent to (ctype_upper($text) || ctype_lower($text)) if $text is just a single character, but other languages have letters that are considered neither upper nor lower case.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE if every character in text is a letter from the current locale, FALSE otherwise.","seealso":[],"url":"function.ctype-alpha","name":"ctype_alpha","params":[{"list":[],"ret_type":"bool"}]},"ctype_cntrl":{"desc":"Check for control character(s)","long_desc":"Checks if all of the characters in the provided string, text, are control characters. Control characters are e.g. line feed, tab, escape.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE if every character in text is a control character from the current locale, FALSE otherwise.","seealso":[],"url":"function.ctype-cntrl","name":"ctype_cntrl","params":[{"list":[],"ret_type":"bool"}]},"ctype_digit":{"desc":"Check for numeric character(s)","long_desc":"Checks if all of the characters in the provided string, text, are numerical.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE if every character in the string text is a decimal digit, FALSE otherwise.","seealso":[],"url":"function.ctype-digit","name":"ctype_digit","params":[{"list":[],"ret_type":"bool"}]},"ctype_graph":{"desc":"Check for any printable character(s) except space","long_desc":"Checks if all of the characters in the provided string, text, creates visible output.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE if every character in text is printable and actually creates visible output (no white space), FALSE otherwise.","seealso":[],"url":"function.ctype-graph","name":"ctype_graph","params":[{"list":[],"ret_type":"bool"}]},"ctype_lower":{"desc":"Check for lowercase character(s)","long_desc":"Checks if all of the characters in the provided string, text, are lowercase letters.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE if every character in text is a lowercase letter in the current locale.","seealso":[],"url":"function.ctype-lower","name":"ctype_lower","params":[{"list":[],"ret_type":"bool"}]},"ctype_print":{"desc":"Check for printable character(s)","long_desc":"Checks if all of the characters in the provided string, text, are printable.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE if every character in text will actually create output (including blanks). Returns FALSE if text contains control characters or characters that do not have any output or control function at all.","seealso":[],"url":"function.ctype-print","name":"ctype_print","params":[{"list":[],"ret_type":"bool"}]},"ctype_punct":{"desc":"Check for any printable character which is not whitespace or an alphanumeric character","long_desc":"Checks if all of the characters in the provided string, text, are punctuation character.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE if every character in text is printable, but neither letter, digit or blank, FALSE otherwise.","seealso":[],"url":"function.ctype-punct","name":"ctype_punct","params":[{"list":[],"ret_type":"bool"}]},"ctype_space":{"desc":"Check for whitespace character(s)","long_desc":"Checks if all of the characters in the provided string, text, creates whitespace.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE if every character in text creates some sort of white space, FALSE otherwise. Besides the blank character this also includes tab, vertical tab, line feed, carriage return and form feed characters.","seealso":[],"url":"function.ctype-space","name":"ctype_space","params":[{"list":[],"ret_type":"bool"}]},"ctype_upper":{"desc":"Check for uppercase character(s)","long_desc":"Checks if all of the characters in the provided string, text, are uppercase characters.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE if every character in text is an uppercase letter in the current locale.","seealso":[],"url":"function.ctype-upper","name":"ctype_upper","params":[{"list":[],"ret_type":"bool"}]},"ctype_xdigit":{"desc":"Check for character(s) representing a hexadecimal digit","long_desc":"Checks if all of the characters in the provided string, text, are hexadecimal 'digits'.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE if every character in text is a hexadecimal 'digit', that is a decimal digit or a character from [A-Fa-f] , FALSE otherwise.","seealso":[],"url":"function.ctype-xdigit","name":"ctype_xdigit","params":[{"list":[],"ret_type":"bool"}]},"cubrid_affected_rows":{"desc":"Return the number of rows affected by the last SQL statement","long_desc":"The cubrid_affected_rows() function is used to get the number of rows affected by the SQL statement (INSERT, DELETE, UPDATE).","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Number of rows affected by the SQL statement, when process is successful.","seealso":[],"url":"function.cubrid-affected-rows","name":"cubrid_affected_rows","params":[{"list":[],"ret_type":"int"}]},"cubrid_bind":{"desc":"Bind variables to a prepared statement as parameters","long_desc":"The cubrid_bind() function is used to bind values to a corresponding named or question mark placeholder in the SQL statement that was passed to cubrid_prepare(). If bind_value_type is not given, string will be the default. The following table shows the types of substitute values.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-bind","name":"cubrid_bind","params":[{"list":[{"type":"resource","var":"$req_identifier","beh":0,"desc":"Request identifier as a result of cubrid_prepare()."},{"type":"mixed","var":"$bind_param","beh":1,"desc":"Parameter identifier. For a prepared statement using named placeholders, this will be a parameter name of the form :name (Note that the name can only contain digit, alphabet, and underscore, and it can not begin with digit. The name length can not be longer than 32). For a prepared statement using question mark placeholders, this will be the 1-indexed position of the parameter."},{"type":"mixed","var":"$bind_value","beh":1,"desc":"Actual value for binding."},{"type":"string","var":"$bind_value_type","beh":1,"desc":"A type of the value to bind. (It is omitted by default. Thus, system internally use string by default. However, you need to specify the exact type of the value as an argument when they are NCHAR, BIT, or BLOB\/CLOB)."}],"ret_type":"bool"}]},"cubrid_client_encoding":{"desc":"Return the current CUBRID connection charset","long_desc":"This function returns the current CUBRID connection charset and is similar to the CUBRID function cubrid_get_charset().","ver":"PECL CUBRID >= 8.3.1","ret_desc":"A string that represents the CUBRID connection charset; on success.","seealso":[],"url":"function.cubrid-client-encoding","name":"cubrid_client_encoding","params":[{"list":[],"ret_type":"string"}]},"cubrid_close":{"desc":"Close CUBRID connection","long_desc":"The cubrid_close() function ends the transaction currently on process, closes the connection handle and disconnects from server. If there exists any request handle not closed yet at this point, it will be closed. It is similar to the CUBRID function cubrid_disconnect().","ver":"PECL CUBRID >= 8.3.1","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-close","name":"cubrid_close","params":[{"list":[],"ret_type":"bool"}]},"cubrid_close_prepare":{"desc":"Close the request handle","long_desc":"The cubrid_close_prepare() function closes the request handle given by the req_identifier argument, and releases the memory region related to the handle. It is a alias of cubrid_close_request().","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Return TRUE on success.","seealso":[],"url":"function.cubrid-close-prepare","name":"cubrid_close_prepare","params":[{"list":[],"ret_type":"int"}]},"cubrid_close_request":{"desc":"Close the request handle","long_desc":"The cubrid_close_request() function closes the request handle given by the req_identifier argument, and releases the memory region related to the handle. It is a alias of cubrid_close_prepare().","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Return TRUE on success.","seealso":[],"url":"function.cubrid-close-request","name":"cubrid_close_request","params":[{"list":[],"ret_type":"bool"}]},"cubrid_col_get":{"desc":"Get contents of collection type column using OID","long_desc":"The cubrid_col_get() function is used to get contents of the elements of the collection type (set, multiset, sequence) attribute you requested as an array.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Array (0-based numerical array) containing the elements you requested, when process is successful;","url":"function.cubrid-col-get","name":"cubrid_col_get","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":0,"desc":"OID of the instance that you want to read."},{"type":"string","var":"$attr_name","beh":1,"desc":"Attribute name that you want to read from the instance."}],"ret_type":"array"}]},"cubrid_col_size":{"desc":"Get the number of elements in collection type column using OID","long_desc":"The cubrid_col_size() function is used to get the number of elements in a collection type (set, multiset, sequence) attribute.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Number of elements, when process is successful.","url":"function.cubrid-col-size","name":"cubrid_col_size","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":0,"desc":"OID the instance that you want to work with."},{"type":"string","var":"$attr_name","beh":1,"desc":"Name of the attribute that you want to work with."}],"ret_type":"int"}]},"cubrid_column_names":{"desc":"Get the column names in result","long_desc":"The cubrid_column_names() function is used to get the column names of the query result by using req_identifier.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Array of string which containing column names, when process is successful.","seealso":[],"url":"function.cubrid-column-names","name":"cubrid_column_names","params":[{"list":[],"ret_type":"array"}]},"cubrid_column_types":{"desc":"Get column types in result","long_desc":"The cubrid_column_types() function gets column types of query results by using req_identifier.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Array of string which containing column types, when process is successful.","seealso":[],"url":"function.cubrid-column-types","name":"cubrid_column_types","params":[{"list":[],"ret_type":"array"}]},"cubrid_commit":{"desc":"Commit a transaction","long_desc":"The cubrid_commit() function is used to execute commit on the transaction pointed by conn_identifier, currently on progress. Connection to the server is closed after the cubrid_commit() function is called; the connection handle is still valid, however. In CUBRID PHP, an auto-commit mode is disabled by default for transaction management, and you can set it by using cubrid_set_autocommit(), and get its status by using cubrid_get_autocommit(). Before you start a transaction, remember to disable the auto-commit mode.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-commit","name":"cubrid_commit","params":[{"list":[],"ret_type":"bool"}]},"cubrid_connect":{"desc":"Open a connection to a CUBRID Server","long_desc":"The cubrid_connect() function is used to establish the environment for connecting to your server by using your server address, port number, database name, user name, and password. If the user name and password is not given, then the \"PUBLIC\" connection will be made by default.","ver":"PECL CUBRID >= 8.3.1","ret_desc":"Connection identifier, when process is successful.","seealso":[],"url":"function.cubrid-connect","name":"cubrid_connect","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"Host name or IP address of CUBRID CAS server."},{"type":"int","var":"$port","beh":1,"desc":"Port number of CUBRID CAS server (BROKER_PORT configured in $CUBRID\/conf\/cubrid_broker.conf)."},{"type":"string","var":"$dbname","beh":1,"desc":"Name of database."},{"type":"string","var":"$userid","beh":1,"desc":"User name for the database. If not given, the default value is \"public\"."},{"type":"string","var":"$passwd","beh":1,"desc":"User password. If not given, the default value is \"\"."},{"type":"bool","var":"$new_link","beh":1,"desc":"If a second call is made to cubrid_connect() with the same arguments, no new connection will be established, but instead, the connection identifier of the already opened connection will be returned. The new_link parameter modifies this behavior and makes cubrid_connect() always open a new connection, even if cubrid_connect() was called before with the same parameters.","def":"false"}],"ret_type":"resource"}]},"cubrid_connect_with_url":{"desc":"Establish the environment for connecting to CUBRID server","long_desc":"The cubrid_connect_with_url() function is used to establish the environment for connecting to your server by using connection information passed with an url string argument. If the HA feature is enabled in CUBRID, you must specify the connection information of the standby server, which is used for failover when failure occurs, in the url string argument of this function. If the user name and password is not given, then the \"PUBLIC\" connection will be made by default. <url> ::= CUBRID:<host>:<db_name>:<db_user>:<db_password>:[?<properties>] <properties> ::= <property> [&<property>] <properties> ::= autocommit=<autocommit_mode> <alternative_hosts> ::= <standby_broker1_host>:<port> [,<standby_broker2_host>:<port>] <host> := HOSTNAME | IP_ADDR <time> := SECOND or <url> ::= cci:CUBRID:<host>:<db_name>:......","ver":"PECL CUBRID >= 8.3.1","ret_desc":"Connection identifier, when process is successful.","seealso":[],"url":"function.cubrid-connect-with-url","name":"cubrid_connect_with_url","params":[{"list":[{"type":"string","var":"$conn_url","beh":1,"desc":"A character string that contains server connection information."},{"type":"string","var":"$userid","beh":1,"desc":"User name for the database."},{"type":"string","var":"$passwd","beh":1,"desc":"User password."},{"type":"bool","var":"$new_link","beh":1,"desc":"If a second call is made to cubrid_connect_with_url() with the same arguments, no new connection will be established, but instead, the connection identifier of the already opened connection will be returned. The new_link parameter modifies this behavior and makes cubrid_connect_with_url() always open a new connection, even if cubrid_connect_with_url() was called before with the same parameters.","def":"false"}],"ret_type":"resource"}]},"cubrid_current_oid":{"desc":"Get OID of the current cursor location","long_desc":"The cubrid_current_oid() function is used to get the oid of the current cursor location from the query result. To use cubrid_current_oid(), the query executed must be a updatable query, and the CUBRID_INCLUDE_OID option must be included during the query execution.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Oid of current cursor location, when process is successful","seealso":[],"url":"function.cubrid-current-oid","name":"cubrid_current_oid","params":[{"list":[],"ret_type":"string"}]},"cubrid_data_seek":{"desc":"Move the internal row pointer of the CUBRID result","long_desc":"This function performs the moving of the internal row pointer of the CUBRID result (associated with the specified result identifier) to point to a specific row number. There are functions, such as cubrid_fetch_assoc(), which use the current stored value of row number.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.cubrid-data-seek","name":"cubrid_data_seek","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result."},{"type":"int","var":"$row_number","beh":0,"desc":"This is the desired row number of the new result pointer."}],"ret_type":"int"}]},"cubrid_db_name":{"desc":"Get db name from results of cubrid_list_dbs","long_desc":"Retrieve the database name from a call to cubrid_list_dbs().","ver":"PECL CUBRID >= 8.3.1","ret_desc":"Returns the database name on success, and FALSE on failure. If FALSE is returned, use cubrid_error() to determine the nature of the error.","seealso":[],"url":"function.cubrid-db-name","name":"cubrid_db_name","params":[{"list":[{"type":"array","var":"$result","beh":0,"desc":"The result pointer from a call to cubrid_list_dbs()."},{"type":"int","var":"$index","beh":0,"desc":"The index into the result set."}],"ret_type":"string"}]},"cubrid_disconnect":{"desc":"Close a database connection","long_desc":"The cubrid_disconnect() function closes the connection handle and disconnects from server. If there exists any request handle not closed yet at this point, it will be closed. It is similar to the CUBRID MySQL compatible function cubrid_close().","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-disconnect","name":"cubrid_disconnect","params":[{"list":[],"ret_type":"bool"}]},"cubrid_drop":{"desc":"Delete an instance using OID","long_desc":"The cubrid_drop() function is used to delete an instance from database by using oid.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-drop","name":"cubrid_drop","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":0,"desc":"Oid of the instance that you want to delete."}],"ret_type":"bool"}]},"cubrid_errno":{"desc":"Return the numerical value of the error message from previous CUBRID operation","long_desc":"Returns the error number from the last CUBRID function. The cubrid_errno() function is used to get the error code of the error that occurred during the API execution. Usually, it gets the error code when API returns false as its return value.","ver":"PECL CUBRID >= 8.3.1","ret_desc":"Returns the error number from the last CUBRID function, or 0 (zero) if no error occurred.","seealso":[],"url":"function.cubrid-errno","name":"cubrid_errno","params":[{"list":[],"ret_type":"int"}]},"cubrid_error":{"desc":"Get the error message","long_desc":"The cubrid_error() function is used to get the error message that occurred during the use of CUBRID API. Usually, it gets error message when API returns false as its return value.","ver":"PECL CUBRID >= 8.3.1","ret_desc":"Error message that occurred.","seealso":[],"url":"function.cubrid-error","name":"cubrid_error","params":[{"list":[],"ret_type":"string"}]},"cubrid_error_code":{"desc":"Get error code for the most recent function call","long_desc":"The cubrid_error_code() function is used to get the error code of the error that occurred during the API execution. Usually, it gets the error code when API returns false as its return value.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Error code of the error that occurred, or 0 (zero) if no error occurred.","seealso":[],"url":"function.cubrid-error-code","name":"cubrid_error_code","params":[{"list":[],"ret_type":"int"}]},"cubrid_error_code_facility":{"desc":"Get the facility code of error","long_desc":"The cubrid_error_code_facility() function is used to get the facility code (level in which the error occurred) from the error code of the error that occurred during the API execution. Usually, you can get the error code when API returns false as its return value.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Facility code of the error code that occurred: CUBRID_FACILITY_DBMS, CUBRID_FACILITY_CAS, CUBRID_FACILITY_CCI, CUBRID_FACILITY_CLIENT","seealso":[],"url":"function.cubrid-error-code-facility","name":"cubrid_error_code_facility","params":[{"list":[],"ret_type":"int"}]},"cubrid_error_msg":{"desc":"Get last error message for the most recent function call","long_desc":"The cubrid_error_msg() function is used to get the error message that occurred during the use of CUBRID API. Usually, it gets error message when API returns false as its return value.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Error message that occurred.","seealso":[],"url":"function.cubrid-error-msg","name":"cubrid_error_msg","params":[{"list":[],"ret_type":"string"}]},"cubrid_execute":{"desc":"Execute a prepared SQL statement","long_desc":"The cubrid_execute() function is used to execute the given SQL statement. It executes the query by using conn_identifier and SQL, and then returns the request identifier created. It is used for simple execution of query, where the parameter binding is not needed. In addition, the cubrid_execute() function is used to execute the prepared statement by means of cubrid_prepare() and cubrid_bind(). At this time, you need to specify arguments of request_identifier and option. The option is used to determine whether to get OID after query execution and whether to execute the query in synchronous or asynchronous mode. CUBRID_INCLUDE_OID and CUBRID_ASYNC (or CUBRID_EXEC_QUERY_ALL if you want to execute multiple SQL statements) can be specified by using a bitwise OR operator. If not specified, neither of them isselected. If the flag CUBRID_EXEC_QUERY_ALL is set, a synchronous mode (sync_mode) is used to retrieve query results, and in such cases the following rules are applied: If the first argument is request_identifier to execute the cubrid_prepare() function, you can specify an option, CUBRID_ASYNC only.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Request identifier, when process is successful and first param is conn_identifier; TRUE, when process is successful and first argument is request_identifier.","seealso":[],"url":"function.cubrid-execute","name":"cubrid_execute","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$sql","beh":1,"desc":"SQL to be executed."},{"type":"int","var":"$option","beh":1,"desc":"Query execution option CUBRID_INCLUDE_OID, CUBRID_ASYNC, CUBRID_EXEC_QUERY_ALL."}],"ret_type":"resource"},{"list":[{"type":"resource","var":"$request_identifier","beh":0,"desc":"Connection identifier."},{"type":"int","var":"$option","beh":1,"desc":"SQL to be executed."}],"ret_type":"bool"}]},"cubrid_fetch":{"desc":"Fetch the next row from a result set","long_desc":"The cubrid_fetch() function is used to get a single row from the query result. The cursor automatically moves to the next row after getting the result.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Result array or object, when process is successful.","seealso":[],"url":"function.cubrid-fetch","name":"cubrid_fetch","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"result comes from a call to cubrid_execute()"},{"type":"int","var":"$type","beh":0,"desc":"Array type of the fetched result CUBRID_NUM, CUBRID_ASSOC, CUBRID_BOTH, CUBRID_OBJECT.","def":"CUBRID_BOTH"}],"ret_type":"mixed"}]},"cubrid_fetch_array":{"desc":"Fetch a result row as an associative array, a numeric array, or both","long_desc":"The cubrid_fetch_array() function is used to get a single row from the query result and returns an array. The cursor automatically moves to the next row after getting the result.","ver":"PECL CUBRID >=8.3.0","ret_desc":"Returns an array of strings that corresponds to the fetched row, when process is successful.","seealso":[],"url":"function.cubrid-fetch-array","name":"cubrid_fetch_array","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"Result comes from a call to cubrid_execute()"},{"type":"int","var":"$type","beh":0,"desc":"Array type of the fetched result CUBRID_NUM, CUBRID_ASSOC, CUBRID_BOTH.","def":"CUBRID_BOTH"}],"ret_type":"array"}]},"cubrid_fetch_assoc":{"desc":"Return the associative array that corresponds to the fetched row","long_desc":"This function returns the associative array, that corresponds to the fetched row, and then moves the internal data pointer ahead, or returns FALSE when the end is reached.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Associative array, when process is successful.","url":"function.cubrid-fetch-assoc","name":"cubrid_fetch_assoc","params":[{"list":[],"ret_type":"array"}]},"cubrid_fetch_field":{"desc":"Get column information from a result and return as an object","long_desc":"This function returns an object with certain properties of the specific column. The properties of the object are:","ver":"PECL CUBRID >= 8.3.1","ret_desc":"Object with certain properties of the specific column, when process is successful.","url":"function.cubrid-fetch-field","name":"cubrid_fetch_field","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"result comes from a call to cubrid_execute()"},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. If the field offset is not specified, the next field (that was not yet retrieved by this function) is retrieved. The field_offset starts at 0.","def":0}],"ret_type":"object"}]},"cubrid_fetch_lengths":{"desc":"Return an array with the lengths of the values of each field from the current row","long_desc":"This function returns an numeric array with the lengths of the values of each field from the current row of the result set or it returns FALSE on failure.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"An numeric array, when process is successful.","url":"function.cubrid-fetch-lengths","name":"cubrid_fetch_lengths","params":[{"list":[],"ret_type":"array"}]},"cubrid_fetch_object":{"desc":"Fetche the next row and returns it as an object","long_desc":"This function returns an object with the column names of the result set as properties. The values of these properties are extracted from the current row of the result.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"An object, when process is successful.","url":"function.cubrid-fetch-object","name":"cubrid_fetch_object","params":[{"list":[{"type":"resource","var":"$result","beh":1,"desc":"result comes from a call to cubrid_execute()"},{"type":"string","var":"$class_name","beh":1,"desc":"The name of the class to instantiate. If not specified, a stdClass (stdClass is PHP's generic empty class that's used when casting other types to objects) object is returned."},{"type":"array","var":"$params","beh":1,"desc":"An optional array of parameters to pass to the constructor for class_name objects."}],"ret_type":"object"}]},"cubrid_fetch_row":{"desc":"Return a numerical array with the values of the current row","long_desc":"This function returns a numerical array with the values of the current row from the result set, starting from 0, and moves the internal data pointer ahead.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"A numerical array, when process is successful.","url":"function.cubrid-fetch-row","name":"cubrid_fetch_row","params":[{"list":[],"ret_type":"array"}]},"cubrid_field_flags":{"desc":"Return a string with the flags of the given field offset","long_desc":"This function returns a string with the flags of the given field offset separated by space. You can split the returned value using explode. The possible flags could be: not_null, primary_key, unique_key, foreign_key, auto_increment, shared, reverse_index, reverse_unique and timestamp.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"A string with flags, when process is successful.","url":"function.cubrid-field-flags","name":"cubrid_field_flags","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"result comes from a call to cubrid_execute()"},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 0. If field_offset does not exist, an error of level E_WARNING is also issued."}],"ret_type":"string"}]},"cubrid_field_len":{"desc":"Get the maximum length of the specified field","long_desc":"This function returns the maximum length of the specified field on success, or it returns FALSE on failure.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Maximum length, when process is successful.","url":"function.cubrid-field-len","name":"cubrid_field_len","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"result comes from a call to cubrid_execute()"},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 0. If field_offset does not exist, an error of level E_WARNING is also issued."}],"ret_type":"int"}]},"cubrid_field_name":{"desc":"Return the name of the specified field index","long_desc":"This function returns the name of the specified field index on success or it returns FALSE on failure.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Name of specified field index, on success.","url":"function.cubrid-field-name","name":"cubrid_field_name","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"result comes from a call to cubrid_execute()"},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 0. If field_offset does not exist, an error of level E_WARNING is also issued."}],"ret_type":"string"}]},"cubrid_field_seek":{"desc":"Move the result set cursor to the specified field offset","long_desc":"This function moves the result set cursor to the specified field offset. This offset is used by cubrid_fetch_field() if it doesn't include a field offset. It returns TRUE on success or FALSE on failure.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE on success.","url":"function.cubrid-field-seek","name":"cubrid_field_seek","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"result comes from a call to cubrid_execute()"},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 0. If field_offset does not exist, an error of level E_WARNING is also issued.","def":0}],"ret_type":"bool"}]},"cubrid_field_table":{"desc":"Return the name of the table of the specified field","long_desc":"This function returns the name of the table of the specified field. This is useful when using large select queries with JOINS.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Name of the table of the specified field, on success.","url":"function.cubrid-field-table","name":"cubrid_field_table","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"Array type of the fetched result CUBRID_NUM, CUBRID_ASSOC, CUBRID_BOTH."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 0. If field_offset does not exist, an error of level E_WARNING is also issued."}],"ret_type":"string"}]},"cubrid_field_type":{"desc":"Return the type of the column corresponding to the given field offset","long_desc":"This function returns the type of the column corresponding to the given field offset. The returned field type could be one of the following: \"int\", \"real\", \"string\", etc.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Type of the column, on success.","url":"function.cubrid-field-type","name":"cubrid_field_type","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"Array type of the fetched result CUBRID_NUM, CUBRID_ASSOC, CUBRID_BOTH."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 0. If field_offset does not exist, an error of level E_WARNING is also issued."}],"ret_type":"string"}]},"cubrid_free_result":{"desc":"Free the memory occupied by the result data","long_desc":"This function frees the memory occupied by the result data. It returns TRUE on success or FALSE on failure. Note that it can only frees the client fetch buffer now, and if you want free all memory, use function cubrid_close_request().","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE on success.","url":"function.cubrid-free-result","name":"cubrid_free_result","params":[{"list":[],"ret_type":"bool"}]},"cubrid_get":{"desc":"Get a column using OID","long_desc":"The cubrid_get() function is used to get the attribute of the instance of the given oid. You can get single attribute by using string data type for the attr argument, or many attributes by using array data type for the attr argument.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Content of the requested attribute, when process is successful; When attr is set with string data type, the result is returned as a string; when attr is set with array data type (0-based numerical array), then the result is returned in associative array. When attr is omitted, then all attributes are received in array form.","seealso":[],"url":"function.cubrid-get","name":"cubrid_get","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":1,"desc":"OID of the instance that you want to read."},{"type":"mixed","var":"$attr","beh":1,"desc":"Name of the attribute that you want to read."}],"ret_type":"mixed"}]},"cubrid_get_autocommit":{"desc":"Get auto-commit mode of the connection","long_desc":"The cubrid_get_autocommit() function is used to get the status of CUBRID database connection auto-commit mode. For CUBRID 8.4.0, auto-commit mode is disabled by default for transaction management. For CUBRID 8.4.1, auto-commit mode is enabled by default for transaction management.","ver":"PECL CUBRID >= 8.4.0","ret_desc":"TRUE, when auto-commit is on.","seealso":[],"url":"function.cubrid-get-autocommit","name":"cubrid_get_autocommit","params":[{"list":[],"ret_type":"bool"}]},"cubrid_get_charset":{"desc":"Return the current CUBRID connection charset","long_desc":"This function returns the current CUBRID connection charset and is similar to the CUBRID MySQL compatible function cubrid_client_encoding().","ver":"PECL CUBRID >= 8.3.0","ret_desc":"A string that represents the CUBRID connection charset; on success.","seealso":[],"url":"function.cubrid-get-charset","name":"cubrid_get_charset","params":[{"list":[],"ret_type":"string"}]},"cubrid_get_class_name":{"desc":"Get the class name using OID","long_desc":"The cubrid_get_class_name() function is used to get the class name from oid.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Class name when process is successful.","seealso":[],"url":"function.cubrid-get-class-name","name":"cubrid_get_class_name","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":0,"desc":"OID of the instance that you want to check the existence."}],"ret_type":"string"}]},"cubrid_get_client_info":{"desc":"Return the client library version","long_desc":"This function returns a string that represents the client library version.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"A string that represents the client library version; on success.","url":"function.cubrid-get-client-info","name":"cubrid_get_client_info","params":[{"list":[],"ret_type":"string"}]},"cubrid_get_db_parameter":{"desc":"Returns the CUBRID database parameters","long_desc":"This function returns the CUBRID database parameters or it returns FALSE on failure. It returns an associative array with the values for the following parameters: The following table shows the isolation levels from 1 to 6. It consists of table schema (row) and isolation level:","ver":"PECL CUBRID >= 8.3.0","ret_desc":"An associative array with CUBRID database parameters; on success.","seealso":[],"url":"function.cubrid-get-db-parameter","name":"cubrid_get_db_parameter","params":[{"list":[],"ret_type":"array"}]},"cubrid_get_query_timeout":{"desc":"Get the query timeout value of the request","long_desc":"The cubrid_get_query_timeout() function is used to get the query timeout of the request.","ver":"PECL CUBRID >= 8.4.1","ret_desc":"Success: the query timeout value of the current request. Units of msec.","seealso":[],"url":"function.cubrid-get-query-timeout","name":"cubrid_get_query_timeout","params":[{"list":[],"ret_type":"int"}]},"cubrid_get_server_info":{"desc":"Return the CUBRID server version","long_desc":"This function returns a string that represents the CUBRID server version.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"A string that represents the CUBRID server version; on success.","url":"function.cubrid-get-server-info","name":"cubrid_get_server_info","params":[{"list":[],"ret_type":"string"}]},"cubrid_insert_id":{"desc":"Return the ID generated for the lastest updated AUTO_INCREMENT column","long_desc":"The cubrid_insert_id() function retrieves the ID generated for the AUTO_INCREMENT column which is updated by the previous INSERT query. It returns 0 if the previous query does not generate new rows, or FALSE on failure.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"A string representing the ID generated for an AUTO_INCREMENT column by the previous query, on success.","url":"function.cubrid-insert-id","name":"cubrid_insert_id","params":[{"list":[],"ret_type":"string"}]},"cubrid_is_instance":{"desc":"Check whether the instance pointed by OID exists","long_desc":"The cubrid_is_instance() function is used to check whether the instance pointed by the given oid exists or not.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"1, if such instance exists;","seealso":[],"url":"function.cubrid-is-instance","name":"cubrid_is_instance","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":0,"desc":"OID of the instance that you want to check the existence."}],"ret_type":"int"}]},"cubrid_list_dbs":{"desc":"Return an array with the list of all existing CUBRID databases","long_desc":"This function returns an array with the list of all existing Cubrid databases.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"An numeric array with all existing Cubrid databases; on success.","url":"function.cubrid-list-dbs","name":"cubrid_list_dbs","params":[{"list":[],"ret_type":"array"}]},"cubrid_load_from_glo":{"desc":"Read data from a GLO instance and save it in a file","long_desc":"The cubrid_load_from_glo() function is used to read a data from a glo instance, and saves it in a designated file.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-load-from-glo","name":"cubrid_load_from_glo","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":0,"desc":"Oid of the glo instance that you want to read the data from."},{"type":"string","var":"$file_name","beh":1,"desc":"Name of the file where you want to save the data in."}],"ret_type":"int"}]},"cubrid_lob_close":{"desc":"Close BLOB\/CLOB data","long_desc":"cubrid_lob_close() is used to close all BLOB\/CLOB returned from cubrid_lob_get().","ver":"PECL CUBRID >= 8.3.1","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-lob-close","name":"cubrid_lob_close","params":[{"list":[],"ret_type":"bool"}]},"cubrid_lob_export":{"desc":"Export BLOB\/CLOB data to file","long_desc":"cubrid_lob_export() is used to get BLOB\/CLOB data from CUBRID database, and saves its contents to a file. To use this function, you must use cubrid_lob_get() first to get BLOB\/CLOB info from CUBRID.","ver":"PECL CUBRID >= 8.3.1","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-lob-export","name":"cubrid_lob_export","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"resource","var":"$lob_identifier","beh":0,"desc":"LOB identifier."},{"type":"string","var":"$path_name","beh":1,"desc":"Path name of the file."}],"ret_type":"bool"}]},"cubrid_lob_get":{"desc":"Get BLOB\/CLOB data","long_desc":"cubrid_lob_get() is used to get BLOB\/CLOB meta info from CUBRID database, CUBRID gets BLOB\/CLOB by executing the SQL statement, and returns all LOBs as a resource array. Be sure that the SQL retrieves only one column and its data type is BLOB or CLOB. Remember to use cubrid_lob_close() to release the LOBs if you don't need it any more.","ver":"PECL CUBRID >= 8.3.1","ret_desc":"Return an array of LOB resources, when process is successful.","seealso":[],"url":"function.cubrid-lob-get","name":"cubrid_lob_get","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$sql","beh":0,"desc":"SQL statement to be executed."}],"ret_type":"array"}]},"cubrid_lob_send":{"desc":"Read BLOB\/CLOB data and send straight to browser","long_desc":"cubrid_lob_send() reads BLOB\/CLOB data and passes it straight through to the browser. To use this function, you must use cubrid_lob_get() first to get BLOB\/CLOB info from CUBRID.","ver":"PECL CUBRID >= 8.3.1","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-lob-send","name":"cubrid_lob_send","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"resource","var":"$lob_identifier","beh":0,"desc":"LOB identifier."}],"ret_type":"bool"}]},"cubrid_lob_size":{"desc":"Get BLOB\/CLOB data size","long_desc":"cubrid_lob_size() is used to get BLOB\/CLOB data size.","ver":"PECL CUBRID >= 8.3.1","ret_desc":"A string representing LOB data size, when process is successful.","seealso":[],"url":"function.cubrid-lob-size","name":"cubrid_lob_size","params":[{"list":[],"ret_type":"string"}]},"cubrid_lock_read":{"desc":"Set a read lock on the given OID","long_desc":"The cubrid_lock_read() function is used to put read lock on the instance pointed by given oid.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-lock-read","name":"cubrid_lock_read","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":0,"desc":"OID of the instance that you want to put read lock on."}],"ret_type":"bool"}]},"cubrid_lock_write":{"desc":"Set a write lock on the given OID","long_desc":"The cubrid_lock_write() function is used to put write lock on the instance pointed by the given oid.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-lock-write","name":"cubrid_lock_write","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":0,"desc":"OID of the instance that you want to put write lock on."}],"ret_type":"bool"}]},"cubrid_move_cursor":{"desc":"Move the cursor in the result","long_desc":"The cubrid_move_cursor() function is used to move the current cursor location of req_identifier by the value set in the offset argument, to the direction set in the origin argument. To set the origin argument, you can use CUBRID_CURSOR_FIRST for the first part of the result, CUBRID_CURSOR_CURRENT for the current location of the result, or CUBRID_CURSOR_LAST for the last part of the result. If origin argument is not explicitly designated, then the function uses CUBRID_CURSOR_CURRENT as its default value. If the value of cursor movement range goes over the valid limit, then the cursor moves to the next location after the valid range for the cursor. For example, if you move 20 units in the result with the size of 10, then the cursor will move to 11th place and return CUBRID_NO_MORE_DATA.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-move-cursor","name":"cubrid_move_cursor","params":[{"list":[{"type":"resource","var":"$req_identifier","beh":0,"desc":"Request identifier."},{"type":"int","var":"$offset","beh":1,"desc":"Number of units you want to move the cursor."},{"type":"int","var":"$origin","beh":1,"desc":"Location where you want to move the cursor from CUBRID_CURSOR_FIRST, CUBRID_CURSOR_CURRENT, CUBRID_CURSOR_LAST.","def":"CUBRID_CURSOR_CURRENT"}],"ret_type":"int"}]},"cubrid_new_glo":{"desc":"Create a glo instance","long_desc":"The cubrid_new_glo() function is used to create a glo instance in the requested class (glo class). The glo created is a LO type, and is stored in the file_name file.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Oid of the instance created, when process is successful.","seealso":[],"url":"function.cubrid-new-glo","name":"cubrid_new_glo","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$class_name","beh":0,"desc":"Name of the class that you want to create a glo in."},{"type":"string","var":"$file_name","beh":1,"desc":"The file name that you want to save in the newly created glo."}],"ret_type":"string"}]},"cubrid_next_result":{"desc":"Get result of next query when executing multiple SQL statements","long_desc":"The cubrid_next_result() function is used to get results of next query if multiple SQL statements are executed and CUBRID_EXEC_QUERY_ALL flag is set upon cubrid_execute().","ver":"PECL CUBRID >= 8.4.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-next-result","name":"cubrid_next_result","params":[{"list":[],"ret_type":"bool"}]},"cubrid_num_cols":{"desc":"Return the number of columns in the result set","long_desc":"The cubrid_num_cols() function is used to get the number of columns from the query result. It can only be used when the query executed is a select statement.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Number of columns, when process is successful.","seealso":[],"url":"function.cubrid-num-cols","name":"cubrid_num_cols","params":[{"list":[],"ret_type":"int"}]},"cubrid_num_fields":{"desc":"Return the number of columns in the result set","long_desc":"This function returns the number of columns in the result set, on success, or it returns FALSE on failure.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Number of columns, on success.","url":"function.cubrid-num-fields","name":"cubrid_num_fields","params":[{"list":[],"ret_type":"int"}]},"cubrid_num_rows":{"desc":"Get the number of rows in the result set","long_desc":"The cubrid_num_rows() function is used to get the number of rows from the query result. You can use it only when the query executed is a select statement. When you want to know such value for INSERT, UPDATE, or DELETE query, you have to use the cubrid_affected_rows() function. Note: The cubrid_num_rows() function can only be used for synchronous query; it returns 0 when it is used for asynchronous query.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Number of rows, when process is successful.","seealso":[],"url":"function.cubrid-num-rows","name":"cubrid_num_rows","params":[{"list":[],"ret_type":"int"}]},"cubrid_pconnect":{"desc":"Open a persistent connection to a CUBRID server","long_desc":"Establishes a persistent connection to a CUBRID server. cubrid_pconnect() acts very much like cubrid_connect() with two major differences. First, when connecting, the function would first try to find a (persistent) link that's already open with the same host, port, dbname and userid. If one is found, an identifier for it will be returned instead of opening a new connection. Second, the connection to the SQL server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (cubrid_close() or cubrid_disconnect() will not close links established by cubrid_pconnect()). This type of link is therefore called 'persistent'.","ver":"PECL CUBRID >= 8.3.1","ret_desc":"Connection identifier, when process is successful.","seealso":[],"url":"function.cubrid-pconnect","name":"cubrid_pconnect","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"Host name or IP address of CUBRID CAS server."},{"type":"int","var":"$port","beh":1,"desc":"Port number of CUBRID CAS server (BROKER_PORT configured in $CUBRID\/conf\/cubrid_broker.conf)."},{"type":"string","var":"$dbname","beh":1,"desc":"Name of database."},{"type":"string","var":"$userid","beh":1,"desc":"User name for the database."},{"type":"string","var":"$passwd","beh":1,"desc":"User password."}],"ret_type":"resource"}]},"cubrid_pconnect_with_url":{"desc":"Open a persistent connection to CUBRID server","long_desc":"Establishes a persistent connection to a CUBRID server. cubrid_pconnect_with_url() acts very much like cubrid_connect_with_url() with two major differences. First, when connecting, the function would first try to find a (persistent) link that's already open with the same host, port, dbname and userid. If one is found, an identifier for it will be returned instead of opening a new connection. Second, the connection to the SQL server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (cubrid_close() or cubrid_disconnect() will not close links established by cubrid_pconnect_with_url()). This type of link is therefore called 'persistent'. <url> ::= CUBRID:<host>:<db_name>:<db_user>:<db_password>:[?<properties>] <properties> ::= <property> [&<property>] <properties> ::= autocommit=<autocommit_mode> <alternative_hosts> ::= <standby_broker1_host>:<port> [,<standby_broker2_host>:<port>] <host> := HOSTNAME | IP_ADDR <time> := SECOND or <url> ::= cci:CUBRID:<host>:<db_name>:......","ver":"PECL CUBRID >= 8.3.1","ret_desc":"Connection identifier, when process is successful.","seealso":[],"url":"function.cubrid-pconnect-with-url","name":"cubrid_pconnect_with_url","params":[{"list":[{"type":"string","var":"$conn_url","beh":1,"desc":"A character string that contains server connection information."},{"type":"string","var":"$userid","beh":1,"desc":"User name for the database."},{"type":"string","var":"$passwd","beh":1,"desc":"User password."}],"ret_type":"resource"}]},"cubrid_ping":{"desc":"Ping a server connection or reconnect if there is no connection","long_desc":"Checks whether or not the connection to the server is working.","ver":"PECL CUBRID >= 8.3.1","ret_desc":"Returns TRUE if the connection to the server CUBRID server is working, otherwise FALSE.","url":"function.cubrid-ping","name":"cubrid_ping","params":[{"list":[],"ret_type":"bool"}]},"cubrid_prepare":{"desc":"Prepare an SQL statement for execution","long_desc":"The cubrid_prepare() function is a sort of API which represents SQL statements compiled previously to a given connection handle. This pre-compiled SQL statement will be included in the cubrid_prepare(). Accordingly, you can use this statement effectively to execute several times repeatedly or to process long data. Only a single statement can be used and a parameter may put a question mark (?) to appropriate area in the SQL statement. Add a parameter when you bind a value in the VALUES clause of INSERT statement or in the WHERE clause. Note that it is allowed to bind a value to a MARK(?) by the cubrid_bind() only.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Request identifier, if process is successful;","seealso":[],"url":"function.cubrid-prepare","name":"cubrid_prepare","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$prepare_stmt","beh":1,"desc":"Prepare query."},{"type":"int","var":"$option","beh":1,"desc":"OID return option CUBRID_INCLUDE_OID.","def":0}],"ret_type":"resource"}]},"cubrid_put":{"desc":"Update a column using OID","long_desc":"The cubrid_put() function is used to update an attribute of the instance of the given oid. You can update single attribute by using string data type to set attr. In such case, you can use integer, float-point, or string type data for the value argument. To update multiple number of attributes, you can disregard the attr argument, and set value argument with associative array data type.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-put","name":"cubrid_put","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":1,"desc":"OID of the instance that you want to update."},{"type":"string","var":"$attr","beh":1,"desc":"Name of the attribute that you want to update."},{"type":"mixed","var":"$value","beh":1,"desc":"New value that you want to assign to the attribute."}],"ret_type":"int"}]},"cubrid_query":{"desc":"Send a CUBRID query","long_desc":"cubrid_query() sends a unique query (multiple queries are not supported) to the currently active database on the server that's associated with the specified conn_identifier.","ver":"PECL CUBRID >= 8.3.1","ret_desc":"For SELECT, SHOW, DESCRIBE, EXPLAIN and other statements returning resultset, cubrid_query() returns a resource on success, or FALSE on error.","seealso":[],"url":"function.cubrid-query","name":"cubrid_query","params":[{"list":[{"type":"string","var":"$query","beh":0,"desc":"An SQL query Data inside the query should be properly escaped."},{"type":"resource","var":"$conn_identifier","beh":1,"desc":"The CUBRID connection. If the connection identifier is not specified, the last connection opened by cubrid_connect() is assumed."}],"ret_type":"resource"}]},"cubrid_real_escape_string":{"desc":"Escape special characters in a string for use in an SQL statement","long_desc":"This function returns the escaped string version of the given string. It will escape the following characters: '. In general, single quotations are used to enclose character string. Double quotations may be used as well depending on the value of ansi_quotes, which is a parameter related to SQL statement. If the ansi_quotes value is set to no, character string enclosed by double quotations is handled as character string, not as an identifier. The default value is yes. If you want to include a single quote as part of a character string, enter two single quotes in a row.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Escaped string version of the given string, on success.","url":"function.cubrid-real-escape-string","name":"cubrid_real_escape_string","params":[{"list":[{"type":"string","var":"$unescaped_string","beh":0,"desc":"The string that is to be escaped."},{"type":"resource","var":"$conn_identifier","beh":1,"desc":"The CUBRID connection. If the connection identifier is not specified, the last connection opened by cubrid_connect() is assumed."}],"ret_type":"string"}]},"cubrid_result":{"desc":"Return the value of a specific field in a specific row","long_desc":"This function returns the value of a specific field in a specific row from a result set.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Value of a specific field, on success (NULL if value if null).","url":"function.cubrid-result","name":"cubrid_result","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"result comes from a call to cubrid_execute()"},{"type":"int","var":"$row","beh":1,"desc":"The row number from the result that is being retrieved. Row numbers start at 0."},{"type":"mixed","var":"$field","beh":1,"desc":"The name or offset of the field being retrieved. It can be the field's offset, the field's name, or the field's table dot field name (tablename.fieldname). If the column name has been aliased ('select foo as bar from...'), use the alias instead of the column name. If undefined, the first field is retrieved.","def":0}],"ret_type":"string"}]},"cubrid_rollback":{"desc":"Roll back a transaction","long_desc":"The cubrid_rollback() function executes rollback on the transaction pointed by conn_identifier, currently in progress. Connection to server is closed after calling cubrid_rollback(). Connection handle, however, is still valid.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-rollback","name":"cubrid_rollback","params":[{"list":[],"ret_type":"bool"}]},"cubrid_save_to_glo":{"desc":"Save requested file in a GLO instance","long_desc":"The cubrid_save_to_glo() function is used to save requested file in a glo instance.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-save-to-glo","name":"cubrid_save_to_glo","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":0,"desc":"Oid of the glo instance that you want to save a file in."},{"type":"string","var":"$file_name","beh":1,"desc":"The name of the file that you want to save."}],"ret_type":"int"}]},"cubrid_schema":{"desc":"Get the requested schema information","long_desc":"The cubrid_schema() function is used to get the requested schema information from database. You have to designate class_name, if you want to get information on certain class, attr_name, if you want to get information on certain attribute (can be used only with CUBRID_ SCH_ATTR_PRIVILEGE). The result of the cubrid_schema function is returned as a two-dimensional array (column (associative array) * row (numeric array)). The following tables shows types of schema and the column structure of the result array to be returned based on the schema type.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Array containing the schema information, when process is successful;","url":"function.cubrid-schema","name":"cubrid_schema","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":1,"desc":"Connection identifier."},{"type":"int","var":"$schema_type","beh":1,"desc":"Schema data that you want to know."},{"type":"string","var":"$class_name","beh":1,"desc":"Class you want to know the schema of."},{"type":"string","var":"$attr_name","beh":1,"desc":"Attribute you want to know the schema of."}],"ret_type":"array"}]},"cubrid_send_glo":{"desc":"Read data from glo and send it to std output","long_desc":"The cubrid_send_glo() function is used to read data from glo instance and sends it to the PHP standard output.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-send-glo","name":"cubrid_send_glo","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":0,"desc":"Oid of the glo instance that you want to read data from."}],"ret_type":"int"}]},"cubrid_seq_drop":{"desc":"Delete an element from sequence type column using OID","long_desc":"The cubrid_seq_drop() function is used to delete an element you request from the given sequence type attribute in the database.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-seq-drop","name":"cubrid_seq_drop","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":0,"desc":"OID of the instance you want to work with."},{"type":"string","var":"$attr_name","beh":1,"desc":"Name of the attribute that you want to delete an element from."},{"type":"int","var":"$index","beh":1,"desc":"Index of the element that you want to delete (1-based)."}],"ret_type":"bool"}]},"cubrid_seq_insert":{"desc":"Insert an element to a sequence type column using OID","long_desc":"The cubrid_col_insert() function is used to insert an element to a sequence type attribute in a requested location.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-seq-insert","name":"cubrid_seq_insert","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":0,"desc":"OID of the instance you want to work with."},{"type":"string","var":"$attr_name","beh":1,"desc":"Name of the attribute you want to insert an instance to."},{"type":"int","var":"$index","beh":1,"desc":"Location of the element, you want to insert the element to (1-based)."},{"type":"string","var":"$seq_element","beh":1,"desc":"Content of the element that you want to insert."}],"ret_type":"bool"}]},"cubrid_seq_put":{"desc":"Update the element value of sequence type column using OID","long_desc":"The cubrid_seq_put() function is used to update the content of the requested element in a sequent type attribute using OID.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-seq-put","name":"cubrid_seq_put","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":0,"desc":"OID of the instance you want to work with."},{"type":"string","var":"$attr_name","beh":1,"desc":"Name of the attribute that you want to update an element."},{"type":"int","var":"$index","beh":1,"desc":"Index (1-based) of the element that you want to update."},{"type":"string","var":"$seq_element","beh":1,"desc":"New content that you want to use for the update."}],"ret_type":"bool"}]},"cubrid_set_add":{"desc":"Insert a single element to set type column using OID","long_desc":"The cubrid_set_add() function is used to insert a single element to a set type attribute (set, multiset, sequence) you requested.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-set-add","name":"cubrid_set_add","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":0,"desc":"OID of the instance you want to work with."},{"type":"string","var":"$attr_name","beh":1,"desc":"Name of the attribute you want to insert an element."},{"type":"string","var":"$set_element","beh":1,"desc":"Content of the element you want to insert."}],"ret_type":"bool"}]},"cubrid_set_autocommit":{"desc":"Set autocommit mode of the connection","long_desc":"The cubrid_set_autocommit() function is used to set the CUBRID database auto-commit mode of the current database connection. In CUBRID PHP, an auto-commit mode is disabled by default for transaction management. When auto-commit mode is truned from off to on, any pending work is automatically committed.","ver":"PECL CUBRID >= 8.4.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-set-autocommit","name":"cubrid_set_autocommit","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"bool","var":"$mode","beh":0,"desc":"Auto-commit mode. The following constants can be used:"}],"ret_type":"bool"}]},"cubrid_set_db_parameter":{"desc":"Sets the CUBRID database parameters","long_desc":"The cubrid_set_db_parameter() function is used to set the CUBRID database parameters. It can set the following CUBRID database parameters:","ver":"PECL CUBRID >= 8.4.0","ret_desc":"TRUE on success.","seealso":[],"url":"function.cubrid-set-db-parameter","name":"cubrid_set_db_parameter","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"The CUBRID connection. If the connection identifier is not specified, the last link opened by cubrid_connect() is assumed."},{"type":"int","var":"$param_type","beh":0,"desc":"Database parameter type."},{"type":"int","var":"$param_value","beh":1,"desc":"Isolation level value (1-6) or lock timeout (in seconds) value."}],"ret_type":"bool"}]},"cubrid_set_drop":{"desc":"Delete an element from set type column using OID","long_desc":"The cubrid_set_drop() function is used to delete an element that you request from the given set type (set, multiset) attribute of the database.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-set-drop","name":"cubrid_set_drop","params":[{"list":[{"type":"resource","var":"$conn_identifier","beh":0,"desc":"Connection identifier."},{"type":"string","var":"$oid","beh":0,"desc":"OID of the instance you want to work with."},{"type":"string","var":"$attr_name","beh":1,"desc":"Name of the attribute you want to delete an element from."},{"type":"string","var":"$set_element","beh":1,"desc":"Content of the element you want to delete."}],"ret_type":"bool"}]},"cubrid_set_query_timeout":{"desc":"Set the timeout time of query execution","long_desc":"The cubrid_set_query_timeout() function is used to set the timeout time of query execution.","ver":"PECL CUBRID >= 8.4.1","ret_desc":"TRUE, when process is successful.","seealso":[],"url":"function.cubrid-set-query-timeout","name":"cubrid_set_query_timeout","params":[{"list":[{"type":"resource","var":"$req_identifier","beh":0,"desc":"Request identifier."},{"type":"int","var":"$timeout","beh":0,"desc":"Timeout time, unit of msec."}],"ret_type":"bool"}]},"cubrid_unbuffered_query":{"desc":"Perform a query without fetching the results into memory","long_desc":"This function performs a query without waiting for that all query results have been complete. It will return when the results are being generated.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"For SELECT, SHOW, DESCRIBE or EXPLAIN statements returns a connection identifier resource on success.","url":"function.cubrid-unbuffered-query","name":"cubrid_unbuffered_query","params":[{"list":[{"type":"string","var":"$query","beh":0,"desc":"A SQL query."},{"type":"resource","var":"$conn_identifier","beh":1,"desc":"The CUBRID connection. If the connection identifier is not specified, the last connection opened by cubrid_connect() is assumed."}],"ret_type":"resource"}]},"cubrid_version":{"desc":"Get the CUBRID PHP module's version","long_desc":"The cubrid_version() function is used to get the CUBRID PHP module's version.","ver":"PECL CUBRID >= 8.3.0","ret_desc":"Version information (eg. \"8.3.1.0001\").","seealso":[],"url":"function.cubrid-version","name":"cubrid_version","params":[{"list":[],"ret_type":"string"}]},"curl_close":{"desc":"Close a cURL session","long_desc":"Closes a cURL session and frees all resources. The cURL handle, ch, is also deleted.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.curl-close","name":"curl_close","params":[{"list":[],"ret_type":"void"}]},"curl_copy_handle":{"desc":"Copy a cURL handle along with all of its preferences","long_desc":"Copies a cURL handle keeping the same preferences.","ver":"PHP 5","ret_desc":"Returns a new cURL handle.","url":"function.curl-copy-handle","name":"curl_copy_handle","params":[{"list":[],"ret_type":"resource"}]},"curl_errno":{"desc":"Return the last error number","long_desc":"Returns the error number for the last cURL operation.","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"Returns the error number or 0 (zero) if no error occurred.","seealso":[],"url":"function.curl-errno","name":"curl_errno","params":[{"list":[],"ret_type":"int"}]},"curl_error":{"desc":"Return a string containing the last error for the current session","long_desc":"Returns a clear text error message for the last cURL operation.","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"Returns the error message or '' (the empty string) if no error occurred.","seealso":[],"url":"function.curl-error","name":"curl_error","params":[{"list":[],"ret_type":"string"}]},"curl_exec":{"desc":"Perform a cURL session","long_desc":"Execute the given cURL session. This function should be called after initializing a cURL session and all the options for the session are set.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. However, if the CURLOPT_RETURNTRANSFER option is set, it will return the result on success, FALSE on failure.","seealso":[],"url":"function.curl-exec","name":"curl_exec","params":[{"list":[],"ret_type":"mixed"}]},"curl_getinfo":{"desc":"Get information regarding a specific transfer","long_desc":"Gets information about the last transfer.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"If opt is given, returns its value as a string. Otherwise, returns an associative array with the following elements (which correspond to opt), or FALSE on failure:","url":"function.curl-getinfo","name":"curl_getinfo","params":[{"list":[{"type":"resource","var":"$ch","beh":0,"desc":"A cURL handle returned by curl_init()."},{"type":"int","var":"$opt","beh":0,"desc":"This may be one of the following constants:","def":0}],"ret_type":"mixed"}]},"curl_init":{"desc":"Initialize a cURL session","long_desc":"Initializes a new session and return a cURL handle for use with the curl_setopt(), curl_exec(), and curl_close() functions.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns a cURL handle on success, FALSE on errors.","seealso":[],"url":"function.curl-init","name":"curl_init","params":[{"list":[],"ret_type":"resource"}]},"curl_multi_add_handle":{"desc":"Add a normal cURL handle to a cURL multi handle","long_desc":"Adds the ch handle to the multi handle mh","ver":"PHP 5","ret_desc":"Returns 0 on success, or one of the CURLM_XXX errors code.","seealso":[],"url":"function.curl-multi-add-handle","name":"curl_multi_add_handle","params":[{"list":[{"type":"resource","var":"$mh","beh":0,"desc":"A cURL multi handle returned by curl_multi_init()."},{"type":"resource","var":"$ch","beh":0,"desc":"A cURL handle returned by curl_init()."}],"ret_type":"int"}]},"curl_multi_close":{"desc":"Close a set of cURL handles","long_desc":"Closes a set of cURL handles.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.curl-multi-close","name":"curl_multi_close","params":[{"list":[],"ret_type":"void"}]},"curl_multi_exec":{"desc":"Run the sub-connections of the current cURL handle","long_desc":"Processes each of the handles in the stack. This method can be called whether or not a handle needs to read or write data.","ver":"PHP 5","ret_desc":"A cURL code defined in the cURL Predefined Constants.","seealso":[],"url":"function.curl-multi-exec","name":"curl_multi_exec","params":[{"list":[{"type":"resource","var":"$mh","beh":0,"desc":"A cURL multi handle returned by curl_multi_init()."},{"type":"int","var":"&$still_running","beh":0,"desc":"A reference to a flag to tell whether the operations are still running."}],"ret_type":"int"}]},"curl_multi_getcontent":{"desc":"Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set","long_desc":"If CURLOPT_RETURNTRANSFER is an option that is set for a specific handle, then this function will return the content of that cURL handle in the form of a string.","ver":"PHP 5","ret_desc":"Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set.","seealso":[],"url":"function.curl-multi-getcontent","name":"curl_multi_getcontent","params":[{"list":[],"ret_type":"string"}]},"curl_multi_info_read":{"desc":"Get information about the current transfers","long_desc":"Ask the multi handle if there are any messages or information from the individual transfers. Messages may include information such as an error code from the transfer or just the fact that a transfer is completed. Repeated calls to this function will return a new result each time, until a FALSE is returned as a signal that there is no more to get at this point. The integer pointed to with msgs_in_queue will contain the number of remaining messages after this function was called.","ver":"PHP 5","ret_desc":"On success, returns an associative array for the message, FALSE on failure.","seealso":[],"url":"function.curl-multi-info-read","name":"curl_multi_info_read","params":[{"list":[{"type":"resource","var":"$mh","beh":0,"desc":"A cURL multi handle returned by curl_multi_init()."},{"type":"int","var":"&$msgs_in_queue","beh":0,"desc":"Number of messages that are still in the queue","def":"NULL"}],"ret_type":"array"}]},"curl_multi_init":{"desc":"Returns a new cURL multi handle","long_desc":"Allows the processing of multiple cURL handles in parallel.","ver":"PHP 5","ret_desc":"Returns a cURL multi handle resource on success, FALSE on failure.","seealso":[],"url":"function.curl-multi-init","name":"curl_multi_init","params":[{"list":[],"ret_type":"resource"}]},"curl_multi_remove_handle":{"desc":"Remove a multi handle from a set of cURL handles","long_desc":"Removes a given ch handle from the given mh handle. When the ch handle has been removed, it is again perfectly legal to run curl_exec() on this handle. Removing the ch handle while being used, will effectively halt the transfer in progress involving that handle.","ver":"PHP 5","ret_desc":"Returns 0 on success, or one of the CURLM_XXX error codes.","seealso":[],"url":"function.curl-multi-remove-handle","name":"curl_multi_remove_handle","params":[{"list":[{"type":"resource","var":"$mh","beh":0,"desc":"A cURL multi handle returned by curl_multi_init()."},{"type":"resource","var":"$ch","beh":0,"desc":"A cURL handle returned by curl_init()."}],"ret_type":"int"}]},"curl_multi_select":{"desc":"Wait for activity on any curl_multi connection","long_desc":"Blocks until there is activity on any of the curl_multi connections.","ver":"PHP 5","ret_desc":"On success, returns the number of descriptors contained in the descriptor sets. On failure, this function will return -1 on a select failure or timeout (from the underlying select system call).","seealso":[],"url":"function.curl-multi-select","name":"curl_multi_select","params":[{"list":[{"type":"resource","var":"$mh","beh":0,"desc":"A cURL multi handle returned by curl_multi_init()."},{"type":"float","var":"$timeout","beh":0,"desc":"Time, in seconds, to wait for a response.","def":1}],"ret_type":"int"}]},"curl_setopt":{"desc":"Set an option for a cURL transfer","long_desc":"Sets an option on the given cURL session handle.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.curl-setopt","name":"curl_setopt","params":[{"list":[{"type":"resource","var":"$ch","beh":0,"desc":"A cURL handle returned by curl_init()."},{"type":"int","var":"$option","beh":0,"desc":"The CURLOPT_XXX option to set."},{"type":"mixed","var":"$value","beh":1,"desc":"The value to be set on option. value should be a bool for the following values of the option parameter: value should be an integer for the following values of the option parameter: value should be a string for the following values of the option parameter: value should be an array for the following values of the option parameter: value should be a stream resource (using fopen(), for example) for the following values of the option parameter: value should be a string that is the name of a valid callback function for the following values of the option parameter:"}],"ret_type":"bool"}]},"curl_setopt_array":{"desc":"Set multiple options for a cURL transfer","long_desc":"Sets multiple options for a cURL session. This function is useful for setting a large amount of cURL options without repetitively calling curl_setopt().","ver":"PHP 5 >= 5.1.3","ret_desc":"Returns TRUE if all options were successfully set. If an option could not be successfully set, FALSE is immediately returned, ignoring any future options in the options array.","seealso":[],"url":"function.curl-setopt-array","name":"curl_setopt_array","params":[{"list":[{"type":"resource","var":"$ch","beh":0,"desc":"A cURL handle returned by curl_init()."},{"type":"array","var":"$options","beh":0,"desc":"An array specifying which options to set and their values. The keys should be valid curl_setopt() constants or their integer equivalents."}],"ret_type":"bool"}]},"curl_version":{"desc":"Gets cURL version information","long_desc":"Returns information about the cURL version.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns an associative array with the following elements:","url":"function.curl-version","name":"curl_version","params":[{"list":[],"ret_type":"array"}]},"current":{"desc":"Return the current element in an array","long_desc":"Every array has an internal pointer to its \"current\" element, which is initialized to the first element inserted into the array.","ver":"PHP 4, PHP 5","ret_desc":"The current() function simply returns the value of the array element that's currently being pointed to by the internal pointer. It does not move the pointer in any way. If the internal pointer points beyond the end of the elements list or the array is empty, current() returns FALSE.","seealso":[],"url":"function.current","name":"current","params":[{"list":[],"ret_type":"mixed"}]},"cyrus_authenticate":{"desc":"Authenticate against a Cyrus IMAP server","ver":"PHP 4 >= 4.1.0, PECL cyrus 1.0","ret_desc":"No value is returned.","url":"function.cyrus-authenticate","name":"cyrus_authenticate","params":[{"list":[{"type":"resource","var":"$connection","beh":1,"desc":""},{"type":"string","var":"$mechlist","beh":1,"desc":""},{"type":"string","var":"$service","beh":1,"desc":""},{"type":"string","var":"$user","beh":1,"desc":""},{"type":"int","var":"$minssf","beh":1,"desc":""},{"type":"int","var":"$maxssf","beh":1,"desc":""},{"type":"string","var":"$authname","beh":1,"desc":""},{"type":"string","var":"$password","beh":1,"desc":""}],"ret_type":"void"}]},"cyrus_bind":{"desc":"Bind callbacks to a Cyrus IMAP connection","long_desc":"Binds callbacks to a Cyrus IMAP connection.","ver":"PHP 4 >= 4.1.0, PECL cyrus 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.cyrus-bind","name":"cyrus_bind","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"The connection handle."},{"type":"array","var":"$callbacks","beh":0,"desc":"An array of callbacks."}],"ret_type":"bool"}]},"cyrus_close":{"desc":"Close connection to a Cyrus IMAP server","long_desc":"Closes the connection to a Cyrus IMAP server.","ver":"PHP 4 >= 4.1.0, PECL cyrus 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.cyrus-close","name":"cyrus_close","params":[{"list":[],"ret_type":"bool"}]},"cyrus_connect":{"desc":"Connect to a Cyrus IMAP server","long_desc":"Connects to a Cyrus IMAP server.","ver":"PHP 4 >= 4.1.0, PECL cyrus 1.0","ret_desc":"Returns a connection handler on success or FALSE on failure.","url":"function.cyrus-connect","name":"cyrus_connect","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The Cyrus IMAP host name."},{"type":"string","var":"$port","beh":1,"desc":"The port number."},{"type":"int","var":"$flags","beh":1,"desc":""}],"ret_type":"resource"}]},"cyrus_query":{"desc":"Send a query to a Cyrus IMAP server","long_desc":"Sends a query to a Cyrus IMAP server.","ver":"PHP 4 >= 4.1.0, PECL cyrus 1.0","ret_desc":"Returns an associative array with the following keys: text, msgno, and keyword.","url":"function.cyrus-query","name":"cyrus_query","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"The connection handle."},{"type":"string","var":"$query","beh":0,"desc":"The query string."}],"ret_type":"array"}]},"cyrus_unbind":{"desc":"Unbind ...","ver":"PHP 4 >= 4.1.0, PECL cyrus 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.cyrus-unbind","name":"cyrus_unbind","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"The connection handle."},{"type":"string","var":"$trigger_name","beh":0,"desc":"The trigger name."}],"ret_type":"bool"}]},"date":{"desc":"Format a local time\/date","long_desc":"Returns a string formatted according to the given format string using the given integer timestamp or the current time if no timestamp is given. In other words, timestamp is optional and defaults to the value of time().","ver":"PHP 4, PHP 5","ret_desc":"Returns a formatted date string. If a non-numeric value is used for timestamp, FALSE is returned and an E_WARNING level error is emitted.","seealso":[],"url":"function.date","name":"date","params":[{"list":[{"type":"string","var":"$format","beh":0,"desc":"The format of the outputted date string. See the formatting options below. There are also several predefined date constants that may be used instead, so for example DATE_RSS contains the format string 'D, d M Y H:i:s'. Unrecognized characters in the format string will be printed as-is. The Z format will always return 0 when using gmdate()."},{"type":"int","var":"$timestamp","beh":0,"desc":"The optional timestamp parameter is an integer Unix timestamp that defaults to the current local time if a timestamp is not given. In other words, it defaults to the value of time().","def":"time()"}],"ret_type":"string"}]},"date_add":{"desc":"Alias of DateTime::add()","long_desc":"This function is an alias of: DateTime::add()","ver":"PHP 5 >= 5.3.0","url":"function.date-add","name":"date_add","params":[]},"date_create":{"desc":"Alias of DateTime::__construct()","long_desc":"This function is an alias of: DateTime::__construct()","ver":"PHP 5 >= 5.2.0","url":"function.date-create","name":"date_create","params":[]},"date_create_from_format":{"desc":"Alias of DateTime::createFromFormat()","long_desc":"This function is an alias of: DateTime::createFromFormat()","ver":"PHP 5 >= 5.3.0","url":"function.date-create-from-format","name":"date_create_from_format","params":[]},"date_date_set":{"desc":"Alias of DateTime::setDate()","long_desc":"This function is an alias of: DateTime::setDate()","ver":"PHP 5 >= 5.2.0","url":"function.date-date-set","name":"date_date_set","params":[]},"date_default_timezone_get":{"desc":"Gets the default timezone used by all date\/time functions in a script","long_desc":"In order of preference, this function returns the default timezone by: If none of the above succeed, date_default_timezone_get() will return a default timezone of UTC.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns a string.","seealso":[],"url":"function.date-default-timezone-get","name":"date_default_timezone_get","params":[{"list":[],"ret_type":"string"}]},"date_default_timezone_set":{"desc":"Sets the default timezone used by all date\/time functions in a script","long_desc":"date_default_timezone_set() sets the default timezone used by all date\/time functions. Instead of using this function to set the default timezone in your script, you can also use the INI setting date.timezone to set the default timezone.","ver":"PHP 5 >= 5.1.0","ret_desc":"This function returns FALSE if the timezone_identifier isn't valid, or TRUE otherwise.","seealso":[],"url":"function.date-default-timezone-set","name":"date_default_timezone_set","params":[{"list":[],"ret_type":"bool"}]},"date_diff":{"desc":"Alias of DateTime::diff()","long_desc":"This function is an alias of: DateTime::diff()","ver":"PHP 5 >= 5.3.0","url":"function.date-diff","name":"date_diff","params":[]},"date_format":{"desc":"Alias of DateTime::format()","long_desc":"This function is an alias of: DateTime::format()","ver":"PHP 5 >= 5.2.0","url":"function.date-format","name":"date_format","params":[]},"date_get_last_errors":{"desc":"Alias of DateTime::getLastErrors()","long_desc":"This function is an alias of: DateTime::getLastErrors()","ver":"PHP 5 >= 5.3.0","url":"function.date-get-last-errors","name":"date_get_last_errors","params":[]},"date_interval_create_from_date_string":{"desc":"Alias of DateInterval::createFromDateString()","long_desc":"This function is an alias of: DateInterval::createFromDateString()","ver":"PHP 5 >= 5.3.0","url":"function.date-interval-create-from-date-string","name":"date_interval_create_from_date_string","params":[]},"date_interval_format":{"desc":"Alias of DateInterval::format()","long_desc":"This function is an alias of: DateInterval::format()","ver":"PHP 5 >= 5.3.0","url":"function.date-interval-format","name":"date_interval_format","params":[]},"date_isodate_set":{"desc":"Alias of DateTime::setISODate()","long_desc":"This function is an alias of: DateTime::setISODate()","ver":"PHP 5 >= 5.2.0","url":"function.date-isodate-set","name":"date_isodate_set","params":[]},"date_modify":{"desc":"Alias of DateTime::modify()","long_desc":"This function is an alias of: DateTime::modify()","ver":"PHP 5 >= 5.2.0","url":"function.date-modify","name":"date_modify","params":[]},"date_offset_get":{"desc":"Alias of DateTime::getOffset()","long_desc":"This function is an alias of: DateTime::getOffset()","ver":"PHP 5 >= 5.2.0","url":"function.date-offset-get","name":"date_offset_get","params":[]},"date_parse":{"desc":"Returns associative array with detailed info about given date","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns array with information about the parsed date on success or FALSE on failure.","seealso":[],"url":"function.date-parse","name":"date_parse","params":[{"list":[],"ret_type":"array"}]},"date_parse_from_format":{"desc":"Get info about given date formatted according to the specified format","long_desc":"Returns associative array with detailed info about given date.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns associative array with detailed info about given date.","seealso":[],"url":"function.date-parse-from-format","name":"date_parse_from_format","params":[{"list":[{"type":"string","var":"$format","beh":0,"desc":"Format accepted by DateTime::createFromFormat()."},{"type":"string","var":"$date","beh":0,"desc":"String representing the date."}],"ret_type":"array"}]},"date_sub":{"desc":"Alias of DateTime::sub()","long_desc":"This function is an alias of: DateTime::sub()","ver":"PHP 5 >= 5.3.0","url":"function.date-sub","name":"date_sub","params":[]},"date_sun_info":{"desc":"Returns an array with information about sunset\/sunrise and twilight begin\/end","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns array on success or FALSE on failure.","seealso":[],"url":"function.date-sun-info","name":"date_sun_info","params":[{"list":[{"type":"int","var":"$time","beh":0,"desc":"Timestamp."},{"type":"float","var":"$latitude","beh":0,"desc":"Latitude in degrees."},{"type":"float","var":"$longitude","beh":1,"desc":"Longitude in degrees."}],"ret_type":"array"}]},"date_sunrise":{"desc":"Returns time of sunrise for a given day and location","long_desc":"date_sunrise() returns the sunrise time for a given day (specified as a timestamp) and location.","ver":"PHP 5","ret_desc":"Returns the sunrise time in a specified format on success or FALSE on failure.","seealso":[],"url":"function.date-sunrise","name":"date_sunrise","params":[{"list":[{"type":"int","var":"$timestamp","beh":1,"desc":"The timestamp of the day from which the sunrise time is taken."},{"type":"int","var":"$format","beh":1,"desc":"","def":"SUNFUNCS_RET_STRING"},{"type":"float","var":"$latitude","beh":1,"desc":"Defaults to North, pass in a negative value for South. See also: date.default_latitude","def":"ini_get(\"date.default_latitude\")"},{"type":"float","var":"$longitude","beh":1,"desc":"Defaults to East, pass in a negative value for West. See also: date.default_longitude","def":"ini_get(\"date.default_longitude\")"},{"type":"float","var":"$zenith","beh":1,"desc":"Default: date.sunrise_zenith","def":"ini_get(\"date.sunrise_zenith\")"},{"type":"float","var":"$gmt_offset","beh":1,"desc":"Specified in hours.","def":0}],"ret_type":"mixed"}]},"date_sunset":{"desc":"Returns time of sunset for a given day and location","long_desc":"date_sunset() returns the sunset time for a given day (specified as a timestamp) and location.","ver":"PHP 5","ret_desc":"Returns the sunset time in a specified format on success or FALSE on failure.","seealso":[],"url":"function.date-sunset","name":"date_sunset","params":[{"list":[{"type":"int","var":"$timestamp","beh":1,"desc":"The timestamp of the day from which the sunset time is taken."},{"type":"int","var":"$format","beh":1,"desc":"","def":"SUNFUNCS_RET_STRING"},{"type":"float","var":"$latitude","beh":1,"desc":"Defaults to North, pass in a negative value for South. See also: date.default_latitude","def":"ini_get(\"date.default_latitude\")"},{"type":"float","var":"$longitude","beh":1,"desc":"Defaults to East, pass in a negative value for West. See also: date.default_longitude","def":"ini_get(\"date.default_longitude\")"},{"type":"float","var":"$zenith","beh":1,"desc":"Default: date.sunset_zenith","def":"ini_get(\"date.sunset_zenith\")"},{"type":"float","var":"$gmt_offset","beh":1,"desc":"Specified in hours.","def":0}],"ret_type":"mixed"}]},"date_time_set":{"desc":"Alias of DateTime::setTime()","long_desc":"This function is an alias of: DateTime::setTime()","ver":"PHP 5 >= 5.2.0","url":"function.date-time-set","name":"date_time_set","params":[]},"date_timestamp_get":{"desc":"Alias of DateTime::getTimestamp()","long_desc":"This function is an alias of: DateTime::getTimestamp()","ver":"PHP 5 >= 5.3.0","url":"function.date-timestamp-get","name":"date_timestamp_get","params":[]},"date_timestamp_set":{"desc":"Alias of DateTime::setTimestamp()","long_desc":"This function is an alias of: DateTime::setTimestamp()","ver":"PHP 5 >= 5.3.0","url":"function.date-timestamp-set","name":"date_timestamp_set","params":[]},"date_timezone_get":{"desc":"Alias of DateTime::getTimezone()","long_desc":"This function is an alias of: DateTime::getTimezone()","ver":"PHP 5 >= 5.2.0","url":"function.date-timezone-get","name":"date_timezone_get","params":[]},"date_timezone_set":{"desc":"Alias of DateTime::setTimezone()","long_desc":"This function is an alias of: DateTime::setTimezone()","ver":"PHP 5 >= 5.2.0","url":"function.date-timezone-set","name":"date_timezone_set","params":[]},"dateinterval":{"name":"DateInterval","class":"DateInterval"},"datetime":{"name":"DateTime","class":"DateTime"},"datetimezone":{"name":"DateTimeZone","class":"DateTimeZone"},"db2_autocommit":{"desc":"Returns or sets the AUTOCOMMIT state for a database connection","long_desc":"Sets or gets the AUTOCOMMIT behavior of the specified connection resource.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"When db2_autocommit() receives only the connection parameter, it returns the current state of AUTOCOMMIT for the requested connection as an integer value. A value of 0 indicates that AUTOCOMMIT is off, while a value of 1 indicates that AUTOCOMMIT is on.","seealso":[],"url":"function.db2-autocommit","name":"db2_autocommit","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"A valid database connection resource variable as returned from db2_connect() or db2_pconnect()."},{"type":"bool","var":"$value","beh":1,"desc":"One of the following constants:"}],"ret_type":"mixed"}]},"db2_bind_param":{"desc":"Binds a PHP variable to an SQL statement parameter","long_desc":"Binds a PHP variable to an SQL statement parameter in a statement resource returned by db2_prepare(). This function gives you more control over the parameter type, data type, precision, and scale for the parameter than simply passing the variable as part of the optional input array to db2_execute().","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.db2-bind-param","name":"db2_bind_param","params":[{"list":[{"type":"resource","var":"$stmt","beh":1,"desc":"A prepared statement returned from db2_prepare()."},{"type":"int","var":"$parameter-number","beh":1,"desc":"Specifies the 1-indexed position of the parameter in the prepared statement."},{"type":"string","var":"$variable-name","beh":1,"desc":"A string specifying the name of the PHP variable to bind to the parameter specified by parameter-number."},{"type":"int","var":"$parameter-type","beh":1,"desc":"A constant specifying whether the PHP variable should be bound to the SQL parameter as an input parameter (DB2_PARAM_IN), an output parameter (DB2_PARAM_OUT), or as a parameter that accepts input and returns output (DB2_PARAM_INOUT). To avoid memory overhead, you can also specify DB2_PARAM_FILE to bind the PHP variable to the name of a file that contains large object (BLOB, CLOB, or DBCLOB) data."},{"type":"int","var":"$data-type","beh":1,"desc":"A constant specifying the SQL data type that the PHP variable should be bound as: one of DB2_BINARY, DB2_CHAR, DB2_DOUBLE, or DB2_LONG .","def":0},{"type":"int","var":"$precision","beh":1,"desc":"Specifies the precision with which the variable should be bound to the database. This parameter can also be used for retrieving XML output values from stored procedures. A non-negative value specifies the maximum size of the XML data that will be retrieved from the database. If this parameter is not used, a default of 1MB will be assumed for retrieving the XML output value from the stored procedure.","def":-1},{"type":"int","var":"$scale","beh":1,"desc":"Specifies the scale with which the variable should be bound to the database.","def":0}],"ret_type":"bool"}]},"db2_client_info":{"desc":"Returns an object with properties that describe the DB2 database client","long_desc":"This function returns an object with read-only properties that return information about the DB2 database client. The following table lists the DB2 client properties:","ver":"PECL ibm_db2 >= 1.1.1","ret_desc":"Returns an object on a successful call. Returns FALSE on failure.","seealso":[],"url":"function.db2-client-info","name":"db2_client_info","params":[{"list":[],"ret_type":"object"}]},"db2_close":{"desc":"Closes a database connection","long_desc":"This function closes a DB2 client connection created with db2_connect() and returns the corresponding resources to the database server. If you attempt to close a persistent DB2 client connection created with db2_pconnect(), the close request is ignored and the persistent DB2 client connection remains available for the next caller.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.db2-close","name":"db2_close","params":[{"list":[],"ret_type":"bool"}]},"db2_column_privileges":{"desc":"Returns a result set listing the columns and associated privileges for a table","long_desc":"Returns a result set listing the columns and associated privileges for a table.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a statement resource with a result set containing rows describing the column privileges for columns matching the specified parameters. The rows are composed of the following columns:","seealso":[],"url":"function.db2-column-privileges","name":"db2_column_privileges","params":[{"list":[{"type":"resource","var":"$connection","beh":1,"desc":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"type":"string","var":"$qualifier","beh":1,"desc":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For other databases, pass NULL or an empty string."},{"type":"string","var":"$schema","beh":1,"desc":"The schema which contains the tables. To match all schemas, pass NULL or an empty string."},{"type":"string","var":"$table-name","beh":1,"desc":"The name of the table or view. To match all tables in the database, pass NULL or an empty string."},{"type":"string","var":"$column-name","beh":1,"desc":"The name of the column. To match all columns in the table, pass NULL or an empty string."}],"ret_type":"resource"}]},"db2_columns":{"desc":"Returns a result set listing the columns and associated metadata for a table","long_desc":"Returns a result set listing the columns and associated metadata for a table.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a statement resource with a result set containing rows describing the columns matching the specified parameters. The rows are composed of the following columns:","seealso":[],"url":"function.db2-columns","name":"db2_columns","params":[{"list":[{"type":"resource","var":"$connection","beh":1,"desc":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"type":"string","var":"$qualifier","beh":1,"desc":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For other databases, pass NULL or an empty string."},{"type":"string","var":"$schema","beh":1,"desc":"The schema which contains the tables. To match all schemas, pass '%'."},{"type":"string","var":"$table-name","beh":1,"desc":"The name of the table or view. To match all tables in the database, pass NULL or an empty string."},{"type":"string","var":"$column-name","beh":1,"desc":"The name of the column. To match all columns in the table, pass NULL or an empty string."}],"ret_type":"resource"}]},"db2_commit":{"desc":"Commits a transaction","long_desc":"Commits an in-progress transaction on the specified connection resource and begins a new transaction. PHP applications normally default to AUTOCOMMIT mode, so db2_commit() is not necessary unless AUTOCOMMIT has been turned off for the connection resource.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.db2-commit","name":"db2_commit","params":[{"list":[],"ret_type":"bool"}]},"db2_conn_error":{"desc":"Returns a string containing the SQLSTATE returned by the last connection attempt","long_desc":"db2_conn_error() returns an SQLSTATE value representing the reason the last attempt to connect to a database failed. As db2_connect() returns FALSE in the event of a failed connection attempt, you do not pass any parameters to db2_conn_error() to retrieve the SQLSTATE value. If, however, the connection was successful but becomes invalid over time, you can pass the connection parameter to retrieve the SQLSTATE value for a specific connection. To learn what the SQLSTATE value means, you can issue the following command at a DB2 Command Line Processor prompt: db2 '? sqlstate-value'. You can also call db2_conn_errormsg() to retrieve an explicit error message and the associated SQLCODE value.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns the SQLSTATE value resulting from a failed connection attempt. Returns an empty string if there is no error associated with the last connection attempt.","seealso":[],"url":"function.db2-conn-error","name":"db2_conn_error","params":[{"list":[],"ret_type":"string"}]},"db2_conn_errormsg":{"desc":"Returns the last connection error message and SQLCODE value","long_desc":"db2_conn_errormsg() returns an error message and SQLCODE value representing the reason the last database connection attempt failed. As db2_connect() returns FALSE in the event of a failed connection attempt, do not pass any parameters to db2_conn_errormsg() to retrieve the associated error message and SQLCODE value. If, however, the connection was successful but becomes invalid over time, you can pass the connection parameter to retrieve the associated error message and SQLCODE value for a specific connection.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a string containing the error message and SQLCODE value resulting from a failed connection attempt. If there is no error associated with the last connection attempt, db2_conn_errormsg() returns an empty string.","seealso":[],"url":"function.db2-conn-errormsg","name":"db2_conn_errormsg","params":[{"list":[],"ret_type":"string"}]},"db2_connect":{"desc":"Returns a connection to a database","long_desc":"Creates a new connection to an IBM DB2 Universal Database, IBM Cloudscape, or Apache Derby database.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a connection handle resource if the connection attempt is successful. If the connection attempt fails, db2_connect() returns FALSE.","seealso":[],"url":"function.db2-connect","name":"db2_connect","params":[{"list":[{"type":"string","var":"$database","beh":0,"desc":"For a cataloged connection to a database, database represents the database alias in the DB2 client catalog. For an uncataloged connection to a database, database represents a complete connection string in the following format:"},{"type":"string","var":"$username","beh":1,"desc":"The name of the database."},{"type":"string","var":"$password","beh":1,"desc":"The hostname or IP address of the database server."},{"type":"array","var":"$options","beh":1,"desc":"The TCP\/IP port on which the database is listening for requests."}],"ret_type":"resource"}]},"db2_cursor_type":{"desc":"Returns the cursor type used by a statement resource","long_desc":"Returns the cursor type used by a statement resource. Use this to determine if you are working with a forward-only cursor or scrollable cursor.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns either DB2_FORWARD_ONLY if the statement resource uses a forward-only cursor or DB2_SCROLLABLE if the statement resource uses a scrollable cursor.","seealso":[],"url":"function.db2-cursor-type","name":"db2_cursor_type","params":[{"list":[],"ret_type":"int"}]},"db2_escape_string":{"desc":"Used to escape certain characters","long_desc":"Prepends backslashes to special characters in the string argument.","ver":"PECL ibm_db2 >= 1.6.0","ret_desc":"Returns string_literal with the special characters noted above prepended with backslashes.","seealso":[],"url":"function.db2-escape-string","name":"db2_escape_string","params":[{"list":[],"ret_type":"string"}]},"db2_exec":{"desc":"Executes an SQL statement directly","long_desc":"Executes an SQL statement directly. If you plan to interpolate PHP variables into the SQL statement, understand that this is one of the more common security exposures. Consider calling db2_prepare() to prepare an SQL statement with parameter markers for input values. Then you can call db2_execute() to pass in the input values and avoid SQL injection attacks. If you plan to repeatedly issue the same SQL statement with different parameters, consider calling db2_prepare() and db2_execute() to enable the database server to reuse its access plan and increase the efficiency of your database access.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a statement resource if the SQL statement was issued successfully, or FALSE if the database failed to execute the SQL statement.","seealso":[],"url":"function.db2-exec","name":"db2_exec","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"A valid database connection resource variable as returned from db2_connect() or db2_pconnect()."},{"type":"string","var":"$statement","beh":1,"desc":"An SQL statement. The statement cannot contain any parameter markers."},{"type":"array","var":"$options","beh":1,"desc":"An associative array containing statement options. You can use this parameter to request a scrollable cursor on database servers that support this functionality. For a description of valid statement options, see db2_set_option()."}],"ret_type":"resource"}]},"db2_execute":{"desc":"Executes a prepared SQL statement","long_desc":"db2_execute() executes an SQL statement that was prepared by db2_prepare(). If the SQL statement returns a result set, for example, a SELECT statement or a CALL to a stored procedure that returns one or more result sets, you can retrieve a row as an array from the stmt resource using db2_fetch_assoc(), db2_fetch_both(), or db2_fetch_array(). Alternatively, you can use db2_fetch_row() to move the result set pointer to the next row and fetch a column at a time from that row with db2_result(). Refer to db2_prepare() for a brief discussion of the advantages of using db2_prepare() and db2_execute() rather than db2_exec().","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.db2-execute","name":"db2_execute","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"A prepared statement returned from db2_prepare()."},{"type":"array","var":"$parameters","beh":1,"desc":"An array of input parameters matching any parameter markers contained in the prepared statement."}],"ret_type":"bool"}]},"db2_fetch_array":{"desc":"Returns an array, indexed by column position, representing a row in a result set","long_desc":"Returns an array, indexed by column position, representing a row in a result set. The columns are 0-indexed.","ver":"PECL ibm_db2 >= 1.0.1","ret_desc":"Returns a 0-indexed array with column values indexed by the column position representing the next or requested row in the result set. Returns FALSE if there are no rows left in the result set, or if the row requested by row_number does not exist in the result set.","seealso":[],"url":"function.db2-fetch-array","name":"db2_fetch_array","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"A valid stmt resource containing a result set."},{"type":"int","var":"$row_number","beh":0,"desc":"Requests a specific 1-indexed row from the result set. Passing this parameter results in a PHP warning if the result set uses a forward-only cursor.","def":-1}],"ret_type":"array"}]},"db2_fetch_assoc":{"desc":"Returns an array, indexed by column name, representing a row in a result set","long_desc":"Returns an array, indexed by column name, representing a row in a result set.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns an associative array with column values indexed by the column name representing the next or requested row in the result set. Returns FALSE if there are no rows left in the result set, or if the row requested by row_number does not exist in the result set.","seealso":[],"url":"function.db2-fetch-assoc","name":"db2_fetch_assoc","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"A valid stmt resource containing a result set."},{"type":"int","var":"$row_number","beh":0,"desc":"Requests a specific 1-indexed row from the result set. Passing this parameter results in a PHP warning if the result set uses a forward-only cursor.","def":-1}],"ret_type":"array"}]},"db2_fetch_both":{"desc":"Returns an array, indexed by both column name and position, representing a row in a result set","long_desc":"Returns an array, indexed by both column name and position, representing a row in a result set. Note that the row returned by db2_fetch_both() requires more memory than the single-indexed arrays returned by db2_fetch_assoc() or db2_fetch_array().","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns an associative array with column values indexed by both the column name and 0-indexed column number. The array represents the next or requested row in the result set. Returns FALSE if there are no rows left in the result set, or if the row requested by row_number does not exist in the result set.","seealso":[],"url":"function.db2-fetch-both","name":"db2_fetch_both","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"A valid stmt resource containing a result set."},{"type":"int","var":"$row_number","beh":0,"desc":"Requests a specific 1-indexed row from the result set. Passing this parameter results in a PHP warning if the result set uses a forward-only cursor.","def":-1}],"ret_type":"array"}]},"db2_fetch_object":{"desc":"Returns an object with properties representing columns in the fetched row","long_desc":"Returns an object in which each property represents a column returned in the row fetched from a result set.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns an object representing a single row in the result set. The properties of the object map to the names of the columns in the result set.","seealso":[],"url":"function.db2-fetch-object","name":"db2_fetch_object","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"A valid stmt resource containing a result set."},{"type":"int","var":"$row_number","beh":0,"desc":"Requests a specific 1-indexed row from the result set. Passing this parameter results in a PHP warning if the result set uses a forward-only cursor.","def":-1}],"ret_type":"object"}]},"db2_fetch_row":{"desc":"Sets the result set pointer to the next row or requested row","long_desc":"Use db2_fetch_row() to iterate through a result set, or to point to a specific row in a result set if you requested a scrollable cursor. To retrieve individual fields from the result set, call the db2_result() function. Rather than calling db2_fetch_row() and db2_result(), most applications will call one of db2_fetch_assoc(), db2_fetch_both(), or db2_fetch_array() to advance the result set pointer and return a complete row as an array.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns TRUE if the requested row exists in the result set. Returns FALSE if the requested row does not exist in the result set.","seealso":[],"url":"function.db2-fetch-row","name":"db2_fetch_row","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"A valid stmt resource."},{"type":"int","var":"$row_number","beh":1,"desc":"With scrollable cursors, you can request a specific row number in the result set. Row numbering is 1-indexed."}],"ret_type":"bool"}]},"db2_field_display_size":{"desc":"Returns the maximum number of bytes required to display a column","long_desc":"Returns the maximum number of bytes required to display a column in a result set.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns an integer value with the maximum number of bytes required to display the specified column. If the column does not exist in the result set, db2_field_display_size() returns FALSE.","seealso":[],"url":"function.db2-field-display-size","name":"db2_field_display_size","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"Specifies a statement resource containing a result set."},{"type":"mixed","var":"$column","beh":0,"desc":"Specifies the column in the result set. This can either be an integer representing the 0-indexed position of the column, or a string containing the name of the column."}],"ret_type":"int"}]},"db2_field_name":{"desc":"Returns the name of the column in the result set","long_desc":"Returns the name of the specified column in the result set.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a string containing the name of the specified column. If the specified column does not exist in the result set, db2_field_name() returns FALSE.","seealso":[],"url":"function.db2-field-name","name":"db2_field_name","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"Specifies a statement resource containing a result set."},{"type":"mixed","var":"$column","beh":0,"desc":"Specifies the column in the result set. This can either be an integer representing the 0-indexed position of the column, or a string containing the name of the column."}],"ret_type":"string"}]},"db2_field_num":{"desc":"Returns the position of the named column in a result set","long_desc":"Returns the position of the named column in a result set.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns an integer containing the 0-indexed position of the named column in the result set. If the specified column does not exist in the result set, db2_field_num() returns FALSE.","seealso":[],"url":"function.db2-field-num","name":"db2_field_num","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"Specifies a statement resource containing a result set."},{"type":"mixed","var":"$column","beh":0,"desc":"Specifies the column in the result set. This can either be an integer representing the 0-indexed position of the column, or a string containing the name of the column."}],"ret_type":"int"}]},"db2_field_precision":{"desc":"Returns the precision of the indicated column in a result set","long_desc":"Returns the precision of the indicated column in a result set.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns an integer containing the precision of the specified column. If the specified column does not exist in the result set, db2_field_precision() returns FALSE.","seealso":[],"url":"function.db2-field-precision","name":"db2_field_precision","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"Specifies a statement resource containing a result set."},{"type":"mixed","var":"$column","beh":0,"desc":"Specifies the column in the result set. This can either be an integer representing the 0-indexed position of the column, or a string containing the name of the column."}],"ret_type":"int"}]},"db2_field_scale":{"desc":"Returns the scale of the indicated column in a result set","long_desc":"Returns the scale of the indicated column in a result set.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns an integer containing the scale of the specified column. If the specified column does not exist in the result set, db2_field_scale() returns FALSE.","seealso":[],"url":"function.db2-field-scale","name":"db2_field_scale","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"Specifies a statement resource containing a result set."},{"type":"mixed","var":"$column","beh":0,"desc":"Specifies the column in the result set. This can either be an integer representing the 0-indexed position of the column, or a string containing the name of the column."}],"ret_type":"int"}]},"db2_field_type":{"desc":"Returns the data type of the indicated column in a result set","long_desc":"Returns the data type of the indicated column in a result set.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a string containing the defined data type of the specified column. If the specified column does not exist in the result set, db2_field_type() returns FALSE.","seealso":[],"url":"function.db2-field-type","name":"db2_field_type","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"Specifies a statement resource containing a result set."},{"type":"mixed","var":"$column","beh":0,"desc":"Specifies the column in the result set. This can either be an integer representing the 0-indexed position of the column, or a string containing the name of the column."}],"ret_type":"string"}]},"db2_field_width":{"desc":"Returns the width of the current value of the indicated column in a result set","long_desc":"Returns the width of the current value of the indicated column in a result set. This is the maximum width of the column for a fixed-length data type, or the actual width of the column for a variable-length data type.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns an integer containing the width of the specified character or binary data type column in a result set. If the specified column does not exist in the result set, db2_field_width() returns FALSE.","seealso":[],"url":"function.db2-field-width","name":"db2_field_width","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"Specifies a statement resource containing a result set."},{"type":"mixed","var":"$column","beh":0,"desc":"Specifies the column in the result set. This can either be an integer representing the 0-indexed position of the column, or a string containing the name of the column."}],"ret_type":"int"}]},"db2_foreign_keys":{"desc":"Returns a result set listing the foreign keys for a table","long_desc":"Returns a result set listing the foreign keys for a table.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a statement resource with a result set containing rows describing the foreign keys for the specified table. The result set is composed of the following columns:","seealso":[],"url":"function.db2-foreign-keys","name":"db2_foreign_keys","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"type":"string","var":"$qualifier","beh":0,"desc":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For other databases, pass NULL or an empty string."},{"type":"string","var":"$schema","beh":1,"desc":"The schema which contains the tables. If schema is NULL, db2_foreign_keys() matches the schema for the current connection."},{"type":"string","var":"$table-name","beh":1,"desc":"The name of the table."}],"ret_type":"resource"}]},"db2_free_result":{"desc":"Frees resources associated with a result set","long_desc":"Frees the system and database resources that are associated with a result set. These resources are freed implicitly when a script finishes, but you can call db2_free_result() to explicitly free the result set resources before the end of the script.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.db2-free-result","name":"db2_free_result","params":[{"list":[],"ret_type":"bool"}]},"db2_free_stmt":{"desc":"Frees resources associated with the indicated statement resource","long_desc":"Frees the system and database resources that are associated with a statement resource. These resources are freed implicitly when a script finishes, but you can call db2_free_stmt() to explicitly free the statement resources before the end of the script.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.db2-free-stmt","name":"db2_free_stmt","params":[{"list":[],"ret_type":"bool"}]},"db2_get_option":{"desc":"Retrieves an option value for a statement resource or a connection resource","long_desc":"Retrieves the value of a specified option value for a statement resource or a connection resource.","ver":"PECL ibm_db2 >= 1.6.0","ret_desc":"Returns the current setting of the connection attribute provided on success or FALSE on failure.","seealso":[],"url":"function.db2-get-option","name":"db2_get_option","params":[{"list":[{"type":"resource","var":"$resource","beh":0,"desc":"A valid statement resource as returned from db2_prepare() or a valid connection resource as returned from db2_connect() or db2_pconnect()."},{"type":"string","var":"$option","beh":0,"desc":"A valid statement or connection options. The following new options are available as of ibm_db2 version 1.6.0. They provide useful tracking information that can be set during execution with db2_get_option()."}],"ret_type":"string"}]},"db2_last_insert_id":{"desc":"Returns the auto generated ID of the last insert query that successfully executed on this connection","long_desc":"Returns the auto generated ID of the last insert query that successfully executed on this connection. The result of this function is not affected by any of the following:","ver":"PECL ibm_db2 >= 1.7.1","ret_desc":"Returns the auto generated ID of last insert query that successfully executed on this connection.","url":"function.db2-last-insert-id","name":"db2_last_insert_id","params":[{"list":[],"ret_type":"string"}]},"db2_lob_read":{"desc":"Gets a user defined size of LOB files with each invocation","long_desc":"Use db2_lob_read() to iterate through a specified column of a result set and retrieve a user defined size of LOB data.","ver":"PECL ibm_db2 >= 1.6.0","ret_desc":"Returns the amount of data the user specifies. Returns FALSE if the data cannot be retrieved.","seealso":[],"url":"function.db2-lob-read","name":"db2_lob_read","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"A valid stmt resource containing LOB data."},{"type":"int","var":"$colnum","beh":0,"desc":"A valid column number in the result set of the stmt resource."},{"type":"int","var":"$length","beh":1,"desc":"The size of the LOB data to be retrieved from the stmt resource."}],"ret_type":"string"}]},"db2_next_result":{"desc":"Requests the next result set from a stored procedure","long_desc":"A stored procedure can return zero or more result sets. While you handle the first result set in exactly the same way you would handle the results returned by a simple SELECT statement, to fetch the second and subsequent result sets from a stored procedure you must call the db2_next_result() function and return the result to a uniquely named PHP variable.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a new statement resource containing the next result set if the stored procedure returned another result set. Returns FALSE if the stored procedure did not return another result set.","url":"function.db2-next-result","name":"db2_next_result","params":[{"list":[],"ret_type":"resource"}]},"db2_num_fields":{"desc":"Returns the number of fields contained in a result set","long_desc":"Returns the number of fields contained in a result set. This is most useful for handling the result sets returned by dynamically generated queries, or for result sets returned by stored procedures, where your application cannot otherwise know how to retrieve and use the results.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns an integer value representing the number of fields in the result set associated with the specified statement resource. Returns FALSE if the statement resource is not a valid input value.","seealso":[],"url":"function.db2-num-fields","name":"db2_num_fields","params":[{"list":[],"ret_type":"int"}]},"db2_num_rows":{"desc":"Returns the number of rows affected by an SQL statement","long_desc":"Returns the number of rows deleted, inserted, or updated by an SQL statement. To determine the number of rows that will be returned by a SELECT statement, issue SELECT COUNT(*) with the same predicates as your intended SELECT statement and retrieve the value. If your application logic checks the number of rows returned by a SELECT statement and branches if the number of rows is 0, consider modifying your application to attempt to return the first row with one of db2_fetch_assoc(), db2_fetch_both(), db2_fetch_array(), or db2_fetch_row(), and branch if the fetch function returns FALSE.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns the number of rows affected by the last SQL statement issued by the specified statement handle.","url":"function.db2-num-rows","name":"db2_num_rows","params":[{"list":[],"ret_type":"int"}]},"db2_pclose":{"desc":"Closes a persistent database connection","long_desc":"This function closes a DB2 client connection created with db2_pconnect() and returns the corresponding resources to the database server. If you have a persistent DB2 client connection created with db2_pconnect(), you may use this function to close the connection. To avoid substantial connection performance penalties, this function should only be used in rare cases when the persistent connection has become unresponsive or the persistent connection will not be needed for a long period of time.","ver":"PECL ibm_db2 >= 1.8.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.db2-pclose","name":"db2_pclose","params":[{"list":[],"ret_type":"bool"}]},"db2_pconnect":{"desc":"Returns a persistent connection to a database","long_desc":"Returns a persistent connection to an IBM DB2 Universal Database, IBM Cloudscape, or Apache Derby database. For more information on persistent connections, refer to Persistent Database Connections. Calling db2_close() on a persistent connection always returns TRUE, but the underlying DB2 client connection remains open and waiting to serve the next matching db2_pconnect() request. Users running version 1.9.0 or later of ibm_db2 should be aware that the extension will perform a transaction rollback on persistent connections at the end of a request, thus ending the transaction. This prevents the transaction block from carrying over to the next request which uses that connection if script execution ends before the transaction block does.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a connection handle resource if the connection attempt is successful. db2_pconnect() tries to reuse an existing connection resource that exactly matches the database, username, and password parameters. If the connection attempt fails, db2_pconnect() returns FALSE.","seealso":[],"url":"function.db2-pconnect","name":"db2_pconnect","params":[{"list":[{"type":"string","var":"$database","beh":0,"desc":"The database alias in the DB2 client catalog."},{"type":"string","var":"$username","beh":1,"desc":"The username with which you are connecting to the database."},{"type":"string","var":"$password","beh":1,"desc":"The password with which you are connecting to the database."},{"type":"array","var":"$options","beh":1,"desc":"An associative array of connection options that affect the behavior of the connection, where valid array keys include: The following new option is available in ibm_db2 version 1.7.0 and later. The following new i5\/OS options are available in ibm_db2 version 1.5.1 and later. The following new i5\/OS option is available in ibm_db2 version 1.8.0 and later."}],"ret_type":"resource"}]},"db2_prepare":{"desc":"Prepares an SQL statement to be executed","long_desc":"db2_prepare() creates a prepared SQL statement which can include 0 or more parameter markers (? characters) representing parameters for input, output, or input\/output. You can pass parameters to the prepared statement using db2_bind_param(), or for input values only, as an array passed to db2_execute(). There are three main advantages to using prepared statements in your application:","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a statement resource if the SQL statement was successfully parsed and prepared by the database server. Returns FALSE if the database server returned an error. You can determine which error was returned by calling db2_stmt_error() or db2_stmt_errormsg().","seealso":[],"url":"function.db2-prepare","name":"db2_prepare","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"A valid database connection resource variable as returned from db2_connect() or db2_pconnect()."},{"type":"string","var":"$statement","beh":1,"desc":"An SQL statement, optionally containing one or more parameter markers.."},{"type":"array","var":"$options","beh":1,"desc":"An associative array containing statement options. You can use this parameter to request a scrollable cursor on database servers that support this functionality. For a description of valid statement options, see db2_set_option()."}],"ret_type":"resource"}]},"db2_primary_keys":{"desc":"Returns a result set listing primary keys for a table","long_desc":"Returns a result set listing the primary keys for a table.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a statement resource with a result set containing rows describing the primary keys for the specified table. The result set is composed of the following columns:","seealso":[],"url":"function.db2-primary-keys","name":"db2_primary_keys","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"type":"string","var":"$qualifier","beh":0,"desc":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For other databases, pass NULL or an empty string."},{"type":"string","var":"$schema","beh":1,"desc":"The schema which contains the tables. If schema is NULL, db2_primary_keys() matches the schema for the current connection."},{"type":"string","var":"$table-name","beh":1,"desc":"The name of the table."}],"ret_type":"resource"}]},"db2_procedure_columns":{"desc":"Returns a result set listing stored procedure parameters","long_desc":"Returns a result set listing the parameters for one or more stored procedures.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a statement resource with a result set containing rows describing the parameters for the stored procedures matching the specified parameters. The rows are composed of the following columns:","seealso":[],"url":"function.db2-procedure-columns","name":"db2_procedure_columns","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"type":"string","var":"$qualifier","beh":0,"desc":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For other databases, pass NULL or an empty string."},{"type":"string","var":"$schema","beh":1,"desc":"The schema which contains the procedures. This parameter accepts a search pattern containing _ and % as wildcards."},{"type":"string","var":"$procedure","beh":1,"desc":"The name of the procedure. This parameter accepts a search pattern containing _ and % as wildcards."},{"type":"string","var":"$parameter","beh":1,"desc":"The name of the parameter. This parameter accepts a search pattern containing _ and % as wildcards. If this parameter is NULL, all parameters for the specified stored procedures are returned."}],"ret_type":"resource"}]},"db2_procedures":{"desc":"Returns a result set listing the stored procedures registered in a database","long_desc":"Returns a result set listing the stored procedures registered in a database.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a statement resource with a result set containing rows describing the stored procedures matching the specified parameters. The rows are composed of the following columns:","seealso":[],"url":"function.db2-procedures","name":"db2_procedures","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"type":"string","var":"$qualifier","beh":0,"desc":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For other databases, pass NULL or an empty string."},{"type":"string","var":"$schema","beh":1,"desc":"The schema which contains the procedures. This parameter accepts a search pattern containing _ and % as wildcards."},{"type":"string","var":"$procedure","beh":1,"desc":"The name of the procedure. This parameter accepts a search pattern containing _ and % as wildcards."}],"ret_type":"resource"}]},"db2_result":{"desc":"Returns a single column from a row in the result set","long_desc":"Use db2_result() to return the value of a specified column in the current row of a result set. You must call db2_fetch_row() before calling db2_result() to set the location of the result set pointer.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns the value of the requested field if the field exists in the result set. Returns NULL if the field does not exist, and issues a warning.","seealso":[],"url":"function.db2-result","name":"db2_result","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"A valid stmt resource."},{"type":"mixed","var":"$column","beh":0,"desc":"Either an integer mapping to the 0-indexed field in the result set, or a string matching the name of the column."}],"ret_type":"mixed"}]},"db2_rollback":{"desc":"Rolls back a transaction","long_desc":"Rolls back an in-progress transaction on the specified connection resource and begins a new transaction. PHP applications normally default to AUTOCOMMIT mode, so db2_rollback() normally has no effect unless AUTOCOMMIT has been turned off for the connection resource.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.db2-rollback","name":"db2_rollback","params":[{"list":[],"ret_type":"bool"}]},"db2_server_info":{"desc":"Returns an object with properties that describe the DB2 database server","long_desc":"This function returns an object with read-only properties that return information about the IBM DB2, Cloudscape, or Apache Derby database server. The following table lists the database server properties:","ver":"PECL ibm_db2 >= 1.1.1","ret_desc":"Returns an object on a successful call. Returns FALSE on failure.","seealso":[],"url":"function.db2-server-info","name":"db2_server_info","params":[{"list":[],"ret_type":"object"}]},"db2_set_option":{"desc":"Set options for connection or statement resources","long_desc":"Sets options for a statement resource or a connection resource. You cannot set options for result set resources.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.db2-set-option","name":"db2_set_option","params":[{"list":[{"type":"resource","var":"$resource","beh":0,"desc":"A valid statement resource as returned from db2_prepare() or a valid connection resource as returned from db2_connect() or db2_pconnect()."},{"type":"array","var":"$options","beh":0,"desc":"An associative array containing valid statement or connection options. This parameter can be used to change autocommit values, cursor types (scrollable or forward), and to specify the case of the column names (lower, upper, or natural) that will appear in a result set. The following new i5\/OS options are available in ibm_db2 version 1.5.1 and later. These options apply only when running PHP and ibm_db2 natively on i5 systems. The following new option is available in ibm_db2 version 1.8.0 and later. The following new options are available in ibm_db2 version 1.7.0 and later. The following new options are available in ibm_db2 version 1.6.0 and later. These options provide useful tracking information that can be accessed during execution with db2_get_option()."},{"type":"int","var":"$type","beh":1,"desc":"Passing DB2_AUTOCOMMIT_ON turns autocommit on for the specified connection resource. Passing DB2_AUTOCOMMIT_OFF turns autocommit off for the specified connection resource."}],"ret_type":"bool"}]},"db2_special_columns":{"desc":"Returns a result set listing the unique row identifier columns for a table","long_desc":"Returns a result set listing the unique row identifier columns for a table.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a statement resource with a result set containing rows with unique row identifier information for a table. The rows are composed of the following columns:","seealso":[],"url":"function.db2-special-columns","name":"db2_special_columns","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"type":"string","var":"$qualifier","beh":0,"desc":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For other databases, pass NULL or an empty string."},{"type":"string","var":"$schema","beh":1,"desc":"The schema which contains the tables."},{"type":"string","var":"$table_name","beh":1,"desc":"The name of the table."},{"type":"int","var":"$scope","beh":1,"desc":"Integer value representing the minimum duration for which the unique row identifier is valid. This can be one of the following values:"}],"ret_type":"resource"}]},"db2_statistics":{"desc":"Returns a result set listing the index and statistics for a table","long_desc":"Returns a result set listing the index and statistics for a table.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a statement resource with a result set containing rows describing the statistics and indexes for the base tables matching the specified parameters. The rows are composed of the following columns:","seealso":[],"url":"function.db2-statistics","name":"db2_statistics","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"type":"string","var":"$qualifier","beh":0,"desc":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For other databases, pass NULL or an empty string."},{"type":"string","var":"$schema","beh":1,"desc":"The schema that contains the targeted table. If this parameter is NULL, the statistics and indexes are returned for the schema of the current user."},{"type":"string","var":"$table-name","beh":1,"desc":"The name of the table."},{"type":"bool","var":"$unique","beh":1,"desc":"An integer value representing the type of index information to return."}],"ret_type":"resource"}]},"db2_stmt_error":{"desc":"Returns a string containing the SQLSTATE returned by an SQL statement","long_desc":"Returns a string containing the SQLSTATE value returned by an SQL statement. If you do not pass a statement resource as an argument to db2_stmt_error(), the driver returns the SQLSTATE value associated with the last attempt to return a statement resource, for example, from db2_prepare() or db2_exec(). To learn what the SQLSTATE value means, you can issue the following command at a DB2 Command Line Processor prompt: db2 '? sqlstate-value'. You can also call db2_stmt_errormsg() to retrieve an explicit error message and the associated SQLCODE value.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a string containing an SQLSTATE value.","seealso":[],"url":"function.db2-stmt-error","name":"db2_stmt_error","params":[{"list":[],"ret_type":"string"}]},"db2_stmt_errormsg":{"desc":"Returns a string containing the last SQL statement error message","long_desc":"Returns a string containing the last SQL statement error message. If you do not pass a statement resource as an argument to db2_stmt_errormsg(), the driver returns the error message associated with the last attempt to return a statement resource, for example, from db2_prepare() or db2_exec().","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a string containing the error message and SQLCODE value for the last error that occurred issuing an SQL statement.","seealso":[],"url":"function.db2-stmt-errormsg","name":"db2_stmt_errormsg","params":[{"list":[],"ret_type":"string"}]},"db2_table_privileges":{"desc":"Returns a result set listing the tables and associated privileges in a database","long_desc":"Returns a result set listing the tables and associated privileges in a database.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a statement resource with a result set containing rows describing the privileges for the tables that match the specified parameters. The rows are composed of the following columns:","seealso":[],"url":"function.db2-table-privileges","name":"db2_table_privileges","params":[{"list":[{"type":"resource","var":"$connection","beh":1,"desc":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"type":"string","var":"$qualifier","beh":1,"desc":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For other databases, pass NULL or an empty string."},{"type":"string","var":"$schema","beh":1,"desc":"The schema which contains the tables. This parameter accepts a search pattern containing _ and % as wildcards."},{"type":"string","var":"$table_name","beh":1,"desc":"The name of the table. This parameter accepts a search pattern containing _ and % as wildcards."}],"ret_type":"resource"}]},"db2_tables":{"desc":"Returns a result set listing the tables and associated metadata in a database","long_desc":"Returns a result set listing the tables and associated metadata in a database.","ver":"PECL ibm_db2 >= 1.0.0","ret_desc":"Returns a statement resource with a result set containing rows describing the tables that match the specified parameters. The rows are composed of the following columns:","seealso":[],"url":"function.db2-tables","name":"db2_tables","params":[{"list":[{"type":"resource","var":"$connection","beh":1,"desc":"A valid connection to an IBM DB2, Cloudscape, or Apache Derby database."},{"type":"string","var":"$qualifier","beh":1,"desc":"A qualifier for DB2 databases running on OS\/390 or z\/OS servers. For other databases, pass NULL or an empty string."},{"type":"string","var":"$schema","beh":1,"desc":"The schema which contains the tables. This parameter accepts a search pattern containing _ and % as wildcards."},{"type":"string","var":"$table-name","beh":1,"desc":"The name of the table. This parameter accepts a search pattern containing _ and % as wildcards."},{"type":"string","var":"$table-type","beh":1,"desc":"A list of comma-delimited table type identifiers. To match all table types, pass NULL or an empty string. Valid table type identifiers include: ALIAS, HIERARCHY TABLE, INOPERATIVE VIEW, NICKNAME, MATERIALIZED QUERY TABLE, SYSTEM TABLE, TABLE, TYPED TABLE, TYPED VIEW, and VIEW."}],"ret_type":"resource"}]},"dba_close":{"desc":"Close a DBA database","long_desc":"dba_close() closes the established database and frees all resources of the specified database handle.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.dba-close","name":"dba_close","params":[{"list":[],"ret_type":"void"}]},"dba_delete":{"desc":"Delete DBA entry specified by key","long_desc":"dba_delete() deletes the specified entry from the database.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.dba-delete","name":"dba_delete","params":[{"list":[{"type":"string","var":"$key","beh":0,"desc":"The key of the entry which is deleted."},{"type":"resource","var":"$handle","beh":0,"desc":"The database handler, returned by dba_open() or dba_popen()."}],"ret_type":"bool"}]},"dba_exists":{"desc":"Check whether key exists","long_desc":"dba_exists() checks whether the specified key exists in the database.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the key exists, FALSE otherwise.","seealso":[],"url":"function.dba-exists","name":"dba_exists","params":[{"list":[{"type":"string","var":"$key","beh":0,"desc":"The key the check is performed for."},{"type":"resource","var":"$handle","beh":0,"desc":"The database handler, returned by dba_open() or dba_popen()."}],"ret_type":"bool"}]},"dba_fetch":{"desc":"Fetch data specified by key","long_desc":"dba_fetch() fetches the data specified by key from the database specified with handle.","ver":"PHP 4, PHP 5","ret_desc":"Returns the associated string if the key\/data pair is found, FALSE otherwise.","seealso":[],"url":"function.dba-fetch","name":"dba_fetch","params":[{"list":[{"type":"string","var":"$key","beh":0,"desc":"The key the data is specified by."},{"type":"resource","var":"$handle","beh":0,"desc":"The number of key-value pairs to ignore when using cdb databases. This value is ignored for all other databases which do not support multiple keys with the same name."}],"ret_type":"string"},{"list":[{"type":"string","var":"$key","beh":0,"desc":"The key the data is specified by."},{"type":"int","var":"$skip","beh":0,"desc":"The number of key-value pairs to ignore when using cdb databases. This value is ignored for all other databases which do not support multiple keys with the same name."},{"type":"resource","var":"$handle","beh":1,"desc":"The database handler, returned by dba_open() or dba_popen()."}],"ret_type":"string"}]},"dba_firstkey":{"desc":"Fetch first key","long_desc":"dba_firstkey() returns the first key of the database and resets the internal key pointer. This permits a linear search through the whole database.","ver":"PHP 4, PHP 5","ret_desc":"Returns the key on success or FALSE on failure.","seealso":[],"url":"function.dba-firstkey","name":"dba_firstkey","params":[{"list":[],"ret_type":"string"}]},"dba_handlers":{"desc":"List all the handlers available","long_desc":"dba_handlers() list all the handlers supported by this extension.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns an array of database handlers. If full_info is set to TRUE, the array will be associative with the handlers names as keys, and their version information as value. Otherwise, the result will be an indexed array of handlers names.","url":"function.dba-handlers","name":"dba_handlers","params":[{"list":[],"ret_type":"array"}]},"dba_insert":{"desc":"Insert entry","long_desc":"dba_insert() inserts the entry described with key and value into the database.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.dba-insert","name":"dba_insert","params":[{"list":[{"type":"string","var":"$key","beh":0,"desc":"The key of the entry to be inserted. If this key already exist in the database, this function will fail. Use dba_replace() if you need to replace an existent key."},{"type":"string","var":"$value","beh":0,"desc":"The value to be inserted."},{"type":"resource","var":"$handle","beh":1,"desc":"The database handler, returned by dba_open() or dba_popen()."}],"ret_type":"bool"}]},"dba_key_split":{"desc":"Splits a key in string representation into array representation","long_desc":"dba_key_split() splits a key (string representation) into an array representation.","ver":"PHP 5","ret_desc":"Returns an array of the form array(0 => group, 1 => value_name). This function will return FALSE if key is NULL or FALSE.","seealso":[],"url":"function.dba-key-split","name":"dba_key_split","params":[{"list":[],"ret_type":"mixed"}]},"dba_list":{"desc":"List all open database files","long_desc":"dba_list() list all open database files.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"An associative array, in the form resourceid => filename.","url":"function.dba-list","name":"dba_list","params":[{"list":[],"ret_type":"array"}]},"dba_nextkey":{"desc":"Fetch next key","long_desc":"dba_nextkey() returns the next key of the database and advances the internal key pointer.","ver":"PHP 4, PHP 5","ret_desc":"Returns the key on success or FALSE on failure.","seealso":[],"url":"function.dba-nextkey","name":"dba_nextkey","params":[{"list":[],"ret_type":"string"}]},"dba_open":{"desc":"Open database","long_desc":"dba_open() establishes a database instance for path with mode using handler.","ver":"PHP 4, PHP 5","ret_desc":"Returns a positive handle on success or FALSE on failure.","seealso":[],"url":"function.dba-open","name":"dba_open","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"Commonly a regular path in your filesystem."},{"type":"string","var":"$mode","beh":1,"desc":"It is r for read access, w for read\/write access to an already existing database, c for read\/write access and database creation if it doesn't currently exist, and n for create, truncate and read\/write access. The database is created in BTree mode, other modes (like Hash or Queue) are not supported. Additionally you can set the database lock method with the next char. Use l to lock the database with a .lck file or d to lock the databasefile itself. It is important that all of your applications do this consistently. If you want to test the access and do not want to wait for the lock you can add t as third character. When you are absolutely sure that you do not require database locking you can do so by using - instead of l or d. When none of d, l or - is used, dba will lock on the database file as it would with d."},{"type":"string","var":"$handler","beh":1,"desc":"The name of the handler which shall be used for accessing path. It is passed all optional parameters given to dba_open() and can act on behalf of them."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"resource"}]},"dba_optimize":{"desc":"Optimize database","long_desc":"dba_optimize() optimizes the underlying database.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.dba-optimize","name":"dba_optimize","params":[{"list":[],"ret_type":"bool"}]},"dba_popen":{"desc":"Open database persistently","long_desc":"dba_popen() establishes a persistent database instance for path with mode using handler.","ver":"PHP 4, PHP 5","ret_desc":"Returns a positive handle on success or FALSE on failure.","seealso":[],"url":"function.dba-popen","name":"dba_popen","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"Commonly a regular path in your filesystem."},{"type":"string","var":"$mode","beh":1,"desc":"It is r for read access, w for read\/write access to an already existing database, c for read\/write access and database creation if it doesn't currently exist, and n for create, truncate and read\/write access."},{"type":"string","var":"$handler","beh":1,"desc":"The name of the handler which shall be used for accessing path. It is passed all optional parameters given to dba_popen() and can act on behalf of them."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"resource"}]},"dba_replace":{"desc":"Replace or insert entry","long_desc":"dba_replace() replaces or inserts the entry described with key and value into the database specified by handle.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.dba-replace","name":"dba_replace","params":[{"list":[{"type":"string","var":"$key","beh":0,"desc":"The key of the entry to be replaced."},{"type":"string","var":"$value","beh":0,"desc":"The value to be replaced."},{"type":"resource","var":"$handle","beh":1,"desc":"The database handler, returned by dba_open() or dba_popen()."}],"ret_type":"bool"}]},"dba_sync":{"desc":"Synchronize database","long_desc":"dba_sync() synchronizes the database. This will probably trigger a physical write to the disk, if supported.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.dba-sync","name":"dba_sync","params":[{"list":[],"ret_type":"bool"}]},"dbase_add_record":{"desc":"Adds a record to a database","long_desc":"Adds the given data to the database.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.dbase-add-record","name":"dbase_add_record","params":[{"list":[{"type":"int","var":"$dbase_identifier","beh":0,"desc":"The database link identifier, returned by dbase_open() or dbase_create()."},{"type":"array","var":"$record","beh":0,"desc":"An indexed array of data. The number of items must be equal to the number of fields in the database, otherwise dbase_add_record() will fail."}],"ret_type":"bool"}]},"dbase_close":{"desc":"Closes a database","long_desc":"Closes the given database link identifier.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.dbase-close","name":"dbase_close","params":[{"list":[],"ret_type":"bool"}]},"dbase_create":{"desc":"Creates a database","long_desc":"dbase_create() creates a dBase database with the given definition.","ver":"PHP 4, PHP 5","ret_desc":"Returns a database link identifier if the database is successfully created, or FALSE if an error occurred.","seealso":[],"url":"function.dbase-create","name":"dbase_create","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The name of the database. It can be a relative or absolute path to the file where dBase will store your data."},{"type":"array","var":"$fields","beh":0,"desc":"An array of arrays, each array describing the format of one field of the database. Each field consists of a name, a character indicating the field type, and optionally, a length, and a precision."}],"ret_type":"int"}]},"dbase_delete_record":{"desc":"Deletes a record from a database","long_desc":"Marks the given record to be deleted from the database.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.dbase-delete-record","name":"dbase_delete_record","params":[{"list":[{"type":"int","var":"$dbase_identifier","beh":0,"desc":"The database link identifier, returned by dbase_open() or dbase_create()."},{"type":"int","var":"$record_number","beh":0,"desc":"An integer which spans from 1 to the number of records in the database (as returned by dbase_numrecords())."}],"ret_type":"bool"}]},"dbase_get_header_info":{"desc":"Gets the header info of a database","long_desc":"Returns information on the column structure of the given database link identifier.","ver":"PHP 5","ret_desc":"An indexed array with an entry for each column in the database. The array index starts at 0.","url":"function.dbase-get-header-info","name":"dbase_get_header_info","params":[{"list":[],"ret_type":"array"}]},"dbase_get_record":{"desc":"Gets a record from a database as an indexed array","long_desc":"Gets a record from a database as an indexed array.","ver":"PHP 4, PHP 5","ret_desc":"An indexed array with the record. This array will also include an associative key named deleted which is set to 1 if the record has been marked for deletion (see dbase_delete_record()).","seealso":[],"url":"function.dbase-get-record","name":"dbase_get_record","params":[{"list":[{"type":"int","var":"$dbase_identifier","beh":0,"desc":"The database link identifier, returned by dbase_open() or dbase_create()."},{"type":"int","var":"$record_number","beh":0,"desc":"The index of the record."}],"ret_type":"array"}]},"dbase_get_record_with_names":{"desc":"Gets a record from a database as an associative array","long_desc":"Gets a record from a dBase database as an associative array.","ver":"PHP 4, PHP 5","ret_desc":"An associative array with the record. This will also include a key named deleted which is set to 1 if the record has been marked for deletion (see dbase_delete_record()).","seealso":[],"url":"function.dbase-get-record-with-names","name":"dbase_get_record_with_names","params":[{"list":[{"type":"int","var":"$dbase_identifier","beh":0,"desc":"The database link identifier, returned by dbase_open() or dbase_create()."},{"type":"int","var":"$record_number","beh":0,"desc":"The index of the record."}],"ret_type":"array"}]},"dbase_numfields":{"desc":"Gets the number of fields of a database","long_desc":"Gets the number of fields (columns) in the specified database.","ver":"PHP 4, PHP 5","ret_desc":"The number of fields in the database, or FALSE if an error occurs.","seealso":[],"url":"function.dbase-numfields","name":"dbase_numfields","params":[{"list":[],"ret_type":"int"}]},"dbase_numrecords":{"desc":"Gets the number of records in a database","long_desc":"Gets the number of records (rows) in the specified database.","ver":"PHP 4, PHP 5","ret_desc":"The number of records in the database, or FALSE if an error occurs.","seealso":[],"url":"function.dbase-numrecords","name":"dbase_numrecords","params":[{"list":[],"ret_type":"int"}]},"dbase_open":{"desc":"Opens a database","long_desc":"dbase_open() opens a dBase database with the given access mode.","ver":"PHP 4, PHP 5","ret_desc":"Returns a database link identifier if the database is successfully opened, or FALSE if an error occurred.","seealso":[],"url":"function.dbase-open","name":"dbase_open","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The name of the database. It can be a relative or absolute path to the file where dBase will store your data."},{"type":"int","var":"$mode","beh":0,"desc":"An integer which correspond to those for the open() system call (Typically 0 means read-only, 1 means write-only, and 2 means read and write)."}],"ret_type":"int"}]},"dbase_pack":{"desc":"Packs a database","long_desc":"Packs the specified database by permanently deleting all records marked for deletion using dbase_delete_record().","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.dbase-pack","name":"dbase_pack","params":[{"list":[],"ret_type":"bool"}]},"dbase_replace_record":{"desc":"Replaces a record in a database","long_desc":"Replaces the given record in the database with the given data.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.dbase-replace-record","name":"dbase_replace_record","params":[{"list":[{"type":"int","var":"$dbase_identifier","beh":0,"desc":"The database link identifier, returned by dbase_open() or dbase_create()."},{"type":"array","var":"$record","beh":0,"desc":"An indexed array of data. The number of items must be equal to the number of fields in the database, otherwise dbase_replace_record() will fail."},{"type":"int","var":"$record_number","beh":1,"desc":"An integer which spans from 1 to the number of records in the database (as returned by dbase_numrecords())."}],"ret_type":"bool"}]},"dbplus_add":{"desc":"Add a tuple to a relation","long_desc":"Adds a tuple to a relation.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"The function will return DBPLUS_ERR_NOERR on success or a db++ error code on failure.","seealso":[],"url":"function.dbplus-add","name":"dbplus_add","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":""},{"type":"array","var":"$tuple","beh":0,"desc":"An array of attribute\/value pairs to be inserted into the given relation. After successful execution this array will contain the complete data of the newly created tuple, including all implicitly set domain fields like sequences."}],"ret_type":"int"}]},"dbplus_aql":{"desc":"Perform AQL query","long_desc":"Executes an AQL query on the given server and dbpath.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns a relation handle on success. The result data may be fetched from this relation by calling dbplus_next() and dbplus_curr(). Other relation access functions will not work on a result relation.","url":"function.dbplus-aql","name":"dbplus_aql","params":[{"list":[{"type":"string","var":"$query","beh":1,"desc":"The AQL query to be executed. Further information on the AQL (Algebraic Query Language) is provided in the original db++ manual."},{"type":"string","var":"$server","beh":1,"desc":""},{"type":"string","var":"$dbpath","beh":1,"desc":""}],"ret_type":"resource"}]},"dbplus_chdir":{"desc":"Get\/Set database virtual current directory","long_desc":"Changes the virtual current directory where relation files will be looked for by dbplus_open().","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns the absolute path of the current directory.","url":"function.dbplus-chdir","name":"dbplus_chdir","params":[{"list":[],"ret_type":"string"}]},"dbplus_close":{"desc":"Close a relation","long_desc":"Closes a relation previously opened by dbplus_open().","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns TRUE on success or DBPLUS_ERR_UNKNOWN on failure.","url":"function.dbplus-close","name":"dbplus_close","params":[{"list":[],"ret_type":"mixed"}]},"dbplus_curr":{"desc":"Get current tuple from relation","long_desc":"Reads the data for the current tuple for the given relation.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"The function will return zero (aka. DBPLUS_ERR_NOERR) on success or a db++ error code on failure.","seealso":[],"url":"function.dbplus-curr","name":"dbplus_curr","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"array","var":"&$tuple","beh":0,"desc":"The data will be passed back in this parameter, as an associative array."}],"ret_type":"int"}]},"dbplus_errcode":{"desc":"Get error string for given errorcode or last error","long_desc":"Returns a clear error string for the given error code.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns the error message.","url":"function.dbplus-errcode","name":"dbplus_errcode","params":[{"list":[],"ret_type":"string"}]},"dbplus_errno":{"desc":"Get error code for last operation","long_desc":"Returns the error code returned by the last db++ operation.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns the error code, as an integer.","seealso":[],"url":"function.dbplus-errno","name":"dbplus_errno","params":[{"list":[],"ret_type":"int"}]},"dbplus_find":{"desc":"Set a constraint on a relation","long_desc":"Places a constraint on the given relation. Further calls to functions like dbplus_curr() or dbplus_next() will only return tuples matching the given constraints.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","seealso":[],"url":"function.dbplus-find","name":"dbplus_find","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"array","var":"$constraints","beh":0,"desc":"Constraints are triplets of strings containing of a domain name, a comparison operator and a comparison value. The constraints parameter array may consist of a collection of string arrays, each of which contains a domain, an operator and a value, or of a single string array containing a multiple of three elements. The comparison operator may be one of the following strings: '==', '>', '>=', '<', '<=', '!=', '~' for a regular expression match and 'BAND' or 'BOR' for bitwise operations."},{"type":"mixed","var":"$tuple","beh":1,"desc":""}],"ret_type":"int"}]},"dbplus_first":{"desc":"Get first tuple from relation","long_desc":"Reads the data for the first tuple for the given relation, makes it the current tuple and pass it back as an associative array in tuple.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure.","seealso":[],"url":"function.dbplus-first","name":"dbplus_first","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"array","var":"&$tuple","beh":0,"desc":""}],"ret_type":"int"}]},"dbplus_flush":{"desc":"Flush all changes made on a relation","long_desc":"Writes all changes applied to relation since the last flush to disk.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure.","seealso":[],"url":"function.dbplus-flush","name":"dbplus_flush","params":[{"list":[],"ret_type":"int"}]},"dbplus_freealllocks":{"desc":"Free all locks held by this client","long_desc":"Frees all tuple locks held by this client.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","seealso":[],"url":"function.dbplus-freealllocks","name":"dbplus_freealllocks","params":[{"list":[],"ret_type":"int"}]},"dbplus_freelock":{"desc":"Release write lock on tuple","long_desc":"Releases a write lock on the given tuple previously obtained by dbplus_getlock().","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","seealso":[],"url":"function.dbplus-freelock","name":"dbplus_freelock","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"string","var":"$tuple","beh":0,"desc":""}],"ret_type":"int"}]},"dbplus_freerlocks":{"desc":"Free all tuple locks on given relation","long_desc":"Frees all tuple locks held on the given relation.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","seealso":[],"url":"function.dbplus-freerlocks","name":"dbplus_freerlocks","params":[{"list":[],"ret_type":"int"}]},"dbplus_getlock":{"desc":"Get a write lock on a tuple","long_desc":"Requests a write lock on the specified tuple.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns zero on success or a non-zero error code, especially DBPLUS_ERR_WLOCKED on failure.","seealso":[],"url":"function.dbplus-getlock","name":"dbplus_getlock","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"string","var":"$tuple","beh":0,"desc":""}],"ret_type":"int"}]},"dbplus_getunique":{"desc":"Get an id number unique to a relation","long_desc":"Obtains a number guaranteed to be unique for the given relation and will pass it back in the variable given as uniqueid.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure.","url":"function.dbplus-getunique","name":"dbplus_getunique","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"int","var":"$uniqueid","beh":0,"desc":""}],"ret_type":"int"}]},"dbplus_info":{"desc":"Get information about a relation","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","url":"function.dbplus-info","name":"dbplus_info","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"string","var":"$key","beh":0,"desc":""},{"type":"array","var":"&$result","beh":1,"desc":""}],"ret_type":"int"}]},"dbplus_last":{"desc":"Get last tuple from relation","long_desc":"Reads the data for the last tuple for the given relation, makes it the current tuple and pass it back as an associative array in tuple.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure.","seealso":[],"url":"function.dbplus-last","name":"dbplus_last","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"array","var":"&$tuple","beh":0,"desc":""}],"ret_type":"int"}]},"dbplus_lockrel":{"desc":"Request write lock on relation","long_desc":"Requests a write lock on the given relation. Other clients may still query the relation, but can't alter it while it is locked.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-lockrel","name":"dbplus_lockrel","params":[{"list":[],"ret_type":"int"}]},"dbplus_next":{"desc":"Get next tuple from relation","long_desc":"Reads the data for the next tuple for the given relation, makes it the current tuple and will pass it back as an associative array in tuple.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure.","seealso":[],"url":"function.dbplus-next","name":"dbplus_next","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"array","var":"&$tuple","beh":0,"desc":""}],"ret_type":"int"}]},"dbplus_open":{"desc":"Open relation file","long_desc":"Opens the given relation file.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"On success a relation file resource (cursor) is returned which must be used in any subsequent commands referencing the relation. Failure leads to a zero return value, the actual error code may be asked for by calling dbplus_errno().","url":"function.dbplus-open","name":"dbplus_open","params":[{"list":[],"ret_type":"resource"}]},"dbplus_prev":{"desc":"Get previous tuple from relation","long_desc":"Reads the data for the previous tuple for the given relation, makes it the current tuple and will pass it back as an associative array in tuple.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure.","seealso":[],"url":"function.dbplus-prev","name":"dbplus_prev","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"array","var":"&$tuple","beh":0,"desc":""}],"ret_type":"int"}]},"dbplus_rchperm":{"desc":"Change relation permissions","long_desc":"Changes access permissions as specified by mask, user and group. The values for these are operating system specific.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-rchperm","name":"dbplus_rchperm","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"int","var":"$mask","beh":0,"desc":""},{"type":"string","var":"$user","beh":1,"desc":""},{"type":"string","var":"$group","beh":1,"desc":""}],"ret_type":"int"}]},"dbplus_rcreate":{"desc":"Creates a new DB++ relation","long_desc":"Creates a new relation. Any existing relation sharing the same name will be overwritten if the relation is currently not in use and overwrite is set to TRUE.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-rcreate","name":"dbplus_rcreate","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":""},{"type":"mixed","var":"$domlist","beh":1,"desc":"A combination of domains. May be passed as a single domain name string or as an array of domain names. This parameter should contain the domain specification for the new relation within an array of domain description strings. A domain description string consists of a domain name unique to this relation, a slash and a type specification character. See the db++ documentation, especially the dbcreate(1) manpage, for a description of available type specifiers and their meanings."},{"type":"bool","var":"$overwrite","beh":1,"desc":""}],"ret_type":"resource"}]},"dbplus_rcrtexact":{"desc":"Creates an exact but empty copy of a relation including indices","long_desc":"dbplus_rcrtexact() will create an exact but empty copy of the given relation under a new name.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns resource on success or DBPLUS_ERR_UNKNOWN on failure.","url":"function.dbplus-rcrtexact","name":"dbplus_rcrtexact","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":""},{"type":"resource","var":"$relation","beh":1,"desc":"The copied relation, opened by dbplus_open()."},{"type":"bool","var":"$overwrite","beh":1,"desc":"An existing relation by the same name will only be overwritten if this parameter is set to TRUE and no other process is currently using the relation."}],"ret_type":"mixed"}]},"dbplus_rcrtlike":{"desc":"Creates an empty copy of a relation with default indices","long_desc":"dbplus_rcrtexact() will create an empty copy of the given relation under a new name, but with default indices.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns resource on success or DBPLUS_ERR_UNKNOWN on failure.","url":"function.dbplus-rcrtlike","name":"dbplus_rcrtlike","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":""},{"type":"resource","var":"$relation","beh":1,"desc":"The copied relation, opened by dbplus_open()."},{"type":"int","var":"$overwrite","beh":1,"desc":"An existing relation by the same name will only be overwritten if this parameter is set to TRUE and no other process is currently using the relation."}],"ret_type":"mixed"}]},"dbplus_resolve":{"desc":"Resolve host information for relation","long_desc":"dbplus_resolve() will try to resolve the given relation_name and find out internal server id, real hostname and the database path on this host.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns an array containing these values under the keys sid, host and host_path or FALSE on error.","seealso":[],"url":"function.dbplus-resolve","name":"dbplus_resolve","params":[{"list":[],"ret_type":"array"}]},"dbplus_restorepos":{"desc":"Restore position","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-restorepos","name":"dbplus_restorepos","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"array","var":"$tuple","beh":0,"desc":""}],"ret_type":"int"}]},"dbplus_rkeys":{"desc":"Specify new primary key for a relation","long_desc":"dbplus_rkeys() will replace the current primary key for relation with the combination of domains specified by domlist.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns resource on success or DBPLUS_ERR_UNKNOWN on failure.","url":"function.dbplus-rkeys","name":"dbplus_rkeys","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"mixed","var":"$domlist","beh":0,"desc":"A combination of domains. May be passed as a single domain name string or as an array of domain names."}],"ret_type":"mixed"}]},"dbplus_ropen":{"desc":"Open relation file local","long_desc":"dbplus_ropen() will open the relation file locally for quick access without any client\/server overhead. Access is read only and only dbplus_curr() and dbplus_next() may be applied to the returned relation.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-ropen","name":"dbplus_ropen","params":[{"list":[],"ret_type":"resource"}]},"dbplus_rquery":{"desc":"Perform local (raw) AQL query","long_desc":"dbplus_rquery() performs a local (raw) AQL query using an AQL interpreter embedded into the db++ client library. dbplus_rquery() is faster than dbplus_aql() but will work on local data only.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-rquery","name":"dbplus_rquery","params":[{"list":[{"type":"string","var":"$query","beh":0,"desc":""},{"type":"string","var":"$dbpath","beh":1,"desc":""}],"ret_type":"resource"}]},"dbplus_rrename":{"desc":"Rename a relation","long_desc":"dbplus_rrename() will change the name of relation to name.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-rrename","name":"dbplus_rrename","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"string","var":"$name","beh":0,"desc":""}],"ret_type":"int"}]},"dbplus_rsecindex":{"desc":"Create a new secondary index for a relation","long_desc":"dbplus_rsecindex() will create a new secondary index for relation with consists of the domains specified by domlist and is of type type","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"Returns resource on success or DBPLUS_ERR_UNKNOWN on failure.","url":"function.dbplus-rsecindex","name":"dbplus_rsecindex","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"mixed","var":"$domlist","beh":0,"desc":"A combination of domains. May be passed as a single domain name string or as an array of domain names."},{"type":"int","var":"$type","beh":1,"desc":""}],"ret_type":"mixed"}]},"dbplus_runlink":{"desc":"Remove relation from filesystem","long_desc":"dbplus_runlink() will close and remove the relation.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-runlink","name":"dbplus_runlink","params":[{"list":[],"ret_type":"int"}]},"dbplus_rzap":{"desc":"Remove all tuples from relation","long_desc":"dbplus_rzap() will remove all tuples from relation.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-rzap","name":"dbplus_rzap","params":[{"list":[],"ret_type":"int"}]},"dbplus_savepos":{"desc":"Save position","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-savepos","name":"dbplus_savepos","params":[{"list":[],"ret_type":"int"}]},"dbplus_setindex":{"desc":"Set index","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-setindex","name":"dbplus_setindex","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"string","var":"$idx_name","beh":0,"desc":""}],"ret_type":"int"}]},"dbplus_setindexbynumber":{"desc":"Set index by number","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-setindexbynumber","name":"dbplus_setindexbynumber","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"int","var":"$idx_number","beh":0,"desc":""}],"ret_type":"int"}]},"dbplus_sql":{"desc":"Perform SQL query","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-sql","name":"dbplus_sql","params":[{"list":[{"type":"string","var":"$query","beh":1,"desc":""},{"type":"string","var":"$server","beh":1,"desc":""},{"type":"string","var":"$dbpath","beh":1,"desc":""}],"ret_type":"resource"}]},"dbplus_tcl":{"desc":"Execute TCL code on server side","long_desc":"A db++ server will prepare a TCL interpreter for each client connection. This interpreter will enable the server to execute TCL code provided by the client as a sort of stored procedures to improve the performance of database operations by avoiding client\/server data transfers and context switches. dbplus_tcl() needs to pass the client connection id the TCL script code should be executed by. dbplus_resolve() will provide this connection id. The function will return whatever the TCL code returns or a TCL error message if the TCL code fails.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","seealso":[],"url":"function.dbplus-tcl","name":"dbplus_tcl","params":[{"list":[{"type":"int","var":"$sid","beh":0,"desc":""},{"type":"string","var":"$script","beh":0,"desc":""}],"ret_type":"string"}]},"dbplus_tremove":{"desc":"Remove tuple and return new current tuple","long_desc":"dbplus_tremove() removes tuple from relation if it perfectly matches a tuple within the relation. current, if given, will contain the data of the new current tuple after calling dbplus_tremove().","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-tremove","name":"dbplus_tremove","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"array","var":"$tuple","beh":1,"desc":""},{"type":"array","var":"&$current","beh":1,"desc":""}],"ret_type":"int"}]},"dbplus_undo":{"desc":"Undo","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-undo","name":"dbplus_undo","params":[{"list":[],"ret_type":"int"}]},"dbplus_undoprepare":{"desc":"Prepare undo","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-undoprepare","name":"dbplus_undoprepare","params":[{"list":[],"ret_type":"int"}]},"dbplus_unlockrel":{"desc":"Give up write lock on relation","long_desc":"Release a write lock previously obtained by dbplus_lockrel().","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-unlockrel","name":"dbplus_unlockrel","params":[{"list":[],"ret_type":"int"}]},"dbplus_unselect":{"desc":"Remove a constraint from relation","long_desc":"Calling dbplus_unselect() will remove a constraint previously set by dbplus_find() on relation.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-unselect","name":"dbplus_unselect","params":[{"list":[],"ret_type":"int"}]},"dbplus_update":{"desc":"Update specified tuple in relation","long_desc":"dbplus_update() replaces the old tuple with the data from the new one, only if the old completely matches a tuple within relation.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-update","name":"dbplus_update","params":[{"list":[{"type":"resource","var":"$relation","beh":0,"desc":"A relation opened by dbplus_open()."},{"type":"array","var":"$old","beh":0,"desc":"The old tuple."},{"type":"array","var":"$new","beh":1,"desc":"The new tuple."}],"ret_type":"int"}]},"dbplus_xlockrel":{"desc":"Request exclusive lock on relation","long_desc":"Request an exclusive lock on relation preventing even read access from other clients.","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","seealso":[],"url":"function.dbplus-xlockrel","name":"dbplus_xlockrel","params":[{"list":[],"ret_type":"int"}]},"dbplus_xunlockrel":{"desc":"Free exclusive lock on relation","long_desc":"Releases an exclusive lock previously obtained by dbplus_xlockrel().","ver":"PHP 4 <= 4.1.0, PECL dbplus >= 0.9","ret_desc":"","url":"function.dbplus-xunlockrel","name":"dbplus_xunlockrel","params":[{"list":[],"ret_type":"int"}]},"dbx_close":{"desc":"Close an open connection\/database","ver":"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0","ret_desc":"Returns 1 on success and 0 on errors.","seealso":[],"url":"function.dbx-close","name":"dbx_close","params":[{"list":[],"ret_type":"int"}]},"dbx_compare":{"desc":"Compare two rows for sorting purposes","long_desc":"dbx_compare() is a helper function for dbx_sort() to ease the make and use of the custom sorting function.","ver":"PHP 4 >= 4.1.0, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0","ret_desc":"Returns 0 if the row_a[$column_key] is equal to row_b[$column_key], and 1 or -1 if the former is greater or is smaller than the latter one, respectively, or vice versa if the flag is set to DBX_CMP_DESC.","seealso":[],"url":"function.dbx-compare","name":"dbx_compare","params":[{"list":[{"type":"array","var":"$row_a","beh":0,"desc":"First row"},{"type":"array","var":"$row_b","beh":1,"desc":"Second row"},{"type":"string","var":"$column_key","beh":1,"desc":"The compared column"},{"type":"int","var":"$flags","beh":1,"desc":"The flags can be set to specify comparison direction:","def":"DBX_CMP_ASC | DBX_CMP_NATIVE"}],"ret_type":"int"}]},"dbx_connect":{"desc":"Open a connection\/database","long_desc":"Opens a connection to a database.","ver":"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0","ret_desc":"Returns an object on success, FALSE on error. If a connection has been made but the database could not be selected, the connection is closed and FALSE is returned.","seealso":[],"url":"function.dbx-connect","name":"dbx_connect","params":[{"list":[{"type":"mixed","var":"$module","beh":0,"desc":"The module parameter can be either a string or a constant, though the latter form is preferred. The possible values are given below, but keep in mind that they only work if the module is actually loaded."},{"type":"string","var":"$host","beh":1,"desc":"The SQL server host"},{"type":"string","var":"$database","beh":1,"desc":"The database name"},{"type":"string","var":"$username","beh":1,"desc":"The username"},{"type":"string","var":"$password","beh":1,"desc":"The password"},{"type":"int","var":"$persistent","beh":1,"desc":"The persistent parameter can be set to DBX_PERSISTENT, if so, a persistent connection will be created."}],"ret_type":"object"}]},"dbx_error":{"desc":"Report the error message of the latest function call in the module","long_desc":"dbx_error() returns the last error message.","ver":"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0","ret_desc":"Returns a string containing the error message from the last function call of the abstracted module (e.g. mysql module). If there are multiple connections in the same module, just the last error is given. If there are connections on different modules, the latest error is returned for the module specified by the link_identifier parameter.","url":"function.dbx-error","name":"dbx_error","params":[{"list":[],"ret_type":"string"}]},"dbx_escape_string":{"desc":"Escape a string so it can safely be used in an sql-statement","long_desc":"Escape the given string so that it can safely be used in an sql-statement.","ver":"PHP 4 >= 4.3.0, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0","ret_desc":"Returns the text, escaped where necessary (such as quotes, backslashes etc). On error, NULL is returned.","seealso":[],"url":"function.dbx-escape-string","name":"dbx_escape_string","params":[{"list":[{"type":"object","var":"$link_identifier","beh":0,"desc":"The DBX link object returned by dbx_connect()"},{"type":"string","var":"$text","beh":0,"desc":"The string to escape."}],"ret_type":"string"}]},"dbx_fetch_row":{"desc":"Fetches rows from a query-result that had the DBX_RESULT_UNBUFFERED flag set","long_desc":"dbx_fetch_row() fetches rows from a result identifier that had the DBX_RESULT_UNBUFFERED flag set. When the DBX_RESULT_UNBUFFERED is not set in the query, dbx_fetch_row() will fail as all rows have already been fetched into the results data property. As a side effect, the rows property of the query-result object is incremented for each successful call to dbx_fetch_row().","ver":"PHP 5 <= 5.0.5, PECL dbx >= 1.1.0","ret_desc":"Returns an object on success that contains the same information as any row would have in the dbx_query() result data property, including columns accessible by index or fieldname when the flags for dbx_query() were set that way.","seealso":[],"url":"function.dbx-fetch-row","name":"dbx_fetch_row","params":[{"list":[],"ret_type":"mixed"}]},"dbx_query":{"desc":"Send a query and fetch all results (if any)","long_desc":"Sends a query and fetch all results.","ver":"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0","ret_desc":"dbx_query() returns an object or 1 on success, and 0 on failure. The result object is returned only if the query given in sql_statement produces a result set (i.e. a SELECT query, even if the result set is empty).","seealso":[],"url":"function.dbx-query","name":"dbx_query","params":[{"list":[{"type":"object","var":"$link_identifier","beh":0,"desc":"The DBX link object returned by dbx_connect()"},{"type":"string","var":"$sql_statement","beh":1,"desc":"SQL statement. Data inside the query should be properly escaped."},{"type":"int","var":"$flags","beh":1,"desc":"The flags parameter is used to control the amount of information that is returned. It may be any combination of the following constants with the bitwise OR operator (|). The DBX_COLNAMES_* flags override the dbx.colnames_case setting from php.ini."}],"ret_type":"mixed"}]},"dbx_sort":{"desc":"Sort a result from a dbx_query by a custom sort function","long_desc":"Sort a result from a dbx_query() call with a custom sort function.","ver":"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.dbx-sort","name":"dbx_sort","params":[{"list":[{"type":"object","var":"$result","beh":0,"desc":"A result set returned by dbx_query()."},{"type":"string","var":"$user_compare_function","beh":0,"desc":"The user-defined comparison function. It must accept two arguments and return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}],"ret_type":"bool"}]},"dcgettext":{"desc":"Overrides the domain for a single lookup","long_desc":"This function allows you to override the current domain for a single message lookup.","ver":"PHP 4, PHP 5","ret_desc":"A string on success.","seealso":[],"url":"function.dcgettext","name":"dcgettext","params":[{"list":[{"type":"string","var":"$domain","beh":0,"desc":"The domain"},{"type":"string","var":"$message","beh":0,"desc":"The message"},{"type":"int","var":"$category","beh":1,"desc":"The category"}],"ret_type":"string"}]},"dcngettext":{"desc":"Plural version of dcgettext","long_desc":"This function allows you to override the current domain for a single plural message lookup.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"A string on success.","seealso":[],"url":"function.dcngettext","name":"dcngettext","params":[{"list":[{"type":"string","var":"$domain","beh":0,"desc":"The domain"},{"type":"string","var":"$msgid1","beh":0,"desc":""},{"type":"string","var":"$msgid2","beh":1,"desc":""},{"type":"int","var":"$n","beh":1,"desc":""},{"type":"int","var":"$category","beh":1,"desc":""}],"ret_type":"string"}]},"deaggregate":{"desc":"Removes the aggregated methods and properties from an object","long_desc":"Removes the methods and properties from classes that were aggregated to an object.","ver":"PHP 4 >= 4.2.0","ret_desc":"No value is returned.","seealso":[],"url":"function.deaggregate","name":"deaggregate","params":[{"list":[{"type":"object","var":"$object","beh":0,"desc":""},{"type":"string","var":"$class_name","beh":1,"desc":"If the optional class_name parameters is passed, only those methods and properties defined in that class are removed, otherwise all aggregated methods and properties are eliminated."}],"ret_type":"void"}]},"debug_backtrace":{"desc":"Generates a backtrace","long_desc":"debug_backtrace() generates a PHP backtrace.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns an array of associative arrays. The possible returned elements are as follows:","seealso":[],"url":"function.debug-backtrace","name":"debug_backtrace","params":[{"list":[{"type":"int","var":"$options","beh":0,"desc":"As of 5.3.6, this parameter is a bitmask for the following options:","def":"DEBUG_BACKTRACE_PROVIDE_OBJECT"},{"type":"int","var":"$limit","beh":1,"desc":"As of 5.4.0, this parameter can be used to limit the number of stack frames returned. By default (limit=0) it returns all stack frames.","def":0}],"ret_type":"array"}]},"debug_print_backtrace":{"desc":"Prints a backtrace","long_desc":"debug_print_backtrace() prints a PHP backtrace. It prints the function calls, included\/required files and eval()ed stuff.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.debug-print-backtrace","name":"debug_print_backtrace","params":[{"list":[{"type":"int","var":"$options","beh":0,"desc":"As of 5.3.6, this parameter is a bitmask for the following options:","def":0},{"type":"int","var":"$limit","beh":1,"desc":"As of 5.4.0, this parameter can be used to limit the number of stack frames printed. By default (limit=0) it prints all stack frames.","def":0}],"ret_type":"void"}]},"debug_zval_dump":{"desc":"Dumps a string representation of an internal zend value to output","long_desc":"Dumps a string representation of an internal zend value to output.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.debug-zval-dump","name":"debug_zval_dump","params":[{"list":[],"ret_type":"void"}]},"decbin":{"desc":"Decimal to binary","long_desc":"Returns a string containing a binary representation of the given number argument.","ver":"PHP 4, PHP 5","ret_desc":"Binary string representation of number","seealso":[],"url":"function.decbin","name":"decbin","params":[{"list":[],"ret_type":"string"}]},"dechex":{"desc":"Decimal to hexadecimal","long_desc":"Returns a string containing a hexadecimal representation of the given number argument. The largest number that can be converted is 4294967295 in decimal resulting to \"ffffffff\".","ver":"PHP 4, PHP 5","ret_desc":"Hexadecimal string representation of number","seealso":[],"url":"function.dechex","name":"dechex","params":[{"list":[],"ret_type":"string"}]},"decoct":{"desc":"Decimal to octal","long_desc":"Returns a string containing an octal representation of the given number argument. The largest number that can be converted is 4294967295 in decimal resulting to \"37777777777\".","ver":"PHP 4, PHP 5","ret_desc":"Octal string representation of number","seealso":[],"url":"function.decoct","name":"decoct","params":[{"list":[],"ret_type":"string"}]},"define":{"desc":"Defines a named constant","long_desc":"Defines a named constant at runtime.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.define","name":"define","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"The name of the constant."},{"type":"mixed","var":"$value","beh":1,"desc":"The value of the constant; only scalar and null values are allowed. Scalar values are integer, float, string or boolean values. It is possible to define resource constants, however it is not recommended and may cause unpredictable behavior."},{"type":"bool","var":"$case_insensitive","beh":1,"desc":"If set to TRUE, the constant will be defined case-insensitive. The default behavior is case-sensitive; i.e. CONSTANT and Constant represent different values.","def":"false"}],"ret_type":"bool"}]},"define_syslog_variables":{"desc":"Initializes all syslog related variables","long_desc":"Initializes all variables used in the syslog functions.","ver":"PHP 4, PHP 5 < 5.4.0","ret_desc":"No value is returned.","seealso":[],"url":"function.define-syslog-variables","name":"define_syslog_variables","params":[{"list":[],"ret_type":"void"}]},"defined":{"desc":"Checks whether a given named constant exists","long_desc":"Checks whether the given constant exists and is defined.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the named constant given by name has been defined, FALSE otherwise.","seealso":[],"url":"function.defined","name":"defined","params":[{"list":[],"ret_type":"bool"}]},"deg2rad":{"desc":"Converts the number in degrees to the radian equivalent","long_desc":"This function converts number from degrees to the radian equivalent.","ver":"PHP 4, PHP 5","ret_desc":"The radian equivalent of number","seealso":[],"url":"function.deg2rad","name":"deg2rad","params":[{"list":[],"ret_type":"float"}]},"delete":{"desc":"See unlink() or unset()","long_desc":"This is a dummy manual entry to satisfy those people who are looking for unlink() or unset() in the wrong place.","ret_desc":"No value is returned.","seealso":[],"url":"function.delete","name":"delete","params":[{"list":[],"ret_type":"void"}]},"dgettext":{"desc":"Override the current domain","long_desc":"The dgettext() function allows you to override the current domain for a single message lookup.","ver":"PHP 4, PHP 5","ret_desc":"A string on success.","seealso":[],"url":"function.dgettext","name":"dgettext","params":[{"list":[{"type":"string","var":"$domain","beh":0,"desc":"The domain"},{"type":"string","var":"$message","beh":0,"desc":"The message"}],"ret_type":"string"}]},"die":{"desc":"Equivalent to exit()","long_desc":"This language construct is equivalent to exit().","ver":"PHP 4, PHP 5","url":"function.die","name":"die","params":[]},"dio_close":{"desc":"Closes the file descriptor given by fd","long_desc":"The function dio_close() closes the file descriptor fd.","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5","ret_desc":"No value is returned.","seealso":[],"url":"function.dio-close","name":"dio_close","params":[{"list":[],"ret_type":"void"}]},"dio_fcntl":{"desc":"Performs a c library fcntl on fd","long_desc":"The dio_fcntl() function performs the operation specified by cmd on the file descriptor fd. Some commands require additional arguments args to be supplied.","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5","ret_desc":"Returns the result of the C call.","url":"function.dio-fcntl","name":"dio_fcntl","params":[{"list":[{"type":"resource","var":"$fd","beh":0,"desc":"The file descriptor returned by dio_open()."},{"type":"int","var":"$cmd","beh":1,"desc":"Can be one of the following operations:"},{"type":"mixed","var":"$args","beh":1,"desc":"args is an associative array, when cmd is F_SETLK or F_SETLLW, with the following keys:"}],"ret_type":"mixed"}]},"dio_open":{"desc":"Opens a file (creating it if necessary) at a lower level than the C library input\/ouput stream functions allow.","long_desc":"dio_open() opens a file and returns a new file descriptor for it.","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5","ret_desc":"A file descriptor or FALSE on error.","seealso":[],"url":"function.dio-open","name":"dio_open","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The pathname of the file to open."},{"type":"int","var":"$flags","beh":1,"desc":"The flags parameter is a bitwise-ORed value comprising flags from the following list. This value must include one of O_RDONLY, O_WRONLY, or O_RDWR. Additionally, it may include any combination of the other flags from this list."},{"type":"int","var":"$mode","beh":1,"desc":"If flags contains O_CREAT, mode will set the permissions of the file (creation permissions). Mode is required for correct operation when O_CREAT is specified in mode and is ignored otherwise. The actual permissions assigned to the created file will be affected by the process's umask setting as per usual.","def":0}],"ret_type":"resource"}]},"dio_read":{"desc":"Reads bytes from a file descriptor","long_desc":"The function dio_read() reads and returns len bytes from file with descriptor fd.","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5","ret_desc":"The bytes read from fd.","seealso":[],"url":"function.dio-read","name":"dio_read","params":[{"list":[{"type":"resource","var":"$fd","beh":0,"desc":"The file descriptor returned by dio_open()."},{"type":"int","var":"$len","beh":0,"desc":"The number of bytes to read. If not specified, dio_read() reads 1K sized block.","def":1024}],"ret_type":"string"}]},"dio_seek":{"desc":"Seeks to pos on fd from whence","long_desc":"The function dio_seek() is used to change the file position of the given file descriptor.","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5","ret_desc":"","url":"function.dio-seek","name":"dio_seek","params":[{"list":[{"type":"resource","var":"$fd","beh":0,"desc":"The file descriptor returned by dio_open()."},{"type":"int","var":"$pos","beh":1,"desc":"The new position."},{"type":"int","var":"$whence","beh":1,"desc":"Specifies how the position pos should be interpreted:","def":"SEEK_SET"}],"ret_type":"int"}]},"dio_stat":{"desc":"Gets stat information about the file descriptor fd","long_desc":"dio_stat() returns information about the given file descriptor.","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5","ret_desc":"Returns an associative array with the following keys:","url":"function.dio-stat","name":"dio_stat","params":[{"list":[],"ret_type":"array"}]},"dio_tcsetattr":{"desc":"Sets terminal attributes and baud rate for a serial port","long_desc":"dio_tcsetattr() sets the terminal attributes and baud rate of the open fd.","ver":"PHP 4 >= 4.3.0, PHP 5 <= 5.0.5","ret_desc":"No value is returned.","url":"function.dio-tcsetattr","name":"dio_tcsetattr","params":[{"list":[{"type":"resource","var":"$fd","beh":0,"desc":"The file descriptor returned by dio_open()."},{"type":"array","var":"$options","beh":0,"desc":"The currently available options are:"}],"ret_type":"bool"}]},"dio_truncate":{"desc":"Truncates file descriptor fd to offset bytes","long_desc":"dio_truncate() truncates a file to at most offset bytes in size. If the file previously was larger than this size, the extra data is lost. If the file previously was shorter, it is unspecified whether the file is left unchanged or is extended. In the latter case the extended part reads as zero bytes.","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.dio-truncate","name":"dio_truncate","params":[{"list":[{"type":"resource","var":"$fd","beh":0,"desc":"The file descriptor returned by dio_open()."},{"type":"int","var":"$offset","beh":0,"desc":"The offset in bytes."}],"ret_type":"bool"}]},"dio_write":{"desc":"Writes data to fd with optional truncation at length","long_desc":"dio_write() writes up to len bytes from data to file fd.","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5","ret_desc":"Returns the number of bytes written to fd.","seealso":[],"url":"function.dio-write","name":"dio_write","params":[{"list":[{"type":"resource","var":"$fd","beh":0,"desc":"The file descriptor returned by dio_open()."},{"type":"string","var":"$data","beh":1,"desc":"The written data."},{"type":"int","var":"$len","beh":1,"desc":"The length of data to write in bytes. If not specified, the function writes all the data to the specified file.","def":0}],"ret_type":"int"}]},"dir":{"desc":"Return an instance of the Directory class","long_desc":"A pseudo-object oriented mechanism for reading a directory. The given directory is opened.","ver":"PHP 4, PHP 5","ret_desc":"Returns an instance of Directory, or NULL with wrong parameters, or FALSE in case of another error.","url":"function.dir","name":"dir","params":[{"list":[{"type":"string","var":"$directory","beh":0,"desc":"Directory to open"},{"type":"resource","var":"$context","beh":1,"desc":""}],"ret_type":"Directory"}]},"directoryiterator":{"name":"DirectoryIterator","class":"DirectoryIterator"},"dirname":{"desc":"Returns parent directory's path","long_desc":"Given a string containing the path of a file or directory, this function will return the parent directory's path.","ver":"PHP 4, PHP 5","ret_desc":"Returns the path of the parent directory. If there are no slashes in path, a dot ('.') is returned, indicating the current directory. Otherwise, the returned string is path with any trailing \/component removed.","seealso":[],"url":"function.dirname","name":"dirname","params":[{"list":[],"ret_type":"string"}]},"disk_free_space":{"desc":"Returns available space on filesystem or disk partition","long_desc":"Given a string containing a directory, this function will return the number of bytes available on the corresponding filesystem or disk partition.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns the number of available bytes as a float or FALSE on failure.","seealso":[],"url":"function.disk-free-space","name":"disk_free_space","params":[{"list":[],"ret_type":"float"}]},"disk_total_space":{"desc":"Returns the total size of a filesystem or disk partition","long_desc":"Given a string containing a directory, this function will return the total number of bytes on the corresponding filesystem or disk partition.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns the total number of bytes as a float or FALSE on failure.","seealso":[],"url":"function.disk-total-space","name":"disk_total_space","params":[{"list":[],"ret_type":"float"}]},"diskfreespace":{"desc":"Alias of disk_free_space()","long_desc":"This function is an alias of: disk_free_space().","ver":"PHP 4, PHP 5","url":"function.diskfreespace","name":"diskfreespace","params":[]},"dl":{"desc":"Loads a PHP extension at runtime","long_desc":"Loads the PHP extension given by the parameter library. Use extension_loaded() to test whether a given extension is already available or not. This works on both built-in extensions and dynamically loaded ones (either through php.ini or dl()).","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. If the functionality of loading modules is not available or has been disabled (either by setting enable_dl off or by enabling safe mode in php.ini) an E_ERROR is emitted and execution is stopped. If dl() fails because the specified library couldn't be loaded, in addition to FALSE an E_WARNING message is emitted.","seealso":[],"url":"function.dl","name":"dl","params":[{"list":[],"ret_type":"bool"}]},"dngettext":{"desc":"Plural version of dgettext","long_desc":"The dngettext() function allows you to override the current domain for a single plural message lookup.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"A string on success.","seealso":[],"url":"function.dngettext","name":"dngettext","params":[{"list":[{"type":"string","var":"$domain","beh":0,"desc":"The domain"},{"type":"string","var":"$msgid1","beh":0,"desc":""},{"type":"string","var":"$msgid2","beh":1,"desc":""},{"type":"int","var":"$n","beh":1,"desc":""}],"ret_type":"string"}]},"dns_check_record":{"desc":"Alias of checkdnsrr()","long_desc":"This function is an alias of: checkdnsrr().","ver":"PHP 5","url":"function.dns-check-record","name":"dns_check_record","params":[]},"dns_get_mx":{"desc":"Alias of getmxrr()","long_desc":"This function is an alias of: getmxrr().","ver":"PHP 5","url":"function.dns-get-mx","name":"dns_get_mx","params":[]},"dns_get_record":{"desc":"Fetch DNS Resource Records associated with a hostname","long_desc":"Fetch DNS Resource Records associated with the given hostname.","ver":"PHP 5","ret_desc":"This function returns an array of associative arrays, or FALSE on failure. Each associative array contains at minimum the following keys:","seealso":[],"url":"function.dns-get-record","name":"dns_get_record","params":[{"list":[{"type":"string","var":"$hostname","beh":1,"desc":"hostname should be a valid DNS hostname such as \"www.example.com\". Reverse lookups can be generated using in-addr.arpa notation, but gethostbyaddr() is more suitable for the majority of reverse lookups."},{"type":"int","var":"$type","beh":1,"desc":"By default, dns_get_record() will search for any resource records associated with hostname. To limit the query, specify the optional type parameter. May be any one of the following: DNS_A, DNS_CNAME, DNS_HINFO, DNS_MX, DNS_NS, DNS_PTR, DNS_SOA, DNS_TXT, DNS_AAAA, DNS_SRV, DNS_NAPTR, DNS_A6, DNS_ALL or DNS_ANY.","def":"DNS_ANY"},{"type":"array","var":"&$authns","beh":1,"desc":"Passed by reference and, if given, will be populated with Resource Records for the Authoritative Name Servers."},{"type":"array","var":"&$addtl","beh":1,"desc":"Passed by reference and, if given, will be populated with any Additional Records."}],"ret_type":"array"}]},"dom_import_simplexml":{"desc":"Gets a DOMElement object from a SimpleXMLElement object","long_desc":"This function takes the node node of class SimpleXML and makes it into a DOMElement node. This new object can then be used as a native DOMElement node.","ver":"PHP 5","ret_desc":"The DOMElement node added or FALSE if any errors occur.","seealso":[],"url":"function.dom-import-simplexml","name":"dom_import_simplexml","params":[{"list":[],"ret_type":"DOMElement"}]},"domattr":{"name":"DOMAttr","class":"DOMAttr"},"domattribute":{"name":"DOMAttribute","class":"DOMAttribute"},"domcomment":{"name":"DOMComment","class":"DOMComment"},"domdocument":{"name":"DOMDocument","class":"DOMDocument"},"domdocumenttype":{"name":"DOMDocumentType","class":"DOMDocumentType"},"domelement":{"name":"DOMElement","class":"DOMElement"},"domnode":{"name":"DOMNode","class":"DOMNode"},"domnodelist":{"name":"DOMNodelist","class":"DOMNodelist"},"domprocessinginstruction":{"name":"DomProcessingInstruction","class":"DomProcessingInstruction"},"domxml_new_doc":{"desc":"Creates new empty XML document","long_desc":"Creates a new Dom document from scratch and returns it.","ver":"PHP 4 >= 4.2.0","ret_desc":"Returns a new DomDocument instance.","url":"function.domxml-new-doc","name":"domxml_new_doc","params":[{"list":[],"ret_type":"DOMDocument"}]},"domxml_open_file":{"desc":"Creates a DOM object from an XML file","long_desc":"The function parses the XML document in the given file.","ver":"PHP 4 >= 4.2.0","ret_desc":"Returns a DomDocument instance of the given file.","seealso":[],"url":"function.domxml-open-file","name":"domxml_open_file","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"The path to the XML file. The file is accessed in read-only mode."},{"type":"int","var":"$mode","beh":1,"desc":"This optional parameter can be used to change the behavior of this function. You can use one of the following constants for it: DOMXML_LOAD_PARSING (default), DOMXML_LOAD_VALIDATING or DOMXML_LOAD_RECOVERING. You can add to it also DOMXML_LOAD_DONT_KEEP_BLANKS, DOMXML_LOAD_SUBSTITUTE_ENTITIES and DOMXML_LOAD_COMPLETE_ATTRS by bitwise or.","def":"DOMXML_LOAD_PARSING"},{"type":"array","var":"&$error","beh":1,"desc":"If used, it will contain the error messages. error must be passed in by reference."}],"ret_type":"DOMDocument"}]},"domxml_open_mem":{"desc":"Creates a DOM object of an XML document","long_desc":"The function parses the XML document in the given string.","ver":"PHP 4 >= 4.2.0","ret_desc":"Returns a DomDocument instance of the given XML contents.","seealso":[],"url":"function.domxml-open-mem","name":"domxml_open_mem","params":[{"list":[{"type":"string","var":"$str","beh":1,"desc":"The contents of the XML file."},{"type":"int","var":"$mode","beh":1,"desc":"This optional parameter can be used to change the behavior of this function. You can use one of the following constants for it: DOMXML_LOAD_PARSING (default), DOMXML_LOAD_VALIDATING or DOMXML_LOAD_RECOVERING. You can add to it also DOMXML_LOAD_DONT_KEEP_BLANKS, DOMXML_LOAD_SUBSTITUTE_ENTITIES and DOMXML_LOAD_COMPLETE_ATTRS by bitwise or."},{"type":"array","var":"&$error","beh":1,"desc":"If used, it will contain the error messages. error must be passed in by reference."}],"ret_type":"DOMDocument"}]},"domxml_version":{"desc":"Gets the XML library version","long_desc":"Gets the version of the XML library currently used.","ver":"PHP 4 >= 4.1.0","ret_desc":"The version of the XML library, as a string.","url":"function.domxml-version","name":"domxml_version","params":[{"list":[],"ret_type":"string"}]},"domxml_xmltree":{"desc":"Creates a tree of PHP objects from an XML document","long_desc":"The function parses the XML document in str and returns a tree PHP objects as the parsed document. This function is isolated from the other functions, which means you cannot access the tree with any of the other functions. Modifying it, for example by adding nodes, makes no sense since there is currently no way to dump it as an XML file. However this function may be valuable if you want to read a file and investigate the content.","ver":"PHP 4 >= 4.2.0","ret_desc":"Returns a tree of Dom objects starting by a DomDocument.","url":"function.domxml-xmltree","name":"domxml_xmltree","params":[{"list":[],"ret_type":"DOMDocument"}]},"domxml_xslt_stylesheet":{"desc":"Creates a DomXsltStylesheet object from an XSL document in a string","long_desc":"Creates a DomXsltStylesheet object from the given XSL buffer.","ver":"PHP 4 >= 4.2.0","ret_desc":"Returns a new instance of DomXsltStylesheet.","seealso":[],"url":"function.domxml-xslt-stylesheet","name":"domxml_xslt_stylesheet","params":[{"list":[],"ret_type":"DomXsltStylesheet"}]},"domxml_xslt_stylesheet_doc":{"desc":"Creates a DomXsltStylesheet Object from a DomDocument Object","long_desc":"Creates a DomXsltStylesheet object from the given XSL document.","ver":"PHP 4 >= 4.2.0","ret_desc":"Returns a new instance of DomXsltStylesheet.","seealso":[],"url":"function.domxml-xslt-stylesheet-doc","name":"domxml_xslt_stylesheet_doc","params":[{"list":[],"ret_type":"DomXsltStylesheet"}]},"domxml_xslt_stylesheet_file":{"desc":"Creates a DomXsltStylesheet Object from an XSL document in a file","long_desc":"Creates a DomXsltStylesheet object from the given XSL file.","ver":"PHP 4 >= 4.2.0","ret_desc":"Returns a new instance of DomXsltStylesheet.","seealso":[],"url":"function.domxml-xslt-stylesheet-file","name":"domxml_xslt_stylesheet_file","params":[{"list":[],"ret_type":"DomXsltStylesheet"}]},"domxml_xslt_version":{"desc":"Gets the XSLT library version","long_desc":"Gets the XSLT library version.","ver":"PHP 4 >= 4.2.0","ret_desc":"Returns the version number of the XSLT library, as an integer.","seealso":[],"url":"function.domxml-xslt-version","name":"domxml_xslt_version","params":[{"list":[],"ret_type":"int"}]},"domxpath":{"name":"DOMXPath","class":"DOMXPath"},"domxsltstylesheet":{"name":"DomXsltStylesheet","class":"DomXsltStylesheet"},"dotnet_load":{"desc":"Loads a DOTNET module","ver":"PHP 4","url":"function.dotnet-load","name":"dotnet_load","params":[{"list":[{"type":"string","var":"$assembly_name","beh":1,"desc":""},{"type":"string","var":"$datatype_name","beh":1,"desc":""},{"type":"int","var":"$codepage","beh":1,"desc":""}],"ret_type":"int"}]},"doubleval":{"desc":"Alias of floatval()","long_desc":"This function is an alias of: floatval().","ver":"PHP 4, PHP 5","url":"function.doubleval","name":"doubleval","params":[]},"each":{"desc":"Return the current key and value pair from an array and advance the array cursor","long_desc":"Return the current key and value pair from an array and advance the array cursor. After each() has executed, the array cursor will be left on the next element of the array, or past the last element if it hits the end of the array. You have to use reset() if you want to traverse the array again using each.","ver":"PHP 4, PHP 5","ret_desc":"Returns the current key and value pair from the array array. This pair is returned in a four-element array, with the keys 0, 1, key, and value. Elements 0 and key contain the key name of the array element, and 1 and value contain the data.","seealso":[],"url":"function.each","name":"each","params":[{"list":[],"ret_type":"array"}]},"easter_date":{"desc":"Get Unix timestamp for midnight on Easter of a given year","long_desc":"Returns the Unix timestamp corresponding to midnight on Easter of the given year. The date of Easter Day was defined by the Council of Nicaea in AD325 as the Sunday after the first full moon which falls on or after the Spring Equinox. The Equinox is assumed to always fall on 21st March, so the calculation reduces to determining the date of the full moon and the date of the following Sunday. The algorithm used here was introduced around the year 532 by Dionysius Exiguus. Under the Julian Calendar (for years before 1753) a simple 19-year cycle is used to track the phases of the Moon. Under the Gregorian Calendar (for years after 1753 - devised by Clavius and Lilius, and introduced by Pope Gregory XIII in October 1582, and into Britain and its then colonies in September 1752) two correction factors are added to make the cycle more accurate.","ver":"PHP 4, PHP 5","ret_desc":"The easter date as a unix timestamp.","seealso":[],"url":"function.easter-date","name":"easter_date","params":[{"list":[],"ret_type":"int"}]},"easter_days":{"desc":"Get number of days after March 21 on which Easter falls for a given year","long_desc":"Returns the number of days after March 21 on which Easter falls for a given year. If no year is specified, the current year is assumed. This function can be used instead of easter_date() to calculate Easter for years which fall outside the range of Unix timestamps (i.e. before 1970 or after 2037). The date of Easter Day was defined by the Council of Nicaea in AD325 as the Sunday after the first full moon which falls on or after the Spring Equinox. The Equinox is assumed to always fall on 21st March, so the calculation reduces to determining the date of the full moon and the date of the following Sunday. The algorithm used here was introduced around the year 532 by Dionysius Exiguus. Under the Julian Calendar (for years before 1753) a simple 19-year cycle is used to track the phases of the Moon. Under the Gregorian Calendar (for years after 1753 - devised by Clavius and Lilius, and introduced by Pope Gregory XIII in October 1582, and into Britain and its then colonies in September 1752) two correction factors are added to make the cycle more accurate.","ver":"PHP 4, PHP 5","ret_desc":"The number of days after March 21st that the Easter Sunday is in the given year.","seealso":[],"url":"function.easter-days","name":"easter_days","params":[{"list":[{"type":"int","var":"$year","beh":1,"desc":"The year as a positive number"},{"type":"int","var":"$method","beh":1,"desc":"Allows to calculate easter dates based on the Gregorian calendar during the years 1582 - 1752 when set to CAL_EASTER_ROMAN. See the calendar constants for more valid constants.","def":"CAL_EASTER_DEFAULT"}],"ret_type":"int"}]},"echo":{"desc":"Output one or more strings","long_desc":"Outputs all parameters. echo() is not actually a function (it is a language construct), so you are not required to use parentheses with it. echo() (unlike some other language constructs) does not behave like a function, so it cannot always be used in the context of a function. Additionally, if you want to pass more than one parameter to echo(), the parameters must not be enclosed within parentheses. echo() also has a shortcut syntax, where you can immediately follow the opening tag with an equals sign. This short syntax only works with the short_open_tag configuration setting enabled.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.echo","name":"echo","params":[{"list":[{"type":"string","var":"$arg1","beh":0,"desc":"The parameter to output."},{"type":"string","var":"$...","beh":1,"desc":""}],"ret_type":"void"}]},"eio_busy":{"desc":"Artificially increase load. Could be useful in tests, benchmarking.","long_desc":"eio_busy() artificially increases load taking delay seconds to execute. May be used for debugging, or benchmarking.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_busy() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-busy","name":"eio_busy","params":[{"list":[{"type":"int","var":"$delay","beh":1,"desc":"Delay in seconds"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"This callback is called when all the group requests are done.","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_cancel":{"desc":"Cancels a request","long_desc":"eio_cancel() cancels a request specified by req","ver":"PECL eio >= 0.0.1dev","ret_desc":"No value is returned.","seealso":[],"url":"function.eio-cancel","name":"eio_cancel","params":[{"list":[],"ret_type":"void"}]},"eio_chmod":{"desc":"Change file\/direcrory permissions.","long_desc":"eio_chmod() changes file, or direcrory permissions. The new permissions are specified by mode.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_chmod() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-chmod","name":"eio_chmod","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"Path to the target file or directory"},{"type":"int","var":"$mode","beh":1,"desc":"The new permissions. E.g. 0644."},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_chown":{"desc":"Change file\/direcrory permissions.","long_desc":"Changes file, or directory permissions.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_chown() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-chown","name":"eio_chown","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"Path to file or directory."},{"type":"int","var":"$uid","beh":1,"desc":"User ID. Is ignored when equal to -1."},{"type":"int","var":"$gid","beh":1,"desc":"Group ID. Is ignored when equal to -1.","def":-1},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_close":{"desc":"Close file","long_desc":"eio_close() closes file specified by fd.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_close() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-close","name":"eio_close","params":[{"list":[{"type":"int","var":"$fd","beh":1,"desc":"The file descriptor"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_custom":{"desc":"Execute custom request like any other eio_* call.","long_desc":"eio_custom() executes custom function specified by execute processing it just like any other eio_* call.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_custom() returns request resource on success or FALSE on error.","url":"function.eio-custom","name":"eio_custom","params":[{"list":[{"type":"callable","var":"$execute","beh":0,"desc":"Specifies the request function that should match the following prototype:"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT."},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_dup2":{"desc":"Duplicate a file descriptor","long_desc":"eio_dup2() duplicates file descriptor.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_dup2() returns request resource on success or FALSE on error.","url":"function.eio-dup2","name":"eio_dup2","params":[{"list":[{"type":"int","var":"$fd","beh":1,"desc":"Source file descriptor"},{"type":"int","var":"$fd2","beh":1,"desc":"Target file descriptor"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_event_loop":{"desc":"Polls libeio until all requests proceeded","long_desc":"eio_event_loop() polls libeio until all requests proceeded.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_event_loop() returns TRUE on success or FALSE on error.","seealso":[],"url":"function.eio-event-loop","name":"eio_event_loop","params":[{"list":[],"ret_type":"bool"}]},"eio_fallocate":{"desc":"Allows the caller to directly manipulate the allocated disk space for a file","long_desc":"eio_fallocate() allows the caller to directly manipulate the allocated disk space for the file specified by fd file descriptor for the byte range starting at offset and continuing for length bytes.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_fallocate() returns request resource on success or FALSE on error.","url":"function.eio-fallocate","name":"eio_fallocate","params":[{"list":[{"type":"int","var":"$fd","beh":1,"desc":"The file descriptor, e.g. returned by eio_open()."},{"type":"int","var":"$mode","beh":1,"desc":"Currently only one flag is supported for mode: EIO_FALLOC_FL_KEEP_SIZE (the same as POSIX constant FALLOC_FL_KEEP_SIZE)."},{"type":"int","var":"$offset","beh":1,"desc":"Specifies start of the byte range."},{"type":"int","var":"$length","beh":1,"desc":"Specifies length the byte range."},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_fchmod":{"desc":"Change file permissions.","long_desc":"eio_fchmod() changes permissions for the file specified by fd file descriptor.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_fchmod() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-fchmod","name":"eio_fchmod","params":[{"list":[{"type":"int","var":"$fd","beh":1,"desc":"The file descriptor, e.g. returned by eio_open()."},{"type":"int","var":"$mode","beh":1,"desc":"The new permissions. E.g. 0644."},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_fchown":{"desc":"Change file ownership","long_desc":"eio_fchown() changes ownership of the file specified by fd file descriptor.","ver":"PECL eio >= 0.0.1dev","seealso":[],"url":"function.eio-fchown","name":"eio_fchown","params":[{"list":[{"type":"int","var":"$fd","beh":1,"desc":"The file descriptor."},{"type":"int","var":"$uid","beh":1,"desc":"User ID. Is ignored when equal to -1."},{"type":"int","var":"$gid","beh":1,"desc":"Group ID. Is ignored when equal to -1.","def":-1},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_fdatasync":{"desc":"Synchronize a file's in-core state with storage device.","long_desc":"eio_fdatasync() synchronizes a file's in-core state with storage device.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_fdatasync() returns request resource on success or FALSE on error.","url":"function.eio-fdatasync","name":"eio_fdatasync","params":[{"list":[{"type":"int","var":"$fd","beh":1,"desc":"The file descriptor, e.g. returned by eio_open()."},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_fstat":{"desc":"Get file status","long_desc":"eio_fstat() returns file status information in result argument of callback","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_busy() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-fstat","name":"eio_fstat","params":[{"list":[{"type":"int","var":"$fd","beh":0,"desc":"The file descriptor."},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT."},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback."}],"ret_type":"resource"}]},"eio_fstatvfs":{"desc":"Get file system statistics","long_desc":"eio_fstatvfs() returns file system statistics in result of callback.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_fstatvfs() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-fstatvfs","name":"eio_fstatvfs","params":[{"list":[{"type":"int","var":"$fd","beh":0,"desc":"A file descriptor of a file within the mounted file system."},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT."},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback."}],"ret_type":"resource"}]},"eio_fsync":{"desc":"Synchronize a file's in-core state with storage device","long_desc":"Synchronize a file's in-core state with storage device","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_fsync() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-fsync","name":"eio_fsync","params":[{"list":[{"type":"int","var":"$fd","beh":1,"desc":"The file descriptor."},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_ftruncate":{"desc":"Truncate a file","long_desc":"eio_ftruncate() causes a regular file referenced by fd file descriptor to be truncated to precisely length bytes.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_ftruncate() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-ftruncate","name":"eio_ftruncate","params":[{"list":[{"type":"int","var":"$fd","beh":1,"desc":"The file descriptor."},{"type":"int","var":"$offset","beh":1,"desc":"Offset from beginning of the file","def":0},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_futime":{"desc":"Change file last access and modification times","long_desc":"eio_futime() changes file last access and modification times.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_futime() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-futime","name":"eio_futime","params":[{"list":[{"type":"int","var":"$fd","beh":1,"desc":"The file descriptor, e.g. returned by eio_open()"},{"type":"float","var":"$atime","beh":1,"desc":"Access time"},{"type":"float","var":"$mtime","beh":1,"desc":"Modification time"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_get_event_stream":{"desc":"Get stream representing a variable used in internal communications with libeio.","long_desc":"eio_get_event_stream() acquires stream representing a variable used in internal communications with libeio. Could be used to bind with some event loop provided by other PECL extension, for example libevent.","ver":"PECL eio >= 0.3.1b","ret_desc":"eio_get_event_stream() returns stream on success; otherwise, NULL","url":"function.eio-get-event-stream","name":"eio_get_event_stream","params":[{"list":[],"ret_type":"mixed"}]},"eio_grp":{"desc":"Createsa request group.","long_desc":"eio_grp() creates a request group.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_grp() returns request group resource on success or FALSE on error.","seealso":[],"url":"function.eio-grp","name":"eio_grp","params":[{"list":[{"type":"callable","var":"$callback","beh":0,"desc":"callback function is called when the request is done. It should match the following prototype:"},{"type":"string","var":"$data","beh":0,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_grp_add":{"desc":"Adds a request to the request group.","long_desc":"eio_grp_add() adds a request to the request group.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_grp_add() doesn't return a value.","seealso":[],"url":"function.eio-grp-add","name":"eio_grp_add","params":[{"list":[{"type":"resource","var":"$grp","beh":0,"desc":"The request group resource returned by eio_grp()"},{"type":"resource","var":"$req","beh":0,"desc":"The request resource"}],"ret_type":"void"}]},"eio_grp_cancel":{"desc":"Cancels a request group","long_desc":"eio_grp_cancel() cancels a group request specified by grp request group resource.","ver":"PECL eio >= 0.0.1dev","ret_desc":"No value is returned.","seealso":[],"url":"function.eio-grp-cancel","name":"eio_grp_cancel","params":[{"list":[],"ret_type":"void"}]},"eio_grp_limit":{"desc":"Set group limit","long_desc":"Limit number of requests in the request group.","ver":"PECL eio >= 0.0.1dev","ret_desc":"No value is returned.","seealso":[],"url":"function.eio-grp-limit","name":"eio_grp_limit","params":[{"list":[{"type":"resource","var":"$grp","beh":0,"desc":"The request group resource."},{"type":"int","var":"$limit","beh":0,"desc":"Number of requests in the group."}],"ret_type":"void"}]},"eio_link":{"desc":"Create a hardlink for file","long_desc":"eio_link() creates a hardlink new_path for a file specified by path.","ver":"PECL eio >= 0.0.1dev","ret_desc":"","seealso":[],"url":"function.eio-link","name":"eio_link","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"Source file path."},{"type":"string","var":"$new_path","beh":1,"desc":"Target file path."},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_lstat":{"desc":"Get file status","long_desc":"eio_lstat() returns file status information in result argument of callback","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_lstat() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-lstat","name":"eio_lstat","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":"The file path"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT."},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_mkdir":{"desc":"Create directory","long_desc":"eio_mkdir() creates directory with specified access mode.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_mkdir() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-mkdir","name":"eio_mkdir","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"Path for the new directory."},{"type":"int","var":"$mode","beh":1,"desc":"Access mode, e.g. 0755"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_mknod":{"desc":"Create a special or ordinary file.","long_desc":"eio_mknod() creates ordinary or special(often) file.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_mknod() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-mknod","name":"eio_mknod","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"Path for the new node(file)."},{"type":"int","var":"$mode","beh":1,"desc":"Specifies both the permissions to use and the type of node to be created. It should be a combination (using bitwise OR) of one of the file types listed below and the permissions for the new node(e.g. 0640). Possible file types are: EIO_S_IFREG(regular file), EIO_S_IFCHR(character file), EIO_S_IFBLK(block special file), EIO_S_IFIFO(FIFO - named pipe) and EIO_S_IFSOCK(UNIX domain socket). To specify permissions EIO_S_I* constants could be used."},{"type":"int","var":"$dev","beh":1,"desc":"If the file type is EIO_S_IFCHR or EIO_S_IFBLK then dev specifies the major and minor numbers of the newly created device special file. Otherwise dev ignored. See mknod(2) man page for details."},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_nop":{"desc":"Does nothing, except go through the whole request cycle.","long_desc":"eio_nop() does nothing, except go through the whole request cycle. Could be useful in debugging.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_nop() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-nop","name":"eio_nop","params":[{"list":[{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_npending":{"desc":"Returns number of finished, but unhandled requests","long_desc":"eio_npending() returns number of finished, but unhandled requests","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_npending() returns number of finished, but unhandled requests.","seealso":[],"url":"function.eio-npending","name":"eio_npending","params":[{"list":[],"ret_type":"int"}]},"eio_nready":{"desc":"Returns number of not-yet handled requests","long_desc":"","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_nready() returns number of not-yet handled requests","seealso":[],"url":"function.eio-nready","name":"eio_nready","params":[{"list":[],"ret_type":"int"}]},"eio_nreqs":{"desc":"Returns number of requests to be processed","long_desc":"eio_nreqs() could be called in a custom loop calling eio_poll().","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_nreqs() returns number of requests to be processed.","seealso":[],"url":"function.eio-nreqs","name":"eio_nreqs","params":[{"list":[],"ret_type":"int"}]},"eio_nthreads":{"desc":"Returns number of threads currently in use","long_desc":"","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_nthreads() returns number of threads currently in use.","seealso":[],"url":"function.eio-nthreads","name":"eio_nthreads","params":[{"list":[],"ret_type":"int"}]},"eio_open":{"desc":"Opens a file","long_desc":"eio_open() opens file specified by path in access mode mode with","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_open() returns file descriptor in result argument of callback on success; otherwise, result is equal to -1.","seealso":[],"url":"function.eio-open","name":"eio_open","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":"Path of the file to be opened."},{"type":"int","var":"$flags","beh":1,"desc":"One of EIO_O_* constants, or their combinations. EIO_O_* constants have the same meaning, as their corresponding O_* counterparts defined in fnctl.h C header file. Default is EIO_O_RDWR."},{"type":"int","var":"$mode","beh":1,"desc":"One of EIO_S_I* constants, or their combination (via bitwise OR operator). The constants have the same meaning as their S_I* counterparts defined in \u00bb\u00a0sys\/stat.h C header file. Required, if a file is created. Otherwise ignored."},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT."},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_poll":{"desc":"Can be to be called whenever there are pending requests that need finishing.","long_desc":"eio_poll() can be used to implement special event loop. For this eio_nreqs() could be used to test if there are unprocessed requests.","ver":"PECL eio >= 0.0.1dev","ret_desc":"If any request invocation returns a non-zero value, returns that value. Otherwise, it returns 0.","seealso":[],"url":"function.eio-poll","name":"eio_poll","params":[{"list":[],"ret_type":"int"}]},"eio_read":{"desc":"Read from a file descriptor at given offset.","long_desc":"eio_read() reads up to length bytes from fd file descriptor at offset. The read bytes are stored in result argument of callback.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_read() stores read bytes in result argument of callback function.","seealso":[],"url":"function.eio-read","name":"eio_read","params":[{"list":[{"type":"int","var":"$fd","beh":0,"desc":"The file descriptor"},{"type":"int","var":"$length","beh":1,"desc":"Maximum number of bytes to read."},{"type":"int","var":"$offset","beh":1,"desc":"Offset within the file."},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT."},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_readahead":{"desc":"Perform file readahead into page cache","long_desc":"eio_readahead() populates the page cache with data from a file so that subsequent reads from that file will not block on disk I\/O. See READAHEAD(2) man page for details.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_readahead() returns request resource on success or FALSE on error.","url":"function.eio-readahead","name":"eio_readahead","params":[{"list":[{"type":"int","var":"$fd","beh":1,"desc":"The file descriptor"},{"type":"int","var":"$offset","beh":1,"desc":"Starting point from which data is to be read."},{"type":"int","var":"$length","beh":1,"desc":"Number of bytes to be read."},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_readdir":{"desc":"Reads through a whole directory","long_desc":"Reads through a whole directory(via the opendir, readdir and closedir system calls) and returns either the names or an array in result argument of callback function, depending on the flags argument.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_readdir() returns request resource on success, or FALSE on error. Sets result argument of callback function according to flags:","url":"function.eio-readdir","name":"eio_readdir","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":"Directory path."},{"type":"int","var":"$flags","beh":1,"desc":"Combination of EIO_READDIR_* constants."},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT."},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:"},{"type":"string","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_readlink":{"desc":"Read value of a symbolic link.","long_desc":"","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_readlink() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-readlink","name":"eio_readlink","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":"Source symbolic link path"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT."},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:"},{"type":"string","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_realpath":{"desc":"Get the canonicalized absolute pathname.","long_desc":"eio_realpath() returns the canonicalized absolute pathname in result argument of callback function.","ver":"PECL eio >= 0.0.1dev","ret_desc":"","url":"function.eio-realpath","name":"eio_realpath","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":"Short pathname"},{"type":"int","var":"$pri","beh":1,"desc":""},{"type":"callable","var":"$callback","beh":1,"desc":""},{"type":"string","var":"$data","beh":1,"desc":"","def":"NULL"}],"ret_type":"resource"}]},"eio_rename":{"desc":"Change the name or location of a file.","long_desc":"eio_rename() renames or moves a file to new location.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_rename() returns request resource on success or FALSE on error.","url":"function.eio-rename","name":"eio_rename","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"Source path"},{"type":"string","var":"$new_path","beh":1,"desc":"Target path"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_rmdir":{"desc":"Remove a directory","long_desc":"eio_rmdir() removes a directory.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_rmdir() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-rmdir","name":"eio_rmdir","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"Directory path"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_sendfile":{"desc":"Transfer data between file descriptors","long_desc":"eio_sendfile() copies data between one file descriptor and another. See SENDFILE(2) man page for details.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_sendfile() returns request resource on success or FALSE on error.","url":"function.eio-sendfile","name":"eio_sendfile","params":[{"list":[{"type":"int","var":"$out_fd","beh":1,"desc":"Output file descriptor. Should be opened for writing."},{"type":"int","var":"$in_fd","beh":1,"desc":"Input file descriptor. Should be opened for reading."},{"type":"int","var":"$offset","beh":1,"desc":"Offset within the source file."},{"type":"int","var":"$length","beh":1,"desc":"Number of bytes to copy."},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT."},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:"},{"type":"string","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback."}],"ret_type":"resource"}]},"eio_set_max_idle":{"desc":"Set maximum number of idle threads.","long_desc":"","ver":"PECL eio >= 0.0.1dev","ret_desc":"No value is returned.","seealso":[],"url":"function.eio-set-max-idle","name":"eio_set_max_idle","params":[{"list":[],"ret_type":"void"}]},"eio_set_max_parallel":{"desc":"Set maximum parallel threads","long_desc":"","ver":"PECL eio >= 0.0.1dev","ret_desc":"No value is returned.","seealso":[],"url":"function.eio-set-max-parallel","name":"eio_set_max_parallel","params":[{"list":[],"ret_type":"void"}]},"eio_set_max_poll_reqs":{"desc":"Set maximum number of requests processed in a poll.","long_desc":"","ver":"PECL eio >= 0.0.1dev","ret_desc":"No value is returned.","url":"function.eio-set-max-poll-reqs","name":"eio_set_max_poll_reqs","params":[{"list":[],"ret_type":"void"}]},"eio_set_max_poll_time":{"desc":"Set maximum poll time","long_desc":"Polling stops, if poll took longer than nseconds seconds.","ver":"PECL eio >= 0.0.1dev","ret_desc":"No value is returned.","url":"function.eio-set-max-poll-time","name":"eio_set_max_poll_time","params":[{"list":[],"ret_type":"void"}]},"eio_set_min_parallel":{"desc":"Set minimum parallel thread number","long_desc":"","ver":"PECL eio >= 0.0.1dev","ret_desc":"No value is returned.","seealso":[],"url":"function.eio-set-min-parallel","name":"eio_set_min_parallel","params":[{"list":[],"ret_type":"void"}]},"eio_stat":{"desc":"Get file status","long_desc":"eio_stat() returns file status information in result argument of callback","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_stat() returns request resource on success or FALSE on error. On success assigns result argument of callback to an array.","seealso":[],"url":"function.eio-stat","name":"eio_stat","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":"The file path"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT."},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_statvfs":{"desc":"Get file system statistics","long_desc":"eio_statvfs() returns file system statistics information in result argument of callback","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_statvfs() returns request resource on success or FALSE on error. On success assigns result argument of callback to an array.","url":"function.eio-statvfs","name":"eio_statvfs","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":"Pathname of any file within the mounted file system"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT."},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback."}],"ret_type":"resource"}]},"eio_symlink":{"desc":"Create a symbolic link","long_desc":"eio_symlink() creates a symbolic link new_path to path.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_symlink() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-symlink","name":"eio_symlink","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"Source path"},{"type":"string","var":"$new_path","beh":1,"desc":"Target path"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_sync":{"desc":"Commit buffer cache to disk","long_desc":"","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_sync() returns request resource on success or FALSE on error.","url":"function.eio-sync","name":"eio_sync","params":[{"list":[{"type":"int","var":"$pri","beh":1,"desc":"","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"","def":"NULL"}],"ret_type":"resource"}]},"eio_sync_file_range":{"desc":"Sync a file segment with disk","long_desc":"eio_sync_file_range() permits fine control when synchronizing the open file referred to by the file descriptor fd with disk.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_sync_file_range() returns request resource on success or FALSE on error.","url":"function.eio-sync-file-range","name":"eio_sync_file_range","params":[{"list":[{"type":"int","var":"$fd","beh":1,"desc":"File descriptor"},{"type":"int","var":"$offset","beh":1,"desc":"The starting byte of the file range to be synchronized"},{"type":"int","var":"$nbytes","beh":1,"desc":"Specifies the length of the range to be synchronized, in bytes. If nbytes is zero, then all bytes from offset through to the end of file are synchronized."},{"type":"int","var":"$flags","beh":1,"desc":"A bit-mask. Can include any of the following values: EIO_SYNC_FILE_RANGE_WAIT_BEFORE, EIO_SYNC_FILE_RANGE_WRITE, EIO_SYNC_FILE_RANGE_WAIT_AFTER. These flags have the same meaning as their SYNC_FILE_RANGE_* counterparts(see SYNC_FILE_RANGE(2) man page)."},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_syncfs":{"desc":"Calls Linux' syncfs syscall, if available","long_desc":"","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_syncfs() returns request resource on success or FALSE on error.","url":"function.eio-syncfs","name":"eio_syncfs","params":[{"list":[{"type":"int","var":"$fd","beh":1,"desc":"File descriptor"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_truncate":{"desc":"Truncate a file","long_desc":"eio_truncate() causes the regular file named by path to be truncated to a size of precisely length bytes","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_busy() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-truncate","name":"eio_truncate","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"File path"},{"type":"int","var":"$offset","beh":1,"desc":"Offset from beginning of the file.","def":0},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_unlink":{"desc":"Delete a name and possibly the file it refers to","long_desc":"eio_unlink() deletes a name from the file system.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_unlink() returns request resource on success or FALSE on error.","url":"function.eio-unlink","name":"eio_unlink","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"Path to file"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_utime":{"desc":"Change file last access and modification times.","long_desc":"","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_utime() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-utime","name":"eio_utime","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"Path to the file."},{"type":"float","var":"$atime","beh":1,"desc":"Access time"},{"type":"float","var":"$mtime","beh":1,"desc":"Modification time"},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"eio_write":{"desc":"Write to file","long_desc":"eio_write() writes up to length bytes from str at offset offset from the beginning of the file.","ver":"PECL eio >= 0.0.1dev","ret_desc":"eio_write() returns request resource on success or FALSE on error.","seealso":[],"url":"function.eio-write","name":"eio_write","params":[{"list":[{"type":"int","var":"$fd","beh":1,"desc":"The file descriptor, e.g. returned by eio_open()"},{"type":"string","var":"&$str","beh":1,"desc":"Source string"},{"type":"int","var":"$length","beh":1,"desc":"Maximum number of bytes to write.","def":0},{"type":"int","var":"$offset","beh":1,"desc":"Offset from the beginning of file.","def":0},{"type":"int","var":"$pri","beh":1,"desc":"The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If NULL passed, pri internally is set to EIO_PRI_DEFAULT.","def":"EIO_PRI_DEFAULT"},{"type":"callable","var":"$callback","beh":1,"desc":"callback function is called when the request is done. It should match the following prototype:","def":"NULL"},{"type":"mixed","var":"$data","beh":1,"desc":"Arbitrary variable passed to callback.","def":"NULL"}],"ret_type":"resource"}]},"empty":{"desc":"Determine whether a variable is empty","long_desc":"Determine whether a variable is considered to be empty.","ver":"PHP 4, PHP 5","ret_desc":"Returns FALSE if var has a non-empty and non-zero value.","seealso":[],"url":"function.empty","name":"empty","params":[{"list":[],"ret_type":"bool"}]},"enchant_broker_describe":{"desc":"Enumerates the Enchant providers","long_desc":"Enumerates the Enchant providers and tells you some rudimentary information about them. The same info is provided through phpinfo().","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.enchant-broker-describe","name":"enchant_broker_describe","params":[{"list":[],"ret_type":"array"}]},"enchant_broker_dict_exists":{"desc":"Whether a dictionary exists or not. Using non-empty tag","long_desc":"Tells if a dictionary exists or not, using a non-empty tags","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Returns TRUE when the tag exist or FALSE when not.","seealso":[],"url":"function.enchant-broker-dict-exists","name":"enchant_broker_dict_exists","params":[{"list":[{"type":"resource","var":"$broker","beh":0,"desc":"Broker resource"},{"type":"string","var":"$tag","beh":0,"desc":"non-empty tag in the LOCALE format, ex: us_US, ch_DE, etc."}],"ret_type":"bool"}]},"enchant_broker_free":{"desc":"Free the broker resource and its dictionnaries","long_desc":"Free a broker resource with all its dictionaries.","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.enchant-broker-free","name":"enchant_broker_free","params":[{"list":[],"ret_type":"bool"}]},"enchant_broker_free_dict":{"desc":"Free a dictionary resource","long_desc":"Free a dictionary resource.","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.enchant-broker-free-dict","name":"enchant_broker_free_dict","params":[{"list":[],"ret_type":"bool"}]},"enchant_broker_get_error":{"desc":"Returns the last error of the broker","long_desc":"Returns the last error which occurred in this broker.","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Return the msg string if an error was found or FALSE","url":"function.enchant-broker-get-error","name":"enchant_broker_get_error","params":[{"list":[],"ret_type":"string"}]},"enchant_broker_init":{"desc":"create a new broker object capable of requesting","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Returns a broker resource on success or FALSE.","seealso":[],"url":"function.enchant-broker-init","name":"enchant_broker_init","params":[{"list":[],"ret_type":"resource"}]},"enchant_broker_list_dicts":{"desc":"Returns a list of available dictionaries","long_desc":"Returns a list of available dictionaries with their details.","ver":"PHP 5 >= 5.3.0, PECL enchant >= 1.0.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.enchant-broker-list-dicts","name":"enchant_broker_list_dicts","params":[{"list":[],"ret_type":"mixed"}]},"enchant_broker_request_dict":{"desc":"create a new dictionary using a tag","long_desc":"create a new dictionary using tag, the non-empty language tag you wish to request a dictionary for (\"en_US\", \"de_DE\", ...)","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Returns a dictionary resource on success or FALSE on failure.","seealso":[],"url":"function.enchant-broker-request-dict","name":"enchant_broker_request_dict","params":[{"list":[{"type":"resource","var":"$broker","beh":0,"desc":"Broker resource"},{"type":"string","var":"$tag","beh":0,"desc":"A tag describing the locale, for example en_US, de_DE"}],"ret_type":"resource"}]},"enchant_broker_request_pwl_dict":{"desc":"creates a dictionary using a PWL file","long_desc":"Creates a dictionary using a PWL file. A PWL file is personal word file one word per line.","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Returns a dictionary resource on success or FALSE on failure.","seealso":[],"url":"function.enchant-broker-request-pwl-dict","name":"enchant_broker_request_pwl_dict","params":[{"list":[{"type":"resource","var":"$broker","beh":0,"desc":"Broker resource"},{"type":"string","var":"$filename","beh":0,"desc":"Path to the PWL file."}],"ret_type":"resource"}]},"enchant_broker_set_ordering":{"desc":"Declares a preference of dictionaries to use for the language","long_desc":"Declares a preference of dictionaries to use for the language described\/referred to by 'tag'. The ordering is a comma delimited list of provider names. As a special exception, the \"*\" tag can be used as a language tag to declare a default ordering for any language that does not explicitly declare an ordering.","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.enchant-broker-set-ordering","name":"enchant_broker_set_ordering","params":[{"list":[{"type":"resource","var":"$broker","beh":0,"desc":"Broker resource"},{"type":"string","var":"$tag","beh":0,"desc":"Language tag. The special \"*\" tag can be used as a language tag to declare a default ordering for any language that does not explicitly declare an ordering."},{"type":"string","var":"$ordering","beh":1,"desc":"Comma delimited list of provider names"}],"ret_type":"bool"}]},"enchant_dict_add_to_personal":{"desc":"add a word to personal word list","long_desc":"Add a word to personal word list of the given dictionary.","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.enchant-dict-add-to-personal","name":"enchant_dict_add_to_personal","params":[{"list":[{"type":"resource","var":"$dict","beh":0,"desc":"Dictionary resource"},{"type":"string","var":"$word","beh":0,"desc":"The word to add"}],"ret_type":"void"}]},"enchant_dict_add_to_session":{"desc":"add 'word' to this spell-checking session","long_desc":"Add a word to the given dictionary. It will be added only for the active spell-checking session.","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.enchant-dict-add-to-session","name":"enchant_dict_add_to_session","params":[{"list":[{"type":"resource","var":"$dict","beh":0,"desc":"Dictionary resource"},{"type":"string","var":"$word","beh":0,"desc":"The word to add"}],"ret_type":"void"}]},"enchant_dict_check":{"desc":"Check whether a word is correctly spelled or not","long_desc":"If the word is correctly spelled return TRUE, otherwise return FALSE","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Returns TRUE if the word is spelled correctly, FALSE if not.","url":"function.enchant-dict-check","name":"enchant_dict_check","params":[{"list":[{"type":"resource","var":"$dict","beh":0,"desc":"Dictionary resource"},{"type":"string","var":"$word","beh":0,"desc":"The word to check"}],"ret_type":"bool"}]},"enchant_dict_describe":{"desc":"Describes an individual dictionary","long_desc":"Returns the details of the dictionary.","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.enchant-dict-describe","name":"enchant_dict_describe","params":[{"list":[],"ret_type":"mixed"}]},"enchant_dict_get_error":{"desc":"Returns the last error of the current spelling-session","long_desc":"Returns the last error of the current spelling-session","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Returns the error message as string or FALSE if no error occurred.","url":"function.enchant-dict-get-error","name":"enchant_dict_get_error","params":[{"list":[],"ret_type":"string"}]},"enchant_dict_is_in_session":{"desc":"whether or not 'word' exists in this spelling-session","long_desc":"Tells whether or not a word already exists in the current session.","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Returns TRUE if the word exists or FALSE","seealso":[],"url":"function.enchant-dict-is-in-session","name":"enchant_dict_is_in_session","params":[{"list":[{"type":"resource","var":"$dict","beh":0,"desc":"Dictionary resource"},{"type":"string","var":"$word","beh":0,"desc":"The word to lookup"}],"ret_type":"bool"}]},"enchant_dict_quick_check":{"desc":"Check the word is correctly spelled and provide suggestions","long_desc":"If the word is correctly spelled return TRUE, otherwise return FALSE, if suggestions variable is provided, fill it with spelling alternatives.","ver":"PHP 5 >= 5.3.0, PECL enchant:0.2.0-1.0.1","ret_desc":"Returns TRUE if the word is correctly spelled or FALSE","seealso":[],"url":"function.enchant-dict-quick-check","name":"enchant_dict_quick_check","params":[{"list":[{"type":"resource","var":"$dict","beh":0,"desc":"Dictionary resource"},{"type":"string","var":"$word","beh":1,"desc":"The word to check"},{"type":"array","var":"&$suggestions","beh":1,"desc":"If the word is not correctly spelled, this variable will contain an array of suggestions."}],"ret_type":"bool"}]},"enchant_dict_store_replacement":{"desc":"Add a correction for a word","long_desc":"Add a correction for 'mis' using 'cor'. Notes that you replaced @mis with @cor, so it's possibly more likely that future occurrences of @mis will be replaced with @cor. So it might bump @cor up in the suggestion list.","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.enchant-dict-store-replacement","name":"enchant_dict_store_replacement","params":[{"list":[{"type":"resource","var":"$dict","beh":0,"desc":"Dictionary resource"},{"type":"string","var":"$mis","beh":0,"desc":"The work to fix"},{"type":"string","var":"$cor","beh":1,"desc":"The correct word"}],"ret_type":"void"}]},"enchant_dict_suggest":{"desc":"Will return a list of values if any of those pre-conditions are not met","long_desc":"","ver":"PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ","ret_desc":"Will returns an array of suggestions if the word is bad spelled.","seealso":[],"url":"function.enchant-dict-suggest","name":"enchant_dict_suggest","params":[{"list":[{"type":"resource","var":"$dict","beh":0,"desc":"Dictionary resource"},{"type":"string","var":"$word","beh":0,"desc":"Word to use for the suggestions."}],"ret_type":"array"}]},"end":{"desc":"Set the internal pointer of an array to its last element","long_desc":"end() advances array's internal pointer to the last element, and returns its value.","ver":"PHP 4, PHP 5","ret_desc":"Returns the value of the last element or FALSE for empty array.","seealso":[],"url":"function.end","name":"end","params":[{"list":[],"ret_type":"mixed"}]},"ereg":{"desc":"Regular expression match","long_desc":"Searches a string for matches to the regular expression given in pattern in a case-sensitive way.","ver":"PHP 4, PHP 5","ret_desc":"Returns the length of the matched string if a match for pattern was found in string, or FALSE if no matches were found or an error occurred.","seealso":[],"url":"function.ereg","name":"ereg","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"Case sensitive regular expression."},{"type":"string","var":"$string","beh":1,"desc":"The input string."},{"type":"array","var":"&$regs","beh":1,"desc":"If matches are found for parenthesized substrings of pattern and the function is called with the third argument regs, the matches will be stored in the elements of the array regs. $regs[1] will contain the substring which starts at the first left parenthesis; $regs[2] will contain the substring starting at the second, and so on. $regs[0] will contain a copy of the complete string matched."}],"ret_type":"int"}]},"ereg_replace":{"desc":"Replace regular expression","long_desc":"This function scans string for matches to pattern, then replaces the matched text with replacement.","ver":"PHP 4, PHP 5","ret_desc":"The modified string is returned. If no matches are found in string, then it will be returned unchanged.","seealso":[],"url":"function.ereg-replace","name":"ereg_replace","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"A POSIX extended regular expression."},{"type":"string","var":"$replacement","beh":0,"desc":"If pattern contains parenthesized substrings, replacement may contain substrings of the form \\\\digit, which will be replaced by the text matching the digit'th parenthesized substring; \\\\0 will produce the entire contents of string. Up to nine substrings may be used. Parentheses may be nested, in which case they are counted by the opening parenthesis."},{"type":"string","var":"$string","beh":1,"desc":"The input string."}],"ret_type":"string"}]},"eregi":{"desc":"Case insensitive regular expression match","long_desc":"This function is identical to ereg() except that it ignores case distinction when matching alphabetic characters.","ver":"PHP 4, PHP 5","ret_desc":"Returns the length of the matched string if a match for pattern was found in string, or FALSE if no matches were found or an error occurred.","seealso":[],"url":"function.eregi","name":"eregi","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"Case insensitive regular expression."},{"type":"string","var":"$string","beh":1,"desc":"The input string."},{"type":"array","var":"&$regs","beh":1,"desc":"If matches are found for parenthesized substrings of pattern and the function is called with the third argument regs, the matches will be stored in the elements of the array regs. $regs[1] will contain the substring which starts at the first left parenthesis; $regs[2] will contain the substring starting at the second, and so on. $regs[0] will contain a copy of the complete string matched."}],"ret_type":"int"}]},"eregi_replace":{"desc":"Replace regular expression case insensitive","long_desc":"This function is identical to ereg_replace() except that this ignores case distinction when matching alphabetic characters.","ver":"PHP 4, PHP 5","ret_desc":"The modified string is returned. If no matches are found in string, then it will be returned unchanged.","seealso":[],"url":"function.eregi-replace","name":"eregi_replace","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"A POSIX extended regular expression."},{"type":"string","var":"$replacement","beh":0,"desc":"If pattern contains parenthesized substrings, replacement may contain substrings of the form \\\\digit, which will be replaced by the text matching the digit'th parenthesized substring; \\\\0 will produce the entire contents of string. Up to nine substrings may be used. Parentheses may be nested, in which case they are counted by the opening parenthesis."},{"type":"string","var":"$string","beh":1,"desc":"The input string."}],"ret_type":"string"}]},"error_get_last":{"desc":"Get the last occurred error","long_desc":"Gets information about the last error that occurred.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns an associative array describing the last error with keys \"type\", \"message\", \"file\" and \"line\". If the error has been caused by a PHP internal function then the \"message\" begins with its name. Returns NULL if there hasn't been an error yet.","seealso":[],"url":"function.error-get-last","name":"error_get_last","params":[{"list":[],"ret_type":"array"}]},"error_log":{"desc":"Send an error message somewhere","long_desc":"Sends an error message to the web server's error log or to a file.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.error-log","name":"error_log","params":[{"list":[{"type":"string","var":"$message","beh":1,"desc":"The error message that should be logged."},{"type":"int","var":"$message_type","beh":1,"desc":"Says where the error should go. The possible message types are as follows:","def":0},{"type":"string","var":"$destination","beh":1,"desc":"The destination. Its meaning depends on the message_type parameter as described above."},{"type":"string","var":"$extra_headers","beh":1,"desc":"The extra headers. It's used when the message_type parameter is set to 1. This message type uses the same internal function as mail() does."}],"ret_type":"bool"}]},"error_reporting":{"desc":"Sets which PHP errors are reported","long_desc":"The error_reporting() function sets the error_reporting directive at runtime. PHP has many levels of errors, using this function sets that level for the duration (runtime) of your script. If the optional level is not set, error_reporting() will just return the current error reporting level.","ver":"PHP 4, PHP 5","ret_desc":"Returns the old error_reporting level or the current level if no level parameter is given.","seealso":[],"url":"function.error-reporting","name":"error_reporting","params":[{"list":[],"ret_type":"int"}]},"escapeshellarg":{"desc":"Escape a string to be used as a shell argument","long_desc":"escapeshellarg() adds single quotes around a string and quotes\/escapes any existing single quotes allowing you to pass a string directly to a shell function and having it be treated as a single safe argument. This function should be used to escape individual arguments to shell functions coming from user input. The shell functions include exec(), system() and the backtick operator.","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"The escaped string.","seealso":[],"url":"function.escapeshellarg","name":"escapeshellarg","params":[{"list":[],"ret_type":"string"}]},"escapeshellcmd":{"desc":"Escape shell metacharacters","long_desc":"escapeshellcmd() escapes any characters in a string that might be used to trick a shell command into executing arbitrary commands. This function should be used to make sure that any data coming from user input is escaped before this data is passed to the exec() or system() functions, or to the backtick operator. Following characters are preceded by a backslash: #&;`|*?~<>^()[]{}$\\, \\x0A and \\xFF. ' and \" are escaped only if they are not paired. In Windows, all these characters plus % are replaced by a space instead.","ver":"PHP 4, PHP 5","ret_desc":"The escaped string.","seealso":[],"url":"function.escapeshellcmd","name":"escapeshellcmd","params":[{"list":[],"ret_type":"string"}]},"eval":{"desc":"Evaluate a string as PHP code","long_desc":"Evaluates the given code as PHP.","ver":"PHP 4, PHP 5","ret_desc":"eval() returns NULL unless return is called in the evaluated code, in which case the value passed to return is returned. If there is a parse error in the evaluated code, eval() returns FALSE and execution of the following code continues normally. It is not possible to catch a parse error in eval() using set_error_handler().","seealso":[],"url":"function.eval","name":"eval","params":[{"list":[],"ret_type":"mixed"}]},"event_add":{"desc":"Add an event to the set of monitored events","long_desc":"event_add() schedules the execution of the event when the event specified in event_set() occurs or in at least the time specified by the timeout argument. If timeout was not specified, not timeout is set. The event must be already initalized by event_set() and event_base_set() functions. If the event already has a timeout set, it is replaced by the new one.","ver":"PECL libevent >= 0.0.1","ret_desc":"event_add() returns TRUE on success or FALSE on error.","url":"function.event-add","name":"event_add","params":[{"list":[{"type":"resource","var":"$event","beh":0,"desc":"Valid event resource."},{"type":"int","var":"$timeout","beh":0,"desc":"Optional timeout (in microseconds).","def":-1}],"ret_type":"bool"}]},"event_base_free":{"desc":"Destroy event base","long_desc":"Destroys the specified event_base and frees all the resources associated. Note that it's not possible to destroy an event base with events attached to it.","ver":"PECL libevent >= 0.0.1","url":"function.event-base-free","name":"event_base_free","params":[{"list":[],"ret_type":"void"}]},"event_base_loop":{"desc":"Handle events","long_desc":"Starts event loop for the specified event base.","ver":"PECL libevent >= 0.0.1","ret_desc":"event_base_loop() returns 0 on success, -1 on error and 1 if no events were registered.","url":"function.event-base-loop","name":"event_base_loop","params":[{"list":[{"type":"resource","var":"$event_base","beh":0,"desc":"Valid event base resource."},{"type":"int","var":"$flags","beh":0,"desc":"Optional parameter, which can take any combination of EVLOOP_ONCE and EVLOOP_NONBLOCK.","def":0}],"ret_type":"int"}]},"event_base_loopbreak":{"desc":"Abort event loop","long_desc":"Abort the active event loop immediately. The behaviour is similar to break statement.","ver":"PECL libevent >= 0.0.1","ret_desc":"event_base_loopbreak() returns TRUE on success or FALSE on error.","url":"function.event-base-loopbreak","name":"event_base_loopbreak","params":[{"list":[],"ret_type":"bool"}]},"event_base_loopexit":{"desc":"Exit loop after a time","long_desc":"The next event loop iteration after the given timer expires will complete normally, then exit without blocking for events again.","ver":"PECL libevent >= 0.0.1","ret_desc":"event_base_loopexit() returns TRUE on success or FALSE on error.","url":"function.event-base-loopexit","name":"event_base_loopexit","params":[{"list":[{"type":"resource","var":"$event_base","beh":0,"desc":"Valid event base resource."},{"type":"int","var":"$timeout","beh":0,"desc":"Optional timeout parameter (in microseconds).","def":-1}],"ret_type":"bool"}]},"event_base_new":{"desc":"Create and initialize new event base","long_desc":"Returns new event base, which can be used later in event_base_set(), event_base_loop() and other functions.","ver":"PECL libevent >= 0.0.1","ret_desc":"event_base_new() returns valid event base resource on success or FALSE on error.","url":"function.event-base-new","name":"event_base_new","params":[{"list":[],"ret_type":"resource"}]},"event_base_priority_init":{"desc":"Set the number of event priority levels","long_desc":"Sets the number of different event priority levels. By default all events are scheduled with the same priority (npriorities\/2). Using event_base_priority_init() you can change the number of event priority levels and then set a desired priority for each event.","ver":"PECL libevent >= 0.0.2","ret_desc":"event_base_priority_init() returns TRUE on success or FALSE on error.","url":"function.event-base-priority-init","name":"event_base_priority_init","params":[{"list":[{"type":"resource","var":"$event_base","beh":0,"desc":"Valid event base resource."},{"type":"int","var":"$npriorities","beh":0,"desc":"The number of event priority levels."}],"ret_type":"bool"}]},"event_base_set":{"desc":"Associate event base with an event","long_desc":"Associates the event_base with the event.","ver":"PECL libevent >= 0.0.1","ret_desc":"event_base_set() returns TRUE on success or FALSE on error.","url":"function.event-base-set","name":"event_base_set","params":[{"list":[{"type":"resource","var":"$event","beh":0,"desc":"Valid event resource."},{"type":"resource","var":"$event_base","beh":0,"desc":"Valid event base resource."}],"ret_type":"bool"}]},"event_buffer_base_set":{"desc":"Associate buffered event with an event base","long_desc":"Assign the specified bevent to the event_base.","ver":"PECL libevent >= 0.0.1","ret_desc":"event_buffer_base_set() returns TRUE on success or FALSE on error.","url":"function.event-buffer-base-set","name":"event_buffer_base_set","params":[{"list":[{"type":"resource","var":"$bevent","beh":0,"desc":"Valid buffered event resource."},{"type":"resource","var":"$event_base","beh":0,"desc":"Valid event base resource."}],"ret_type":"bool"}]},"event_buffer_disable":{"desc":"Disable a buffered event","long_desc":"Disables the specified buffered event.","ver":"PECL libevent >= 0.0.1","ret_desc":"event_buffer_disable() returns TRUE on success or FALSE on error.","url":"function.event-buffer-disable","name":"event_buffer_disable","params":[{"list":[{"type":"resource","var":"$bevent","beh":0,"desc":"Valid buffered event resource."},{"type":"int","var":"$events","beh":0,"desc":"Any combination of EV_READ and EV_WRITE."}],"ret_type":"bool"}]},"event_buffer_enable":{"desc":"Enable a buffered event","long_desc":"Enables the specified buffered event.","ver":"PECL libevent >= 0.0.1","ret_desc":"event_buffer_enable() returns TRUE on success or FALSE on error.","url":"function.event-buffer-enable","name":"event_buffer_enable","params":[{"list":[{"type":"resource","var":"$bevent","beh":0,"desc":"Valid buffered event resource."},{"type":"int","var":"$events","beh":0,"desc":"Any combination of EV_READ and EV_WRITE."}],"ret_type":"bool"}]},"event_buffer_fd_set":{"desc":"Change a buffered event file descriptor","long_desc":"Changes the file descriptor on which the buffered event operates.","ver":"PECL libevent >= 0.0.1","url":"function.event-buffer-fd-set","name":"event_buffer_fd_set","params":[{"list":[{"type":"resource","var":"$bevent","beh":0,"desc":"Valid buffered event resource."},{"type":"resource","var":"$fd","beh":0,"desc":"Valid PHP stream, must be castable to file descriptor."}],"ret_type":"void"}]},"event_buffer_free":{"desc":"Destroy buffered event","long_desc":"Destroys the specified buffered event and frees all the resources associated.","ver":"PECL libevent >= 0.0.1","url":"function.event-buffer-free","name":"event_buffer_free","params":[{"list":[],"ret_type":"void"}]},"event_buffer_new":{"desc":"Create new buffered event","long_desc":"Libevent provides an abstraction layer on top of the regular event API. Using buffered event you don't need to deal with the I\/O manually, instead it provides input and output buffers that get filled and drained automatically.","ver":"PECL libevent >= 0.0.1","ret_desc":"event_buffer_new() returns new buffered event resource on success or FALSE on error.","url":"function.event-buffer-new","name":"event_buffer_new","params":[{"list":[{"type":"resource","var":"$stream","beh":0,"desc":"Valid PHP stream resource. Must be castable to file descriptor."},{"type":"mixed","var":"$readcb","beh":1,"desc":"Callback to invoke where there is data to read, or NULL if no callback is desired."},{"type":"mixed","var":"$writecb","beh":1,"desc":"Callback to invoke where the descriptor is ready for writing, or NULL if no callback is desired."},{"type":"mixed","var":"$errorcb","beh":1,"desc":"Callback to invoke where there is an error on the descriptor, cannot be NULL."},{"type":"mixed","var":"$arg","beh":1,"desc":"An argument that will be passed to each of the callbacks (optional)."}],"ret_type":"resource"}]},"event_buffer_priority_set":{"desc":"Assign a priority to a buffered event","long_desc":"Assign a priority to the bevent.","ver":"PECL libevent >= 0.0.1","ret_desc":"event_buffer_priority_set() returns TRUE on success or FALSE on error.","url":"function.event-buffer-priority-set","name":"event_buffer_priority_set","params":[{"list":[{"type":"resource","var":"$bevent","beh":0,"desc":"Valid buffered event resource."},{"type":"int","var":"$priority","beh":0,"desc":"Priority level. Cannot be less than zero and cannot exceed maximum priority level of the event base (see event_base_priority_init())."}],"ret_type":"bool"}]},"event_buffer_read":{"desc":"Read data from a buffered event","long_desc":"Reads data from the input buffer of the buffered event.","ver":"PECL libevent >= 0.0.1","url":"function.event-buffer-read","name":"event_buffer_read","params":[{"list":[{"type":"resource","var":"$bevent","beh":0,"desc":"Valid buffered event resource."},{"type":"int","var":"$data_size","beh":0,"desc":"Data size in bytes."}],"ret_type":"string"}]},"event_buffer_set_callback":{"desc":"Set or reset callbacks for a buffered event","long_desc":"Sets or changes existing callbacks for the buffered event.","ver":"PECL libevent >= 0.0.4","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.event-buffer-set-callback","name":"event_buffer_set_callback","params":[{"list":[{"type":"resource","var":"$event","beh":0,"desc":"Valid buffered event resource."},{"type":"mixed","var":"$readcb","beh":1,"desc":"Callback to invoke where there is data to read, or NULL if no callback is desired."},{"type":"mixed","var":"$writecb","beh":1,"desc":"Callback to invoke where the descriptor is ready for writing, or NULL if no callback is desired."},{"type":"mixed","var":"$errorcb","beh":1,"desc":"Callback to invoke where there is an error on the descriptor, cannot be NULL."},{"type":"mixed","var":"$arg","beh":1,"desc":"An argument that will be passed to each of the callbacks (optional)."}],"ret_type":"bool"}]},"event_buffer_timeout_set":{"desc":"Set read and write timeouts for a buffered event","long_desc":"Sets the read and write timeouts for the specified buffered event.","ver":"PECL libevent >= 0.0.1","url":"function.event-buffer-timeout-set","name":"event_buffer_timeout_set","params":[{"list":[{"type":"resource","var":"$bevent","beh":0,"desc":"Valid buffered event resource."},{"type":"int","var":"$read_timeout","beh":0,"desc":"Read timeout (in seconds)."},{"type":"int","var":"$write_timeout","beh":1,"desc":"Write timeout (in seconds)."}],"ret_type":"void"}]},"event_buffer_watermark_set":{"desc":"Set the watermarks for read and write events","long_desc":"Sets the watermarks for read and write events. Libevent does not invoke read callback unless there is at least lowmark bytes in the input buffer; if the read buffer is beyond the highmark, reading is stopped. On output, the write callback is invoked whenever the buffered data falls below the lowmark.","ver":"PECL libevent >= 0.0.1","url":"function.event-buffer-watermark-set","name":"event_buffer_watermark_set","params":[{"list":[{"type":"resource","var":"$bevent","beh":0,"desc":"Valid buffered event resource."},{"type":"int","var":"$events","beh":0,"desc":"Any combination of EV_READ and EV_WRITE."},{"type":"int","var":"$lowmark","beh":1,"desc":"Low watermark."},{"type":"int","var":"$highmark","beh":1,"desc":"High watermark."}],"ret_type":"void"}]},"event_buffer_write":{"desc":"Write data to a buffered event","long_desc":"Writes data to the specified buffered event. The data is appended to the output buffer and written to the descriptor when it becomes available for writing.","ver":"PECL libevent >= 0.0.1","ret_desc":"event_buffer_write() returns TRUE on success or FALSE on error.","url":"function.event-buffer-write","name":"event_buffer_write","params":[{"list":[{"type":"resource","var":"$bevent","beh":0,"desc":"Valid buffered event resource."},{"type":"string","var":"$data","beh":1,"desc":"The data to be written."},{"type":"int","var":"$data_size","beh":1,"desc":"Optional size parameter. event_buffer_write() writes all the data by default.","def":-1}],"ret_type":"bool"}]},"event_del":{"desc":"Remove an event from the set of monitored events","long_desc":"Cancels the event.","ver":"PECL libevent >= 0.0.1","ret_desc":"event_del() returns TRUE on success or FALSE on error.","url":"function.event-del","name":"event_del","params":[{"list":[],"ret_type":"bool"}]},"event_free":{"desc":"Free event resource","long_desc":"Frees previously created event resource.","ver":"PECL libevent >= 0.0.1","url":"function.event-free","name":"event_free","params":[{"list":[],"ret_type":"void"}]},"event_new":{"desc":"Create new event","long_desc":"Creates and returns a new event resource.","ver":"PECL libevent >= 0.0.1","ret_desc":"event_new() returns a new event resource on success or FALSE on error.","url":"function.event-new","name":"event_new","params":[{"list":[],"ret_type":"resource"}]},"event_set":{"desc":"Prepare an event","long_desc":"Prepares the event to be used in event_add(). The event is prepared to call the function specified by the callback on the events specified in parameter events, which is a set of the following flags: EV_TIMEOUT, EV_SIGNAL, EV_READ, EV_WRITE and EV_PERSIST. If EV_SIGNAL bit is set in parameter events, the fd is interpreted as signal number. After initializing the event, use event_base_set() to associate the event with its event base. In case of matching event, these three arguments are passed to the callback function:","ver":"PECL libevent >= 0.0.1","ret_desc":"event_set() returns TRUE on success or FALSE on error.","url":"function.event-set","name":"event_set","params":[{"list":[{"type":"resource","var":"$event","beh":0,"desc":"Valid event resource."},{"type":"mixed","var":"$fd","beh":1,"desc":"Valid PHP stream resource. The stream must be castable to file descriptor, so you most likely won't be able to use any of filtered streams."},{"type":"int","var":"$events","beh":1,"desc":"A set of flags indicating the desired event, can be EV_READ and\/or EV_WRITE. The additional flag EV_PERSIST makes the event to persist until event_del() is called, otherwise the callback is invoked only once."},{"type":"mixed","var":"$callback","beh":1,"desc":"Callback function to be called when the matching event occurs."},{"type":"mixed","var":"$arg","beh":1,"desc":"Optional callback parameter."}],"ret_type":"bool"}]},"exception":{"name":"Exception","class":"Exception"},"exec":{"desc":"Execute an external program","long_desc":"exec() executes the given command.","ver":"PHP 4, PHP 5","ret_desc":"The last line from the result of the command. If you need to execute a command and have all the data from the command passed directly back without any interference, use the passthru() function.","seealso":[],"url":"function.exec","name":"exec","params":[{"list":[{"type":"string","var":"$command","beh":1,"desc":"The command that will be executed."},{"type":"array","var":"&$output","beh":1,"desc":"If the output argument is present, then the specified array will be filled with every line of output from the command. Trailing whitespace, such as \\n, is not included in this array. Note that if the array already contains some elements, exec() will append to the end of the array. If you do not want the function to append elements, call unset() on the array before passing it to exec()."},{"type":"int","var":"&$return_var","beh":1,"desc":"If the return_var argument is present along with the output argument, then the return status of the executed command will be written to this variable."}],"ret_type":"string"}]},"exif_imagetype":{"desc":"Determine the type of an image","long_desc":"exif_imagetype() reads the first bytes of an image and checks its signature. exif_imagetype() can be used to avoid calls to other exif functions with unsupported file types or in conjunction with $_SERVER['HTTP_ACCEPT'] to check whether or not the viewer is able to see a specific image in the browser.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"When a correct signature is found, the appropriate constant value will be returned otherwise the return value is FALSE. The return value is the same value that getimagesize() returns in index 2 but exif_imagetype() is much faster.","seealso":[],"url":"function.exif-imagetype","name":"exif_imagetype","params":[{"list":[],"ret_type":"int"}]},"exif_read_data":{"desc":"Reads the EXIF headers from JPEG or TIFF","long_desc":"exif_read_data() reads the EXIF headers from a JPEG or TIFF image file. This way you can read meta data generated by digital cameras. EXIF headers tend to be present in JPEG\/TIFF images generated by digital cameras, but unfortunately each digital camera maker has a different idea of how to actually tag their images, so you can't always rely on a specific Exif header being present. Height and Width are computed the same way getimagesize() does so their values must not be part of any header returned. Also, html is a height\/width text string to be used inside normal HTML. When an Exif header contains a Copyright note, this itself can contain two values. As the solution is inconsistent in the Exif 2.10 standard, the COMPUTED section will return both entries Copyright.Photographer and Copyright.Editor while the IFD0 sections contains the byte array with the NULL character that splits both entries. Or just the first entry if the datatype was wrong (normal behaviour of Exif). The COMPUTED will also contain the entry Copyright which is either the original copyright string, or a comma separated list of the photo and editor copyright. The tag UserComment has the same problem as the Copyright tag. It can store two values. First the encoding used, and second the value itself. If so the IFD section only contains the encoding or a byte array. The COMPUTED section will store both in the entries UserCommentEncoding and UserComment. The entry UserComment is available in both cases so it should be used in preference to the value in IFD0 section. exif_read_data() also validates EXIF data tags according to the EXIF specification (\u00bb\u00a0http:\/\/exif.org\/Exif2-2.PDF, page 20).","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"It returns an associative array where the array indexes are the header names and the array values are the values associated with those headers. If no data can be returned, exif_read_data() will return FALSE.","seealso":[],"url":"function.exif-read-data","name":"exif_read_data","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"The name of the image file being read. This cannot be an URL."},{"type":"string","var":"$sections","beh":1,"desc":"Is a comma separated list of sections that need to be present in file to produce a result array. If none of the requested sections could be found the return value is FALSE.","def":"NULL"},{"type":"bool","var":"$arrays","beh":1,"desc":"Specifies whether or not each section becomes an array. The sections COMPUTED, THUMBNAIL, and COMMENT always become arrays as they may contain values whose names conflict with other sections.","def":"false"},{"type":"bool","var":"$thumbnail","beh":1,"desc":"When set to TRUE the thumbnail itself is read. Otherwise, only the tagged data is read.","def":"false"}],"ret_type":"array"}]},"exif_tagname":{"desc":"Get the header name for an index","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns the header name, or FALSE if index is not a defined EXIF tag id.","seealso":[],"url":"function.exif-tagname","name":"exif_tagname","params":[{"list":[],"ret_type":"string"}]},"exif_thumbnail":{"desc":"Retrieve the embedded thumbnail of a TIFF or JPEG image","long_desc":"exif_thumbnail() reads the embedded thumbnail of a TIFF or JPEG image. If you want to deliver thumbnails through this function, you should send the mimetype information using the header() function. It is possible that exif_thumbnail() cannot create an image but can determine its size. In this case, the return value is FALSE but width and height are set.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns the embedded thumbnail, or FALSE if the image contains no thumbnail.","seealso":[],"url":"function.exif-thumbnail","name":"exif_thumbnail","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"The name of the image file being read. This image contains an embedded thumbnail."},{"type":"int","var":"&$width","beh":1,"desc":"The return width of the returned thumbnail."},{"type":"int","var":"&$height","beh":1,"desc":"The returned height of the returned thumbnail."},{"type":"int","var":"&$imagetype","beh":1,"desc":"The returned image type of the returned thumbnail. This is either TIFF or JPEG."}],"ret_type":"string"}]},"exit":{"desc":"Output a message and terminate the current script","long_desc":"Terminates execution of the script. Shutdown functions and object destructors will always be executed even if exit() is called.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.exit","name":"exit","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"exp":{"desc":"Calculates the exponent of e","long_desc":"Returns e raised to the power of arg.","ver":"PHP 4, PHP 5","ret_desc":"'e' raised to the power of arg","seealso":[],"url":"function.exp","name":"exp","params":[{"list":[],"ret_type":"float"}]},"expect_expectl":{"desc":"Waits until the output from a process matches one of the patterns, a specified time period has passed, or an EOF is seen","long_desc":"Waits until the output from a process matches one of the patterns, a specified time period has passed, or an EOF is seen. If match is provided, then it is filled with the result of search. The matched string can be found in match[0]. The match substrings (according to the parentheses) in the original pattern can be found in match[1], match[2], and so on, up to match[9] (the limitation of libexpect).","ver":"PECL expect >= 0.1.0","ret_desc":"Returns value associated with the pattern that was matched.","seealso":[],"url":"function.expect-expectl","name":"expect_expectl","params":[{"list":[{"type":"resource","var":"$expect","beh":0,"desc":"An Expect stream, previously opened with expect_popen()."},{"type":"array","var":"$cases","beh":1,"desc":"An array of expect cases. Each expect case is an indexed array, as described in the following table:"},{"type":"array","var":"&$match","beh":1,"desc":""}],"ret_type":"int"}]},"expect_popen":{"desc":"Execute command via Bourne shell, and open the PTY stream to the process","long_desc":"Execute command via Bourne shell, and open the PTY stream to the process.","ver":"PECL expect >= 0.1.0","ret_desc":"Returns an open PTY stream to the processes stdio, stdout, and stderr.","seealso":[],"url":"function.expect-popen","name":"expect_popen","params":[{"list":[],"ret_type":"resource"}]},"explode":{"desc":"Split a string by string","long_desc":"Returns an array of strings, each of which is a substring of string formed by splitting it on boundaries formed by the string delimiter.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of strings created by splitting the string parameter on boundaries formed by the delimiter.","seealso":[],"url":"function.explode","name":"explode","params":[{"list":[{"type":"string","var":"$delimiter","beh":0,"desc":"The boundary string."},{"type":"string","var":"$string","beh":1,"desc":"The input string."},{"type":"int","var":"$limit","beh":1,"desc":"If limit is set and positive, the returned array will contain a maximum of limit elements with the last element containing the rest of string. If the limit parameter is negative, all components except the last -limit are returned. If the limit parameter is zero, then this is treated as 1."}],"ret_type":"array"}]},"expm1":{"desc":"Returns exp(number) - 1, computed in a way that is accurate even when the value of number is close to zero","long_desc":"expm1() returns the equivalent to 'exp(arg) - 1' computed in a way that is accurate even if the value of arg is near zero, a case where 'exp (arg) - 1' would be inaccurate due to subtraction of two numbers that are nearly equal.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"'e' to the power of arg minus one","seealso":[],"url":"function.expm1","name":"expm1","params":[{"list":[],"ret_type":"float"}]},"extension_loaded":{"desc":"Find out whether an extension is loaded","long_desc":"Finds out whether the extension is loaded.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the extension identified by name is loaded, FALSE otherwise.","seealso":[],"url":"function.extension-loaded","name":"extension_loaded","params":[{"list":[],"ret_type":"bool"}]},"extract":{"desc":"Import variables into the current symbol table from an array","long_desc":"Import variables from an array into the current symbol table. Checks each key to see whether it has a valid variable name. It also checks for collisions with existing variables in the symbol table.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of variables successfully imported into the symbol table.","seealso":[],"url":"function.extract","name":"extract","params":[{"list":[{"type":"array","var":"&$var_array","beh":1,"desc":"An associative array. This function treats keys as variable names and values as variable values. For each key\/value pair it will create a variable in the current symbol table, subject to extract_type and prefix parameters. You must use an associative array; a numerically indexed array will not produce results unless you use EXTR_PREFIX_ALL or EXTR_PREFIX_INVALID."},{"type":"int","var":"$extract_type","beh":1,"desc":"The way invalid\/numeric keys and collisions are treated is determined by the extract_type. It can be one of the following values: If extract_type is not specified, it is assumed to be EXTR_OVERWRITE.","def":"EXTR_OVERWRITE"},{"type":"string","var":"$prefix","beh":1,"desc":"","def":"NULL"}],"ret_type":"int"}]},"ezmlm_hash":{"desc":"Calculate the hash value needed by EZMLM","long_desc":"ezmlm_hash() calculates the hash value needed when keeping EZMLM mailing lists in a MySQL database.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"The hash value of addr.","url":"function.ezmlm-hash","name":"ezmlm_hash","params":[{"list":[],"ret_type":"int"}]},"fam_cancel_monitor":{"desc":"Terminate monitoring","long_desc":"Terminates monitoring on a resource. In addition an FAMAcknowledge event occurs.","ver":"PHP 5 <= 5.0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fam-cancel-monitor","name":"fam_cancel_monitor","params":[{"list":[{"type":"resource","var":"$fam","beh":0,"desc":"A resource representing a connection to the FAM service returned by fam_open()"},{"type":"resource","var":"$fam_monitor","beh":0,"desc":"A resource returned by one of the fam_monitor_XXX functions"}],"ret_type":"bool"}]},"fam_close":{"desc":"Close FAM connection","long_desc":"Closes a connection to the FAM service.","ver":"PHP 5 <= 5.0.5","ret_desc":"No value is returned.","seealso":[],"url":"function.fam-close","name":"fam_close","params":[{"list":[],"ret_type":"void"}]},"fam_monitor_collection":{"desc":"Monitor a collection of files in a directory for changes","long_desc":"Requests monitoring for a collection of files within a directory. A FAM event will be generated whenever the status of the files change. The possible event codes are described in detail in the constants part of this section.","ver":"PHP 5 <= 5.0.5","ret_desc":"Returns a monitoring resource or FALSE on errors.","seealso":[],"url":"function.fam-monitor-collection","name":"fam_monitor_collection","params":[{"list":[{"type":"resource","var":"$fam","beh":0,"desc":"A resource representing a connection to the FAM service returned by fam_open()"},{"type":"string","var":"$dirname","beh":0,"desc":"Directory path to the monitored files"},{"type":"int","var":"$depth","beh":1,"desc":"The maximum search depth starting from this directory"},{"type":"string","var":"$mask","beh":1,"desc":"A shell pattern mask restricting the file names to look for"}],"ret_type":"resource"}]},"fam_monitor_directory":{"desc":"Monitor a directory for changes","long_desc":"Requests monitoring for a directory and all contained files. A FAM event will be generated whenever the status of the directory (i.e. the result of function stat() on that directory) or its content (i.e. the results of readdir()) changes. The possible event codes are described in detail in the constants part of this section.","ver":"PHP 5 <= 5.0.5","ret_desc":"Returns a monitoring resource or FALSE on errors.","seealso":[],"url":"function.fam-monitor-directory","name":"fam_monitor_directory","params":[{"list":[{"type":"resource","var":"$fam","beh":0,"desc":"A resource representing a connection to the FAM service returned by fam_open()"},{"type":"string","var":"$dirname","beh":0,"desc":"Path to the monitored directory"}],"ret_type":"resource"}]},"fam_monitor_file":{"desc":"Monitor a regular file for changes","long_desc":"Requests monitoring for a single file. A FAM event will be generated whenever the file status changes (i.e. the result of function stat() on that file). The possible event codes are described in detail in the constants part of this section.","ver":"PHP 5 <= 5.0.5","ret_desc":"Returns a monitoring resource or FALSE on errors.","seealso":[],"url":"function.fam-monitor-file","name":"fam_monitor_file","params":[{"list":[{"type":"resource","var":"$fam","beh":0,"desc":"A resource representing a connection to the FAM service returned by fam_open()"},{"type":"string","var":"$filename","beh":0,"desc":"Path to the monitored file"}],"ret_type":"resource"}]},"fam_next_event":{"desc":"Get next pending FAM event","long_desc":"Returns the next pending FAM event. The function will block until an event is available which can be checked for using fam_pending().","ver":"PHP 5 <= 5.0.5","ret_desc":"Returns an array that contains a FAM event code in the 'code' element, the path of the file this event applies to in the 'filename' element and optionally a hostname in the 'hostname' element.","seealso":[],"url":"function.fam-next-event","name":"fam_next_event","params":[{"list":[],"ret_type":"array"}]},"fam_open":{"desc":"Open connection to FAM daemon","long_desc":"Opens a connection to the FAM service daemon.","ver":"PHP 5 <= 5.0.5","ret_desc":"Returns a resource representing a connection to the FAM service on success or FALSE on errors.","seealso":[],"url":"function.fam-open","name":"fam_open","params":[{"list":[],"ret_type":"resource"}]},"fam_pending":{"desc":"Check for pending FAM events","long_desc":"Checks for pending FAM events.","ver":"PHP 5 <= 5.0.5","ret_desc":"Returns non-zero if events are available to be fetched using fam_next_event(), zero otherwise.","seealso":[],"url":"function.fam-pending","name":"fam_pending","params":[{"list":[],"ret_type":"int"}]},"fam_resume_monitor":{"desc":"Resume suspended monitoring","long_desc":"Resumes monitoring of a resource previously suspended using fam_suspend_monitor().","ver":"PHP 5 <= 5.0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fam-resume-monitor","name":"fam_resume_monitor","params":[{"list":[{"type":"resource","var":"$fam","beh":0,"desc":"A resource representing a connection to the FAM service returned by fam_open()"},{"type":"resource","var":"$fam_monitor","beh":0,"desc":"A resource returned by one of the fam_monitor_XXX functions"}],"ret_type":"bool"}]},"fam_suspend_monitor":{"desc":"Temporarily suspend monitoring","long_desc":"fam_suspend_monitor() temporarily suspend monitoring of a resource. Monitoring can later be continued using fam_resume_monitor() without the need of requesting a complete new monitor.","ver":"PHP 5 <= 5.0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fam-suspend-monitor","name":"fam_suspend_monitor","params":[{"list":[{"type":"resource","var":"$fam","beh":0,"desc":"A resource representing a connection to the FAM service returned by fam_open()"},{"type":"resource","var":"$fam_monitor","beh":0,"desc":"A resource returned by one of the fam_monitor_XXX functions"}],"ret_type":"bool"}]},"fbsql_affected_rows":{"desc":"Get number of affected rows in previous FrontBase operation","long_desc":"fbsql_affected_rows() returns the number of rows affected by the last INSERT, UPDATE or DELETE query associated with link_identifier. If the last query was a DELETE query with no WHERE clause, all of the records will have been deleted from the table but this function will return zero.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"If the last query failed, this function will return -1.","seealso":[],"url":"function.fbsql-affected-rows","name":"fbsql_affected_rows","params":[{"list":[],"ret_type":"int"}]},"fbsql_autocommit":{"desc":"Enable or disable autocommit","long_desc":"Returns the current autocommit status.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the current autocommit status, as a boolean.","seealso":[],"url":"function.fbsql-autocommit","name":"fbsql_autocommit","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."},{"type":"bool","var":"$OnOff","beh":1,"desc":"If this optional parameter is given the auto commit status will be changed. With OnOff set to TRUE each statement will be committed automatically, if no errors was found. With OnOff set to FALSE the user must commit or rollback the transaction using either fbsql_commit() or fbsql_rollback()."}],"ret_type":"bool"}]},"fbsql_blob_size":{"desc":"Get the size of a BLOB","long_desc":"Returns the size of the given BLOB.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns the BLOB size as an integer, or FALSE on error.","seealso":[],"url":"function.fbsql-blob-size","name":"fbsql_blob_size","params":[{"list":[{"type":"string","var":"$blob_handle","beh":0,"desc":"A BLOB handle, returned by fbsql_create_blob()."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."}],"ret_type":"int"}]},"fbsql_change_user":{"desc":"Change logged in user of the active connection","long_desc":"fbsql_change_user() changes the logged in user of the specified connection. If the new user and password authorization fails, the current connected user stays active.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.fbsql-change-user","name":"fbsql_change_user","params":[{"list":[{"type":"string","var":"$user","beh":1,"desc":"The new user name."},{"type":"string","var":"$password","beh":1,"desc":"The new user password."},{"type":"string","var":"$database","beh":1,"desc":"If specified, this will be the default or current database after the user has been changed."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."}],"ret_type":"bool"}]},"fbsql_clob_size":{"desc":"Get the size of a CLOB","long_desc":"Returns the size of the given CLOB.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns the CLOB size as an integer, or FALSE on error.","seealso":[],"url":"function.fbsql-clob-size","name":"fbsql_clob_size","params":[{"list":[{"type":"string","var":"$clob_handle","beh":0,"desc":"A CLOB handle, returned by fbsql_create_clob()."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."}],"ret_type":"int"}]},"fbsql_close":{"desc":"Close FrontBase connection","long_desc":"Closes the connection to the FrontBase server that's associated with the specified link identifier. Using fbsql_close() isn't usually necessary, as non-persistent open links are automatically closed at the end of the script's execution.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fbsql-close","name":"fbsql_close","params":[{"list":[],"ret_type":"bool"}]},"fbsql_commit":{"desc":"Commits a transaction to the database","long_desc":"Ends the current transaction by writing all inserts, updates and deletes to the disk and unlocking all row and table locks held by the transaction. This command is only needed if autocommit is set to false.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fbsql-commit","name":"fbsql_commit","params":[{"list":[],"ret_type":"bool"}]},"fbsql_connect":{"desc":"Open a connection to a FrontBase Server","long_desc":"fbsql_connect() establishes a connection to a FrontBase server. If a second call is made to fbsql_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned. The link to the server will be closed as soon as the execution of the script ends, unless it's closed earlier by explicitly calling fbsql_close().","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns a positive FrontBase link identifier on success, or FALSE on errors.","seealso":[],"url":"function.fbsql-connect","name":"fbsql_connect","params":[{"list":[{"type":"string","var":"$hostname","beh":1,"desc":"The server host name.","def":"ini_get(\"fbsql.default_host\")"},{"type":"string","var":"$username","beh":1,"desc":"The user name for the connection.","def":"ini_get(\"fbsql.default_user\")"},{"type":"string","var":"$password","beh":1,"desc":"The password for the connection.","def":"ini_get(\"fbsql.default_password\")"}],"ret_type":"resource"}]},"fbsql_create_blob":{"desc":"Create a BLOB","long_desc":"Creates a BLOB from the given data.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns a resource handle to the newly created BLOB, which can be used with insert and update commands to store the BLOB in the database.","seealso":[],"url":"function.fbsql-create-blob","name":"fbsql_create_blob","params":[{"list":[{"type":"string","var":"$blob_data","beh":0,"desc":"The BLOB data."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."}],"ret_type":"string"}]},"fbsql_create_clob":{"desc":"Create a CLOB","long_desc":"Creates a CLOB from the given data.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns a resource handle to the newly created CLOB, which can be used with insert and update commands to store the CLOB in the database.","seealso":[],"url":"function.fbsql-create-clob","name":"fbsql_create_clob","params":[{"list":[{"type":"string","var":"$clob_data","beh":0,"desc":"The CLOB data."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."}],"ret_type":"string"}]},"fbsql_create_db":{"desc":"Create a FrontBase database","long_desc":"Attempts to create a new database on the specified server.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fbsql-create-db","name":"fbsql_create_db","params":[{"list":[{"type":"string","var":"$database_name","beh":1,"desc":"The database name, as a string."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."},{"type":"string","var":"$database_options","beh":1,"desc":""}],"ret_type":"bool"}]},"fbsql_data_seek":{"desc":"Move internal result pointer","long_desc":"Moves the internal row pointer of the FrontBase result associated with the specified result identifier to point to the specified row number. The next call to fbsql_fetch_row() would return that row.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.fbsql-data-seek","name":"fbsql_data_seek","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"A result identifier returned by fbsql_query() or fbsql_db_query()."},{"type":"int","var":"$row_number","beh":0,"desc":"The row number. Starts at 0."}],"ret_type":"bool"}]},"fbsql_database":{"desc":"Get or set the database name used with a connection","long_desc":"Get or set the database name used with the connection.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the name of the database used with this connection.","url":"function.fbsql-database","name":"fbsql_database","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."},{"type":"string","var":"$database","beh":1,"desc":"The database name. If given, the default database of the connexion will be changed to database."}],"ret_type":"string"}]},"fbsql_database_password":{"desc":"Sets or retrieves the password for a FrontBase database","long_desc":"Sets and retrieves the database password used by the connection. If a database is protected by a database password, the user must call this function before calling fbsql_select_db(). If no link is open, the function will try to establish a link as if fbsql_connect() was called, and use it. This function does not change the database password in the database nor can it be used to retrieve the database password for a database.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the database password associated with the link identifier.","seealso":[],"url":"function.fbsql-database-password","name":"fbsql_database_password","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."},{"type":"string","var":"$database_password","beh":1,"desc":"The database password, as a string. If given, the function sets the database password for the specified link identifier."}],"ret_type":"string"}]},"fbsql_db_query":{"desc":"Send a FrontBase query","long_desc":"Selects a database and executes a query on it.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns a positive FrontBase result identifier to the query result, or FALSE on error.","seealso":[],"url":"function.fbsql-db-query","name":"fbsql_db_query","params":[{"list":[{"type":"string","var":"$database","beh":0,"desc":"The database to be selected."},{"type":"string","var":"$query","beh":1,"desc":"The SQL query to be executed."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."}],"ret_type":"resource"}]},"fbsql_db_status":{"desc":"Get the status for a given database","long_desc":"Gets the current status of the specified database.","ver":"PHP 4 >= 4.0.7, PHP 5","ret_desc":"Returns an integer value with the current status. This can be one of the following constants:","seealso":[],"url":"function.fbsql-db-status","name":"fbsql_db_status","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":"The database name."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."}],"ret_type":"int"}]},"fbsql_drop_db":{"desc":"Drop (delete) a FrontBase database","long_desc":"fbsql_drop_db() attempts to drop (remove) an entire database from the server associated with the specified link identifier.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fbsql-drop-db","name":"fbsql_drop_db","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":"The database name, as a string."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."}],"ret_type":"bool"}]},"fbsql_errno":{"desc":"Returns the error number from previous operation","long_desc":"Returns the numerical value of the error message from previous FrontBase operation. Errors coming back from the fbsql database backend don't issue warnings. Instead, use fbsql_errno() to retrieve the error code. Note that this function only returns the error code from the most recently executed fbsql function (not including fbsql_error() and fbsql_errno()), so if you want to use it, make sure you check the value before calling another fbsql function.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the error number from the last fbsql function, or 0 (zero) if no error occurred.","seealso":[],"url":"function.fbsql-errno","name":"fbsql_errno","params":[{"list":[],"ret_type":"int"}]},"fbsql_error":{"desc":"Returns the error message from previous operation","long_desc":"Returns the error message from previous FrontBase operation. Errors coming back from the fbsql database backend don't issue warnings. Instead, use fbsql_error() to retrieve the error text. Note that this function only returns the error code from the most recently executed fbsql function (not including fbsql_error() and fbsql_errno()), so if you want to use it, make sure you check the value before calling another fbsql function.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the error text from the last fbsql function, or '' (the empty string) if no error occurred.","seealso":[],"url":"function.fbsql-error","name":"fbsql_error","params":[{"list":[],"ret_type":"string"}]},"fbsql_fetch_array":{"desc":"Fetch a result row as an associative array, a numeric array, or both","long_desc":"fbsql_fetch_array() is a combination of fbsql_fetch_row() and fbsql_fetch_assoc(). An important thing to note is that using fbsql_fetch_array() is NOT significantly slower than using fbsql_fetch_row(), while it provides a significant added value.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns an array that corresponds to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.fbsql-fetch-array","name":"fbsql_fetch_array","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"A result identifier returned by fbsql_query() or fbsql_db_query()."},{"type":"int","var":"$result_type","beh":1,"desc":"A constant and can take the following values: FBSQL_ASSOC, FBSQL_NUM, or FBSQL_BOTH. When using FBSQL_BOTH, in addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys."}],"ret_type":"array"}]},"fbsql_fetch_assoc":{"desc":"Fetch a result row as an associative array","long_desc":"Calling fbsql_fetch_assoc() is equivalent to calling fbsql_fetch_array() with FBSQL_ASSOC as second parameter. It only returns an associative array. This is the way fbsql_fetch_array() originally worked. If you need the numeric indices as well as the associative, use fbsql_fetch_array(). An important thing to note is that using fbsql_fetch_assoc() is NOT significantly slower than using fbsql_fetch_row(), while it provides a significant added value.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns an associative array that corresponds to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.fbsql-fetch-assoc","name":"fbsql_fetch_assoc","params":[{"list":[],"ret_type":"array"}]},"fbsql_fetch_field":{"desc":"Get column information from a result and return as an object","long_desc":"Used in order to obtain information about fields in a certain query result.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns an object containing field information, or FALSE on errors.","seealso":[],"url":"function.fbsql-fetch-field","name":"fbsql_fetch_field","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"A result identifier returned by fbsql_query() or fbsql_db_query()."},{"type":"int","var":"$field_offset","beh":1,"desc":"The numerical offset of the field. The field index starts at 0. If not specified, the next field that wasn't yet retrieved by fbsql_fetch_field() is retrieved."}],"ret_type":"object"}]},"fbsql_fetch_lengths":{"desc":"Get the length of each output in a result","long_desc":"Stores the lengths of each result column in the last row returned by fbsql_fetch_row(), fbsql_fetch_array() and fbsql_fetch_object() in an array.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns an array, starting at offset 0, that corresponds to the lengths of each field in the last row fetched by fbsql_fetch_row(), or FALSE on error.","seealso":[],"url":"function.fbsql-fetch-lengths","name":"fbsql_fetch_lengths","params":[{"list":[],"ret_type":"array"}]},"fbsql_fetch_object":{"desc":"Fetch a result row as an object","long_desc":"fbsql_fetch_object() is similar to fbsql_fetch_array(), with one difference - an object is returned, instead of an array. Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names). Speed-wise, the function is identical to fbsql_fetch_array(), and almost as quick as fbsql_fetch_row() (the difference is insignificant).","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns an object with properties that correspond to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.fbsql-fetch-object","name":"fbsql_fetch_object","params":[{"list":[],"ret_type":"object"}]},"fbsql_fetch_row":{"desc":"Get a result row as an enumerated array","long_desc":"fbsql_fetch_row() fetches one row of data from the result associated with the specified result identifier. Subsequent call to fbsql_fetch_row() would return the next row in the result set, or FALSE if there are no more rows.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns an array that corresponds to the fetched row where each result column is stored in an offset, starting at offset 0, or FALSE if there are no more rows.","seealso":[],"url":"function.fbsql-fetch-row","name":"fbsql_fetch_row","params":[{"list":[],"ret_type":"array"}]},"fbsql_field_flags":{"desc":"Get the flags associated with the specified field in a result","long_desc":"Gets the flags associated with the specified field in a result.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the field flags of the specified field as a single word per flag separated by a single space, so that you can split the returned value using explode().","url":"function.fbsql-field-flags","name":"fbsql_field_flags","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"A result pointer returned by fbsql_list_fields()."},{"type":"int","var":"$field_offset","beh":1,"desc":"The numerical offset of the field. The field index starts at 0."}],"ret_type":"string"}]},"fbsql_field_len":{"desc":"Returns the length of the specified field","long_desc":"Returns the length of the specified field.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the length of the specified field.","url":"function.fbsql-field-len","name":"fbsql_field_len","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"A result pointer returned by fbsql_list_fields()."},{"type":"int","var":"$field_offset","beh":1,"desc":"The numerical offset of the field. The field index starts at 0."}],"ret_type":"int"}]},"fbsql_field_name":{"desc":"Get the name of the specified field in a result","long_desc":"Returns the name of the specified field index.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the name as a string, or FALSE if the field doesn't exist.","seealso":[],"url":"function.fbsql-field-name","name":"fbsql_field_name","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"A result pointer returned by fbsql_list_fields()."},{"type":"int","var":"$field_index","beh":1,"desc":"The numerical offset of the field. The field index starts at 0."}],"ret_type":"string"}]},"fbsql_field_seek":{"desc":"Set result pointer to a specified field offset","long_desc":"Seeks to the specified field offset. If the next call to fbsql_fetch_field() doesn't include a field offset, the field offset specified in fbsql_field_seek() will be returned.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fbsql-field-seek","name":"fbsql_field_seek","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"A result identifier returned by fbsql_query() or fbsql_db_query()."},{"type":"int","var":"$field_offset","beh":1,"desc":"The numerical offset of the field. The field index starts at 0."}],"ret_type":"bool"}]},"fbsql_field_table":{"desc":"Get name of the table the specified field is in","long_desc":"Returns the name of the table that the specified field is in.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the name of the table, as a string.","url":"function.fbsql-field-table","name":"fbsql_field_table","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"A result identifier returned by fbsql_query() or fbsql_db_query()."},{"type":"int","var":"$field_offset","beh":1,"desc":"The numerical offset of the field. The field index starts at 0."}],"ret_type":"string"}]},"fbsql_field_type":{"desc":"Get the type of the specified field in a result","long_desc":"fbsql_field_type() is similar to the fbsql_field_name() function, but the field type is returned instead.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the field type, as a string.","seealso":[],"url":"function.fbsql-field-type","name":"fbsql_field_type","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"A result identifier returned by fbsql_query() or fbsql_db_query()."},{"type":"int","var":"$field_offset","beh":1,"desc":"The numerical offset of the field. The field index starts at 0."}],"ret_type":"string"}]},"fbsql_free_result":{"desc":"Free result memory","long_desc":"Frees all memory associated with the given result identifier. fbsql_free_result() only needs to be called if you are concerned about how much memory is being used for queries that return large result sets. All associated result memory is automatically freed at the end of the script's execution.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.fbsql-free-result","name":"fbsql_free_result","params":[{"list":[],"ret_type":"bool"}]},"fbsql_get_autostart_info":{"desc":"","ver":"PHP 4 >= 4.0.7, PHP 5","url":"function.fbsql-get-autostart-info","name":"fbsql_get_autostart_info","params":[{"list":[],"ret_type":"array"}]},"fbsql_hostname":{"desc":"Get or set the host name used with a connection","long_desc":"Gets or sets the host name used with a connection.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the current host name used for the connection.","seealso":[],"url":"function.fbsql-hostname","name":"fbsql_hostname","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."},{"type":"string","var":"$host_name","beh":1,"desc":"If provided, this will be the new connection host name."}],"ret_type":"string"}]},"fbsql_insert_id":{"desc":"Get the id generated from the previous INSERT operation","long_desc":"Gets the id generated from the previous INSERT operation which created a DEFAULT UNIQUE value.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the ID generated from the previous INSERT query, or 0 if the previous query does not generate an DEFAULT UNIQUE value.","seealso":[],"url":"function.fbsql-insert-id","name":"fbsql_insert_id","params":[{"list":[],"ret_type":"int"}]},"fbsql_list_dbs":{"desc":"List databases available on a FrontBase server","long_desc":"Return a result pointer containing the databases available from the current fbsql daemon. Use the fbsql_tablename() to traverse this result pointer.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns a result pointer or FALSE on error.","seealso":[],"url":"function.fbsql-list-dbs","name":"fbsql_list_dbs","params":[{"list":[],"ret_type":"resource"}]},"fbsql_list_fields":{"desc":"List FrontBase result fields","long_desc":"Retrieves information about the given table.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns a result pointer which can be used with the fbsql_field_xxx functions, or FALSE on error.","seealso":[],"url":"function.fbsql-list-fields","name":"fbsql_list_fields","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":"The database name."},{"type":"string","var":"$table_name","beh":1,"desc":"The table name."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."}],"ret_type":"resource"}]},"fbsql_list_tables":{"desc":"List tables in a FrontBase database","long_desc":"Returns a result pointer describing the database.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns a result pointer which can be used with the fbsql_tablename() function to read the actual table names, or FALSE on error.","seealso":[],"url":"function.fbsql-list-tables","name":"fbsql_list_tables","params":[{"list":[{"type":"string","var":"$database","beh":0,"desc":"The database name."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."}],"ret_type":"resource"}]},"fbsql_next_result":{"desc":"Move the internal result pointer to the next result","long_desc":"When sending more than one SQL statement to the server or executing a stored procedure with multiple results will cause the server to return multiple result sets. This function will test for additional results available form the server. If an additional result set exists it will free the existing result set and prepare to fetch the words from the new result set.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE if an additional result set was available or FALSE otherwise.","url":"function.fbsql-next-result","name":"fbsql_next_result","params":[{"list":[],"ret_type":"bool"}]},"fbsql_num_fields":{"desc":"Get number of fields in result","long_desc":"Returns the number of fields in the given result set.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the number of fields, as an integer.","seealso":[],"url":"function.fbsql-num-fields","name":"fbsql_num_fields","params":[{"list":[],"ret_type":"int"}]},"fbsql_num_rows":{"desc":"Get number of rows in result","long_desc":"Gets the number of rows in the given result set. This function is only valid for SELECT statements. To retrieve the number of rows returned from a INSERT, UPDATE or DELETE query, use fbsql_affected_rows().","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the number of rows returned by the last SELECT statement.","seealso":[],"url":"function.fbsql-num-rows","name":"fbsql_num_rows","params":[{"list":[],"ret_type":"int"}]},"fbsql_password":{"desc":"Get or set the user password used with a connection","long_desc":"Get or set the user password used with a connection.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the current password used for the connection.","seealso":[],"url":"function.fbsql-password","name":"fbsql_password","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."},{"type":"string","var":"$password","beh":1,"desc":"If provided, this will be the new connection password."}],"ret_type":"string"}]},"fbsql_pconnect":{"desc":"Open a persistent connection to a FrontBase Server","long_desc":"Establishes a persistent connection to a FrontBase server. To set the server port number, use fbsql_select_db(). fbsql_pconnect() acts very much like fbsql_connect() with two major differences: First, when connecting, the function would first try to find a (persistent) link that's already open with the same host, username and password. If one is found, an identifier for it will be returned instead of opening a new connection. Second, the connection to the SQL server will not be closed when the execution of the script ends. Instead, the link will remain open for future use. This type of links is therefore called 'persistent'.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns a positive FrontBase persistent link identifier on success, or FALSE on error.","seealso":[],"url":"function.fbsql-pconnect","name":"fbsql_pconnect","params":[{"list":[{"type":"string","var":"$hostname","beh":1,"desc":"The server host name.","def":"ini_get(\"fbsql.default_host\")"},{"type":"string","var":"$username","beh":1,"desc":"The user name for the connection.","def":"ini_get(\"fbsql.default_user\")"},{"type":"string","var":"$password","beh":1,"desc":"The password for the connection.","def":"ini_get(\"fbsql.default_password\")"}],"ret_type":"resource"}]},"fbsql_query":{"desc":"Send a FrontBase query","long_desc":"Sends a query to the currently active database on the server. If the query succeeds, you can call fbsql_num_rows() to find out how many rows were returned for a SELECT statement or fbsql_affected_rows() to find out how many rows were affected by a DELETE, INSERT, REPLACE, or UPDATE statement.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"fbsql_query() returns TRUE (non-zero) or FALSE to indicate whether or not the query succeeded. A return value of TRUE means that the query was legal and could be executed by the server. It does not indicate anything about the number of rows affected or returned. It is perfectly possible for a query to succeed but affect no rows or return no rows.","seealso":[],"url":"function.fbsql-query","name":"fbsql_query","params":[{"list":[{"type":"string","var":"$query","beh":1,"desc":"The SQL query to be executed."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."},{"type":"int","var":"$batch_size","beh":1,"desc":""}],"ret_type":"resource"}]},"fbsql_read_blob":{"desc":"Read a BLOB from the database","long_desc":"Reads BLOB data from the database. If a select statement contains BLOB and\/or CLOB columns FrontBase will return the data directly when data is fetched. This default behavior can be changed with fbsql_set_lob_mode() so the fetch functions will return handles to BLOB and CLOB data. If a handle is fetched a user must call fbsql_read_blob() to get the actual BLOB data from the database.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns a string containing the specified BLOB data.","seealso":[],"url":"function.fbsql-read-blob","name":"fbsql_read_blob","params":[{"list":[{"type":"string","var":"$blob_handle","beh":0,"desc":"A BLOB handle, returned by fbsql_create_blob()."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."}],"ret_type":"string"}]},"fbsql_read_clob":{"desc":"Read a CLOB from the database","long_desc":"Reads CLOB data from the database. If a select statement contains BLOB and\/or CLOB columns FrontBase will return the data directly when data is fetched. This default behavior can be changed with fbsql_set_lob_mode() so the fetch functions will return handles to BLOB and CLOB data. If a handle is fetched a user must call fbsql_read_clob() to get the actual CLOB data from the database.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns a string containing the specified CLOB data.","seealso":[],"url":"function.fbsql-read-clob","name":"fbsql_read_clob","params":[{"list":[{"type":"string","var":"$clob_handle","beh":0,"desc":"A CLOB handle, returned by fbsql_create_clob()."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."}],"ret_type":"string"}]},"fbsql_result":{"desc":"Get result data","long_desc":"Returns the contents of one cell from a FrontBase result set. When working on large result sets, you should consider using one of the functions that fetch an entire row (specified below). As these functions return the contents of multiple cells in one function call, they're MUCH quicker than fbsql_result(). Calls to fbsql_result() should not be mixed with calls to other functions that deal with the result set.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"","seealso":[],"url":"function.fbsql-result","name":"fbsql_result","params":[{"list":[{"type":"resource","var":"$result","beh":1,"desc":"A result identifier returned by fbsql_query() or fbsql_db_query()."},{"type":"int","var":"$row","beh":1,"desc":""},{"type":"mixed","var":"$field","beh":1,"desc":"Can be the field's offset, or the field's name, or the field's table dot field's name (tablename.fieldname). If the column name has been aliased ('select foo as bar from...'), use the alias instead of the column name."}],"ret_type":"mixed"}]},"fbsql_rollback":{"desc":"Rollback a transaction to the database","long_desc":"Ends the current transaction by rolling back all statements issued since last commit. This command is only needed if autocommit is set to false.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fbsql-rollback","name":"fbsql_rollback","params":[{"list":[],"ret_type":"bool"}]},"fbsql_rows_fetched":{"desc":"Get the number of rows affected by the last statement","long_desc":"Gets the number of rows affected by the last statement.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the number of rows, as an integer.","url":"function.fbsql-rows-fetched","name":"fbsql_rows_fetched","params":[{"list":[],"ret_type":"int"}]},"fbsql_select_db":{"desc":"Select a FrontBase database","long_desc":"Sets the current active database on the given link identifier. The client contacts FBExec to obtain the port number to use for the connection to the database. If the database name is a number the system will use that as a port number and it will not ask FBExec for the port number. The FrontBase server can be stared as FRontBase -FBExec=No -port=<port number> <database name>. Every subsequent call to fbsql_query() will be made on the active database.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fbsql-select-db","name":"fbsql_select_db","params":[{"list":[{"type":"string","var":"$database_name","beh":1,"desc":"The name of the database to be selected. If the database is protected with a database password, the you must call fbsql_database_password() before selecting the database."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."}],"ret_type":"bool"}]},"fbsql_set_characterset":{"desc":"Change input\/output character set","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","url":"function.fbsql-set-characterset","name":"fbsql_set_characterset","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":""},{"type":"int","var":"$characterset","beh":1,"desc":""},{"type":"int","var":"$in_out_both","beh":1,"desc":""}],"ret_type":"void"}]},"fbsql_set_lob_mode":{"desc":"Set the LOB retrieve mode for a FrontBase result set","long_desc":"Sets the mode for retrieving LOB data from the database. When BLOB and CLOB data is retrieved in FrontBase it can be retrieved direct or indirect. Direct retrieved LOB data will always be fetched no matter the setting of the lob mode. If the LOB data is less than 512 bytes it will always be retrieved directly.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fbsql-set-lob-mode","name":"fbsql_set_lob_mode","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"A result identifier returned by fbsql_query() or fbsql_db_query()."},{"type":"int","var":"$lob_mode","beh":0,"desc":"Can be one of:"}],"ret_type":"bool"}]},"fbsql_set_password":{"desc":"Change the password for a given user","long_desc":"Changes the password for the given user.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.fbsql-set-password","name":"fbsql_set_password","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."},{"type":"string","var":"$user","beh":0,"desc":"The user name."},{"type":"string","var":"$password","beh":1,"desc":"The new password to be set."},{"type":"string","var":"$old_password","beh":1,"desc":"The old password to be replaced."}],"ret_type":"bool"}]},"fbsql_set_transaction":{"desc":"Set the transaction locking and isolation","long_desc":"Sets the transaction locking and isolation.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"No value is returned.","url":"function.fbsql-set-transaction","name":"fbsql_set_transaction","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."},{"type":"int","var":"$locking","beh":0,"desc":"The type of locking to be set. It can be one of the following constants: FBSQL_LOCK_DEFERRED, FBSQL_LOCK_OPTIMISTIC, or FBSQL_LOCK_PESSIMISTIC."},{"type":"int","var":"$isolation","beh":1,"desc":"The type of isolation to be set. It can be one of the following constants: FBSQL_ISO_READ_UNCOMMITTED, FBSQL_ISO_READ_COMMITTED, FBSQL_ISO_REPEATABLE_READ, FBSQL_ISO_SERIALIZABLE, or FBSQL_ISO_VERSIONED."}],"ret_type":"void"}]},"fbsql_start_db":{"desc":"Start a database on local or remote server","long_desc":"Start a database on local or remote server.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fbsql-start-db","name":"fbsql_start_db","params":[{"list":[{"type":"string","var":"$database_name","beh":1,"desc":"The database name."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."},{"type":"string","var":"$database_options","beh":1,"desc":""}],"ret_type":"bool"}]},"fbsql_stop_db":{"desc":"Stop a database on local or remote server","long_desc":"Stops a database on local or remote server.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fbsql-stop-db","name":"fbsql_stop_db","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":"The database name."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."}],"ret_type":"bool"}]},"fbsql_table_name":{"desc":"Get table name of field","long_desc":"fbsql_table_name() gets the name of the current table in the given result set. The fbsql_num_rows() function may be used to determine the number of tables in the result pointer.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns the name of the table, as a string.","url":"function.fbsql-table-name","name":"fbsql_table_name","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"A result pointer returned by fbsql_list_tables()."},{"type":"int","var":"$index","beh":0,"desc":"Integer index for the current table."}],"ret_type":"string"}]},"fbsql_tablename":{"desc":"Alias of fbsql_table_name()","long_desc":"This function is an alias of: fbsql_table_name().","ver":"PHP 4 >= 4.2.0, PHP 5","url":"function.fbsql-tablename","name":"fbsql_tablename","params":[]},"fbsql_username":{"desc":"Get or set the username for the connection","long_desc":"Get or set the username used for the connection.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the current username used with the connection, as a string.","seealso":[],"url":"function.fbsql-username","name":"fbsql_username","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"A FrontBase link identifier returned by fbsql_connect() or fbsql_pconnect(). If optional and not specified, the function will try to find an open link to the FrontBase server and if no such link is found it will try to create one as if fbsql_connect() was called with no arguments."},{"type":"string","var":"$username","beh":1,"desc":"If provided, this is the new username to set."}],"ret_type":"string"}]},"fbsql_warnings":{"desc":"Enable or disable FrontBase warnings","long_desc":"Enables or disables FrontBase warnings.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE if warnings is turned on, FALSE otherwise.","seealso":[],"url":"function.fbsql-warnings","name":"fbsql_warnings","params":[{"list":[],"ret_type":"bool"}]},"fclose":{"desc":"Closes an open file pointer","long_desc":"The file pointed to by handle is closed.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fclose","name":"fclose","params":[{"list":[],"ret_type":"bool"}]},"fdf_add_doc_javascript":{"desc":"Adds javascript code to the FDF document","long_desc":"Adds a script to the FDF, which Acrobat then adds to the doc-level scripts of a document, once the FDF is imported into it.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.fdf-add-doc-javascript","name":"fdf_add_doc_javascript","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$script_name","beh":0,"desc":"The script name."},{"type":"string","var":"$script_code","beh":1,"desc":"The script code. It is strongly suggested to use \\r for linebreaks within the script code."}],"ret_type":"bool"}]},"fdf_add_template":{"desc":"Adds a template into the FDF document","ver":"PHP 4, PHP 5","url":"function.fdf-add-template","name":"fdf_add_template","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":""},{"type":"int","var":"$newpage","beh":0,"desc":""},{"type":"string","var":"$filename","beh":1,"desc":""},{"type":"string","var":"$template","beh":1,"desc":""},{"type":"int","var":"$rename","beh":1,"desc":""}],"ret_type":"bool"}]},"fdf_close":{"desc":"Close an FDF document","long_desc":"Closes the FDF document.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.fdf-close","name":"fdf_close","params":[{"list":[],"ret_type":"void"}]},"fdf_create":{"desc":"Create a new FDF document","long_desc":"Creates a new FDF document. This function is needed if one would like to populate input fields in a PDF document with data.","ver":"PHP 4, PHP 5","ret_desc":"Returns a FDF document handle, or FALSE on error.","seealso":[],"url":"function.fdf-create","name":"fdf_create","params":[{"list":[],"ret_type":"resource"}]},"fdf_enum_values":{"desc":"Call a user defined function for each document value","ver":"PHP 4 >= 4.3.0, PHP 5","url":"function.fdf-enum-values","name":"fdf_enum_values","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":""},{"type":"callable","var":"$function","beh":1,"desc":""},{"type":"mixed","var":"$userdata","beh":1,"desc":""}],"ret_type":"bool"}]},"fdf_errno":{"desc":"Return error code for last fdf operation","long_desc":"Gets the error code set by the last FDF function call. A textual description of the error may be obtained using with fdf_error().","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the error code as an integer, or zero if there was no errors.","seealso":[],"url":"function.fdf-errno","name":"fdf_errno","params":[{"list":[],"ret_type":"int"}]},"fdf_error":{"desc":"Return error description for FDF error code","long_desc":"Gets a textual description for the FDF error code given in error_code.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the error message as a string, or the string no error if nothing went wrong.","seealso":[],"url":"function.fdf-error","name":"fdf_error","params":[{"list":[],"ret_type":"string"}]},"fdf_get_ap":{"desc":"Get the appearance of a field","long_desc":"Gets the appearance of a field (i.e. the value of the \/AP key) and stores it in a file.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.fdf-get-ap","name":"fdf_get_ap","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$field","beh":0,"desc":""},{"type":"int","var":"$face","beh":1,"desc":"The possible values are FDFNormalAP, FDFRolloverAP and FDFDownAP."},{"type":"string","var":"$filename","beh":1,"desc":"The appearance will be stored in this parameter."}],"ret_type":"bool"}]},"fdf_get_attachment":{"desc":"Extracts uploaded file embedded in the FDF","long_desc":"Extracts a file uploaded by means of the \"file selection\" field fieldname and stores it under savepath.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"The returned array contains the following fields:","url":"function.fdf-get-attachment","name":"fdf_get_attachment","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$fieldname","beh":0,"desc":""},{"type":"string","var":"$savepath","beh":1,"desc":"May be the name of a plain file or an existing directory in which the file is to be created under its original name. Any existing file under the same name will be overwritten."}],"ret_type":"array"}]},"fdf_get_encoding":{"desc":"Get the value of the \/Encoding key","long_desc":"Gets the value of the \/Encoding key.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the encoding as a string. An empty string is returned if the default PDFDocEncoding\/Unicode scheme is used.","seealso":[],"url":"function.fdf-get-encoding","name":"fdf_get_encoding","params":[{"list":[],"ret_type":"string"}]},"fdf_get_file":{"desc":"Get the value of the \/F key","long_desc":"Gets the value of the \/F key.","ver":"PHP 4, PHP 5","ret_desc":"Returns the key value, as a string.","seealso":[],"url":"function.fdf-get-file","name":"fdf_get_file","params":[{"list":[],"ret_type":"string"}]},"fdf_get_flags":{"desc":"Gets the flags of a field","ver":"PHP 4 >= 4.3.0, PHP 5","url":"function.fdf-get-flags","name":"fdf_get_flags","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":""},{"type":"string","var":"$fieldname","beh":0,"desc":""},{"type":"int","var":"$whichflags","beh":1,"desc":""}],"ret_type":"int"}]},"fdf_get_opt":{"desc":"Gets a value from the opt array of a field","ver":"PHP 4 >= 4.3.0, PHP 5","url":"function.fdf-get-opt","name":"fdf_get_opt","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":""},{"type":"string","var":"$fieldname","beh":1,"desc":""},{"type":"int","var":"$element","beh":1,"desc":"","def":-1}],"ret_type":"mixed"}]},"fdf_get_status":{"desc":"Get the value of the \/STATUS key","long_desc":"Gets the value of the \/STATUS key.","ver":"PHP 4, PHP 5","ret_desc":"Returns the key value, as a string.","seealso":[],"url":"function.fdf-get-status","name":"fdf_get_status","params":[{"list":[],"ret_type":"string"}]},"fdf_get_value":{"desc":"Get the value of a field","long_desc":"Gets the value for the requested field.","ver":"PHP 4, PHP 5","ret_desc":"Returns the field value.","seealso":[],"url":"function.fdf-get-value","name":"fdf_get_value","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$fieldname","beh":1,"desc":"Name of the FDF field, as a string."},{"type":"int","var":"$which","beh":1,"desc":"Elements of an array field can be retrieved by passing this optional parameter, starting at zero. For non-array fields, this parameter will be ignored.","def":-1}],"ret_type":"mixed"}]},"fdf_get_version":{"desc":"Gets version number for FDF API or file","long_desc":"Return the FDF version for the given document, or the toolkit API version number if no parameter is given.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the version as a string. For the current FDF toolkit 5.0 the API version number is 5.0 and the document version number is either 1.2, 1.3 or 1.4.","seealso":[],"url":"function.fdf-get-version","name":"fdf_get_version","params":[{"list":[],"ret_type":"string"}]},"fdf_header":{"desc":"Sets FDF-specific output headers","long_desc":"This is a convenience function to set appropriate HTTP headers for FDF output. It sets the Content-type: to application\/vnd.fdf.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"No value is returned.","url":"function.fdf-header","name":"fdf_header","params":[{"list":[],"ret_type":"void"}]},"fdf_next_field_name":{"desc":"Get the next field name","long_desc":"Gets the name of the field after the given field. This name can be used with several functions.","ver":"PHP 4, PHP 5","ret_desc":"Returns the field name as a string.","seealso":[],"url":"function.fdf-next-field-name","name":"fdf_next_field_name","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$fieldname","beh":1,"desc":"Name of the FDF field, as a string. If not given, the first field will be assumed."}],"ret_type":"string"}]},"fdf_open":{"desc":"Open a FDF document","long_desc":"Opens a file with form data. You can also use fdf_open_string() to process the results of a PDF form POST request.","ver":"PHP 4, PHP 5","ret_desc":"Returns a FDF document handle, or FALSE on error.","seealso":[],"url":"function.fdf-open","name":"fdf_open","params":[{"list":[],"ret_type":"resource"}]},"fdf_open_string":{"desc":"Read a FDF document from a string","long_desc":"Reads form data from a string. You can use fdf_open_string() together with $HTTP_FDF_DATA to process FDF form input from a remote client.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns a FDF document handle, or FALSE on error.","seealso":[],"url":"function.fdf-open-string","name":"fdf_open_string","params":[{"list":[],"ret_type":"resource"}]},"fdf_remove_item":{"desc":"Sets target frame for form","ver":"PHP 4 >= 4.3.0, PHP 5","url":"function.fdf-remove-item","name":"fdf_remove_item","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":""},{"type":"string","var":"$fieldname","beh":0,"desc":""},{"type":"int","var":"$item","beh":1,"desc":""}],"ret_type":"bool"}]},"fdf_save":{"desc":"Save a FDF document","long_desc":"Saves a FDF document.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fdf-save","name":"fdf_save","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$filename","beh":1,"desc":"If provided, the resulting FDF will be written in this parameter. Otherwise, this function will write the FDF to the default PHP output stream."}],"ret_type":"bool"}]},"fdf_save_string":{"desc":"Returns the FDF document as a string","long_desc":"Returns the FDF document as a string.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the document as a string, or FALSE on error.","seealso":[],"url":"function.fdf-save-string","name":"fdf_save_string","params":[{"list":[],"ret_type":"string"}]},"fdf_set_ap":{"desc":"Set the appearance of a field","long_desc":"Sets the appearance of a field (i.e. the value of the \/AP key).","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.fdf-set-ap","name":"fdf_set_ap","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$field_name","beh":0,"desc":""},{"type":"int","var":"$face","beh":1,"desc":"The possible values FDFNormalAP, FDFRolloverAP and FDFDownAP."},{"type":"string","var":"$filename","beh":1,"desc":""},{"type":"int","var":"$page_number","beh":1,"desc":""}],"ret_type":"bool"}]},"fdf_set_encoding":{"desc":"Sets FDF character encoding","long_desc":"Sets the character encoding for the FDF document.","ver":"PHP 4 >= 4.0.7, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.fdf-set-encoding","name":"fdf_set_encoding","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$encoding","beh":0,"desc":"The encoding name. The following values are supported: \"Shift-JIS\", \"UHC\", \"GBK\" and \"BigFive\". An empty string resets the encoding to the default PDFDocEncoding\/Unicode scheme."}],"ret_type":"bool"}]},"fdf_set_file":{"desc":"Set PDF document to display FDF data in","long_desc":"Selects a different PDF document to display the form results in then the form it originated from.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fdf-set-file","name":"fdf_set_file","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$url","beh":1,"desc":"Should be given as an absolute URL."},{"type":"string","var":"$target_frame","beh":1,"desc":"Use this parameter to specify the frame in which the document will be displayed. You can also set the default value for this parameter using fdf_set_target_frame()."}],"ret_type":"bool"}]},"fdf_set_flags":{"desc":"Sets a flag of a field","long_desc":"Sets certain flags of the given field.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fdf-set-flags","name":"fdf_set_flags","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$fieldname","beh":0,"desc":"Name of the FDF field, as a string."},{"type":"int","var":"$whichFlags","beh":1,"desc":""},{"type":"int","var":"$newFlags","beh":1,"desc":""}],"ret_type":"bool"}]},"fdf_set_javascript_action":{"desc":"Sets an javascript action of a field","long_desc":"Sets a javascript action for the given field.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fdf-set-javascript-action","name":"fdf_set_javascript_action","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$fieldname","beh":0,"desc":"Name of the FDF field, as a string."},{"type":"int","var":"$trigger","beh":1,"desc":""},{"type":"string","var":"$script","beh":1,"desc":""}],"ret_type":"bool"}]},"fdf_set_on_import_javascript":{"desc":"Adds javascript code to be executed when Acrobat opens the FDF","ver":"PHP 4 >= 4.3.0, PHP 5","seealso":[],"url":"function.fdf-set-on-import-javascript","name":"fdf_set_on_import_javascript","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":""},{"type":"string","var":"$script","beh":0,"desc":""},{"type":"bool","var":"$before_data_import","beh":1,"desc":""}],"ret_type":"bool"}]},"fdf_set_opt":{"desc":"Sets an option of a field","long_desc":"Sets options of the given field.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fdf-set-opt","name":"fdf_set_opt","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$fieldname","beh":0,"desc":"Name of the FDF field, as a string."},{"type":"int","var":"$element","beh":1,"desc":""},{"type":"string","var":"$str1","beh":1,"desc":""},{"type":"string","var":"$str2","beh":1,"desc":""}],"ret_type":"bool"}]},"fdf_set_status":{"desc":"Set the value of the \/STATUS key","long_desc":"Sets the value of the \/STATUS key. When a client receives a FDF with a status set it will present the value in an alert box.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fdf-set-status","name":"fdf_set_status","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$status","beh":0,"desc":""}],"ret_type":"bool"}]},"fdf_set_submit_form_action":{"desc":"Sets a submit form action of a field","long_desc":"Sets a submit form action for the given field.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fdf-set-submit-form-action","name":"fdf_set_submit_form_action","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$fieldname","beh":0,"desc":"Name of the FDF field, as a string."},{"type":"int","var":"$trigger","beh":1,"desc":""},{"type":"string","var":"$script","beh":1,"desc":""},{"type":"int","var":"$flags","beh":1,"desc":""}],"ret_type":"bool"}]},"fdf_set_target_frame":{"desc":"Set target frame for form display","long_desc":"Sets the target frame to display a result PDF defined with fdf_save_file() in.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fdf-set-target-frame","name":"fdf_set_target_frame","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$frame_name","beh":0,"desc":"The frame name, as a string."}],"ret_type":"bool"}]},"fdf_set_value":{"desc":"Set the value of a field","long_desc":"Sets the value for the given field.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fdf-set-value","name":"fdf_set_value","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$fieldname","beh":1,"desc":"Name of the FDF field, as a string."},{"type":"mixed","var":"$value","beh":1,"desc":"This parameter will be stored as a string unless it is an array. In this case all array elements will be stored as a value array."},{"type":"int","var":"$isName","beh":1,"desc":""}],"ret_type":"bool"}]},"fdf_set_version":{"desc":"Sets version number for a FDF file","long_desc":"Sets the FDF version for the given document. Some features supported by this extension are only available in newer FDF versions.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fdf-set-version","name":"fdf_set_version","params":[{"list":[{"type":"resource","var":"$fdf_document","beh":0,"desc":"The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string()."},{"type":"string","var":"$version","beh":0,"desc":"The version number. For the current FDF toolkit 5.0, this may be either 1.2, 1.3 or 1.4."}],"ret_type":"bool"}]},"feof":{"desc":"Tests for end-of-file on a file pointer","long_desc":"Tests for end-of-file on a file pointer.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the file pointer is at EOF or an error occurs (including socket timeout); otherwise returns FALSE.","url":"function.feof","name":"feof","params":[{"list":[],"ret_type":"bool"}]},"fflush":{"desc":"Flushes the output to a file","long_desc":"This function forces a write of all buffered output to the resource pointed to by the file handle.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.fflush","name":"fflush","params":[{"list":[],"ret_type":"bool"}]},"fgetc":{"desc":"Gets character from file pointer","long_desc":"Gets a character from the given file pointer.","ver":"PHP 4, PHP 5","ret_desc":"Returns a string containing a single character read from the file pointed to by handle. Returns FALSE on EOF.","seealso":[],"url":"function.fgetc","name":"fgetc","params":[{"list":[],"ret_type":"string"}]},"fgetcsv":{"desc":"Gets line from file pointer and parse for CSV fields","long_desc":"Similar to fgets() except that fgetcsv() parses the line it reads for fields in CSV format and returns an array containing the fields read.","ver":"PHP 4, PHP 5","ret_desc":"Returns an indexed array containing the fields read.","seealso":[],"url":"function.fgetcsv","name":"fgetcsv","params":[{"list":[{"type":"resource","var":"$handle","beh":1,"desc":"A valid file pointer to a file successfully opened by fopen(), popen(), or fsockopen()."},{"type":"int","var":"$length","beh":1,"desc":"Must be greater than the longest line (in characters) to be found in the CSV file (allowing for trailing line-end characters). It became optional in PHP 5. Omitting this parameter (or setting it to 0 in PHP 5.0.4 and later) the maximum line length is not limited, which is slightly slower.","def":0},{"type":"string","var":"$delimiter","beh":1,"desc":"Set the field delimiter (one character only).","def":"','"},{"type":"string","var":"$enclosure","beh":1,"desc":"Set the field enclosure character (one character only).","def":"'\"'"},{"type":"string","var":"$escape","beh":1,"desc":"Set the escape character (one character only). Defaults as a backslash.","def":"'\\\\'"}],"ret_type":"array"}]},"fgets":{"desc":"Gets line from file pointer","long_desc":"Gets a line from file pointer.","ver":"PHP 4, PHP 5","ret_desc":"Returns a string of up to length - 1 bytes read from the file pointed to by handle. If there is no more data to read in the file pointer, then FALSE is returned.","seealso":[],"url":"function.fgets","name":"fgets","params":[{"list":[{"type":"resource","var":"$handle","beh":0,"desc":"The file pointer must be valid, and must point to a file successfully opened by fopen() or fsockopen() (and not yet closed by fclose())."},{"type":"int","var":"$length","beh":1,"desc":"Reading ends when length - 1 bytes have been read, on a newline (which is included in the return value), or on EOF (whichever comes first). If no length is specified, it will keep reading from the stream until it reaches the end of the line."}],"ret_type":"string"}]},"fgetss":{"desc":"Gets line from file pointer and strip HTML tags","long_desc":"Identical to fgets(), except that fgetss() attempts to strip any NUL bytes, HTML and PHP tags from the text it reads.","ver":"PHP 4, PHP 5","ret_desc":"Returns a string of up to length - 1 bytes read from the file pointed to by handle, with all HTML and PHP code stripped.","seealso":[],"url":"function.fgetss","name":"fgetss","params":[{"list":[{"type":"resource","var":"$handle","beh":1,"desc":"The file pointer must be valid, and must point to a file successfully opened by fopen() or fsockopen() (and not yet closed by fclose())."},{"type":"int","var":"$length","beh":1,"desc":"Length of the data to be retrieved."},{"type":"string","var":"$allowable_tags","beh":1,"desc":"You can use the optional third parameter to specify tags which should not be stripped."}],"ret_type":"string"}]},"file":{"desc":"Reads entire file into an array","long_desc":"Reads an entire file into an array.","ver":"PHP 4, PHP 5","ret_desc":"Returns the file in an array. Each element of the array corresponds to a line in the file, with the newline still attached. Upon failure, file() returns FALSE.","seealso":[],"url":"function.file","name":"file","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"Path to the file."},{"type":"int","var":"$flags","beh":1,"desc":"The optional parameter flags can be one, or more, of the following constants:","def":0},{"type":"resource","var":"$context","beh":1,"desc":""}],"ret_type":"array"}]},"file_exists":{"desc":"Checks whether a file or directory exists","long_desc":"Checks whether a file or directory exists.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the file or directory specified by filename exists; FALSE otherwise.","seealso":[],"url":"function.file-exists","name":"file_exists","params":[{"list":[],"ret_type":"bool"}]},"file_get_contents":{"desc":"Reads entire file into a string","long_desc":"This function is similar to file(), except that file_get_contents() returns the file in a string, starting at the specified offset up to maxlen bytes. On failure, file_get_contents() will return FALSE. file_get_contents() is the preferred way to read the contents of a file into a string. It will use memory mapping techniques if supported by your OS to enhance performance.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"The function returns the read data or FALSE on failure.","seealso":[],"url":"function.file-get-contents","name":"file_get_contents","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"Name of the file to read."},{"type":"bool","var":"$use_include_path","beh":1,"desc":"","def":"false"},{"type":"resource","var":"$context","beh":1,"desc":"A valid context resource created with stream_context_create(). If you don't need to use a custom context, you can skip this parameter by NULL."},{"type":"int","var":"$offset","beh":1,"desc":"The offset where the reading starts on the original stream. Seeking (offset) is not supported with remote files. Attempting to seek on non-local files may work with small offsets, but this is unpredictable because it works on the buffered stream.","def":-1},{"type":"int","var":"$maxlen","beh":1,"desc":"Maximum length of data read. The default is to read until end of file is reached. Note that this parameter is applied to the stream processed by the filters."}],"ret_type":"string"}]},"file_put_contents":{"desc":"Write a string to a file","long_desc":"This function is identical to calling fopen(), fwrite() and fclose() successively to write data to a file. If filename does not exist, the file is created. Otherwise, the existing file is overwritten, unless the FILE_APPEND flag is set.","ver":"PHP 5","ret_desc":"The function returns the number of bytes that were written to the file, or FALSE on failure.","seealso":[],"url":"function.file-put-contents","name":"file_put_contents","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"Path to the file where to write the data."},{"type":"mixed","var":"$data","beh":1,"desc":"The data to write. Can be either a string, an array or a stream resource. If data is a stream resource, the remaining buffer of that stream will be copied to the specified file. This is similar with using stream_copy_to_stream(). You can also specify the data parameter as a single dimension array. This is equivalent to file_put_contents($filename, implode('', $array))."},{"type":"int","var":"$flags","beh":1,"desc":"The value of flags can be any combination of the following flags, joined with the binary OR (|) operator.","def":0},{"type":"resource","var":"$context","beh":1,"desc":"A valid context resource created with stream_context_create()."}],"ret_type":"int"}]},"fileatime":{"desc":"Gets last access time of file","long_desc":"Gets the last access time of the given file.","ver":"PHP 4, PHP 5","ret_desc":"Returns the time the file was last accessed, or FALSE on failure. The time is returned as a Unix timestamp.","seealso":[],"url":"function.fileatime","name":"fileatime","params":[{"list":[],"ret_type":"int"}]},"filectime":{"desc":"Gets inode change time of file","long_desc":"Gets the inode change time of a file.","ver":"PHP 4, PHP 5","ret_desc":"Returns the time the file was last changed, or FALSE on failure. The time is returned as a Unix timestamp.","seealso":[],"url":"function.filectime","name":"filectime","params":[{"list":[],"ret_type":"int"}]},"filegroup":{"desc":"Gets file group","long_desc":"Gets the file group. The group ID is returned in numerical format, use posix_getgrgid() to resolve it to a group name.","ver":"PHP 4, PHP 5","ret_desc":"Returns the group ID of the file, or FALSE if an error occurs. The group ID is returned in numerical format, use posix_getgrgid() to resolve it to a group name. Upon failure, FALSE is returned.","seealso":[],"url":"function.filegroup","name":"filegroup","params":[{"list":[],"ret_type":"int"}]},"fileinode":{"desc":"Gets file inode","long_desc":"Gets the file inode.","ver":"PHP 4, PHP 5","ret_desc":"Returns the inode number of the file, or FALSE on failure.","seealso":[],"url":"function.fileinode","name":"fileinode","params":[{"list":[],"ret_type":"int"}]},"filemtime":{"desc":"Gets file modification time","long_desc":"This function returns the time when the data blocks of a file were being written to, that is, the time when the content of the file was changed.","ver":"PHP 4, PHP 5","ret_desc":"Returns the time the file was last modified, or FALSE on failure. The time is returned as a Unix timestamp, which is suitable for the date() function.","seealso":[],"url":"function.filemtime","name":"filemtime","params":[{"list":[],"ret_type":"int"}]},"fileowner":{"desc":"Gets file owner","long_desc":"Gets the file owner.","ver":"PHP 4, PHP 5","ret_desc":"Returns the user ID of the owner of the file, or FALSE on failure. The user ID is returned in numerical format, use posix_getpwuid() to resolve it to a username.","seealso":[],"url":"function.fileowner","name":"fileowner","params":[{"list":[],"ret_type":"int"}]},"fileperms":{"desc":"Gets file permissions","long_desc":"Gets permissions for the given file.","ver":"PHP 4, PHP 5","ret_desc":"Returns the file's permissions as a numeric mode. Lower bits of this mode are the same as the permissions expected by chmod(), however on most platforms the return value will also include information on the type of file given as filename. The examples below demonstrate how to test the return value for specific permissions and file types on POSIX systems, including Linux and Mac OS X.","seealso":[],"url":"function.fileperms","name":"fileperms","params":[{"list":[],"ret_type":"int"}]},"filepro":{"desc":"Read and verify the map file","long_desc":"This reads and verifies the map file, storing the field count and info. No locking is done, so you should avoid modifying your filePro database while it may be opened in PHP.","ver":"PHP 4, PHP 5 <= 5.1.6","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.filepro","name":"filepro","params":[{"list":[],"ret_type":"bool"}]},"filepro_fieldcount":{"desc":"Find out how many fields are in a filePro database","long_desc":"Returns the number of fields (columns) in the opened filePro database.","ver":"PHP 4, PHP 5 <= 5.1.6","ret_desc":"Returns the number of fields in the opened filePro database, or FALSE on errors.","seealso":[],"url":"function.filepro-fieldcount","name":"filepro_fieldcount","params":[{"list":[],"ret_type":"int"}]},"filepro_fieldname":{"desc":"Gets the name of a field","long_desc":"Returns the name of the field corresponding to field_number.","ver":"PHP 4, PHP 5 <= 5.1.6","ret_desc":"Returns the name of the field as a string, or FALSE on errors.","url":"function.filepro-fieldname","name":"filepro_fieldname","params":[{"list":[],"ret_type":"string"}]},"filepro_fieldtype":{"desc":"Gets the type of a field","long_desc":"Returns the edit type of the field corresponding to field_number.","ver":"PHP 4, PHP 5 <= 5.1.6","ret_desc":"Returns the edit type of the field as a string, or FALSE on errors.","url":"function.filepro-fieldtype","name":"filepro_fieldtype","params":[{"list":[],"ret_type":"string"}]},"filepro_fieldwidth":{"desc":"Gets the width of a field","long_desc":"Returns the width of the field corresponding to field_number.","ver":"PHP 4, PHP 5 <= 5.1.6","ret_desc":"Returns the width of the field as a integer, or FALSE on errors.","url":"function.filepro-fieldwidth","name":"filepro_fieldwidth","params":[{"list":[],"ret_type":"int"}]},"filepro_retrieve":{"desc":"Retrieves data from a filePro database","long_desc":"Returns the data from the specified location in the database.","ver":"PHP 4, PHP 5 <= 5.1.6","ret_desc":"Returns the specified data, or FALSE on errors.","url":"function.filepro-retrieve","name":"filepro_retrieve","params":[{"list":[{"type":"int","var":"$row_number","beh":0,"desc":"The row number. Must be between zero and the total number of rows minus one (0..filepro_rowcount() - 1)"},{"type":"int","var":"$field_number","beh":0,"desc":"The field number. Accepts values between zero and the total number of fields minus one (0..filepro_fieldcount() - 1)"}],"ret_type":"string"}]},"filepro_rowcount":{"desc":"Find out how many rows are in a filePro database","long_desc":"Returns the number of rows in the opened filePro database.","ver":"PHP 4, PHP 5 <= 5.1.6","ret_desc":"Returns the number of rows in the opened filePro database, or FALSE on errors.","seealso":[],"url":"function.filepro-rowcount","name":"filepro_rowcount","params":[{"list":[],"ret_type":"int"}]},"filesize":{"desc":"Gets file size","long_desc":"Gets the size for the given file.","ver":"PHP 4, PHP 5","ret_desc":"Returns the size of the file in bytes, or FALSE (and generates an error of level E_WARNING) in case of an error.","seealso":[],"url":"function.filesize","name":"filesize","params":[{"list":[],"ret_type":"int"}]},"filetype":{"desc":"Gets file type","long_desc":"Returns the type of the given file.","ver":"PHP 4, PHP 5","ret_desc":"Returns the type of the file. Possible values are fifo, char, dir, block, link, file, socket and unknown.","seealso":[],"url":"function.filetype","name":"filetype","params":[{"list":[],"ret_type":"string"}]},"filter_has_var":{"desc":"Checks if variable of specified type exists","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.filter-has-var","name":"filter_has_var","params":[{"list":[{"type":"int","var":"$type","beh":0,"desc":"One of INPUT_GET, INPUT_POST, INPUT_COOKIE, INPUT_SERVER, or INPUT_ENV."},{"type":"string","var":"$variable_name","beh":0,"desc":"Name of a variable to check."}],"ret_type":"bool"}]},"filter_id":{"desc":"Returns the filter ID belonging to a named filter","ver":"PHP 5 >= 5.2.0","ret_desc":"ID of a filter on success or FALSE if filter doesn't exist.","seealso":[],"url":"function.filter-id","name":"filter_id","params":[{"list":[],"ret_type":"int"}]},"filter_input":{"desc":"Gets a specific external variable by name and optionally filters it","ver":"PHP 5 >= 5.2.0","ret_desc":"Value of the requested variable on success, FALSE if the filter fails, or NULL if the variable_name variable is not set. If the flag FILTER_NULL_ON_FAILURE is used, it returns FALSE if the variable is not set and NULL if the filter fails.","seealso":[],"url":"function.filter-input","name":"filter_input","params":[{"list":[{"type":"int","var":"$type","beh":1,"desc":"One of INPUT_GET, INPUT_POST, INPUT_COOKIE, INPUT_SERVER, or INPUT_ENV."},{"type":"string","var":"$variable_name","beh":1,"desc":"Name of a variable to get."},{"type":"int","var":"$filter","beh":1,"desc":"The ID of the filter to apply. The Types of filters manual page lists the available filters.","def":"FILTER_DEFAULT"},{"type":"mixed","var":"$options","beh":1,"desc":"Associative array of options or bitwise disjunction of flags. If filter accepts options, flags can be provided in \"flags\" field of array."}],"ret_type":"mixed"}]},"filter_input_array":{"desc":"Gets external variables and optionally filters them","long_desc":"This function is useful for retrieving many values without repetitively calling filter_input().","ver":"PHP 5 >= 5.2.0","ret_desc":"An array containing the values of the requested variables on success, or FALSE on failure. An array value will be FALSE if the filter fails, or NULL if the variable is not set. Or if the flag FILTER_NULL_ON_FAILURE is used, it returns FALSE if the variable is not set and NULL if the filter fails.","seealso":[],"url":"function.filter-input-array","name":"filter_input_array","params":[{"list":[{"type":"int","var":"$type","beh":0,"desc":"One of INPUT_GET, INPUT_POST, INPUT_COOKIE, INPUT_SERVER, or INPUT_ENV."},{"type":"mixed","var":"$definition","beh":1,"desc":"An array defining the arguments. A valid key is a string containing a variable name and a valid value is either a filter type, or an array optionally specifying the filter, flags and options. If the value is an array, valid keys are filter which specifies the filter type, flags which specifies any flags that apply to the filter, and options which specifies any options that apply to the filter. See the example below for a better understanding. This parameter can be also an integer holding a filter constant. Then all values in the input array are filtered by this filter."}],"ret_type":"mixed"}]},"filter_list":{"desc":"Returns a list of all supported filters","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns an array of names of all supported filters, empty array if there are no such filters. Indexes of this array are not filter IDs, they can be obtained with filter_id() from a name instead.","url":"function.filter-list","name":"filter_list","params":[{"list":[],"ret_type":"array"}]},"filter_var":{"desc":"Filters a variable with a specified filter","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the filtered data, or FALSE if the filter fails.","seealso":[],"url":"function.filter-var","name":"filter_var","params":[{"list":[{"type":"mixed","var":"$variable","beh":1,"desc":"Value to filter."},{"type":"int","var":"$filter","beh":1,"desc":"The ID of the filter to apply. The Types of filters manual page lists the available filters.","def":"FILTER_DEFAULT"},{"type":"mixed","var":"$options","beh":1,"desc":"Associative array of options or bitwise disjunction of flags. If filter accepts options, flags can be provided in \"flags\" field of array. For the \"callback\" filter, callable type should be passed. The callback must accept one argument, the value to be filtered, and return the value after filtering\/sanitizing it."}],"ret_type":"mixed"}]},"filter_var_array":{"desc":"Gets multiple variables and optionally filters them","long_desc":"This function is useful for retrieving many values without repetitively calling filter_var().","ver":"PHP 5 >= 5.2.0","ret_desc":"An array containing the values of the requested variables on success, or FALSE on failure. An array value will be FALSE if the filter fails, or NULL if the variable is not set.","seealso":[],"url":"function.filter-var-array","name":"filter_var_array","params":[{"list":[{"type":"array","var":"$data","beh":0,"desc":"An array with string keys containing the data to filter."},{"type":"mixed","var":"$definition","beh":1,"desc":"An array defining the arguments. A valid key is a string containing a variable name and a valid value is either a filter type, or an array optionally specifying the filter, flags and options. If the value is an array, valid keys are filter which specifies the filter type, flags which specifies any flags that apply to the filter, and options which specifies any options that apply to the filter. See the example below for a better understanding. This parameter can be also an integer holding a filter constant. Then all values in the input array are filtered by this filter."}],"ret_type":"mixed"}]},"finfo_buffer":{"desc":"Return information about a string buffer","long_desc":"Procedural styleObject oriented style This function is used to get information about binary data in a string.","ver":"PHP 5 >= 5.3.0, PECL fileinfo >= 0.1.0","ret_desc":"Returns a textual description of the string argument, or FALSE if an error occurred.","seealso":[],"url":"function.finfo-buffer","name":"finfo_buffer","params":[{"list":[{"type":"resource","var":"$finfo","beh":1,"desc":"Fileinfo resource returned by finfo_open()."},{"type":"string","var":"$string","beh":1,"desc":"Content of a file to be checked.","def":"NULL"},{"type":"int","var":"$options","beh":1,"desc":"One or disjunction of more Fileinfo constants.","def":"FILEINFO_NONE"},{"type":"resource","var":"$context","beh":1,"desc":"","def":"NULL"}],"ret_type":"string"},{"list":[{"type":"string","var":"$string","beh":0,"desc":"Fileinfo resource returned by finfo_open().","def":"NULL"},{"type":"int","var":"$options","beh":1,"desc":"Content of a file to be checked.","def":"FILEINFO_NONE"},{"type":"resource","var":"$context","beh":1,"desc":"One or disjunction of more Fileinfo constants.","def":"NULL"}],"ret_type":"string"}]},"finfo_close":{"desc":"Close fileinfo resource","long_desc":"This function closes the resource opened by finfo_open().","ver":"PHP >= 5.3.0, PECL fileinfo >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.finfo-close","name":"finfo_close","params":[{"list":[],"ret_type":"bool"}]},"finfo_file":{"desc":"Return information about a file","long_desc":"Procedural styleObject oriented style This function is used to get information about a file.","ver":"PHP >= 5.3.0, PECL fileinfo >= 0.1.0","ret_desc":"Returns a textual description of the contents of the filename argument, or FALSE if an error occurred.","seealso":[],"url":"function.finfo-file","name":"finfo_file","params":[{"list":[{"type":"resource","var":"$finfo","beh":1,"desc":"Fileinfo resource returned by finfo_open()."},{"type":"string","var":"$file_name","beh":1,"desc":"Name of a file to be checked.","def":"NULL"},{"type":"int","var":"$options","beh":1,"desc":"One or disjunction of more Fileinfo constants.","def":"FILEINFO_NONE"},{"type":"resource","var":"$context","beh":1,"desc":"For a description of contexts, refer to Stream Functions.","def":"NULL"}],"ret_type":"string"},{"list":[{"type":"string","var":"$file_name","beh":0,"desc":"Fileinfo resource returned by finfo_open().","def":"NULL"},{"type":"int","var":"$options","beh":1,"desc":"Name of a file to be checked.","def":"FILEINFO_NONE"},{"type":"resource","var":"$context","beh":1,"desc":"One or disjunction of more Fileinfo constants.","def":"NULL"}],"ret_type":"string"}]},"finfo_open":{"desc":"Create a new fileinfo resource","long_desc":"Procedural styleObject oriented style (constructor): This function opens a magic database and returns its resource.","ver":"PHP >= 5.3.0, PECL fileinfo >= 0.1.0","ret_desc":"(Procedural style only) Returns a magic database resource on success or FALSE on failure.","seealso":[],"url":"function.finfo-open","name":"finfo_open","params":[{"list":[{"type":"int","var":"$options","beh":0,"desc":"One or disjunction of more Fileinfo constants.","def":"FILEINFO_NONE"},{"type":"string","var":"$magic_file","beh":1,"desc":"Name of a magic database file, usually something like \/path\/to\/magic.mime. If not specified, the MAGIC environment variable is used. If this variable is not set either, \/usr\/share\/misc\/magic is used by default. A .mime and\/or .mgc suffix is added if needed. Passing NULL or an empty string will be equivalent to the default value.","def":"NULL"}],"ret_type":"resource"}]},"finfo_set_flags":{"desc":"Set libmagic configuration options","long_desc":"Procedural styleObject oriented style This function sets various Fileinfo options. Options can be set also directly in finfo_open() or other Fileinfo functions.","ver":"PHP >= 5.3.0, PECL fileinfo >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.finfo-set-flags","name":"finfo_set_flags","params":[{"list":[{"type":"resource","var":"$finfo","beh":0,"desc":"Fileinfo resource returned by finfo_open()."},{"type":"int","var":"$options","beh":0,"desc":"One or disjunction of more Fileinfo constants."}],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"floatval":{"desc":"Get float value of a variable","long_desc":"Gets the float value of var.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The float value of the given variable. Empty arrays return 0, non-empty arrays return 1.","seealso":[],"url":"function.floatval","name":"floatval","params":[{"list":[],"ret_type":"float"}]},"flock":{"desc":"Portable advisory file locking","long_desc":"flock() allows you to perform a simple reader\/writer model which can be used on virtually every platform (including most Unix derivatives and even Windows). On versions of PHP before 5.3.2, the lock is released also by fclose() (which is also called automatically when script finished). PHP supports a portable way of locking complete files in an advisory way (which means all accessing programs have to use the same way of locking or it will not work). By default, this function will block until the requested lock is acquired; this may be controlled (on non-Windows platforms) with the LOCK_NB option documented below.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.flock","name":"flock","params":[{"list":[{"type":"resource","var":"$handle","beh":0,"desc":"A file system pointer resource that is typically created using fopen()."},{"type":"int","var":"$operation","beh":1,"desc":"operation is one of the following: It is also possible to add LOCK_NB as a bitmask to one of the above operations if you don't want flock() to block while locking. (not supported on Windows)"},{"type":"int","var":"&$wouldblock","beh":1,"desc":"The optional third argument is set to TRUE if the lock would block (EWOULDBLOCK errno condition). (not supported on Windows)"}],"ret_type":"bool"}]},"floor":{"desc":"Round fractions down","long_desc":"Returns the next lowest integer value by rounding down value if necessary.","ver":"PHP 4, PHP 5","ret_desc":"value rounded to the next lowest integer. The return value of floor() is still of type float because the value range of float is usually bigger than that of integer.","seealso":[],"url":"function.floor","name":"floor","params":[{"list":[],"ret_type":"float"}]},"flush":{"desc":"Flush the output buffer","long_desc":"Flushes the write buffers of PHP and whatever backend PHP is using (CGI, a web server, etc). This attempts to push current output all the way to the browser with a few caveats. flush() may not be able to override the buffering scheme of your web server and it has no effect on any client-side buffering in the browser. It also doesn't affect PHP's userspace output buffering mechanism. This means you will have to call both ob_flush() and flush() to flush the ob output buffers if you are using those. Several servers, especially on Win32, will still buffer the output from your script until it terminates before transmitting the results to the browser. Server modules for Apache like mod_gzip may do buffering of their own that will cause flush() to not result in data being sent immediately to the client. Even the browser may buffer its input before displaying it. Netscape, for example, buffers text until it receives an end-of-line or the beginning of a tag, and it won't render tables until the <\/table> tag of the outermost table is seen. Some versions of Microsoft Internet Explorer will only start to display the page after they have received 256 bytes of output, so you may need to send extra whitespace before flushing to get those browsers to display the page.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","url":"function.flush","name":"flush","params":[{"list":[],"ret_type":"void"}]},"fmod":{"desc":"Returns the floating point remainder (modulo) of the division of the arguments","long_desc":"Returns the floating point remainder of dividing the dividend (x) by the divisor (y). The reminder (r) is defined as: x = i * y + r, for some integer i. If y is non-zero, r has the same sign as x and a magnitude less than the magnitude of y.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The floating point remainder of x\/y","url":"function.fmod","name":"fmod","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":"The dividend"},{"type":"float","var":"$y","beh":0,"desc":"The divisor"}],"ret_type":"float"}]},"fnmatch":{"desc":"Match filename against a pattern","long_desc":"fnmatch() checks if the passed string would match the given shell wildcard pattern.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE if there is a match, FALSE otherwise.","seealso":[],"url":"function.fnmatch","name":"fnmatch","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"The shell wildcard pattern."},{"type":"string","var":"$string","beh":1,"desc":"The tested string. This function is especially useful for filenames, but may also be used on regular strings. The average user may be used to shell patterns or at least in their simplest form to '?' and '*' wildcards so using fnmatch() instead of preg_match() for frontend search expression input may be way more convenient for non-programming users."},{"type":"int","var":"$flags","beh":1,"desc":"The value of flags can be any combination of the following flags, joined with the binary OR (|) operator.","def":0}],"ret_type":"bool"}]},"fopen":{"desc":"Opens file or URL","long_desc":"fopen() binds a named resource, specified by filename, to a stream.","ver":"PHP 4, PHP 5","ret_desc":"Returns a file pointer resource on success, or FALSE on error.","seealso":[],"url":"function.fopen","name":"fopen","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"If filename is of the form \"scheme:\/\/...\", it is assumed to be a URL and PHP will search for a protocol handler (also known as a wrapper) for that scheme. If no wrappers for that protocol are registered, PHP will emit a notice to help you track potential problems in your script and then continue as though filename specifies a regular file. If PHP has decided that filename specifies a local file, then it will try to open a stream on that file. The file must be accessible to PHP, so you need to ensure that the file access permissions allow this access. If you have enabled safe mode, or open_basedir further restrictions may apply. If PHP has decided that filename specifies a registered protocol, and that protocol is registered as a network URL, PHP will check to make sure that allow_url_fopen is enabled. If it is switched off, PHP will emit a warning and the fopen call will fail. On the Windows platform, be careful to escape any backslashes used in the path to the file, or use forward slashes."},{"type":"string","var":"$mode","beh":1,"desc":"The mode parameter specifies the type of access you require to the stream. It may be any of the following:"},{"type":"bool","var":"$use_include_path","beh":1,"desc":"The optional third use_include_path parameter can be set to '1' or TRUE if you want to search for the file in the include_path, too.","def":"false"},{"type":"resource","var":"$context","beh":1,"desc":""}],"ret_type":"resource"}]},"forward_static_call":{"desc":"Call a static method","long_desc":"Calls a user defined function or method given by the function parameter, with the following arguments. This function must be called within a method context, it can't be used outside a class. It uses the late static binding.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the function result, or FALSE on error.","seealso":[],"url":"function.forward-static-call","name":"forward_static_call","params":[{"list":[{"type":"callable","var":"$function","beh":1,"desc":"The function or method to be called. This parameter may be an array, with the name of the class, and the method, or a string, with a function name."},{"type":"mixed","var":"$parameter","beh":1,"desc":"Zero or more parameters to be passed to the function."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"mixed"}]},"forward_static_call_array":{"desc":"Call a static method and pass the arguments as array","long_desc":"Calls a user defined function or method given by the function parameter. This function must be called within a method context, it can't be used outside a class. It uses the late static binding. All arguments of the forwarded method are passed as values, and as an array, similarly to call_user_func_array().","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the function result, or FALSE on error.","seealso":[],"url":"function.forward-static-call-array","name":"forward_static_call_array","params":[{"list":[{"type":"callable","var":"$function","beh":0,"desc":"The function or method to be called. This parameter may be an array, with the name of the class, and the method, or a string, with a function name."},{"type":"array","var":"$parameters","beh":0,"desc":"One parameter, gathering all the method parameter in one array."}],"ret_type":"mixed"}]},"fpassthru":{"desc":"Output all remaining data on a file pointer","long_desc":"Reads to EOF on the given file pointer from the current position and writes the results to the output buffer. You may need to call rewind() to reset the file pointer to the beginning of the file if you have already written data to the file. If you just want to dump the contents of a file to the output buffer, without first modifying it or seeking to a particular offset, you may want to use the readfile(), which saves you the fopen() call.","ver":"PHP 4, PHP 5","ret_desc":"If an error occurs, fpassthru() returns FALSE. Otherwise, fpassthru() returns the number of characters read from handle and passed through to the output.","seealso":[],"url":"function.fpassthru","name":"fpassthru","params":[{"list":[],"ret_type":"int"}]},"fprintf":{"desc":"Write a formatted string to a stream","long_desc":"Write a string produced according to format to the stream resource specified by handle.","ver":"PHP 5","ret_desc":"Returns the length of the string written.","seealso":[],"url":"function.fprintf","name":"fprintf","params":[{"list":[{"type":"resource","var":"$handle","beh":1,"desc":"A file system pointer resource that is typically created using fopen()."},{"type":"string","var":"$format","beh":1,"desc":"See sprintf() for a description of format."},{"type":"mixed","var":"$args","beh":1,"desc":""},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"int"}]},"fputcsv":{"desc":"Format line as CSV and write to file pointer","long_desc":"fputcsv() formats a line (passed as a fields array) as CSV and write it (terminated by a newline) to the specified file handle.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the length of the written string or FALSE on failure.","seealso":[],"url":"function.fputcsv","name":"fputcsv","params":[{"list":[{"type":"resource","var":"$handle","beh":1,"desc":"The file pointer must be valid, and must point to a file successfully opened by fopen() or fsockopen() (and not yet closed by fclose())."},{"type":"array","var":"$fields","beh":1,"desc":"An array of values."},{"type":"string","var":"$delimiter","beh":1,"desc":"The optional delimiter parameter sets the field delimiter (one character only).","def":"','"},{"type":"string","var":"$enclosure","beh":1,"desc":"The optional enclosure parameter sets the field enclosure (one character only).","def":"'\"'"}],"ret_type":"int"}]},"fputs":{"desc":"Alias of fwrite()","long_desc":"This function is an alias of: fwrite().","ver":"PHP 4, PHP 5","url":"function.fputs","name":"fputs","params":[]},"fread":{"desc":"Binary-safe file read","long_desc":"fread() reads up to length bytes from the file pointer referenced by handle. Reading stops as soon as one of the following conditions is met:","ver":"PHP 4, PHP 5","ret_desc":"Returns the read string or FALSE on failure.","seealso":[],"url":"function.fread","name":"fread","params":[{"list":[{"type":"resource","var":"$handle","beh":0,"desc":"A file system pointer resource that is typically created using fopen()."},{"type":"int","var":"$length","beh":0,"desc":"Up to length number of bytes read."}],"ret_type":"string"}]},"fribidi_log2vis":{"desc":"Convert a logical string to a visual one","long_desc":"Converts a logical string to a visual one.","ver":"PHP 4 >= 4.0.4 and PHP 4 <= 4.1.0, PECL fribidi >= 1.0","ret_desc":"Returns the visual string on success or FALSE on failure.","url":"function.fribidi-log2vis","name":"fribidi_log2vis","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The logical string."},{"type":"string","var":"$direction","beh":0,"desc":"One of FRIBIDI_RTL, FRIBIDI_LTR or FRIBIDI_AUTO."},{"type":"int","var":"$charset","beh":1,"desc":"One of the FRIBIDI_CHARSET_XXX constants."}],"ret_type":"string"}]},"fscanf":{"desc":"Parses input from a file according to a format","long_desc":"The function fscanf() is similar to sscanf(), but it takes its input from a file associated with handle and interprets the input according to the specified format, which is described in the documentation for sprintf(). Any whitespace in the format string matches any whitespace in the input stream. This means that even a tab \\t in the format string can match a single space character in the input stream. Each call to fscanf() reads one line from the file.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"If only two parameters were passed to this function, the values parsed will be returned as an array. Otherwise, if optional parameters are passed, the function will return the number of assigned values. The optional parameters must be passed by reference.","seealso":[],"url":"function.fscanf","name":"fscanf","params":[{"list":[{"type":"resource","var":"$handle","beh":0,"desc":"A file system pointer resource that is typically created using fopen()."},{"type":"string","var":"$format","beh":1,"desc":"The specified format as described in the sprintf() documentation."},{"type":"mixed","var":"&$...","beh":1,"desc":"The optional assigned values."}],"ret_type":"mixed"}]},"fseek":{"desc":"Seeks on a file pointer","long_desc":"Sets the file position indicator for the file referenced by handle. The new position, measured in bytes from the beginning of the file, is obtained by adding offset to the position specified by whence. In general, it is allowed to seek past the end-of-file; if data is then written, reads in any unwritten region between the end-of-file and the sought position will yield bytes with value 0. However, certain streams may not support this behavior, especially when they have an underlying fixed size storage.","ver":"PHP 4, PHP 5","ret_desc":"Upon success, returns 0; otherwise, returns -1.","seealso":[],"url":"function.fseek","name":"fseek","params":[{"list":[{"type":"resource","var":"$handle","beh":0,"desc":"A file system pointer resource that is typically created using fopen()."},{"type":"int","var":"$offset","beh":1,"desc":"The offset. To move to a position before the end-of-file, you need to pass a negative value in offset and set whence to SEEK_END."},{"type":"int","var":"$whence","beh":1,"desc":"whence values are:","def":"SEEK_SET"}],"ret_type":"int"}]},"fsockopen":{"desc":"Open Internet or Unix domain socket connection","long_desc":"Initiates a socket connection to the resource specified by hostname. PHP supports targets in the Internet and Unix domains as described in List of Supported Socket Transports. A list of supported transports can also be retrieved using stream_get_transports(). The socket will by default be opened in blocking mode. You can switch it to non-blocking mode by using stream_set_blocking(). The function stream_socket_client() is similar but provides a richer set of options, including non-blocking connection and the ability to provide a stream context.","ver":"PHP 4, PHP 5","ret_desc":"fsockopen() returns a file pointer which may be used together with the other file functions (such as fgets(), fgetss(), fwrite(), fclose(), and feof()). If the call fails, it will return FALSE","seealso":[],"url":"function.fsockopen","name":"fsockopen","params":[{"list":[{"type":"string","var":"$hostname","beh":1,"desc":"If OpenSSL support is installed, you may prefix the hostname with either ssl:\/\/ or tls:\/\/ to use an SSL or TLS client connection over TCP\/IP to connect to the remote host."},{"type":"int","var":"$port","beh":1,"desc":"The port number.","def":-1},{"type":"int","var":"&$errno","beh":1,"desc":"If provided, holds the system level error number that occurred in the system-level connect() call. If the value returned in errno is 0 and the function returned FALSE, it is an indication that the error occurred before the connect() call. This is most likely due to a problem initializing the socket."},{"type":"string","var":"&$errstr","beh":1,"desc":"The error message as a string."},{"type":"float","var":"$timeout","beh":1,"desc":"The connection timeout, in seconds.","def":"ini_get(\"default_socket_timeout\")"}],"ret_type":"resource"}]},"fstat":{"desc":"Gets information about a file using an open file pointer","long_desc":"Gathers the statistics of the file opened by the file pointer handle. This function is similar to the stat() function except that it operates on an open file pointer instead of a filename.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array with the statistics of the file; the format of the array is described in detail on the stat() manual page.","url":"function.fstat","name":"fstat","params":[{"list":[],"ret_type":"array"}]},"ftell":{"desc":"Returns the current position of the file read\/write pointer","long_desc":"Returns the position of the file pointer referenced by handle.","ver":"PHP 4, PHP 5","ret_desc":"Returns the position of the file pointer referenced by handle as an integer; i.e., its offset into the file stream.","seealso":[],"url":"function.ftell","name":"ftell","params":[{"list":[],"ret_type":"int"}]},"ftok":{"desc":"Convert a pathname and a project identifier to a System V IPC key","long_desc":"The function converts the pathname of an existing accessible file and a project identifier into an integer for use with for example shmop_open() and other System V IPC keys.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"On success the return value will be the created key value, otherwise -1 is returned.","seealso":[],"url":"function.ftok","name":"ftok","params":[{"list":[{"type":"string","var":"$pathname","beh":0,"desc":"Path to an accessible file."},{"type":"string","var":"$proj","beh":0,"desc":"Project identifier. This must be a one character string."}],"ret_type":"int"}]},"ftp_alloc":{"desc":"Allocates space for a file to be uploaded","long_desc":"Sends an ALLO command to the remote FTP server to allocate space for a file to be uploaded.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ftp-alloc","name":"ftp_alloc","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"int","var":"$filesize","beh":1,"desc":"The number of bytes to allocate."},{"type":"string","var":"&$result","beh":1,"desc":"A textual representation of the servers response will be returned by reference in result if a variable is provided."}],"ret_type":"bool"}]},"ftp_cdup":{"desc":"Changes to the parent directory","long_desc":"Changes to the parent directory.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ftp-cdup","name":"ftp_cdup","params":[{"list":[],"ret_type":"bool"}]},"ftp_chdir":{"desc":"Changes the current directory on a FTP server","long_desc":"Changes the current directory to the specified one.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. If changing directory fails, PHP will also throw a warning.","seealso":[],"url":"function.ftp-chdir","name":"ftp_chdir","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$directory","beh":0,"desc":"The target directory."}],"ret_type":"bool"}]},"ftp_chmod":{"desc":"Set permissions on a file via FTP","long_desc":"Sets the permissions on the specified remote file to mode.","ver":"PHP 5","ret_desc":"Returns the new file permissions on success or FALSE on error.","seealso":[],"url":"function.ftp-chmod","name":"ftp_chmod","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"int","var":"$mode","beh":0,"desc":"The new permissions, given as an octal value."},{"type":"string","var":"$filename","beh":1,"desc":"The remote file."}],"ret_type":"int"}]},"ftp_close":{"desc":"Closes an FTP connection","long_desc":"ftp_close() closes the given link identifier and releases the resource.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ftp-close","name":"ftp_close","params":[{"list":[],"ret_type":"bool"}]},"ftp_connect":{"desc":"Opens an FTP connection","long_desc":"ftp_connect() opens an FTP connection to the specified host.","ver":"PHP 4, PHP 5","ret_desc":"Returns a FTP stream on success or FALSE on error.","seealso":[],"url":"function.ftp-connect","name":"ftp_connect","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The FTP server address. This parameter shouldn't have any trailing slashes and shouldn't be prefixed with ftp:\/\/."},{"type":"int","var":"$port","beh":1,"desc":"This parameter specifies an alternate port to connect to. If it is omitted or set to zero, then the default FTP port, 21, will be used.","def":21},{"type":"int","var":"$timeout","beh":1,"desc":"This parameter specifies the timeout for all subsequent network operations. If omitted, the default value is 90 seconds. The timeout can be changed and queried at any time with ftp_set_option() and ftp_get_option().","def":90}],"ret_type":"resource"}]},"ftp_delete":{"desc":"Deletes a file on the FTP server","long_desc":"ftp_delete() deletes the file specified by path from the FTP server.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ftp-delete","name":"ftp_delete","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$path","beh":0,"desc":"The file to delete."}],"ret_type":"bool"}]},"ftp_exec":{"desc":"Requests execution of a command on the FTP server","long_desc":"Sends a SITE EXEC command request to the FTP server.","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"Returns TRUE if the command was successful (server sent response code: 200); otherwise returns FALSE.","seealso":[],"url":"function.ftp-exec","name":"ftp_exec","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$command","beh":0,"desc":"The command to execute."}],"ret_type":"bool"}]},"ftp_fget":{"desc":"Downloads a file from the FTP server and saves to an open file","long_desc":"ftp_fget() retrieves remote_file from the FTP server, and writes it to the given file pointer.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ftp-fget","name":"ftp_fget","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"resource","var":"$handle","beh":1,"desc":"An open file pointer in which we store the data."},{"type":"string","var":"$remote_file","beh":1,"desc":"The remote file path."},{"type":"int","var":"$mode","beh":1,"desc":"The transfer mode. Must be either FTP_ASCII or FTP_BINARY."},{"type":"int","var":"$resumepos","beh":1,"desc":"The position in the remote file to start downloading from.","def":0}],"ret_type":"bool"}]},"ftp_fput":{"desc":"Uploads from an open file to the FTP server","long_desc":"ftp_fput() uploads the data from a file pointer to a remote file on the FTP server.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ftp-fput","name":"ftp_fput","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$remote_file","beh":1,"desc":"The remote file path."},{"type":"resource","var":"$handle","beh":1,"desc":"An open file pointer on the local file. Reading stops at end of file."},{"type":"int","var":"$mode","beh":1,"desc":"The transfer mode. Must be either FTP_ASCII or FTP_BINARY."},{"type":"int","var":"$startpos","beh":1,"desc":"The position in the remote file to start uploading to.","def":0}],"ret_type":"bool"}]},"ftp_get":{"desc":"Downloads a file from the FTP server","long_desc":"ftp_get() retrieves a remote file from the FTP server, and saves it into a local file.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ftp-get","name":"ftp_get","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$local_file","beh":1,"desc":"The local file path (will be overwritten if the file already exists)."},{"type":"string","var":"$remote_file","beh":1,"desc":"The remote file path."},{"type":"int","var":"$mode","beh":1,"desc":"The transfer mode. Must be either FTP_ASCII or FTP_BINARY."},{"type":"int","var":"$resumepos","beh":1,"desc":"The position in the remote file to start downloading from.","def":0}],"ret_type":"bool"}]},"ftp_get_option":{"desc":"Retrieves various runtime behaviours of the current FTP stream","long_desc":"This function returns the value for the requested option from the specified FTP connection.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns the value on success or FALSE if the given option is not supported. In the latter case, a warning message is also thrown.","seealso":[],"url":"function.ftp-get-option","name":"ftp_get_option","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"int","var":"$option","beh":0,"desc":"Currently, the following options are supported:"}],"ret_type":"mixed"}]},"ftp_login":{"desc":"Logs in to an FTP connection","long_desc":"Logs in to the given FTP stream.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. If login fails, PHP will also throw a warning.","url":"function.ftp-login","name":"ftp_login","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$username","beh":0,"desc":"The username (USER)."},{"type":"string","var":"$password","beh":1,"desc":"The password (PASS)."}],"ret_type":"bool"}]},"ftp_mdtm":{"desc":"Returns the last modified time of the given file","long_desc":"ftp_mdtm() gets the last modified time for a remote file.","ver":"PHP 4, PHP 5","ret_desc":"Returns the last modified time as a Unix timestamp on success, or -1 on error.","url":"function.ftp-mdtm","name":"ftp_mdtm","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$remote_file","beh":0,"desc":"The file from which to extract the last modification time."}],"ret_type":"int"}]},"ftp_mkdir":{"desc":"Creates a directory","long_desc":"Creates the specified directory on the FTP server.","ver":"PHP 4, PHP 5","ret_desc":"Returns the newly created directory name on success or FALSE on error.","seealso":[],"url":"function.ftp-mkdir","name":"ftp_mkdir","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$directory","beh":0,"desc":"The name of the directory that will be created."}],"ret_type":"string"}]},"ftp_nb_continue":{"desc":"Continues retrieving\/sending a file (non-blocking)","long_desc":"Continues retrieving\/sending a file non-blocking.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns FTP_FAILED or FTP_FINISHED or FTP_MOREDATA.","url":"function.ftp-nb-continue","name":"ftp_nb_continue","params":[{"list":[],"ret_type":"int"}]},"ftp_nb_fget":{"desc":"Retrieves a file from the FTP server and writes it to an open file (non-blocking)","long_desc":"ftp_nb_fget() retrieves a remote file from the FTP server. The difference between this function and ftp_fget() is that this function retrieves the file asynchronously, so your program can perform other operations while the file is being downloaded.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns FTP_FAILED or FTP_FINISHED or FTP_MOREDATA.","seealso":[],"url":"function.ftp-nb-fget","name":"ftp_nb_fget","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"resource","var":"$handle","beh":1,"desc":"An open file pointer in which we store the data."},{"type":"string","var":"$remote_file","beh":1,"desc":"The remote file path."},{"type":"int","var":"$mode","beh":1,"desc":"The transfer mode. Must be either FTP_ASCII or FTP_BINARY."},{"type":"int","var":"$resumepos","beh":1,"desc":"The position in the remote file to start downloading from.","def":0}],"ret_type":"int"}]},"ftp_nb_fput":{"desc":"Stores a file from an open file to the FTP server (non-blocking)","long_desc":"ftp_nb_fput() uploads the data from a file pointer to a remote file on the FTP server. The difference between this function and the ftp_fput() is that this function uploads the file asynchronously, so your program can perform other operations while the file is being uploaded.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns FTP_FAILED or FTP_FINISHED or FTP_MOREDATA.","seealso":[],"url":"function.ftp-nb-fput","name":"ftp_nb_fput","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$remote_file","beh":1,"desc":"The remote file path."},{"type":"resource","var":"$handle","beh":1,"desc":"An open file pointer on the local file. Reading stops at end of file."},{"type":"int","var":"$mode","beh":1,"desc":"The transfer mode. Must be either FTP_ASCII or FTP_BINARY."},{"type":"int","var":"$startpos","beh":1,"desc":"The position in the remote file to start uploading to.","def":0}],"ret_type":"int"}]},"ftp_nb_get":{"desc":"Retrieves a file from the FTP server and writes it to a local file (non-blocking)","long_desc":"ftp_nb_get() retrieves a remote file from the FTP server, and saves it into a local file. The difference between this function and ftp_get() is that this function retrieves the file asynchronously, so your program can perform other operations while the file is being downloaded.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns FTP_FAILED or FTP_FINISHED or FTP_MOREDATA.","seealso":[],"url":"function.ftp-nb-get","name":"ftp_nb_get","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$local_file","beh":1,"desc":"The local file path (will be overwritten if the file already exists)."},{"type":"string","var":"$remote_file","beh":1,"desc":"The remote file path."},{"type":"int","var":"$mode","beh":1,"desc":"The transfer mode. Must be either FTP_ASCII or FTP_BINARY."},{"type":"int","var":"$resumepos","beh":1,"desc":"The position in the remote file to start downloading from.","def":0}],"ret_type":"int"}]},"ftp_nb_put":{"desc":"Stores a file on the FTP server (non-blocking)","long_desc":"ftp_nb_put() stores a local file on the FTP server. The difference between this function and the ftp_put() is that this function uploads the file asynchronously, so your program can perform other operations while the file is being uploaded.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns FTP_FAILED or FTP_FINISHED or FTP_MOREDATA.","seealso":[],"url":"function.ftp-nb-put","name":"ftp_nb_put","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$remote_file","beh":1,"desc":"The remote file path."},{"type":"string","var":"$local_file","beh":1,"desc":"The local file path."},{"type":"int","var":"$mode","beh":1,"desc":"The transfer mode. Must be either FTP_ASCII or FTP_BINARY."},{"type":"int","var":"$startpos","beh":1,"desc":"The position in the remote file to start uploading to.","def":0}],"ret_type":"int"}]},"ftp_nlist":{"desc":"Returns a list of files in the given directory","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of filenames from the specified directory on success or FALSE on error.","seealso":[],"url":"function.ftp-nlist","name":"ftp_nlist","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$directory","beh":0,"desc":"The directory to be listed. This parameter can also include arguments, eg. ftp_nlist($conn_id, \"-la \/your\/dir\"); Note that this parameter isn't escaped so there may be some issues with filenames containing spaces and other characters."}],"ret_type":"array"}]},"ftp_pasv":{"desc":"Turns passive mode on or off","long_desc":"ftp_pasv() turns on or off passive mode. In passive mode, data connections are initiated by the client, rather than by the server. It may be needed if the client is behind firewall. Please note that ftp_pasv() can only be called after a successfull login or otherwise it will fail.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ftp-pasv","name":"ftp_pasv","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"bool","var":"$pasv","beh":0,"desc":"If TRUE, the passive mode is turned on, else it's turned off."}],"ret_type":"bool"}]},"ftp_put":{"desc":"Uploads a file to the FTP server","long_desc":"ftp_put() stores a local file on the FTP server.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ftp-put","name":"ftp_put","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$remote_file","beh":1,"desc":"The remote file path."},{"type":"string","var":"$local_file","beh":1,"desc":"The local file path."},{"type":"int","var":"$mode","beh":1,"desc":"The transfer mode. Must be either FTP_ASCII or FTP_BINARY."},{"type":"int","var":"$startpos","beh":1,"desc":"The position in the remote file to start uploading to.","def":0}],"ret_type":"bool"}]},"ftp_pwd":{"desc":"Returns the current directory name","long_desc":"","ver":"PHP 4, PHP 5","ret_desc":"Returns the current directory name or FALSE on error.","seealso":[],"url":"function.ftp-pwd","name":"ftp_pwd","params":[{"list":[],"ret_type":"string"}]},"ftp_quit":{"desc":"Alias of ftp_close()","long_desc":"This function is an alias of: ftp_close().","ver":"PHP 4, PHP 5","url":"function.ftp-quit","name":"ftp_quit","params":[]},"ftp_raw":{"desc":"Sends an arbitrary command to an FTP server","long_desc":"Sends an arbitrary command to the FTP server.","ver":"PHP 5","ret_desc":"Returns the server's response as an array of strings. No parsing is performed on the response string, nor does ftp_raw() determine if the command succeeded.","seealso":[],"url":"function.ftp-raw","name":"ftp_raw","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$command","beh":0,"desc":"The command to execute."}],"ret_type":"array"}]},"ftp_rawlist":{"desc":"Returns a detailed list of files in the given directory","long_desc":"ftp_rawlist() executes the FTP LIST command, and returns the result as an array.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array where each element corresponds to one line of text.","seealso":[],"url":"function.ftp-rawlist","name":"ftp_rawlist","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$directory","beh":1,"desc":"The directory path. May include arguments for the LIST command."},{"type":"bool","var":"$recursive","beh":1,"desc":"If set to TRUE, the issued command will be LIST -R.","def":"false"}],"ret_type":"array"}]},"ftp_rename":{"desc":"Renames a file or a directory on the FTP server","long_desc":"ftp_rename() renames a file or a directory on the FTP server.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ftp-rename","name":"ftp_rename","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$oldname","beh":0,"desc":"The old file\/directory name."},{"type":"string","var":"$newname","beh":1,"desc":"The new name."}],"ret_type":"bool"}]},"ftp_rmdir":{"desc":"Removes a directory","long_desc":"Removes the specified directory on the FTP server.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ftp-rmdir","name":"ftp_rmdir","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$directory","beh":0,"desc":"The directory to delete. This must be either an absolute or relative path to an empty directory."}],"ret_type":"bool"}]},"ftp_set_option":{"desc":"Set miscellaneous runtime FTP options","long_desc":"This function controls various runtime options for the specified FTP stream.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE if the option could be set; FALSE if not. A warning message will be thrown if the option is not supported or the passed value doesn't match the expected value for the given option.","seealso":[],"url":"function.ftp-set-option","name":"ftp_set_option","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"int","var":"$option","beh":0,"desc":"Currently, the following options are supported:"},{"type":"mixed","var":"$value","beh":1,"desc":"This parameter depends on which option is chosen to be altered."}],"ret_type":"bool"}]},"ftp_site":{"desc":"Sends a SITE command to the server","long_desc":"ftp_site() sends the given SITE command to the FTP server. SITE commands are not standardized, and vary from server to server. They are useful for handling such things as file permissions and group membership.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ftp-site","name":"ftp_site","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$command","beh":0,"desc":"The SITE command. Note that this parameter isn't escaped so there may be some issues with filenames containing spaces and other characters."}],"ret_type":"bool"}]},"ftp_size":{"desc":"Returns the size of the given file","long_desc":"ftp_size() returns the size of the given file in bytes.","ver":"PHP 4, PHP 5","ret_desc":"Returns the file size on success, or -1 on error.","seealso":[],"url":"function.ftp-size","name":"ftp_size","params":[{"list":[{"type":"resource","var":"$ftp_stream","beh":0,"desc":"The link identifier of the FTP connection."},{"type":"string","var":"$remote_file","beh":0,"desc":"The remote file."}],"ret_type":"int"}]},"ftp_ssl_connect":{"desc":"Opens an Secure SSL-FTP connection","long_desc":"ftp_ssl_connect() opens an explicit SSL-FTP connection to the specified host.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns a SSL-FTP stream on success or FALSE on error.","seealso":[],"url":"function.ftp-ssl-connect","name":"ftp_ssl_connect","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The FTP server address. This parameter shouldn't have any trailing slashes and shouldn't be prefixed with ftp:\/\/."},{"type":"int","var":"$port","beh":1,"desc":"This parameter specifies an alternate port to connect to. If it is omitted or set to zero, then the default FTP port, 21, will be used.","def":21},{"type":"int","var":"$timeout","beh":1,"desc":"This parameter specifies the timeout for all subsequent network operations. If omitted, the default value is 90 seconds. The timeout can be changed and queried at any time with ftp_set_option() and ftp_get_option().","def":90}],"ret_type":"resource"}]},"ftp_systype":{"desc":"Returns the system type identifier of the remote FTP server","long_desc":"Returns the system type identifier of the remote FTP server.","ver":"PHP 4, PHP 5","ret_desc":"Returns the remote system type, or FALSE on error.","url":"function.ftp-systype","name":"ftp_systype","params":[{"list":[],"ret_type":"string"}]},"ftruncate":{"desc":"Truncates a file to a given length","long_desc":"Takes the filepointer, handle, and truncates the file to length, size.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ftruncate","name":"ftruncate","params":[{"list":[{"type":"resource","var":"$handle","beh":0,"desc":"The file pointer."},{"type":"int","var":"$size","beh":0,"desc":"The size to truncate to."}],"ret_type":"bool"}]},"func_get_arg":{"desc":"Return an item from the argument list","long_desc":"Gets the specified argument from a user-defined function's argument list. This function may be used in conjunction with func_get_args() and func_num_args() to allow user-defined functions to accept variable-length argument lists.","ver":"PHP 4, PHP 5","ret_desc":"Returns the specified argument, or FALSE on error.","seealso":[],"url":"function.func-get-arg","name":"func_get_arg","params":[{"list":[],"ret_type":"mixed"}]},"func_get_args":{"desc":"Returns an array comprising a function's argument list","long_desc":"Gets an array of the function's argument list. This function may be used in conjunction with func_get_arg() and func_num_args() to allow user-defined functions to accept variable-length argument lists.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array in which each element is a copy of the corresponding member of the current user-defined function's argument list.","seealso":[],"url":"function.func-get-args","name":"func_get_args","params":[{"list":[],"ret_type":"array"}]},"func_num_args":{"desc":"Returns the number of arguments passed to the function","long_desc":"Gets the number of arguments passed to the function. This function may be used in conjunction with func_get_arg() and func_get_args() to allow user-defined functions to accept variable-length argument lists.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of arguments passed into the current user-defined function.","seealso":[],"url":"function.func-num-args","name":"func_num_args","params":[{"list":[],"ret_type":"int"}]},"function_exists":{"desc":"Return TRUE if the given function has been defined","long_desc":"Checks the list of defined functions, both built-in (internal) and user-defined, for function_name.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if function_name exists and is a function, FALSE otherwise.","seealso":[],"url":"function.function-exists","name":"function_exists","params":[{"list":[],"ret_type":"bool"}]},"fwrite":{"desc":"Binary-safe file write","long_desc":"fwrite() writes the contents of string to the file stream pointed to by handle.","ver":"PHP 4, PHP 5","ret_desc":"fwrite() returns the number of bytes written, or FALSE on error.","seealso":[],"url":"function.fwrite","name":"fwrite","params":[{"list":[{"type":"resource","var":"$handle","beh":0,"desc":"A file system pointer resource that is typically created using fopen()."},{"type":"string","var":"$string","beh":1,"desc":"The string that is to be written."},{"type":"int","var":"$length","beh":1,"desc":"If the length argument is given, writing will stop after length bytes have been written or the end of string is reached, whichever comes first. Note that if the length argument is given, then the magic_quotes_runtime configuration option will be ignored and no slashes will be stripped from string."}],"ret_type":"int"}]},"gc_collect_cycles":{"desc":"Forces collection of any existing garbage cycles","long_desc":"Forces collection of any existing garbage cycles.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns number of collected cycles.","seealso":[],"url":"function.gc-collect-cycles","name":"gc_collect_cycles","params":[{"list":[],"ret_type":"int"}]},"gc_disable":{"desc":"Deactivates the circular reference collector","long_desc":"Deactivates the circular reference collector, setting zend.enable_gc to 0.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","seealso":[],"url":"function.gc-disable","name":"gc_disable","params":[{"list":[],"ret_type":"void"}]},"gc_enable":{"desc":"Activates the circular reference collector","long_desc":"Activates the circular reference collector, setting zend.enable_gc to 1.","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","seealso":[],"url":"function.gc-enable","name":"gc_enable","params":[{"list":[],"ret_type":"void"}]},"gc_enabled":{"desc":"Returns status of the circular reference collector","long_desc":"Returns status of the circular reference collector.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE if the garbage collector is enabled, FALSE otherwise.","seealso":[],"url":"function.gc-enabled","name":"gc_enabled","params":[{"list":[],"ret_type":"bool"}]},"gd_info":{"desc":"Retrieve information about the currently installed GD library","long_desc":"Gets information about the version and capabilities of the installed GD library.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns an associative array.","seealso":[],"url":"function.gd-info","name":"gd_info","params":[{"list":[],"ret_type":"array"}]},"geoip_continent_code_by_name":{"desc":"Get the two letter continent code","long_desc":"The geoip_continent_code_by_name() function will return the two letter continent code corresponding to a hostname or an IP address.","ver":"PECL geoip >= 1.0.3","ret_desc":"Returns the two letter continent code on success, or FALSE if the address cannot be found in the database.","seealso":[],"url":"function.geoip-continent-code-by-name","name":"geoip_continent_code_by_name","params":[{"list":[],"ret_type":"string"}]},"geoip_country_code3_by_name":{"desc":"Get the three letter country code","long_desc":"The geoip_country_code3_by_name() function will return the three letter country code corresponding to a hostname or an IP address.","ver":"PECL geoip >= 0.2.0","ret_desc":"Returns the three letter country code on success, or FALSE if the address cannot be found in the database.","seealso":[],"url":"function.geoip-country-code3-by-name","name":"geoip_country_code3_by_name","params":[{"list":[],"ret_type":"string"}]},"geoip_country_code_by_name":{"desc":"Get the two letter country code","long_desc":"The geoip_country_code_by_name() function will return the two letter country code corresponding to a hostname or an IP address.","ver":"PECL geoip >= 0.2.0","ret_desc":"Returns the two letter ISO country code on success, or FALSE if the address cannot be found in the database.","seealso":[],"url":"function.geoip-country-code-by-name","name":"geoip_country_code_by_name","params":[{"list":[],"ret_type":"string"}]},"geoip_country_name_by_name":{"desc":"Get the full country name","long_desc":"The geoip_country_name_by_name() function will return the full country name corresponding to a hostname or an IP address.","ver":"PECL geoip >= 0.2.0","ret_desc":"Returns the country name on success, or FALSE if the address cannot be found in the database.","seealso":[],"url":"function.geoip-country-name-by-name","name":"geoip_country_name_by_name","params":[{"list":[],"ret_type":"string"}]},"geoip_database_info":{"desc":"Get GeoIP Database information","long_desc":"The geoip_database_info() function returns the corresponding GeoIP Database version as it is defined inside the binary file. If this function is called without arguments, it returns the version of the GeoIP Free Country Edition.","ver":"PECL geoip >= 0.2.0","ret_desc":"Returns the corresponding database version, or NULL on error.","url":"function.geoip-database-info","name":"geoip_database_info","params":[{"list":[],"ret_type":"string"}]},"geoip_db_avail":{"desc":"Determine if GeoIP Database is available","long_desc":"The geoip_db_avail() function returns if the corresponding GeoIP Database is available and can be opened on disk. It does not indicate if the file is a proper database, only if it is readable.","ver":"PECL geoip >= 1.0.1","ret_desc":"Returns TRUE is database exists, FALSE if not found, or NULL on error.","url":"function.geoip-db-avail","name":"geoip_db_avail","params":[{"list":[],"ret_type":"bool"}]},"geoip_db_filename":{"desc":"Returns the filename of the corresponding GeoIP Database","long_desc":"The geoip_db_filename() function returns the filename of the corresponding GeoIP Database. It does not indicate if the file exists or not on disk, only where the library is looking for the database.","ver":"PECL geoip >= 1.0.1","ret_desc":"Returns the filename of the corresponding database, or NULL on error.","url":"function.geoip-db-filename","name":"geoip_db_filename","params":[{"list":[],"ret_type":"string"}]},"geoip_db_get_all_info":{"desc":"Returns detailed information about all GeoIP database types","long_desc":"The geoip_db_get_all_info() function will return detailed information as a multi-dimensional array about all the GeoIP database types. This function is available even if no databases are installed. It will simply list them as non-available. The names of the different keys of the returning associative array are as follows:","ver":"PECL geoip >= 1.0.1","ret_desc":"Returns the associative array.","url":"function.geoip-db-get-all-info","name":"geoip_db_get_all_info","params":[{"list":[],"ret_type":"array"}]},"geoip_id_by_name":{"desc":"Get the Internet connection type","long_desc":"The geoip_id_by_name() function will return the Internet connection type corresponding to a hostname or an IP address. The return value is numeric and can be compared to the following constants:","ver":"PECL geoip >= 0.2.0","ret_desc":"Returns the connection type.","url":"function.geoip-id-by-name","name":"geoip_id_by_name","params":[{"list":[],"ret_type":"int"}]},"geoip_isp_by_name":{"desc":"Get the Internet Service Provider (ISP) name","long_desc":"The geoip_isp_by_name() function will return the name of the Internet Service Provider (ISP) that an IP is assigned to. This function is currently only available to users who have bought a commercial GeoIP ISP Edition. A warning will be issued if the proper database cannot be located.","ver":"PECL geoip >= 1.0.2","ret_desc":"Returns the ISP name on success, or FALSE if the address cannot be found in the database.","url":"function.geoip-isp-by-name","name":"geoip_isp_by_name","params":[{"list":[],"ret_type":"string"}]},"geoip_org_by_name":{"desc":"Get the organization name","long_desc":"The geoip_org_by_name() function will return the name of the organization that an IP is assigned to. This function is currently only available to users who have bought a commercial GeoIP Organization, ISP or AS Edition. A warning will be issued if the proper database cannot be located.","ver":"PECL geoip >= 0.2.0","ret_desc":"Returns the organization name on success, or FALSE if the address cannot be found in the database.","url":"function.geoip-org-by-name","name":"geoip_org_by_name","params":[{"list":[],"ret_type":"string"}]},"geoip_record_by_name":{"desc":"Returns the detailed City information found in the GeoIP Database","long_desc":"The geoip_record_by_name() function will return the record information corresponding to a hostname or an IP address. This function is available for both GeoLite City Edition and commercial GeoIP City Edition. A warning will be issued if the proper database cannot be located. The names of the different keys of the returning associative array are as follows:","ver":"PECL geoip >= 0.2.0","ret_desc":"Returns the associative array on success, or FALSE if the address cannot be found in the database.","url":"function.geoip-record-by-name","name":"geoip_record_by_name","params":[{"list":[],"ret_type":"array"}]},"geoip_region_by_name":{"desc":"Get the country code and region","long_desc":"The geoip_region_by_name() function will return the country and region corresponding to a hostname or an IP address. This function is currently only available to users who have bought a commercial GeoIP Region Edition. A warning will be issued if the proper database cannot be located. The names of the different keys of the returning associative array are as follows:","ver":"PECL geoip >= 0.2.0","ret_desc":"Returns the associative array on success, or FALSE if the address cannot be found in the database.","url":"function.geoip-region-by-name","name":"geoip_region_by_name","params":[{"list":[],"ret_type":"array"}]},"geoip_region_name_by_code":{"desc":"Returns the region name for some country and region code combo","long_desc":"The geoip_region_name_by_code() function will return the region name corresponding to a country and region code combo. In the United States, the region code corresponds to the two-letter abbreviation of each state. In Canada, the region code corresponds to the two-letter province or territory code as attributed by Canada Post. For the rest of the world, GeoIP uses FIPS 10-4 codes to represent regions. You can check \u00bb\u00a0http:\/\/www.maxmind.com\/app\/fips10_4 for a detailed list of FIPS 10-4 codes. This function is always available if using GeoIP Library version 1.4.1 or newer. The data is taken directly from the GeoIP Library and not from any database.","ver":"PECL geoip >= 1.0.4","ret_desc":"Returns the region name on success, or FALSE if the country and region code combo cannot be found.","url":"function.geoip-region-name-by-code","name":"geoip_region_name_by_code","params":[{"list":[{"type":"string","var":"$country_code","beh":0,"desc":"The two-letter country code (see geoip_country_code_by_name())"},{"type":"string","var":"$region_code","beh":0,"desc":"The two-letter (or digit) region code (see geoip_region_by_name())"}],"ret_type":"string"}]},"geoip_time_zone_by_country_and_region":{"desc":"Returns the time zone for some country and region code combo","long_desc":"The geoip_time_zone_by_country_and_region() function will return the time zone corresponding to a country and region code combo. In the United States, the region code corresponds to the two-letter abbreviation of each state. In Canada, the region code corresponds to the two-letter province or territory code as attributed by Canada Post. For the rest of the world, GeoIP uses FIPS 10-4 codes to represent regions. You can check \u00bb\u00a0http:\/\/www.maxmind.com\/app\/fips10_4 for a detailed list of FIPS 10-4 codes. This function is always available if using GeoIP Library version 1.4.1 or newer. The data is taken directly from the GeoIP Library and not from any database.","ver":"PECL geoip >= 1.0.4","ret_desc":"Returns the time zone on success, or FALSE if the country and region code combo cannot be found.","url":"function.geoip-time-zone-by-country-and-region","name":"geoip_time_zone_by_country_and_region","params":[{"list":[{"type":"string","var":"$country_code","beh":0,"desc":"The two-letter country code (see geoip_country_code_by_name())"},{"type":"string","var":"$region_code","beh":1,"desc":"The two-letter (or digit) region code (see geoip_region_by_name())"}],"ret_type":"string"}]},"get_browser":{"desc":"Tells what the user's browser is capable of","long_desc":"Attempts to determine the capabilities of the user's browser, by looking up the browser's information in the browscap.ini file.","ver":"PHP 4, PHP 5","ret_desc":"The information is returned in an object or an array which will contain various data elements representing, for instance, the browser's major and minor version numbers and ID string; TRUE\/FALSE values for features such as frames, JavaScript, and cookies; and so forth.","url":"function.get-browser","name":"get_browser","params":[{"list":[{"type":"string","var":"$user_agent","beh":1,"desc":"The User Agent to be analyzed. By default, the value of HTTP User-Agent header is used; however, you can alter this (i.e., look up another browser's info) by passing this parameter. You can bypass this parameter with a NULL value."},{"type":"bool","var":"$return_array","beh":1,"desc":"If set to TRUE, this function will return an array instead of an object.","def":"false"}],"ret_type":"mixed"}]},"get_called_class":{"desc":"the \"Late Static Binding\" class name","long_desc":"Gets the name of the class the static method is called in.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the class name. Returns FALSE if called from outside a class.","seealso":[],"url":"function.get-called-class","name":"get_called_class","params":[{"list":[],"ret_type":"string"}]},"get_cfg_var":{"desc":"Gets the value of a PHP configuration option","long_desc":"Gets the value of a PHP configuration option. This function will not return configuration information set when the PHP was compiled, or read from an Apache configuration file. To check whether the system is using a configuration file, try retrieving the value of the cfg_file_path configuration setting. If this is available, a configuration file is being used.","ver":"PHP 4, PHP 5","ret_desc":"Returns the current value of the PHP configuration variable specified by option, or FALSE if an error occurs.","seealso":[],"url":"function.get-cfg-var","name":"get_cfg_var","params":[{"list":[],"ret_type":"string"}]},"get_class":{"desc":"Returns the name of the class of an object","long_desc":"Gets the name of the class of the given object.","ver":"PHP 4, PHP 5","ret_desc":"Returns the name of the class of which object is an instance. Returns FALSE if object is not an object.","seealso":[],"url":"function.get-class","name":"get_class","params":[{"list":[],"ret_type":"string"}]},"get_class_methods":{"desc":"Gets the class methods' names","long_desc":"Gets the class methods names.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of method names defined for the class specified by class_name. In case of an error, it returns NULL.","seealso":[],"url":"function.get-class-methods","name":"get_class_methods","params":[{"list":[],"ret_type":"array"}]},"get_class_vars":{"desc":"Get the default properties of the class","long_desc":"Get the default properties of the given class.","ver":"PHP 4, PHP 5","ret_desc":"Returns an associative array of declared properties visible from the current scope, with their default value. The resulting array elements are in the form of varname => value. In case of an error, it returns FALSE.","seealso":[],"url":"function.get-class-vars","name":"get_class_vars","params":[{"list":[],"ret_type":"array"}]},"get_current_user":{"desc":"Gets the name of the owner of the current PHP script","long_desc":"Returns the name of the owner of the current PHP script.","ver":"PHP 4, PHP 5","ret_desc":"Returns the username as a string.","seealso":[],"url":"function.get-current-user","name":"get_current_user","params":[{"list":[],"ret_type":"string"}]},"get_declared_classes":{"desc":"Returns an array with the name of the defined classes","long_desc":"Gets the declared classes.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of the names of the declared classes in the current script.","seealso":[],"url":"function.get-declared-classes","name":"get_declared_classes","params":[{"list":[],"ret_type":"array"}]},"get_declared_interfaces":{"desc":"Returns an array of all declared interfaces","long_desc":"Gets the declared interfaces.","ver":"PHP 5","ret_desc":"Returns an array of the names of the declared interfaces in the current script.","seealso":[],"url":"function.get-declared-interfaces","name":"get_declared_interfaces","params":[{"list":[],"ret_type":"array"}]},"get_declared_traits":{"desc":"Returns an array of all declared traits","long_desc":"","ver":"No version information available, might only be in SVN","ret_desc":"Returns an array with names of all declared traits in values. Returns NULL in case of a failure.","seealso":[],"url":"function.get-declared-traits","name":"get_declared_traits","params":[{"list":[],"ret_type":"array"}]},"get_defined_constants":{"desc":"Returns an associative array with the names of all the constants and their values","long_desc":"Returns the names and values of all the constants currently defined. This includes those created by extensions as well as those created with the define() function.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"","seealso":[],"url":"function.get-defined-constants","name":"get_defined_constants","params":[{"list":[],"ret_type":"array"}]},"get_defined_functions":{"desc":"Returns an array of all defined functions","long_desc":"Gets an array of all defined functions.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns an multidimensional array containing a list of all defined functions, both built-in (internal) and user-defined. The internal functions will be accessible via $arr[\"internal\"], and the user defined ones using $arr[\"user\"] (see example below).","seealso":[],"url":"function.get-defined-functions","name":"get_defined_functions","params":[{"list":[],"ret_type":"array"}]},"get_defined_vars":{"desc":"Returns an array of all defined variables","long_desc":"This function returns a multidimensional array containing a list of all defined variables, be them environment, server or user-defined variables, within the scope that get_defined_vars() is called.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A multidimensional array with all the variables.","seealso":[],"url":"function.get-defined-vars","name":"get_defined_vars","params":[{"list":[],"ret_type":"array"}]},"get_extension_funcs":{"desc":"Returns an array with the names of the functions of a module","long_desc":"This function returns the names of all the functions defined in the module indicated by module_name.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array with all the functions, or FALSE if module_name is not a valid extension.","seealso":[],"url":"function.get-extension-funcs","name":"get_extension_funcs","params":[{"list":[],"ret_type":"array"}]},"get_headers":{"desc":"Fetches all the headers sent by the server in response to a HTTP request","long_desc":"get_headers() returns an array with the headers sent by the server in response to a HTTP request.","ver":"PHP 5","ret_desc":"Returns an indexed or associative array with the headers, or FALSE on failure.","seealso":[],"url":"function.get-headers","name":"get_headers","params":[{"list":[{"type":"string","var":"$url","beh":0,"desc":"The target URL."},{"type":"int","var":"$format","beh":0,"desc":"If the optional format parameter is set to non-zero, get_headers() parses the response and sets the array's keys.","def":0}],"ret_type":"array"}]},"get_html_translation_table":{"desc":"Returns the translation table used by htmlspecialchars() and htmlentities()","long_desc":"get_html_translation_table() will return the translation table that is used internally for htmlspecialchars() and htmlentities().","ver":"PHP 4, PHP 5","ret_desc":"Returns the translation table as an array, with the original characters as keys and entities as values.","seealso":[],"url":"function.get-html-translation-table","name":"get_html_translation_table","params":[{"list":[{"type":"int","var":"$table","beh":1,"desc":"Which table to return. Either HTML_ENTITIES or HTML_SPECIALCHARS.","def":"HTML_SPECIALCHARS"},{"type":"int","var":"$flags","beh":1,"desc":"A bitmask of one or more of the following flags, which specify which quotes the table will contain as well as which document type the table is for. The default is ENT_COMPAT | ENT_HTML401.","def":"ENT_COMPAT | ENT_HTML401"},{"type":"string","var":"$encoding","beh":1,"desc":"Encoding to use. If omitted, the default value for this argument is ISO-8859-1 in versions of PHP prior to 5.4.0, and UTF-8 from PHP 5.4.0 onwards. The following character sets are supported:","def":"'UTF-8'"}],"ret_type":"array"}]},"get_include_path":{"desc":"Gets the current include_path configuration option","long_desc":"Gets the current include_path configuration option value.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the path, as a string.","seealso":[],"url":"function.get-include-path","name":"get_include_path","params":[{"list":[],"ret_type":"string"}]},"get_included_files":{"desc":"Returns an array with the names of included or required files","long_desc":"Gets the names of all files that have been included using include(), include_once(), require() or require_once().","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of the names of all files.","seealso":[],"url":"function.get-included-files","name":"get_included_files","params":[{"list":[],"ret_type":"array"}]},"get_loaded_extensions":{"desc":"Returns an array with the names of all modules compiled and loaded","long_desc":"This function returns the names of all the modules compiled and loaded in the PHP interpreter.","ver":"PHP 4, PHP 5","ret_desc":"Returns an indexed array of all the modules names.","seealso":[],"url":"function.get-loaded-extensions","name":"get_loaded_extensions","params":[{"list":[],"ret_type":"array"}]},"get_magic_quotes_gpc":{"desc":"Gets the current configuration setting of magic_quotes_gpc","long_desc":"Returns the current configuration setting of magic_quotes_gpc Keep in mind that attempting to set magic_quotes_gpc at runtime will not work. For more information about magic_quotes, see this security section.","ver":"PHP 4, PHP 5","ret_desc":"Returns 0 if magic_quotes_gpc is off, 1 otherwise.","seealso":[],"url":"function.get-magic-quotes-gpc","name":"get_magic_quotes_gpc","params":[{"list":[],"ret_type":"int"}]},"get_magic_quotes_runtime":{"desc":"Gets the current active configuration setting of magic_quotes_runtime","long_desc":"Returns the current active configuration setting of magic_quotes_runtime.","ver":"PHP 4, PHP 5","ret_desc":"Returns 0 if magic_quotes_runtime is off, 1 otherwise.","seealso":[],"url":"function.get-magic-quotes-runtime","name":"get_magic_quotes_runtime","params":[{"list":[],"ret_type":"int"}]},"get_meta_tags":{"desc":"Extracts all meta tag content attributes from a file and returns an array","long_desc":"Opens filename and parses it line by line for <meta> tags in the file. The parsing stops at <\/head>.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array with all the parsed meta tags.","seealso":[],"url":"function.get-meta-tags","name":"get_meta_tags","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The path to the HTML file, as a string. This can be a local file or an URL."},{"type":"bool","var":"$use_include_path","beh":0,"desc":"Setting use_include_path to TRUE will result in PHP trying to open the file along the standard include path as per the include_path directive. This is used for local files, not URLs.","def":"false"}],"ret_type":"array"}]},"get_object_vars":{"desc":"Gets the properties of the given object","long_desc":"Gets the accessible non-static properties of the given object according to scope.","ver":"PHP 4, PHP 5","ret_desc":"Returns an associative array of defined object accessible non-static properties for the specified object in scope. If a property have not been assigned a value, it will be returned with a NULL value.","seealso":[],"url":"function.get-object-vars","name":"get_object_vars","params":[{"list":[],"ret_type":"array"}]},"get_parent_class":{"desc":"Retrieves the parent class name for object or class","long_desc":"Retrieves the parent class name for object or class.","ver":"PHP 4, PHP 5","ret_desc":"Returns the name of the parent class of the class of which object is an instance or the name.","seealso":[],"url":"function.get-parent-class","name":"get_parent_class","params":[{"list":[],"ret_type":"string"}]},"get_required_files":{"desc":"Alias of get_included_files()","long_desc":"This function is an alias of: get_included_files().","ver":"PHP 4, PHP 5","url":"function.get-required-files","name":"get_required_files","params":[]},"get_resource_type":{"desc":"Returns the resource type","long_desc":"This function gets the type of the given resource.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"If the given handle is a resource, this function will return a string representing its type. If the type is not identified by this function, the return value will be the string Unknown.","url":"function.get-resource-type","name":"get_resource_type","params":[{"list":[],"ret_type":"string"}]},"getallheaders":{"desc":"Fetch all HTTP request headers","long_desc":"Fetches all HTTP headers from the current request. This function is an alias for apache_request_headers(). Please read the apache_request_headers() documentation for more information on how this function works.","ver":"PHP 4, PHP 5","ret_desc":"An associative array of all the HTTP headers in the current request, or FALSE on failure.","seealso":[],"url":"function.getallheaders","name":"getallheaders","params":[{"list":[],"ret_type":"array"}]},"getcwd":{"desc":"Gets the current working directory","long_desc":"Gets the current working directory.","ver":"PHP 4, PHP 5","ret_desc":"Returns the current working directory on success, or FALSE on failure.","seealso":[],"url":"function.getcwd","name":"getcwd","params":[{"list":[],"ret_type":"string"}]},"getdate":{"desc":"Get date\/time information","long_desc":"Returns an associative array containing the date information of the timestamp, or the current local time if no timestamp is given.","ver":"PHP 4, PHP 5","ret_desc":"Returns an associative array of information related to the timestamp. Elements from the returned associative array are as follows:","seealso":[],"url":"function.getdate","name":"getdate","params":[{"list":[],"ret_type":"array"}]},"getenv":{"desc":"Gets the value of an environment variable","long_desc":"Gets the value of an environment variable. You can see a list of all the environmental variables by using phpinfo(). Many of these variables are listed within \u00bb\u00a0RFC 3875, specifically section 4.1, \"Request Meta-Variables\".","ver":"PHP 4, PHP 5","ret_desc":"Returns the value of the environment variable varname, or FALSE if the environment variable varname does not exist.","seealso":[],"url":"function.getenv","name":"getenv","params":[{"list":[],"ret_type":"string"}]},"gethostbyaddr":{"desc":"Get the Internet host name corresponding to a given IP address","long_desc":"Returns the host name of the Internet host specified by ip_address.","ver":"PHP 4, PHP 5","ret_desc":"Returns the host name on success, the unmodified ip_address on failure, or FALSE on malformed input.","seealso":[],"url":"function.gethostbyaddr","name":"gethostbyaddr","params":[{"list":[],"ret_type":"string"}]},"gethostbyname":{"desc":"Get the IPv4 address corresponding to a given Internet host name","long_desc":"Returns the IPv4 address of the Internet host specified by hostname.","ver":"PHP 4, PHP 5","ret_desc":"Returns the IPv4 address or a string containing the unmodified hostname on failure.","seealso":[],"url":"function.gethostbyname","name":"gethostbyname","params":[{"list":[],"ret_type":"string"}]},"gethostbynamel":{"desc":"Get a list of IPv4 addresses corresponding to a given Internet host name","long_desc":"Returns a list of IPv4 addresses to which the Internet host specified by hostname resolves.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of IPv4 addresses or FALSE if hostname could not be resolved.","seealso":[],"url":"function.gethostbynamel","name":"gethostbynamel","params":[{"list":[],"ret_type":"array"}]},"gethostname":{"desc":"Gets the host name","long_desc":"gethostname() gets the standard host name for the local machine.","ver":"PHP >= 5.3.0","ret_desc":"Returns a string with the hostname on success, otherwise FALSE is returned.","seealso":[],"url":"function.gethostname","name":"gethostname","params":[{"list":[],"ret_type":"string"}]},"getimagesize":{"desc":"Get the size of an image","long_desc":"The getimagesize() function will determine the size of any given image file and return the dimensions along with the file type and a height\/width text string to be used inside a normal HTML IMG tag and the correspondant HTTP content type. getimagesize() can also return some more information in imageinfo parameter.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array with 7 elements.","seealso":[],"url":"function.getimagesize","name":"getimagesize","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"This parameter specifies the file you wish to retrieve information about. It can reference a local file or (configuration permitting) a remote file using one of the supported streams."},{"type":"array","var":"&$imageinfo","beh":1,"desc":"This optional parameter allows you to extract some extended information from the image file. Currently, this will return the different JPG APP markers as an associative array. Some programs use these APP markers to embed text information in images. A very common one is to embed \u00bb\u00a0IPTC information in the APP13 marker. You can use the iptcparse() function to parse the binary APP13 marker into something readable."}],"ret_type":"array"}]},"getimagesizefromstring":{"desc":"Get the size of an image from a string","long_desc":"Identical to getimagesize() except that getimagesizefromstring() accepts a string instead of a file name as the first parameter. See the getimagesize() documentation for details on how this function works.","ver":"PHP 5 >= 5.4.0","ret_desc":"See getimagesize().","seealso":[],"url":"function.getimagesizefromstring","name":"getimagesizefromstring","params":[{"list":[{"type":"string","var":"$imagedata","beh":0,"desc":"The image data, as a string."},{"type":"array","var":"&$imageinfo","beh":1,"desc":"See getimagesize()."}],"ret_type":"array"}]},"getlastmod":{"desc":"Gets time of last page modification","long_desc":"Gets the time of the last modification of the current page. If you're interested in getting the last modification time of a different file, consider using filemtime().","ver":"PHP 4, PHP 5","ret_desc":"Returns the time of the last modification of the current page. The value returned is a Unix timestamp, suitable for feeding to date(). Returns FALSE on error.","seealso":[],"url":"function.getlastmod","name":"getlastmod","params":[{"list":[],"ret_type":"int"}]},"getmxrr":{"desc":"Get MX records corresponding to a given Internet host name","long_desc":"Searches DNS for MX records corresponding to hostname.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if any records are found; returns FALSE if no records were found or if an error occurred.","seealso":[],"url":"function.getmxrr","name":"getmxrr","params":[{"list":[{"type":"string","var":"$hostname","beh":0,"desc":"The Internet host name."},{"type":"array","var":"&$mxhosts","beh":1,"desc":"A list of the MX records found is placed into the array mxhosts."},{"type":"array","var":"&$weight","beh":1,"desc":"If the weight array is given, it will be filled with the weight information gathered."}],"ret_type":"bool"}]},"getmygid":{"desc":"Get PHP script owner's GID","long_desc":"Gets the group ID of the current script.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns the group ID of the current script, or FALSE on error.","seealso":[],"url":"function.getmygid","name":"getmygid","params":[{"list":[],"ret_type":"int"}]},"getmyinode":{"desc":"Gets the inode of the current script","long_desc":"Gets the inode of the current script.","ver":"PHP 4, PHP 5","ret_desc":"Returns the current script's inode as an integer, or FALSE on error.","seealso":[],"url":"function.getmyinode","name":"getmyinode","params":[{"list":[],"ret_type":"int"}]},"getmypid":{"desc":"Gets PHP's process ID","long_desc":"Gets the current PHP process ID.","ver":"PHP 4, PHP 5","ret_desc":"Returns the current PHP process ID, or FALSE on error.","seealso":[],"url":"function.getmypid","name":"getmypid","params":[{"list":[],"ret_type":"int"}]},"getmyuid":{"desc":"Gets PHP script owner's UID","long_desc":"Gets the user ID of the current script.","ver":"PHP 4, PHP 5","ret_desc":"Returns the user ID of the current script, or FALSE on error.","seealso":[],"url":"function.getmyuid","name":"getmyuid","params":[{"list":[],"ret_type":"int"}]},"getopt":{"desc":"Gets options from the command line argument list","long_desc":"Parses options passed to the script.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"This function will return an array of option \/ argument pairs or FALSE on failure.","seealso":[],"url":"function.getopt","name":"getopt","params":[{"list":[{"type":"string","var":"$options","beh":0,"desc":""},{"type":"array","var":"$longopts","beh":1,"desc":""}],"ret_type":"array"}]},"getprotobyname":{"desc":"Get protocol number associated with protocol name","long_desc":"getprotobyname() returns the protocol number associated with the protocol name as per \/etc\/protocols.","ver":"PHP 4, PHP 5","ret_desc":"Returns the protocol number, or FALSE on failure.","seealso":[],"url":"function.getprotobyname","name":"getprotobyname","params":[{"list":[],"ret_type":"int"}]},"getprotobynumber":{"desc":"Get protocol name associated with protocol number","long_desc":"getprotobynumber() returns the protocol name associated with protocol number as per \/etc\/protocols.","ver":"PHP 4, PHP 5","ret_desc":"Returns the protocol name as a string, or FALSE on failure.","seealso":[],"url":"function.getprotobynumber","name":"getprotobynumber","params":[{"list":[],"ret_type":"string"}]},"getrandmax":{"desc":"Show largest possible random value","long_desc":"Returns the maximum value that can be returned by a call to rand().","ver":"PHP 4, PHP 5","ret_desc":"The largest possible random value returned by rand()","seealso":[],"url":"function.getrandmax","name":"getrandmax","params":[{"list":[],"ret_type":"int"}]},"getrusage":{"desc":"Gets the current resource usages","long_desc":"This is an interface to getrusage(2). It gets data returned from the system call.","ver":"PHP 4, PHP 5","ret_desc":"Returns an associative array containing the data returned from the system call. All entries are accessible by using their documented field names.","seealso":[],"url":"function.getrusage","name":"getrusage","params":[{"list":[],"ret_type":"array"}]},"getservbyname":{"desc":"Get port number associated with an Internet service and protocol","long_desc":"getservbyname() returns the Internet port which corresponds to service for the specified protocol as per \/etc\/services.","ver":"PHP 4, PHP 5","ret_desc":"Returns the port number, or FALSE if service or protocol is not found.","seealso":[],"url":"function.getservbyname","name":"getservbyname","params":[{"list":[{"type":"string","var":"$service","beh":0,"desc":"The Internet service name, as a string."},{"type":"string","var":"$protocol","beh":0,"desc":"protocol is either \"tcp\" or \"udp\" (in lowercase)."}],"ret_type":"int"}]},"getservbyport":{"desc":"Get Internet service which corresponds to port and protocol","long_desc":"getservbyport() returns the Internet service associated with port for the specified protocol as per \/etc\/services.","ver":"PHP 4, PHP 5","ret_desc":"Returns the Internet service name as a string.","seealso":[],"url":"function.getservbyport","name":"getservbyport","params":[{"list":[{"type":"int","var":"$port","beh":0,"desc":"The port number."},{"type":"string","var":"$protocol","beh":0,"desc":"protocol is either \"tcp\" or \"udp\" (in lowercase)."}],"ret_type":"string"}]},"gettext":{"desc":"Lookup a message in the current domain","long_desc":"Looks up a message in the current domain.","ver":"PHP 4, PHP 5","ret_desc":"Returns a translated string if one is found in the translation table, or the submitted message if not found.","seealso":[],"url":"function.gettext","name":"gettext","params":[{"list":[],"ret_type":"string"}]},"gettimeofday":{"desc":"Get current time","long_desc":"This is an interface to gettimeofday(2). It returns an associative array containing the data returned from the system call.","ver":"PHP 4, PHP 5","ret_desc":"By default an array is returned. If return_float is set, then a float is returned.","url":"function.gettimeofday","name":"gettimeofday","params":[{"list":[],"ret_type":"mixed"}]},"gettype":{"desc":"Get the type of a variable","long_desc":"Returns the type of the PHP variable var. For type checking, use is_* functions.","ver":"PHP 4, PHP 5","ret_desc":"Possibles values for the returned string are:","seealso":[],"url":"function.gettype","name":"gettype","params":[{"list":[],"ret_type":"string"}]},"glob":{"desc":"Find pathnames matching a pattern","long_desc":"The glob() function searches for all the pathnames matching pattern according to the rules used by the libc glob() function, which is similar to the rules used by common shells.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns an array containing the matched files\/directories, an empty array if no file matched or FALSE on error.","seealso":[],"url":"function.glob","name":"glob","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"The pattern. No tilde expansion or parameter substitution is done."},{"type":"int","var":"$flags","beh":0,"desc":"Valid flags:","def":0}],"ret_type":"array"}]},"gmdate":{"desc":"Format a GMT\/UTC date\/time","long_desc":"Identical to the date() function except that the time returned is Greenwich Mean Time (GMT).","ver":"PHP 4, PHP 5","ret_desc":"Returns a formatted date string. If a non-numeric value is used for timestamp, FALSE is returned and an E_WARNING level error is emitted.","seealso":[],"url":"function.gmdate","name":"gmdate","params":[{"list":[{"type":"string","var":"$format","beh":0,"desc":"The format of the outputted date string. See the formatting options for the date() function."},{"type":"int","var":"$timestamp","beh":0,"desc":"The optional timestamp parameter is an integer Unix timestamp that defaults to the current local time if a timestamp is not given. In other words, it defaults to the value of time().","def":"time()"}],"ret_type":"string"}]},"gmmktime":{"desc":"Get Unix timestamp for a GMT date","long_desc":"Identical to mktime() except the passed parameters represents a GMT date. gmmktime() internally uses mktime() so only times valid in derived local time can be used. Like mktime(), arguments may be left out in order from right to left, with any omitted arguments being set to the current corresponding GMT value.","ver":"PHP 4, PHP 5","ret_desc":"Returns a integer Unix timestamp.","seealso":[],"url":"function.gmmktime","name":"gmmktime","params":[{"list":[{"type":"int","var":"$hour","beh":1,"desc":"The number of the hour relative to the start of the day determined by month, day and year. Negative values reference the hour before midnight of the day in question. Values greater than 23 reference the appropriate hour in the following day(s).","def":"gmdate(\"H\")"},{"type":"int","var":"$minute","beh":1,"desc":"The number of the minute relative to the start of the hour. Negative values reference the minute in the previous hour. Values greater than 59 reference the appropriate minute in the following hour(s).","def":"gmdate(\"i\")"},{"type":"int","var":"$second","beh":1,"desc":"The number of seconds relative to the start of the minute. Negative values reference the second in the previous minute. Values greater than 59 reference the appropriate second in the following minute(s).","def":"gmdate(\"s\")"},{"type":"int","var":"$month","beh":1,"desc":"The number of the month relative to the end of the previous year. Values 1 to 12 reference the normal calendar months of the year in question. Values less than 1 (including negative values) reference the months in the previous year in reverse order, so 0 is December, -1 is November, etc. Values greater than 12 reference the appropriate month in the following year(s).","def":"gmdate(\"n\")"},{"type":"int","var":"$day","beh":1,"desc":"The number of the day relative to the end of the previous month. Values 1 to 28, 29, 30 or 31 (depending upon the month) reference the normal days in the relevant month. Values less than 1 (including negative values) reference the days in the previous month, so 0 is the last day of the previous month, -1 is the day before that, etc. Values greater than the number of days in the relevant month reference the appropriate day in the following month(s).","def":"gmdate(\"j\")"},{"type":"int","var":"$year","beh":1,"desc":"The year","def":"gmdate(\"Y\")"},{"type":"int","var":"$is_dst","beh":1,"desc":"Parameters always represent a GMT date so is_dst doesn't influence the result.","def":-1}],"ret_type":"int"}]},"gmp_abs":{"desc":"Absolute value","long_desc":"Get the absolute value of a number.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns the absolute value of a, as a GMP number.","url":"function.gmp-abs","name":"gmp_abs","params":[{"list":[],"ret_type":"resource"}]},"gmp_add":{"desc":"Add numbers","long_desc":"Add two numbers.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number representing the sum of the arguments.","url":"function.gmp-add","name":"gmp_add","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"A number that will be added. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$b","beh":0,"desc":"A number that will be added. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."}],"ret_type":"resource"}]},"gmp_and":{"desc":"Bitwise AND","long_desc":"Calculates bitwise AND of two GMP numbers.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number representing the bitwise AND comparison.","url":"function.gmp-and","name":"gmp_and","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$b","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."}],"ret_type":"resource"}]},"gmp_clrbit":{"desc":"Clear bit","long_desc":"Clears (sets to 0) bit index in a. The index starts at 0.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number resource.","seealso":[],"url":"function.gmp-clrbit","name":"gmp_clrbit","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"int","var":"$index","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."}],"ret_type":"void"}]},"gmp_cmp":{"desc":"Compare numbers","long_desc":"Compares two numbers.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns a positive value if a > b, zero if a = b and a negative value if a < b.","url":"function.gmp-cmp","name":"gmp_cmp","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$b","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."}],"ret_type":"int"}]},"gmp_com":{"desc":"Calculates one's complement","long_desc":"Returns the one's complement of a.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns the one's complement of a, as a GMP number.","url":"function.gmp-com","name":"gmp_com","params":[{"list":[],"ret_type":"resource"}]},"gmp_div":{"desc":"Alias of gmp_div_q()","long_desc":"This function is an alias of: gmp_div_q().","ver":"PHP 4 >= 4.0.4, PHP 5","url":"function.gmp-div","name":"gmp_div","params":[]},"gmp_div_q":{"desc":"Divide numbers","long_desc":"Divides a by b and returns the integer result.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number resource.","seealso":[],"url":"function.gmp-div-q","name":"gmp_div_q","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"The number being divided. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$b","beh":1,"desc":"The number that a is being divided by. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"int","var":"$round","beh":1,"desc":"The result rounding is defined by the round, which can have the following values: It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number.","def":"GMP_ROUND_ZERO"}],"ret_type":"resource"}]},"gmp_div_qr":{"desc":"Divide numbers and get quotient and remainder","long_desc":"The function divides n by d.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns an array, with the first element being [n\/d] (the integer result of the division) and the second being (n - [n\/d] * d) (the remainder of the division).","seealso":[],"url":"function.gmp-div-qr","name":"gmp_div_qr","params":[{"list":[{"type":"resource","var":"$n","beh":0,"desc":"The number being divided. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$d","beh":1,"desc":"The number that n is being divided by. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"int","var":"$round","beh":1,"desc":"See the gmp_div_q() function for description of the round argument.","def":"GMP_ROUND_ZERO"}],"ret_type":"array"}]},"gmp_div_r":{"desc":"Remainder of the division of numbers","long_desc":"Calculates remainder of the integer division of n by d. The remainder has the sign of the n argument, if not zero.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"The remainder, as a GMP number.","seealso":[],"url":"function.gmp-div-r","name":"gmp_div_r","params":[{"list":[{"type":"resource","var":"$n","beh":0,"desc":"The number being divided. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$d","beh":1,"desc":"The number that n is being divided by. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"int","var":"$round","beh":1,"desc":"See the gmp_div_q() function for description of the round argument.","def":"GMP_ROUND_ZERO"}],"ret_type":"resource"}]},"gmp_divexact":{"desc":"Exact division of numbers","long_desc":"Divides n by d, using fast \"exact division\" algorithm. This function produces correct results only when it is known in advance that d divides n.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number resource.","url":"function.gmp-divexact","name":"gmp_divexact","params":[{"list":[{"type":"resource","var":"$n","beh":0,"desc":"The number being divided. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$d","beh":0,"desc":"The number that a is being divided by. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."}],"ret_type":"resource"}]},"gmp_fact":{"desc":"Factorial","long_desc":"Calculates factorial (a!) of a.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number resource.","url":"function.gmp-fact","name":"gmp_fact","params":[{"list":[],"ret_type":"resource"}]},"gmp_gcd":{"desc":"Calculate GCD","long_desc":"Calculate greatest common divisor of a and b. The result is always positive even if either of, or both, input operands are negative.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A positive GMP number that divides into both a and b.","url":"function.gmp-gcd","name":"gmp_gcd","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$b","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."}],"ret_type":"resource"}]},"gmp_gcdext":{"desc":"Calculate GCD and multipliers","long_desc":"Calculates g, s, and t, such that a*s + b*t = g = gcd(a,b), where gcd is the greatest common divisor. Returns an array with respective elements g, s and t. This function can be used to solve linear Diophantine equations in two variables. These are equations that allow only integer solutions and have the form: a*x + b*y = c. For more information, go to the \u00bb\u00a0\"Diophantine Equation\" page at MathWorld","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"An array of GMP numbers.","url":"function.gmp-gcdext","name":"gmp_gcdext","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$b","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."}],"ret_type":"array"}]},"gmp_hamdist":{"desc":"Hamming distance","long_desc":"Returns the hamming distance between a and b. Both operands should be non-negative.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number resource.","seealso":[],"url":"function.gmp-hamdist","name":"gmp_hamdist","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number. It should be positive."},{"type":"resource","var":"$b","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number. It should be positive."}],"ret_type":"int"}]},"gmp_init":{"desc":"Create GMP number","long_desc":"Creates a GMP number from an integer or string.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number resource.","url":"function.gmp-init","name":"gmp_init","params":[{"list":[{"type":"mixed","var":"$number","beh":0,"desc":"An integer or a string. The string representation can be decimal, hexadecimal or octal."},{"type":"int","var":"$base","beh":0,"desc":"The base. The base may vary from 2 to 36. If base is 0 (default value), the actual base is determined from the leading characters: if the first two characters are 0x or 0X, hexadecimal is assumed, otherwise if the first character is \"0\", octal is assumed, otherwise decimal is assumed.","def":0}],"ret_type":"resource"}]},"gmp_intval":{"desc":"Convert GMP number to integer","long_desc":"This function allows to convert GMP number to integer.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"An integer value of gmpnumber.","url":"function.gmp-intval","name":"gmp_intval","params":[{"list":[],"ret_type":"int"}]},"gmp_invert":{"desc":"Inverse by modulo","long_desc":"Computes the inverse of a modulo b.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number on success or FALSE if an inverse does not exist.","url":"function.gmp-invert","name":"gmp_invert","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$b","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."}],"ret_type":"resource"}]},"gmp_jacobi":{"desc":"Jacobi symbol","long_desc":"Computes \u00bb\u00a0Jacobi symbol of a and p. p should be odd and must be positive.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number resource.","url":"function.gmp-jacobi","name":"gmp_jacobi","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$p","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number. Should be odd and must be positive."}],"ret_type":"int"}]},"gmp_legendre":{"desc":"Legendre symbol","long_desc":"Compute the \u00bb\u00a0 Legendre symbol of a and p. p should be odd and must be positive.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number resource.","url":"function.gmp-legendre","name":"gmp_legendre","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$p","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number. Should be odd and must be positive."}],"ret_type":"int"}]},"gmp_mod":{"desc":"Modulo operation","long_desc":"Calculates n modulo d. The result is always non-negative, the sign of d is ignored.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number resource.","url":"function.gmp-mod","name":"gmp_mod","params":[{"list":[{"type":"resource","var":"$n","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$d","beh":0,"desc":"The modulo that is being evaluated. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."}],"ret_type":"resource"}]},"gmp_mul":{"desc":"Multiply numbers","long_desc":"Multiplies a by b and returns the result.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number resource.","url":"function.gmp-mul","name":"gmp_mul","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"A number that will be multiplied by b. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$b","beh":0,"desc":"A number that will be multiplied by a. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."}],"ret_type":"resource"}]},"gmp_neg":{"desc":"Negate number","long_desc":"Returns the negative value of a number.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns -a, as a GMP number.","url":"function.gmp-neg","name":"gmp_neg","params":[{"list":[],"ret_type":"resource"}]},"gmp_nextprime":{"desc":"Find next prime number","long_desc":"Find next prime number","ver":"PHP 5 >= 5.2.0","ret_desc":"Return the next prime number greater than a, as a GMP number.","url":"function.gmp-nextprime","name":"gmp_nextprime","params":[{"list":[],"ret_type":"resource"}]},"gmp_or":{"desc":"Bitwise OR","long_desc":"Calculates bitwise inclusive OR of two GMP numbers.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number resource.","url":"function.gmp-or","name":"gmp_or","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$b","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."}],"ret_type":"resource"}]},"gmp_perfect_square":{"desc":"Perfect square check","long_desc":"Check if a number is a perfect square.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE if a is a perfect square, FALSE otherwise.","seealso":[],"url":"function.gmp-perfect-square","name":"gmp_perfect_square","params":[{"list":[],"ret_type":"bool"}]},"gmp_popcount":{"desc":"Population count","long_desc":"Get the population count.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"The population count of a, as an integer.","url":"function.gmp-popcount","name":"gmp_popcount","params":[{"list":[],"ret_type":"int"}]},"gmp_pow":{"desc":"Raise number into power","long_desc":"Raise base into power exp.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"The new (raised) number, as a GMP number. The case of 0^0 yields 1.","url":"function.gmp-pow","name":"gmp_pow","params":[{"list":[{"type":"resource","var":"$base","beh":0,"desc":"The base number. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"int","var":"$exp","beh":0,"desc":"The positive power to raise the base."}],"ret_type":"resource"}]},"gmp_powm":{"desc":"Raise number into power with modulo","long_desc":"Calculate (base raised into power exp) modulo mod. If exp is negative, result is undefined.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"The new (raised) number, as a GMP number.","url":"function.gmp-powm","name":"gmp_powm","params":[{"list":[{"type":"resource","var":"$base","beh":0,"desc":"The base number. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$exp","beh":0,"desc":"The positive power to raise the base. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$mod","beh":1,"desc":"The modulo. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."}],"ret_type":"resource"}]},"gmp_prob_prime":{"desc":"Check if number is \"probably prime\"","long_desc":"The function uses Miller-Rabin's probabilistic test to check if a number is a prime.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"If this function returns 0, a is definitely not prime. If it returns 1, then a is \"probably\" prime. If it returns 2, then a is surely prime.","url":"function.gmp-prob-prime","name":"gmp_prob_prime","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"The number being checked as a prime. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"int","var":"$reps","beh":0,"desc":"Reasonable values of reps vary from 5 to 10 (default being 10); a higher value lowers the probability for a non-prime to pass as a \"probable\" prime. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number.","def":10}],"ret_type":"int"}]},"gmp_random":{"desc":"Random number","long_desc":"Generate a random number. The number will be between zero and the number of bits per limb multiplied by limiter. If limiter is negative, negative numbers are generated. A limb is an internal GMP mechanism. The number of bits in a limb is not static, and can vary from system to system. Generally, the number of bits in a limb is either 16 or 32, but this is not guaranteed.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A random GMP number.","url":"function.gmp-random","name":"gmp_random","params":[{"list":[],"ret_type":"resource"}]},"gmp_scan0":{"desc":"Scan for 0","long_desc":"Scans a, starting with bit start, towards more significant bits, until the first clear bit is found.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns the index of the found bit, as an integer. The index starts from 0.","url":"function.gmp-scan0","name":"gmp_scan0","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"The number to scan. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"int","var":"$start","beh":0,"desc":"The starting bit."}],"ret_type":"int"}]},"gmp_scan1":{"desc":"Scan for 1","long_desc":"Scans a, starting with bit start, towards more significant bits, until the first set bit is found.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns the index of the found bit, as an integer. If no set bit is found, -1 is returned.","url":"function.gmp-scan1","name":"gmp_scan1","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"The number to scan. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"int","var":"$start","beh":0,"desc":"The starting bit."}],"ret_type":"int"}]},"gmp_setbit":{"desc":"Set bit","long_desc":"Sets bit index in a.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number resource.","seealso":[],"url":"function.gmp-setbit","name":"gmp_setbit","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"The number being set to. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"int","var":"$index","beh":1,"desc":"The set bit."},{"type":"bool","var":"$set_clear","beh":1,"desc":"Defines if the bit is set to 0 or 1. By default the bit is set to 1. Index starts at 0.","def":"true"}],"ret_type":"void"}]},"gmp_sign":{"desc":"Sign of number","long_desc":"Checks the sign of a number.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns 1 if a is positive, -1 if a is negative, and 0 if a is zero.","seealso":[],"url":"function.gmp-sign","name":"gmp_sign","params":[{"list":[],"ret_type":"int"}]},"gmp_sqrt":{"desc":"Calculate square root","long_desc":"Calculates square root of a.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"The integer portion of the square root, as a GMP number.","url":"function.gmp-sqrt","name":"gmp_sqrt","params":[{"list":[],"ret_type":"resource"}]},"gmp_sqrtrem":{"desc":"Square root with remainder","long_desc":"Calculate the square root of a number, with remainder.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns array where first element is the integer square root of a and the second is the remainder (i.e., the difference between a and the first element squared).","url":"function.gmp-sqrtrem","name":"gmp_sqrtrem","params":[{"list":[],"ret_type":"array"}]},"gmp_strval":{"desc":"Convert GMP number to string","long_desc":"Convert GMP number to string representation in base base. The default base is 10.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"The number, as a string.","url":"function.gmp-strval","name":"gmp_strval","params":[{"list":[{"type":"resource","var":"$gmpnumber","beh":0,"desc":"The GMP number that will be converted to a string. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"int","var":"$base","beh":0,"desc":"The base of the returned number. The default base is 10. Allowed values for the base are from 2 to 62 and -2 to -36.","def":10}],"ret_type":"string"}]},"gmp_sub":{"desc":"Subtract numbers","long_desc":"Subtracts b from a and returns the result.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number resource.","url":"function.gmp-sub","name":"gmp_sub","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"The number being subtracted from. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$b","beh":0,"desc":"The number subtracted from a. It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."}],"ret_type":"resource"}]},"gmp_testbit":{"desc":"Tests if a bit is set","long_desc":"Tests if the specified bit is set.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gmp-testbit","name":"gmp_testbit","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"int","var":"$index","beh":0,"desc":"The bit to test"}],"ret_type":"bool"}]},"gmp_xor":{"desc":"Bitwise XOR","long_desc":"Calculates bitwise exclusive OR (XOR) of two GMP numbers.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"A GMP number resource.","url":"function.gmp-xor","name":"gmp_xor","params":[{"list":[{"type":"resource","var":"$a","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."},{"type":"resource","var":"$b","beh":0,"desc":"It can be either a GMP number resource, or a numeric string given that it is possible to convert the latter to a number."}],"ret_type":"resource"}]},"gmstrftime":{"desc":"Format a GMT\/UTC time\/date according to locale settings","long_desc":"Behaves the same as strftime() except that the time returned is Greenwich Mean Time (GMT). For example, when run in Eastern Standard Time (GMT -0500), the first line below prints \"Dec 31 1998 20:00:00\", while the second prints \"Jan 01 1999 01:00:00\".","ver":"PHP 4, PHP 5","ret_desc":"Returns a string formatted according to the given format string using the given timestamp or the current local time if no timestamp is given. Month and weekday names and other language dependent strings respect the current locale set with setlocale().","seealso":[],"url":"function.gmstrftime","name":"gmstrftime","params":[{"list":[{"type":"string","var":"$format","beh":0,"desc":"See description in strftime()."},{"type":"int","var":"$timestamp","beh":0,"desc":"The optional timestamp parameter is an integer Unix timestamp that defaults to the current local time if a timestamp is not given. In other words, it defaults to the value of time().","def":"time()"}],"ret_type":"string"}]},"gnupg_adddecryptkey":{"desc":"Add a key for decryption","ver":"PECL gnupg >= 0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.gnupg-adddecryptkey","name":"gnupg_adddecryptkey","params":[{"list":[{"type":"resource","var":"$identifier","beh":0,"desc":"The gnupg identifier, from a call to gnupg_init() or gnupg."},{"type":"string","var":"$fingerprint","beh":0,"desc":"The fingerprint key."},{"type":"string","var":"$passphrase","beh":1,"desc":"The pass phrase."}],"ret_type":"bool"}]},"gnupg_addencryptkey":{"desc":"Add a key for encryption","ver":"PECL gnupg >= 0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.gnupg-addencryptkey","name":"gnupg_addencryptkey","params":[{"list":[{"type":"resource","var":"$identifier","beh":0,"desc":"The gnupg identifier, from a call to gnupg_init() or gnupg."},{"type":"string","var":"$fingerprint","beh":0,"desc":"The fingerprint key."}],"ret_type":"bool"}]},"gnupg_addsignkey":{"desc":"Add a key for signing","ver":"PECL gnupg >= 0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.gnupg-addsignkey","name":"gnupg_addsignkey","params":[{"list":[{"type":"resource","var":"$identifier","beh":0,"desc":"The gnupg identifier, from a call to gnupg_init() or gnupg."},{"type":"string","var":"$fingerprint","beh":1,"desc":"The fingerprint key."},{"type":"string","var":"$passphrase","beh":1,"desc":"The pass phrase."}],"ret_type":"bool"}]},"gnupg_cleardecryptkeys":{"desc":"Removes all keys which were set for decryption before","ver":"PECL gnupg >= 0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.gnupg-cleardecryptkeys","name":"gnupg_cleardecryptkeys","params":[{"list":[],"ret_type":"bool"}]},"gnupg_clearencryptkeys":{"desc":"Removes all keys which were set for encryption before","ver":"PECL gnupg >= 0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.gnupg-clearencryptkeys","name":"gnupg_clearencryptkeys","params":[{"list":[],"ret_type":"bool"}]},"gnupg_clearsignkeys":{"desc":"Removes all keys which were set for signing before","ver":"PECL gnupg >= 0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.gnupg-clearsignkeys","name":"gnupg_clearsignkeys","params":[{"list":[],"ret_type":"bool"}]},"gnupg_decrypt":{"desc":"Decrypts a given text","long_desc":"Decrypts the given text with the keys, which were set with gnupg_adddecryptkey before.","ver":"PECL gnupg >= 0.1","ret_desc":"On success, this function returns the decrypted text. On failure, this function returns FALSE.","url":"function.gnupg-decrypt","name":"gnupg_decrypt","params":[{"list":[{"type":"resource","var":"$identifier","beh":0,"desc":"The gnupg identifier, from a call to gnupg_init() or gnupg."},{"type":"string","var":"$text","beh":0,"desc":"The text being decrypted."}],"ret_type":"string"}]},"gnupg_decryptverify":{"desc":"Decrypts and verifies a given text","long_desc":"Decrypts and verifies a given text and returns information about the signature.","ver":"PECL gnupg >= 0.2","ret_desc":"On success, this function returns information about the signature and fills the plaintext parameter with the decrypted text. On failure, this function returns FALSE.","url":"function.gnupg-decryptverify","name":"gnupg_decryptverify","params":[{"list":[{"type":"resource","var":"$identifier","beh":0,"desc":"The gnupg identifier, from a call to gnupg_init() or gnupg."},{"type":"string","var":"$text","beh":0,"desc":"The text being decrypted."},{"type":"string","var":"&$plaintext","beh":1,"desc":"The parameter plaintext gets filled with the decrypted text."}],"ret_type":"array"}]},"gnupg_encrypt":{"desc":"Encrypts a given text","long_desc":"Encrypts the given plaintext with the keys, which were set with gnupg_addencryptkey before and returns the encrypted text.","ver":"PECL gnupg >= 0.1","ret_desc":"On success, this function returns the encrypted text. On failure, this function returns FALSE.","url":"function.gnupg-encrypt","name":"gnupg_encrypt","params":[{"list":[{"type":"resource","var":"$identifier","beh":0,"desc":"The gnupg identifier, from a call to gnupg_init() or gnupg."},{"type":"string","var":"$plaintext","beh":0,"desc":"The text being encrypted."}],"ret_type":"string"}]},"gnupg_encryptsign":{"desc":"Encrypts and signs a given text","long_desc":"Encrypts and signs the given plaintext with the keys, which were set with gnupg_addsignkey and gnupg_addencryptkey before and returns the encrypted and signed text.","ver":"PECL gnupg >= 0.2","ret_desc":"On success, this function returns the encrypted and signed text. On failure, this function returns FALSE.","url":"function.gnupg-encryptsign","name":"gnupg_encryptsign","params":[{"list":[{"type":"resource","var":"$identifier","beh":0,"desc":"The gnupg identifier, from a call to gnupg_init() or gnupg."},{"type":"string","var":"$plaintext","beh":0,"desc":"The text being encrypted."}],"ret_type":"string"}]},"gnupg_export":{"desc":"Exports a key","long_desc":"Exports the key fingerprint.","ver":"PECL gnupg >= 0.1","ret_desc":"On success, this function returns the keydata. On failure, this function returns FALSE.","url":"function.gnupg-export","name":"gnupg_export","params":[{"list":[{"type":"resource","var":"$identifier","beh":0,"desc":"The gnupg identifier, from a call to gnupg_init() or gnupg."},{"type":"string","var":"$fingerprint","beh":0,"desc":"The fingerprint key."}],"ret_type":"string"}]},"gnupg_geterror":{"desc":"Returns the errortext, if a function fails","ver":"PECL gnupg >= 0.1","ret_desc":"Returns an errortext, if an error has occurred, otherwise FALSE.","url":"function.gnupg-geterror","name":"gnupg_geterror","params":[{"list":[],"ret_type":"string"}]},"gnupg_getprotocol":{"desc":"Returns the currently active protocol for all operations","ver":"PECL gnupg >= 0.1","ret_desc":"Returns the currently active protocol, which can be one of GNUPG_PROTOCOL_OpenPGP or GNUPG_PROTOCOL_CMS.","url":"function.gnupg-getprotocol","name":"gnupg_getprotocol","params":[{"list":[],"ret_type":"int"}]},"gnupg_import":{"desc":"Imports a key","long_desc":"Imports the key keydata and returns an array with information about the importprocess.","ver":"PECL gnupg >= 0.3","ret_desc":"On success, this function returns and info-array about the importprocess. On failure, this function returns FALSE.","url":"function.gnupg-import","name":"gnupg_import","params":[{"list":[{"type":"resource","var":"$identifier","beh":0,"desc":"The gnupg identifier, from a call to gnupg_init() or gnupg."},{"type":"string","var":"$keydata","beh":0,"desc":"The data key that is being imported."}],"ret_type":"array"}]},"gnupg_init":{"desc":"Initialize a connection","ver":"PECL gnupg >= 0.4","ret_desc":"A GnuPG resource connection used by other GnuPG functions.","url":"function.gnupg-init","name":"gnupg_init","params":[{"list":[],"ret_type":"resource"}]},"gnupg_keyinfo":{"desc":"Returns an array with information about all keys that matches the given pattern","ver":"PECL gnupg >= 0.1","ret_desc":"Returns an array with information about all keys that matches the given pattern or FALSE, if an error has occurred.","url":"function.gnupg-keyinfo","name":"gnupg_keyinfo","params":[{"list":[{"type":"resource","var":"$identifier","beh":0,"desc":"The gnupg identifier, from a call to gnupg_init() or gnupg."},{"type":"string","var":"$pattern","beh":0,"desc":"The pattern being checked against the keys."}],"ret_type":"array"}]},"gnupg_setarmor":{"desc":"Toggle armored output","long_desc":"Toggle the armored output.","ver":"PECL gnupg >= 0.1","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.gnupg-setarmor","name":"gnupg_setarmor","params":[{"list":[{"type":"resource","var":"$identifier","beh":0,"desc":"The gnupg identifier, from a call to gnupg_init() or gnupg."},{"type":"int","var":"$armor","beh":0,"desc":"Pass a non-zero integer-value to this function to enable armored-output (default). Pass 0 to disable armored output."}],"ret_type":"bool"}]},"gnupg_seterrormode":{"desc":"Sets the mode for error_reporting","long_desc":"Sets the mode for error_reporting.","ver":"PECL gnupg >= 0.6","ret_desc":"No value is returned.","url":"function.gnupg-seterrormode","name":"gnupg_seterrormode","params":[{"list":[{"type":"resource","var":"$identifier","beh":0,"desc":"The gnupg identifier, from a call to gnupg_init() or gnupg."},{"type":"int","var":"$errormode","beh":0,"desc":"The error mode. errormode takes a constant indicating what type of error_reporting should be used. The possible values are GNUPG_ERROR_WARNING, GNUPG_ERROR_EXCEPTION and GNUPG_ERROR_SILENT. By default GNUPG_ERROR_SILENT is used."}],"ret_type":"void"}]},"gnupg_setsignmode":{"desc":"Sets the mode for signing","long_desc":"Sets the mode for signing.","ver":"PECL gnupg >= 0.1","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.gnupg-setsignmode","name":"gnupg_setsignmode","params":[{"list":[{"type":"resource","var":"$identifier","beh":0,"desc":"The gnupg identifier, from a call to gnupg_init() or gnupg."},{"type":"int","var":"$signmode","beh":0,"desc":"The mode for signing. signmode takes a constant indicating what type of signature should be produced. The possible values are GNUPG_SIG_MODE_NORMAL, GNUPG_SIG_MODE_DETACH and GNUPG_SIG_MODE_CLEAR. By default GNUPG_SIG_MODE_CLEAR is used."}],"ret_type":"bool"}]},"gnupg_sign":{"desc":"Signs a given text","long_desc":"Signs the given plaintext with the keys, which were set with gnupg_addsignkey before and returns the signed text or the signature, depending on what was set with gnupg_setsignmode.","ver":"PECL gnupg >= 0.1","ret_desc":"On success, this function returns the signed text or the signature. On failure, this function returns FALSE.","url":"function.gnupg-sign","name":"gnupg_sign","params":[{"list":[{"type":"resource","var":"$identifier","beh":0,"desc":"The gnupg identifier, from a call to gnupg_init() or gnupg."},{"type":"string","var":"$plaintext","beh":0,"desc":"The plain text being signed."}],"ret_type":"string"}]},"gnupg_verify":{"desc":"Verifies a signed text","long_desc":"Verifies the given signed_text and returns information about the signature.","ver":"PECL gnupg >= 0.1","ret_desc":"On success, this function returns information about the signature. On failure, this function returns FALSE.","url":"function.gnupg-verify","name":"gnupg_verify","params":[{"list":[{"type":"resource","var":"$identifier","beh":0,"desc":"The gnupg identifier, from a call to gnupg_init() or gnupg."},{"type":"string","var":"$signed_text","beh":1,"desc":"The signed text."},{"type":"string","var":"$signature","beh":1,"desc":"The signature. To verify a clearsigned text, set signature to FALSE."},{"type":"string","var":"&$plaintext","beh":1,"desc":"The plain text. If this optional parameter is passed, it is filled with the plain text."}],"ret_type":"array"}]},"gopher_parsedir":{"desc":"Translate a gopher formatted directory entry into an associative array.","long_desc":"gopher_parsedir() parses a gopher formatted directory entry into an associative array. While gopher returns text\/plain documents for actual document requests. A request to a directory (such as \/) will return specially encoded series of lines with each line being one directory entry or information line.","ver":"PECL net_gopher >= 0.1","ret_desc":"Returns an associative array whose components are:","url":"function.gopher-parsedir","name":"gopher_parsedir","params":[{"list":[],"ret_type":"array"}]},"grapheme_extract":{"desc":"Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.","long_desc":"Procedural style Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.","ver":"PHP 5 >= 5.3.0, PECL intl >= 1.0.0","ret_desc":"A string starting at offset $start and ending on a default grapheme cluster boundary that conforms to the $size and $extract_type specified.","seealso":[],"url":"function.grapheme-extract","name":"grapheme_extract","params":[{"list":[{"type":"string","var":"$haystack","beh":1,"desc":"String to search."},{"type":"int","var":"$size","beh":1,"desc":"Maximum number items - based on the $extract_type - to return."},{"type":"int","var":"$extract_type","beh":1,"desc":"Defines the type of units referred to by the $size parameter:"},{"type":"int","var":"$start","beh":1,"desc":"Starting position in $haystack in bytes - if given, it must be zero or a positive value that is less than or equal to the length of $haystack in bytes. If $start does not point to the first byte of a UTF-8 character, the start position is moved to the next character boundary.","def":0},{"type":"int","var":"&$next","beh":1,"desc":"Reference to a value that will be set to the next starting position. When the call returns, this may point to the first byte position past the end of the string."}],"ret_type":"string"}]},"grapheme_stripos":{"desc":"Find position (in grapheme units) of first occurrence of a case-insensitive string","long_desc":"Procedural style Find position (in grapheme units) of first occurrence of a case-insensitive string","ver":"PHP 5 >= 5.3.0, PECL intl >= 1.0.0","ret_desc":"Returns the position as an integer. If needle is not found, grapheme_stripos() will return boolean FALSE.","seealso":[],"url":"function.grapheme-stripos","name":"grapheme_stripos","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The string to look in. Must be valid UTF-8."},{"type":"string","var":"$needle","beh":1,"desc":"The string to look for. Must be valid UTF-8."},{"type":"int","var":"$offset","beh":1,"desc":"The optional $offset parameter allows you to specify where in haystack to start searching as an offset in grapheme units (not bytes or characters). The position returned is still relative to the beginning of haystack regardless of the value of $offset.","def":0}],"ret_type":"int"}]},"grapheme_stristr":{"desc":"Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack.","long_desc":"Procedural style Returns part of haystack string starting from and including the first occurrence of case-insensitive needle to the end of haystack.","ver":"PHP 5 >= 5.3.0, PECL intl >= 1.0.0","ret_desc":"Returns the portion of $haystack, or FALSE if $needle is not found.","seealso":[],"url":"function.grapheme-stristr","name":"grapheme_stristr","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The input string. Must be valid UTF-8."},{"type":"string","var":"$needle","beh":1,"desc":"The string to look for. Must be valid UTF-8."},{"type":"bool","var":"$before_needle","beh":1,"desc":"If TRUE, grapheme_strstr() returns the part of the haystack before the first occurrence of the needle (excluding needle).","def":"false"}],"ret_type":"string"}]},"grapheme_strlen":{"desc":"Get string length in grapheme units","long_desc":"Procedural style Get string length in grapheme units (not bytes or characters)","ver":"PHP 5 >= 5.3.0, PECL intl >= 1.0.0","ret_desc":"The length of the string on success, and 0 if the string is empty.","seealso":[],"url":"function.grapheme-strlen","name":"grapheme_strlen","params":[{"list":[],"ret_type":"int"}]},"grapheme_strpos":{"desc":"Find position (in grapheme units) of first occurrence of a string","long_desc":"Procedural style Find position (in grapheme units) of first occurrence of a string","ver":"PHP 5 >= 5.3.0, PECL intl >= 1.0.0","ret_desc":"Returns the position as an integer. If needle is not found, strpos() will return boolean FALSE.","seealso":[],"url":"function.grapheme-strpos","name":"grapheme_strpos","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The string to look in. Must be valid UTF-8."},{"type":"string","var":"$needle","beh":1,"desc":"The string to look for. Must be valid UTF-8."},{"type":"int","var":"$offset","beh":1,"desc":"The optional $offset parameter allows you to specify where in $haystack to start searching as an offset in grapheme units (not bytes or characters). The position returned is still relative to the beginning of haystack regardless of the value of $offset.","def":0}],"ret_type":"int"}]},"grapheme_strripos":{"desc":"Find position (in grapheme units) of last occurrence of a case-insensitive string","long_desc":"Procedural style Find position (in grapheme units) of last occurrence of a case-insensitive string","ver":"PHP 5 >= 5.3.0, PECL intl >= 1.0.0","ret_desc":"Returns the position as an integer. If needle is not found, grapheme_strripos() will return boolean FALSE.","seealso":[],"url":"function.grapheme-strripos","name":"grapheme_strripos","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The string to look in. Must be valid UTF-8."},{"type":"string","var":"$needle","beh":1,"desc":"The string to look for. Must be valid UTF-8."},{"type":"int","var":"$offset","beh":1,"desc":"The optional $offset parameter allows you to specify where in $haystack to start searching as an offset in grapheme units (not bytes or characters). The position returned is still relative to the beginning of haystack regardless of the value of $offset.","def":0}],"ret_type":"int"}]},"grapheme_strrpos":{"desc":"Find position (in grapheme units) of last occurrence of a string","long_desc":"Procedural style Find position (in grapheme units) of last occurrence of a string","ver":"PHP 5 >= 5.3.0, PECL intl >= 1.0.0","ret_desc":"Returns the position as an integer. If needle is not found, grapheme_strrpos() will return boolean FALSE.","seealso":[],"url":"function.grapheme-strrpos","name":"grapheme_strrpos","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The string to look in. Must be valid UTF-8."},{"type":"string","var":"$needle","beh":1,"desc":"The string to look for. Must be valid UTF-8."},{"type":"int","var":"$offset","beh":1,"desc":"The optional $offset parameter allows you to specify where in $haystack to start searching as an offset in grapheme units (not bytes or characters). The position returned is still relative to the beginning of haystack regardless of the value of $offset.","def":0}],"ret_type":"int"}]},"grapheme_strstr":{"desc":"Returns part of haystack string from the first occurrence of needle to the end of haystack.","long_desc":"Procedural style Returns part of haystack string from the first occurrence of needle to the end of haystack (including the needle).","ver":"PHP 5 >= 5.3.0, PECL intl >= 1.0.0","ret_desc":"Returns the portion of string, or FALSE if needle is not found.","seealso":[],"url":"function.grapheme-strstr","name":"grapheme_strstr","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The input string. Must be valid UTF-8."},{"type":"string","var":"$needle","beh":1,"desc":"The string to look for. Must be valid UTF-8."},{"type":"bool","var":"$before_needle","beh":1,"desc":"If TRUE, grapheme_strstr() returns the part of the haystack before the first occurrence of the needle (excluding the needle).","def":"false"}],"ret_type":"string"}]},"grapheme_substr":{"desc":"Return part of a string","long_desc":"Procedural style Return part of a string","ver":"PHP 5 >= 5.3.0, PECL intl >= 1.0.0","ret_desc":"Returns the extracted part of $string.","seealso":[],"url":"function.grapheme-substr","name":"grapheme_substr","params":[{"list":[{"type":"string","var":"$string","beh":0,"desc":"The input string. Must be valid UTF-8."},{"type":"int","var":"$start","beh":1,"desc":"Start position in default grapheme units. If $start is non-negative, the returned string will start at the $start'th position in $string, counting from zero. If $start is negative, the returned string will start at the $start'th grapheme unit from the end of string."},{"type":"int","var":"$length","beh":1,"desc":"Length in grapheme units. If $length is given and is positive, the string returned will contain at most $length grapheme units beginning from $start (depending on the length of string). If $length is given and is negative, then that many grapheme units will be omitted from the end of string (after the start position has been calculated when a start is negative). If $start denotes a position beyond this truncation, FALSE will be returned."}],"ret_type":"int"}]},"gupnp_context_get_host_ip":{"desc":"Get the IP address","long_desc":"Get the IP address we advertise ourselves as using.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns the IP address for the current context and FALSE on error.","seealso":[],"url":"function.gupnp-context-get-host-ip","name":"gupnp_context_get_host_ip","params":[{"list":[],"ret_type":"string"}]},"gupnp_context_get_port":{"desc":"Get the port","long_desc":"Get the port that the SOAP server is running on.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns the port number for the current context and FALSE on error.","seealso":[],"url":"function.gupnp-context-get-port","name":"gupnp_context_get_port","params":[{"list":[],"ret_type":"int"}]},"gupnp_context_get_subscription_timeout":{"desc":"Get the event subscription timeout","long_desc":"Get the event subscription timeout (in seconds), or 0 meaning there is no timeout.","ver":"PECL gupnp >= 0.1.0","ret_desc":"The event subscription timeout in seconds.","seealso":[],"url":"function.gupnp-context-get-subscription-timeout","name":"gupnp_context_get_subscription_timeout","params":[{"list":[],"ret_type":"int"}]},"gupnp_context_host_path":{"desc":"Start hosting","long_desc":"Start hosting local_path at server_path. Files with the path local_path.LOCALE (if they exist) will be served up when LOCALE is specified in the request's Accept-Language header.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-context-host-path","name":"gupnp_context_host_path","params":[{"list":[{"type":"resource","var":"$context","beh":0,"desc":"A context identifier, returned by gupnp_context_new()."},{"type":"string","var":"$local_path","beh":0,"desc":"Path to the local file or folder to be hosted."},{"type":"string","var":"$server_path","beh":1,"desc":"Web server path where local_path should be hosted."}],"ret_type":"bool"}]},"gupnp_context_new":{"desc":"Create a new context","long_desc":"Create a new context with the specified host_ip and port.","ver":"PECL gupnp >= 0.1.0","ret_desc":"A context identifier.","url":"function.gupnp-context-new","name":"gupnp_context_new","params":[{"list":[{"type":"string","var":"$host_ip","beh":1,"desc":"The local host's IP address, or NULL to use the IP address of the first non-loopback network interface."},{"type":"int","var":"$port","beh":1,"desc":"Port to run on, or 0 if you don't care what port is used.","def":0}],"ret_type":"resource"}]},"gupnp_context_set_subscription_timeout":{"desc":"Sets the event subscription timeout","long_desc":"Sets the event subscription timeout (in seconds) to time out. Note that any client side subscriptions will automatically be renewed.","ver":"PECL gupnp >= 0.1.0","ret_desc":"No value is returned.","seealso":[],"url":"function.gupnp-context-set-subscription-timeout","name":"gupnp_context_set_subscription_timeout","params":[{"list":[{"type":"resource","var":"$context","beh":0,"desc":"A context identifier, returned by gupnp_context_new()."},{"type":"int","var":"$timeout","beh":0,"desc":"The event subscription timeout in seconds. Use 0 if you don't want subscriptions to time out."}],"ret_type":"void"}]},"gupnp_context_timeout_add":{"desc":"Sets a function to be called at regular intervals","long_desc":"Sets a function to be called at regular intervals.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-context-timeout-add","name":"gupnp_context_timeout_add","params":[{"list":[{"type":"resource","var":"$context","beh":0,"desc":"A context identifier, returned by gupnp_context_new()."},{"type":"int","var":"$timeout","beh":1,"desc":"A timeout in miliseconds."},{"type":"mixed","var":"$callback","beh":1,"desc":"The callback function calling every timeout period of time. Typically, callback function takes on arg parameter."},{"type":"mixed","var":"$arg","beh":1,"desc":"User data for callback."}],"ret_type":"bool"}]},"gupnp_context_unhost_path":{"desc":"Stop hosting","long_desc":"Stop hosting the file or folder at server_path.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-context-unhost-path","name":"gupnp_context_unhost_path","params":[{"list":[{"type":"resource","var":"$context","beh":0,"desc":"A context identifier, returned by gupnp_context_new()."},{"type":"string","var":"$server_path","beh":0,"desc":"Web server path where the file or folder is hosted."}],"ret_type":"bool"}]},"gupnp_control_point_browse_start":{"desc":"Start browsing","long_desc":"Start the search and calls user-defined callback.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-control-point-browse-start","name":"gupnp_control_point_browse_start","params":[{"list":[],"ret_type":"bool"}]},"gupnp_control_point_browse_stop":{"desc":"Stop browsing","long_desc":"Stop the search and calls user-defined callback.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-control-point-browse-stop","name":"gupnp_control_point_browse_stop","params":[{"list":[],"ret_type":"bool"}]},"gupnp_control_point_callback_set":{"desc":"Set control point callback","long_desc":"Set control point callback function for signal.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-control-point-callback-set","name":"gupnp_control_point_callback_set","params":[{"list":[{"type":"resource","var":"$cpoint","beh":0,"desc":"A control point identifier, returned by gupnp_control_point_new()."},{"type":"int","var":"$signal","beh":1,"desc":"The value of signal. Signal can be one of the following values:"},{"type":"mixed","var":"$callback","beh":1,"desc":""},{"type":"mixed","var":"$arg","beh":1,"desc":""}],"ret_type":"bool"}]},"gupnp_control_point_new":{"desc":"Create a new control point","long_desc":"Create a new control point with the specified target.","ver":"PECL gupnp >= 0.1.0","ret_desc":"A control point identifier.","url":"function.gupnp-control-point-new","name":"gupnp_control_point_new","params":[{"list":[{"type":"resource","var":"$context","beh":0,"desc":"A context identifier, returned by gupnp_context_new()."},{"type":"string","var":"$target","beh":0,"desc":"The search target. target should be a service or device name, such as urn:schemas-upnp-org:service:WANIPConnection:1 or urn:schemas-upnp-org:device:MediaRenderer:1."}],"ret_type":"resource"}]},"gupnp_device_action_callback_set":{"desc":"Set device callback function","long_desc":"Set device callback function for signal and action.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-device-action-callback-set","name":"gupnp_device_action_callback_set","params":[{"list":[{"type":"resource","var":"$root_device","beh":0,"desc":"A root device identifier, returned by gupnp_root_device_new()."},{"type":"int","var":"$signal","beh":1,"desc":"The value of signal. Signal can be one of the following values:"},{"type":"string","var":"$action_name","beh":1,"desc":""},{"type":"mixed","var":"$callback","beh":1,"desc":""},{"type":"mixed","var":"$arg","beh":1,"desc":"The name of action."}],"ret_type":"bool"}]},"gupnp_device_info_get":{"desc":"Get info of root device","long_desc":"Get info of root device.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Return array wich contains the information of the root device (like location, url, udn and etc).","url":"function.gupnp-device-info-get","name":"gupnp_device_info_get","params":[{"list":[],"ret_type":"array"}]},"gupnp_device_info_get_service":{"desc":"Get the service with type","long_desc":"Get the service with type or false if no such device was found.","ver":"PECL gupnp >= 0.1.0","ret_desc":"A service identifier.","url":"function.gupnp-device-info-get-service","name":"gupnp_device_info_get_service","params":[{"list":[{"type":"resource","var":"$root_device","beh":0,"desc":"A root device identifier, returned by gupnp_root_device_new()."},{"type":"string","var":"$type","beh":0,"desc":"The type of the service to be retrieved."}],"ret_type":"resource"}]},"gupnp_root_device_get_available":{"desc":"Check whether root device is available","long_desc":"Get whether or not root_device is available (announcing its presence).","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-root-device-get-available","name":"gupnp_root_device_get_available","params":[{"list":[],"ret_type":"bool"}]},"gupnp_root_device_get_relative_location":{"desc":"Get the relative location of root device.","long_desc":"Get the relative location of root device.","ver":"PECL gupnp >= 0.1.0","ret_desc":"The relative location of root device","url":"function.gupnp-root-device-get-relative-location","name":"gupnp_root_device_get_relative_location","params":[{"list":[],"ret_type":"string"}]},"gupnp_root_device_new":{"desc":"Create a new root device","long_desc":"Create a new root device, automatically downloading and parsing location.","ver":"PECL gupnp >= 0.1.0","ret_desc":"A root device identifier.","seealso":[],"url":"function.gupnp-root-device-new","name":"gupnp_root_device_new","params":[{"list":[{"type":"resource","var":"$context","beh":0,"desc":"A context identifier, returned by gupnp_context_new()."},{"type":"string","var":"$location","beh":0,"desc":"Location of the description file for this device, relative to the HTTP root"},{"type":"string","var":"$description_dir","beh":1,"desc":""}],"ret_type":"resource"}]},"gupnp_root_device_set_available":{"desc":"Set whether or not root_device is available","long_desc":"Controls whether or not root_device is available (announcing its presence).","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-root-device-set-available","name":"gupnp_root_device_set_available","params":[{"list":[{"type":"resource","var":"$root_device","beh":0,"desc":"A root device identifier, returned by gupnp_root_device_new()."},{"type":"bool","var":"$available","beh":0,"desc":"Set TRUE if root_device should be available."}],"ret_type":"bool"}]},"gupnp_root_device_start":{"desc":"Start main loop","long_desc":"Start root server's main loop.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-root-device-start","name":"gupnp_root_device_start","params":[{"list":[],"ret_type":"bool"}]},"gupnp_root_device_stop":{"desc":"Stop main loop","long_desc":"Stop root server's main loop.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-root-device-stop","name":"gupnp_root_device_stop","params":[{"list":[],"ret_type":"bool"}]},"gupnp_service_action_get":{"desc":"Retrieves the specified action arguments","long_desc":"Retrieves the specified action arguments.","ver":"PECL gupnp >= 0.1.0","ret_desc":"The value of the variable.","seealso":[],"url":"function.gupnp-service-action-get","name":"gupnp_service_action_get","params":[{"list":[{"type":"resource","var":"$action","beh":0,"desc":"A service action identifier."},{"type":"string","var":"$name","beh":0,"desc":"The name of the variable to retrieve."},{"type":"int","var":"$type","beh":1,"desc":"The type of the variable to retrieve. Type can be one of the following values:"}],"ret_type":"mixed"}]},"gupnp_service_action_return":{"desc":"Return succesfully","long_desc":"Return succesfully.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-service-action-return","name":"gupnp_service_action_return","params":[{"list":[],"ret_type":"bool"}]},"gupnp_service_action_return_error":{"desc":"Return error code","long_desc":"Return error code.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-service-action-return-error","name":"gupnp_service_action_return_error","params":[{"list":[{"type":"resource","var":"$action","beh":0,"desc":"A service action identifier."},{"type":"int","var":"$error_code","beh":1,"desc":"The error code. Signal can be one of the following values or user defined:"},{"type":"string","var":"$error_description","beh":1,"desc":""}],"ret_type":"bool"}]},"gupnp_service_action_set":{"desc":"Sets the specified action return values","long_desc":"Sets the specified action return values.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-service-action-set","name":"gupnp_service_action_set","params":[{"list":[{"type":"resource","var":"$action","beh":0,"desc":"A service action identifier."},{"type":"string","var":"$name","beh":0,"desc":"The name of the variable to retrieve."},{"type":"int","var":"$type","beh":1,"desc":"The type of the variable to retrieve. Type can be one of the following values:"},{"type":"mixed","var":"$value","beh":1,"desc":""}],"ret_type":"bool"}]},"gupnp_service_freeze_notify":{"desc":"Freeze new notifications","long_desc":"Causes new notifications to be queued up until gupnp_service_thaw_notify() is called.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-service-freeze-notify","name":"gupnp_service_freeze_notify","params":[{"list":[],"ret_type":"bool"}]},"gupnp_service_info_get":{"desc":"Get full info of service","long_desc":"Get full info of service.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Return array wich contains the information of the service (like location, url, udn and etc).","url":"function.gupnp-service-info-get","name":"gupnp_service_info_get","params":[{"list":[],"ret_type":"array"}]},"gupnp_service_info_get_introspection":{"desc":"Get resource introspection of service","long_desc":"Get resource introspection of service or register callback if corresponding parameter was passed.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Return true if callback function was defined. Return introspection identifier if callback function was omited.","url":"function.gupnp-service-info-get-introspection","name":"gupnp_service_info_get_introspection","params":[{"list":[{"type":"resource","var":"$proxy","beh":1,"desc":"A service proxy identifier."},{"type":"mixed","var":"$callback","beh":1,"desc":"The callback function to be called when introspection object is ready. Typically, callback function takes on three parameters. The introspection parameter's identifier being the first, error parameter's message being the second, and the arg is third."},{"type":"mixed","var":"$arg","beh":1,"desc":"User data for callback."}],"ret_type":"mixed"}]},"gupnp_service_introspection_get_state_variable":{"desc":"Returns the state variable data","long_desc":"Returns the state variable data by the name variable_name in this service.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Return the state variable data or FALSE.","url":"function.gupnp-service-introspection-get-state-variable","name":"gupnp_service_introspection_get_state_variable","params":[{"list":[{"type":"resource","var":"$introspection","beh":0,"desc":"A introspection identifier."},{"type":"string","var":"$variable_name","beh":0,"desc":"The name of the variable to retreive."}],"ret_type":"array"}]},"gupnp_service_notify":{"desc":"Notifies listening clients","long_desc":"Notifies listening clients that the property have changed to the specified values.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-service-notify","name":"gupnp_service_notify","params":[{"list":[{"type":"resource","var":"$service","beh":0,"desc":"A service identifier."},{"type":"string","var":"$name","beh":0,"desc":"The name of the variable."},{"type":"int","var":"$type","beh":1,"desc":"The type of the variable. Type can be one of the following values:"},{"type":"mixed","var":"$value","beh":1,"desc":""}],"ret_type":"bool"}]},"gupnp_service_proxy_action_get":{"desc":"Send action to the service and get value","long_desc":"Send action with parameters to the service exposed by proxy synchronously and get value.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Return value of the action.","seealso":[],"url":"function.gupnp-service-proxy-action-get","name":"gupnp_service_proxy_action_get","params":[{"list":[{"type":"resource","var":"$proxy","beh":0,"desc":"A service proxy identifier."},{"type":"string","var":"$action","beh":0,"desc":"An action."},{"type":"string","var":"$name","beh":1,"desc":"The action name."},{"type":"int","var":"$type","beh":1,"desc":"The type of the variable to retrieve. Type can be one of the following values:"}],"ret_type":"mixed"}]},"gupnp_service_proxy_action_set":{"desc":"Send action to the service and set value","long_desc":"Send action with parameters to the service exposed by proxy synchronously and set value.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-service-proxy-action-set","name":"gupnp_service_proxy_action_set","params":[{"list":[{"type":"resource","var":"$proxy","beh":0,"desc":"A service proxy identifier."},{"type":"string","var":"$action","beh":0,"desc":"An action."},{"type":"string","var":"$name","beh":1,"desc":"The action name."},{"type":"mixed","var":"$value","beh":1,"desc":"The action value."},{"type":"int","var":"$type","beh":1,"desc":"The type of the action. Type can be one of the following values:"}],"ret_type":"bool"}]},"gupnp_service_proxy_add_notify":{"desc":"Sets up callback for variable change notification","long_desc":"Sets up callback to be called whenever a change notification for variable is recieved.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-service-proxy-add-notify","name":"gupnp_service_proxy_add_notify","params":[{"list":[{"type":"resource","var":"$proxy","beh":0,"desc":"A service proxy identifier."},{"type":"string","var":"$value","beh":1,"desc":"The variable to add notification for."},{"type":"int","var":"$type","beh":1,"desc":"The type of the variable. Type can be one of the following values:"},{"type":"mixed","var":"$callback","beh":1,"desc":""},{"type":"mixed","var":"$arg","beh":1,"desc":""}],"ret_type":"bool"}]},"gupnp_service_proxy_callback_set":{"desc":"Set service proxy callback for signal","long_desc":"Set service proxy callback for signal.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.gupnp-service-proxy-callback-set","name":"gupnp_service_proxy_callback_set","params":[{"list":[{"type":"resource","var":"$proxy","beh":0,"desc":"A service proxy identifier."},{"type":"int","var":"$signal","beh":1,"desc":"The value of signal."},{"type":"mixed","var":"$callback","beh":1,"desc":""},{"type":"mixed","var":"$arg","beh":1,"desc":"The callback function for the certain signal. Typically, callback function takes on two parameters. error parameter's message being the first, and the arg is second."}],"ret_type":"bool"}]},"gupnp_service_proxy_get_subscribed":{"desc":"Check whether subscription is valid to the service","long_desc":"Check whether subscription is valid to the service.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-service-proxy-get-subscribed","name":"gupnp_service_proxy_get_subscribed","params":[{"list":[],"ret_type":"bool"}]},"gupnp_service_proxy_remove_notify":{"desc":"Cancels the variable change notification","long_desc":"Cancels the variable change notification.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-service-proxy-remove-notify","name":"gupnp_service_proxy_remove_notify","params":[{"list":[{"type":"resource","var":"$proxy","beh":0,"desc":"A service proxy identifier."},{"type":"string","var":"$value","beh":0,"desc":"The variable to add notification for."}],"ret_type":"bool"}]},"gupnp_service_proxy_set_subscribed":{"desc":"(Un)subscribes to the service.","long_desc":"(Un)subscribes to the service.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-service-proxy-set-subscribed","name":"gupnp_service_proxy_set_subscribed","params":[{"list":[{"type":"resource","var":"$proxy","beh":0,"desc":"A service proxy identifier."},{"type":"bool","var":"$subscribed","beh":0,"desc":"Set TRUE to subscribe to this service."}],"ret_type":"bool"}]},"gupnp_service_thaw_notify":{"desc":"Sends out any pending notifications and stops queuing of new ones.","long_desc":"Sends out any pending notifications and stops queuing of new ones.","ver":"PECL gupnp >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gupnp-service-thaw-notify","name":"gupnp_service_thaw_notify","params":[{"list":[],"ret_type":"bool"}]},"gzclose":{"desc":"Close an open gz-file pointer","long_desc":"Closes the given gz-file pointer.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gzclose","name":"gzclose","params":[{"list":[],"ret_type":"bool"}]},"gzcompress":{"desc":"Compress a string","long_desc":"This function compress the given string using the ZLIB data format. For details on the ZLIB compression algorithm see the document \"\u00bb\u00a0ZLIB Compressed Data Format Specification version 3.3\" (RFC 1950).","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"The compressed string or FALSE if an error occurred.","seealso":[],"url":"function.gzcompress","name":"gzcompress","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":"The data to compress."},{"type":"int","var":"$level","beh":0,"desc":"The level of compression. Can be given as 0 for no compression up to 9 for maximum compression. If -1 is used, the default compression of the zlib library is used which is 6.","def":-1}],"ret_type":"string"}]},"gzdecode":{"desc":"Decodes a gzip compressed string","long_desc":"This function returns a decoded version of the input data.","ver":"No version information available, might only be in SVN","ret_desc":"The decoded string, or FALSE if an error occurred.","seealso":[],"url":"function.gzdecode","name":"gzdecode","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":"The data to decode, encoded by gzencode()."},{"type":"int","var":"$length","beh":1,"desc":"The maximum length of data to decode."}],"ret_type":"string"}]},"gzdeflate":{"desc":"Deflate a string","long_desc":"This function compress the given string using the DEFLATE data format. For details on the DEFLATE compression algorithm see the document \"\u00bb\u00a0DEFLATE Compressed Data Format Specification version 1.3\" (RFC 1951).","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"The deflated string or FALSE if an error occurred.","seealso":[],"url":"function.gzdeflate","name":"gzdeflate","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":"The data to deflate."},{"type":"int","var":"$level","beh":0,"desc":"The level of compression. Can be given as 0 for no compression up to 9 for maximum compression. If not given, the default compression level will be the default compression level of the zlib library.","def":-1}],"ret_type":"string"}]},"gzencode":{"desc":"Create a gzip compressed string","long_desc":"This function returns a compressed version of the input data compatible with the output of the gzip program. For more information on the GZIP file format, see the document: \u00bb\u00a0GZIP file format specification version 4.3 (RFC 1952).","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"The encoded string, or FALSE if an error occurred.","seealso":[],"url":"function.gzencode","name":"gzencode","params":[{"list":[{"type":"string","var":"$data","beh":1,"desc":"The data to encode."},{"type":"int","var":"$level","beh":1,"desc":"The level of compression. Can be given as 0 for no compression up to 9 for maximum compression. If not given, the default compression level will be the default compression level of the zlib library.","def":-1},{"type":"int","var":"$encoding_mode","beh":1,"desc":"The encoding mode. Can be FORCE_GZIP (the default) or FORCE_DEFLATE. If you use FORCE_DEFLATE, you get a standard zlib deflated string (inclusive zlib headers) after the gzip file header but without the trailing crc32 checksum.","def":"FORCE_GZIP"}],"ret_type":"string"}]},"gzeof":{"desc":"Test for EOF on a gz-file pointer","long_desc":"Tests the given GZ file pointer for EOF.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the gz-file pointer is at EOF or an error occurs; otherwise returns FALSE.","url":"function.gzeof","name":"gzeof","params":[{"list":[],"ret_type":"int"}]},"gzfile":{"desc":"Read entire gz-file into an array","long_desc":"This function is identical to readgzfile(), except that it returns the file in an array.","ver":"PHP 4, PHP 5","ret_desc":"An array containing the file, one line per cell.","seealso":[],"url":"function.gzfile","name":"gzfile","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The file name."},{"type":"int","var":"$use_include_path","beh":0,"desc":"You can set this optional parameter to 1, if you want to search for the file in the include_path too.","def":0}],"ret_type":"array"}]},"gzgetc":{"desc":"Get character from gz-file pointer","long_desc":"Returns a string containing a single (uncompressed) character read from the given gz-file pointer.","ver":"PHP 4, PHP 5","ret_desc":"The uncompressed character or FALSE on EOF (unlike gzeof()).","seealso":[],"url":"function.gzgetc","name":"gzgetc","params":[{"list":[],"ret_type":"string"}]},"gzgets":{"desc":"Get line from file pointer","long_desc":"Gets a (uncompressed) string of up to length - 1 bytes read from the given file pointer. Reading ends when length - 1 bytes have been read, on a newline, or on EOF (whichever comes first).","ver":"PHP 4, PHP 5","ret_desc":"The uncompressed string, or FALSE on error.","seealso":[],"url":"function.gzgets","name":"gzgets","params":[{"list":[{"type":"resource","var":"$zp","beh":0,"desc":"The gz-file pointer. It must be valid, and must point to a file successfully opened by gzopen()."},{"type":"int","var":"$length","beh":0,"desc":"The length of data to get."}],"ret_type":"string"}]},"gzgetss":{"desc":"Get line from gz-file pointer and strip HTML tags","long_desc":"Identical to gzgets(), except that gzgetss() attempts to strip any HTML and PHP tags from the text it reads.","ver":"PHP 4, PHP 5","ret_desc":"The uncompressed and striped string, or FALSE on error.","seealso":[],"url":"function.gzgetss","name":"gzgetss","params":[{"list":[{"type":"resource","var":"$zp","beh":0,"desc":"The gz-file pointer. It must be valid, and must point to a file successfully opened by gzopen()."},{"type":"int","var":"$length","beh":1,"desc":"The length of data to get."},{"type":"string","var":"$allowable_tags","beh":1,"desc":"You can use this optional parameter to specify tags which should not be stripped."}],"ret_type":"string"}]},"gzinflate":{"desc":"Inflate a deflated string","long_desc":"This function inflate a deflated string.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"The original uncompressed data or FALSE on error.","seealso":[],"url":"function.gzinflate","name":"gzinflate","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":"The data compressed by gzdeflate()."},{"type":"int","var":"$length","beh":0,"desc":"The maximum length of data to decode.","def":0}],"ret_type":"string"}]},"gzopen":{"desc":"Open gz-file","long_desc":"Opens a gzip (.gz) file for reading or writing. gzopen() can be used to read a file which is not in gzip format; in this case gzread() will directly read from the file without decompression.","ver":"PHP 4, PHP 5","ret_desc":"Returns a file pointer to the file opened, after that, everything you read from this file descriptor will be transparently decompressed and what you write gets compressed.","seealso":[],"url":"function.gzopen","name":"gzopen","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The file name."},{"type":"string","var":"$mode","beh":1,"desc":"As in fopen() (rb or wb) but can also include a compression level (wb9) or a strategy: f for filtered data as in wb6f, h for Huffman only compression as in wb1h. (See the description of deflateInit2 in zlib.h for more information about the strategy parameter.)"},{"type":"int","var":"$use_include_path","beh":1,"desc":"You can set this optional parameter to 1, if you want to search for the file in the include_path too.","def":0}],"ret_type":"resource"}]},"gzpassthru":{"desc":"Output all remaining data on a gz-file pointer","long_desc":"Reads to EOF on the given gz-file pointer from the current position and writes the (uncompressed) results to standard output.","ver":"PHP 4, PHP 5","ret_desc":"The number of uncompressed characters read from gz and passed through to the input, or FALSE on error.","url":"function.gzpassthru","name":"gzpassthru","params":[{"list":[],"ret_type":"int"}]},"gzputs":{"desc":"Alias of gzwrite()","long_desc":"This function is an alias of: gzwrite().","ver":"PHP 4, PHP 5","url":"function.gzputs","name":"gzputs","params":[]},"gzread":{"desc":"Binary-safe gz-file read","long_desc":"gzread() reads up to length bytes from the given gz-file pointer. Reading stops when length (uncompressed) bytes have been read or EOF is reached, whichever comes first.","ver":"PHP 4, PHP 5","ret_desc":"The data that have been read.","seealso":[],"url":"function.gzread","name":"gzread","params":[{"list":[{"type":"resource","var":"$zp","beh":0,"desc":"The gz-file pointer. It must be valid, and must point to a file successfully opened by gzopen()."},{"type":"int","var":"$length","beh":0,"desc":"The number of bytes to read."}],"ret_type":"string"}]},"gzrewind":{"desc":"Rewind the position of a gz-file pointer","long_desc":"Sets the file position indicator of the given gz-file pointer to the beginning of the file stream.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.gzrewind","name":"gzrewind","params":[{"list":[],"ret_type":"bool"}]},"gzseek":{"desc":"Seek on a gz-file pointer","long_desc":"Sets the file position indicator for the given file pointer to the given offset byte into the file stream. Equivalent to calling (in C) gzseek(zp, offset, SEEK_SET). If the file is opened for reading, this function is emulated but can be extremely slow. If the file is opened for writing, only forward seeks are supported; gzseek() then compresses a sequence of zeroes up to the new starting position.","ver":"PHP 4, PHP 5","ret_desc":"Upon success, returns 0; otherwise, returns -1. Note that seeking past EOF is not considered an error.","seealso":[],"url":"function.gzseek","name":"gzseek","params":[{"list":[{"type":"resource","var":"$zp","beh":0,"desc":"The gz-file pointer. It must be valid, and must point to a file successfully opened by gzopen()."},{"type":"int","var":"$offset","beh":1,"desc":"The seeked offset."},{"type":"int","var":"$whence","beh":1,"desc":"whence values are: If whence is not specified, it is assumed to be SEEK_SET.","def":"SEEK_SET"}],"ret_type":"int"}]},"gztell":{"desc":"Tell gz-file pointer read\/write position","long_desc":"Gets the position of the given file pointer; i.e., its offset into the uncompressed file stream.","ver":"PHP 4, PHP 5","ret_desc":"The position of the file pointer or FALSE if an error occurs.","seealso":[],"url":"function.gztell","name":"gztell","params":[{"list":[],"ret_type":"int"}]},"gzuncompress":{"desc":"Uncompress a compressed string","long_desc":"This function uncompress a compressed string.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"The original uncompressed data or FALSE on error.","seealso":[],"url":"function.gzuncompress","name":"gzuncompress","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":"The data compressed by gzcompress()."},{"type":"int","var":"$length","beh":0,"desc":"The maximum length of data to decode.","def":0}],"ret_type":"string"}]},"gzwrite":{"desc":"Binary-safe gz-file write","long_desc":"gzwrite() writes the contents of string to the given gz-file.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of (uncompressed) bytes written to the given gz-file stream.","seealso":[],"url":"function.gzwrite","name":"gzwrite","params":[{"list":[{"type":"resource","var":"$zp","beh":0,"desc":"The gz-file pointer. It must be valid, and must point to a file successfully opened by gzopen()."},{"type":"string","var":"$string","beh":1,"desc":"The string to write."},{"type":"int","var":"$length","beh":1,"desc":"The number of uncompressed bytes to write. If supplied, writing will stop after length (uncompressed) bytes have been written or the end of string is reached, whichever comes first."}],"ret_type":"int"}]},"hash":{"desc":"Generate a hash value (message digest)","ver":"PHP 5 >= 5.1.2, PECL hash >= 1.1","ret_desc":"Returns a string containing the calculated message digest as lowercase hexits unless raw_output is set to true in which case the raw binary representation of the message digest is returned.","seealso":[],"url":"function.hash","name":"hash","params":[{"list":[{"type":"string","var":"$algo","beh":0,"desc":"Name of selected hashing algorithm (i.e. \"md5\", \"sha256\", \"haval160,4\", etc..)"},{"type":"string","var":"$data","beh":1,"desc":"Message to be hashed."},{"type":"bool","var":"$raw_output","beh":1,"desc":"When set to TRUE, outputs raw binary data. FALSE outputs lowercase hexits.","def":"false"}],"ret_type":"string"}]},"hash_algos":{"desc":"Return a list of registered hashing algorithms","ver":"PHP 5 >= 5.1.2, PECL hash >= 1.1","ret_desc":"Returns a numerically indexed array containing the list of supported hashing algorithms.","url":"function.hash-algos","name":"hash_algos","params":[{"list":[],"ret_type":"array"}]},"hash_copy":{"desc":"Copy hashing context","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns a copy of Hashing Context resource.","url":"function.hash-copy","name":"hash_copy","params":[{"list":[],"ret_type":"resource"}]},"hash_file":{"desc":"Generate a hash value using the contents of a given file","ver":"PHP 5 >= 5.1.2, PECL hash >= 1.1","ret_desc":"Returns a string containing the calculated message digest as lowercase hexits unless raw_output is set to true in which case the raw binary representation of the message digest is returned.","seealso":[],"url":"function.hash-file","name":"hash_file","params":[{"list":[{"type":"string","var":"$algo","beh":0,"desc":"Name of selected hashing algorithm (i.e. \"md5\", \"sha256\", \"haval160,4\", etc..)"},{"type":"string","var":"$filename","beh":1,"desc":"URL describing location of file to be hashed; Supports fopen wrappers."},{"type":"bool","var":"$raw_output","beh":1,"desc":"When set to TRUE, outputs raw binary data. FALSE outputs lowercase hexits.","def":"false"}],"ret_type":"string"}]},"hash_final":{"desc":"Finalize an incremental hash and return resulting digest","ver":"PHP 5 >= 5.1.2, PECL hash >= 1.1","ret_desc":"Returns a string containing the calculated message digest as lowercase hexits unless raw_output is set to true in which case the raw binary representation of the message digest is returned.","seealso":[],"url":"function.hash-final","name":"hash_final","params":[{"list":[{"type":"resource","var":"$context","beh":0,"desc":"Hashing context returned by hash_init()."},{"type":"bool","var":"$raw_output","beh":0,"desc":"When set to TRUE, outputs raw binary data. FALSE outputs lowercase hexits.","def":"false"}],"ret_type":"string"}]},"hash_hmac":{"desc":"Generate a keyed hash value using the HMAC method","ver":"PHP 5 >= 5.1.2, PECL hash >= 1.1","ret_desc":"Returns a string containing the calculated message digest as lowercase hexits unless raw_output is set to true in which case the raw binary representation of the message digest is returned.","seealso":[],"url":"function.hash-hmac","name":"hash_hmac","params":[{"list":[{"type":"string","var":"$algo","beh":0,"desc":"Name of selected hashing algorithm (i.e. \"md5\", \"sha256\", \"haval160,4\", etc..) See hash_algos() for a list of supported algorithms."},{"type":"string","var":"$data","beh":1,"desc":"Message to be hashed."},{"type":"string","var":"$key","beh":1,"desc":"Shared secret key used for generating the HMAC variant of the message digest."},{"type":"bool","var":"$raw_output","beh":1,"desc":"When set to TRUE, outputs raw binary data. FALSE outputs lowercase hexits.","def":"false"}],"ret_type":"string"}]},"hash_hmac_file":{"desc":"Generate a keyed hash value using the HMAC method and the contents of a given file","ver":"PHP 5 >= 5.1.2, PECL hash >= 1.1","ret_desc":"Returns a string containing the calculated message digest as lowercase hexits unless raw_output is set to true in which case the raw binary representation of the message digest is returned.","seealso":[],"url":"function.hash-hmac-file","name":"hash_hmac_file","params":[{"list":[{"type":"string","var":"$algo","beh":0,"desc":"Name of selected hashing algorithm (i.e. \"md5\", \"sha256\", \"haval160,4\", etc..) See hash_algos() for a list of supported algorithms."},{"type":"string","var":"$filename","beh":1,"desc":"URL describing location of file to be hashed; Supports fopen wrappers."},{"type":"string","var":"$key","beh":1,"desc":"Shared secret key used for generating the HMAC variant of the message digest."},{"type":"bool","var":"$raw_output","beh":1,"desc":"When set to TRUE, outputs raw binary data. FALSE outputs lowercase hexits.","def":"false"}],"ret_type":"string"}]},"hash_init":{"desc":"Initialize an incremental hashing context","ver":"PHP 5 >= 5.1.2, PECL hash >= 1.1","ret_desc":"Returns a Hashing Context resource for use with hash_update(), hash_update_stream(), hash_update_file(), and hash_final().","seealso":[],"url":"function.hash-init","name":"hash_init","params":[{"list":[{"type":"string","var":"$algo","beh":1,"desc":"Name of selected hashing algorithm (i.e. \"md5\", \"sha256\", \"haval160,4\", etc..)"},{"type":"int","var":"$options","beh":1,"desc":"Optional settings for hash generation, currently supports only one option: HASH_HMAC. When specified, the key must be specified.","def":0},{"type":"string","var":"$key","beh":1,"desc":"When HASH_HMAC is specified for options, a shared secret key to be used with the HMAC hashing method must be supplied in this parameter.","def":"NULL"}],"ret_type":"resource"}]},"hash_update":{"desc":"Pump data into an active hashing context","ver":"PHP 5 >= 5.1.2, PECL hash >= 1.1","ret_desc":"Returns TRUE.","seealso":[],"url":"function.hash-update","name":"hash_update","params":[{"list":[{"type":"resource","var":"$context","beh":0,"desc":"Hashing context returned by hash_init()."},{"type":"string","var":"$data","beh":0,"desc":"Message to be included in the hash digest."}],"ret_type":"bool"}]},"hash_update_file":{"desc":"Pump data into an active hashing context from a file","ver":"PHP 5 >= 5.1.2, PECL hash >= 1.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.hash-update-file","name":"hash_update_file","params":[{"list":[{"type":"resource","var":"$context","beh":0,"desc":"Hashing context returned by hash_init()."},{"type":"string","var":"$filename","beh":1,"desc":"URL describing location of file to be hashed; Supports fopen wrappers."},{"type":"resource","var":"$context","beh":1,"desc":"Stream context as returned by stream_context_create().","def":"NULL"}],"ret_type":"bool"}]},"hash_update_stream":{"desc":"Pump data into an active hashing context from an open stream","ver":"PHP 5 >= 5.1.2, PECL hash >= 1.1","ret_desc":"Actual number of bytes added to the hashing context from handle.","seealso":[],"url":"function.hash-update-stream","name":"hash_update_stream","params":[{"list":[{"type":"resource","var":"$context","beh":0,"desc":"Hashing context returned by hash_init()."},{"type":"resource","var":"$handle","beh":1,"desc":"Open file handle as returned by any stream creation function."},{"type":"int","var":"$length","beh":1,"desc":"Maximum number of characters to copy from handle into the hashing context.","def":-1}],"ret_type":"int"}]},"header":{"desc":"Send a raw HTTP header","long_desc":"header() is used to send a raw HTTP header. See the \u00bb\u00a0HTTP\/1.1 specification for more information on HTTP headers. Remember that header() must be called before any actual output is sent, either by normal HTML tags, blank lines in a file, or from PHP. It is a very common error to read code with include(), or require(), functions, or another file access function, and have spaces or empty lines that are output before header() is called. The same problem exists when using a single PHP\/HTML file.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.header","name":"header","params":[{"list":[{"type":"string","var":"$string","beh":1,"desc":"The header string. There are two special-case header calls. The first is a header that starts with the string \"HTTP\/\" (case is not significant), which will be used to figure out the HTTP status code to send. For example, if you have configured Apache to use a PHP script to handle requests for missing files (using the ErrorDocument directive), you may want to make sure that your script generates the proper status code. For FastCGI you must use the following for a 404 response: The second special case is the \"Location:\" header. Not only does it send this header back to the browser, but it also returns a REDIRECT (302) status code to the browser unless the 201 or a 3xx status code has already been set."},{"type":"bool","var":"$replace","beh":1,"desc":"The optional replace parameter indicates whether the header should replace a previous similar header, or add a second header of the same type. By default it will replace, but if you pass in FALSE as the second argument you can force multiple headers of the same type. For example:","def":"true"},{"type":"int","var":"$http_response_code","beh":1,"desc":"Forces the HTTP response code to the specified value. Note that this parameter only has an effect if the string is not empty."}],"ret_type":"void"}]},"header_register_callback":{"desc":"Call a header function","long_desc":"Registers a function that will be called when PHP starts sending output. The callback is executed just after PHP prepares all headers to be sent, and before any other output is sent, creating a window to manipulate the outgoing headers before being sent.","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.header-register-callback","name":"header_register_callback","params":[{"list":[],"ret_type":"bool"}]},"header_remove":{"desc":"Remove previously set headers","long_desc":"Removes an HTTP header previously set using header().","ver":"PHP 5 >= 5.3.0","ret_desc":"No value is returned.","seealso":[],"url":"function.header-remove","name":"header_remove","params":[{"list":[],"ret_type":"void"}]},"headers_list":{"desc":"Returns a list of response headers sent (or ready to send)","long_desc":"headers_list() will return a list of headers to be sent to the browser \/ client. To determine whether or not these headers have been sent yet, use headers_sent().","ver":"PHP 5","ret_desc":"Returns a numerically indexed array of headers.","seealso":[],"url":"function.headers-list","name":"headers_list","params":[{"list":[],"ret_type":"array"}]},"headers_sent":{"desc":"Checks if or where headers have been sent","long_desc":"Checks if or where headers have been sent. You can't add any more header lines using the header() function once the header block has already been sent. Using this function you can at least prevent getting HTTP header related error messages. Another option is to use Output Buffering.","ver":"PHP 4, PHP 5","ret_desc":"headers_sent() will return FALSE if no HTTP headers have already been sent or TRUE otherwise.","seealso":[],"url":"function.headers-sent","name":"headers_sent","params":[{"list":[{"type":"string","var":"&$file","beh":1,"desc":"If the optional file and line parameters are set, headers_sent() will put the PHP source file name and line number where output started in the file and line variables."},{"type":"int","var":"&$line","beh":1,"desc":"The line number where the output started."}],"ret_type":"bool"}]},"hebrev":{"desc":"Convert logical Hebrew text to visual text","long_desc":"Converts logical Hebrew text to visual text. The function tries to avoid breaking words.","ver":"PHP 4, PHP 5","ret_desc":"Returns the visual string.","seealso":[],"url":"function.hebrev","name":"hebrev","params":[{"list":[{"type":"string","var":"$hebrew_text","beh":0,"desc":"A Hebrew input string."},{"type":"int","var":"$max_chars_per_line","beh":0,"desc":"This optional parameter indicates maximum number of characters per line that will be returned.","def":0}],"ret_type":"string"}]},"hebrevc":{"desc":"Convert logical Hebrew text to visual text with newline conversion","long_desc":"This function is similar to hebrev() with the difference that it converts newlines (\\n) to \"<br>\\n\". The function tries to avoid breaking words.","ver":"PHP 4, PHP 5","ret_desc":"Returns the visual string.","seealso":[],"url":"function.hebrevc","name":"hebrevc","params":[{"list":[{"type":"string","var":"$hebrew_text","beh":0,"desc":"A Hebrew input string."},{"type":"int","var":"$max_chars_per_line","beh":0,"desc":"This optional parameter indicates maximum number of characters per line that will be returned.","def":0}],"ret_type":"string"}]},"hex2bin":{"desc":"Convert hex to binary","long_desc":"Converts the hex representation of data to binary","ver":"PHP >= 5.4.0","ret_desc":"Returns the binary representation of the given data.","seealso":[],"url":"function.hex2bin","name":"hex2bin","params":[{"list":[],"ret_type":"string"}]},"hexdec":{"desc":"Hexadecimal to decimal","long_desc":"Returns the decimal equivalent of the hexadecimal number represented by the hex_string argument. hexdec() converts a hexadecimal string to a decimal number. hexdec() will ignore any non-hexadecimal characters it encounters.","ver":"PHP 4, PHP 5","ret_desc":"The decimal representation of hex_string","seealso":[],"url":"function.hexdec","name":"hexdec","params":[{"list":[],"ret_type":"number"}]},"highlight_file":{"desc":"Syntax highlighting of a file","long_desc":"Prints out or returns a syntax highlighted version of the code contained in filename using the colors defined in the built-in syntax highlighter for PHP. Many servers are configured to automatically highlight files with a phps extension. For example, example.phps when viewed will show the syntax highlighted source of the file. To enable this, add this line to the httpd.conf:","ver":"PHP 4, PHP 5","ret_desc":"If return is set to TRUE, returns the highlighted code as a string instead of printing it out. Otherwise, it will return TRUE on success, FALSE on failure.","seealso":[],"url":"function.highlight-file","name":"highlight_file","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"Path to the PHP file to be highlighted."},{"type":"bool","var":"$return","beh":0,"desc":"Set this parameter to TRUE to make this function return the highlighted code.","def":"false"}],"ret_type":"mixed"}]},"highlight_string":{"desc":"Syntax highlighting of a string","long_desc":"Outputs or returns a syntax highlighted version of the given PHP code using the colors defined in the built-in syntax highlighter for PHP.","ver":"PHP 4, PHP 5","ret_desc":"If return is set to TRUE, returns the highlighted code as a string instead of printing it out. Otherwise, it will return TRUE on success, FALSE on failure.","seealso":[],"url":"function.highlight-string","name":"highlight_string","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The PHP code to be highlighted. This should include the opening tag."},{"type":"bool","var":"$return","beh":0,"desc":"Set this parameter to TRUE to make this function return the highlighted code.","def":"false"}],"ret_type":"mixed"}]},"html_entity_decode":{"desc":"Convert all HTML entities to their applicable characters","long_desc":"html_entity_decode() is the opposite of htmlentities() in that it converts all HTML entities in the string to their applicable characters.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the decoded string.","seealso":[],"url":"function.html-entity-decode","name":"html_entity_decode","params":[{"list":[{"type":"string","var":"$string","beh":1,"desc":"The input string."},{"type":"int","var":"$flags","beh":1,"desc":"A bitmask of one or more of the following flags, which specify how to handle quotes and which document type to use. The default is ENT_COMPAT | ENT_HTML401.","def":"ENT_COMPAT | ENT_HTML401"},{"type":"string","var":"$encoding","beh":1,"desc":"Encoding to use. If omitted, the default value for this argument is ISO-8859-1 in versions of PHP prior to 5.4.0, and UTF-8 from PHP 5.4.0 onwards. The following character sets are supported:","def":"'UTF-8'"}],"ret_type":"string"}]},"htmlentities":{"desc":"Convert all applicable characters to HTML entities","long_desc":"This function is identical to htmlspecialchars() in all ways, except with htmlentities(), all characters which have HTML character entity equivalents are translated into these entities. If you want to decode instead (the reverse) you can use html_entity_decode().","ver":"PHP 4, PHP 5","ret_desc":"Returns the encoded string.","seealso":[],"url":"function.htmlentities","name":"htmlentities","params":[{"list":[{"type":"string","var":"$string","beh":1,"desc":"The input string."},{"type":"int","var":"$flags","beh":1,"desc":"A bitmask of one or more of the following flags, which specify how to handle quotes, invalid code unit sequences and the used document type. The default is ENT_COMPAT | ENT_HTML401.","def":"ENT_COMPAT | ENT_HTML401"},{"type":"string","var":"$encoding","beh":1,"desc":"Like htmlspecialchars(), htmlentities() takes an optional third argument encoding which defines encoding used in conversion. If omitted, the default value for this argument is ISO-8859-1 in versions of PHP prior to 5.4.0, and UTF-8 from PHP 5.4.0 onwards. Although this argument is technically optional, you are highly encouraged to specify the correct value for your code. The following character sets are supported:","def":"'UTF-8'"},{"type":"bool","var":"$double_encode","beh":1,"desc":"When double_encode is turned off PHP will not encode existing html entities. The default is to convert everything.","def":"true"}],"ret_type":"string"}]},"htmlspecialchars":{"desc":"Convert special characters to HTML entities","long_desc":"Certain characters have special significance in HTML, and should be represented by HTML entities if they are to preserve their meanings. This function returns a string with some of these conversions made; the translations made are those most useful for everyday web programming. If you require all HTML character entities to be translated, use htmlentities() instead. This function is useful in preventing user-supplied text from containing HTML markup, such as in a message board or guest book application. The translations performed are:","ver":"PHP 4, PHP 5","ret_desc":"The converted string.","seealso":[],"url":"function.htmlspecialchars","name":"htmlspecialchars","params":[{"list":[{"type":"string","var":"$string","beh":1,"desc":"The string being converted."},{"type":"int","var":"$flags","beh":1,"desc":"A bitmask of one or more of the following flags, which specify how to handle quotes, invalid code unit sequences and the used document type. The default is ENT_COMPAT | ENT_HTML401.","def":"ENT_COMPAT | ENT_HTML401"},{"type":"string","var":"$encoding","beh":1,"desc":"Defines encoding used in conversion. If omitted, the default value for this argument is ISO-8859-1 in versions of PHP prior to 5.4.0, and UTF-8 from PHP 5.4.0 onwards. For the purposes of this function, the encodings ISO-8859-1, ISO-8859-15, UTF-8, cp866, cp1251, cp1252, and KOI8-R are effectively equivalent, provided the string itself is valid for the encoding, as the characters affected by htmlspecialchars() occupy the same positions in all of these encodings. The following character sets are supported:","def":"'UTF-8'"},{"type":"bool","var":"$double_encode","beh":1,"desc":"When double_encode is turned off PHP will not encode existing html entities, the default is to convert everything.","def":"true"}],"ret_type":"string"}]},"htmlspecialchars_decode":{"desc":"Convert special HTML entities back to characters","long_desc":"This function is the opposite of htmlspecialchars(). It converts special HTML entities back to characters. The converted entities are: &amp;, &quot; (when ENT_NOQUOTES is not set), &#039; (when ENT_QUOTES is set), &lt; and &gt;.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the decoded string.","seealso":[],"url":"function.htmlspecialchars-decode","name":"htmlspecialchars_decode","params":[{"list":[{"type":"string","var":"$string","beh":0,"desc":"The string to decode."},{"type":"int","var":"$flags","beh":0,"desc":"A bitmask of one or more of the following flags, which specify how to handle quotes and which document type to use. The default is ENT_COMPAT | ENT_HTML401.","def":"ENT_COMPAT | ENT_HTML401"}],"ret_type":"string"}]},"http_build_cookie":{"desc":"Build cookie string","long_desc":"Build a cookie string from an array\/object like returned by http_parse_cookie().","ver":"PECL pecl_http >= 1.2.0","ret_desc":"Returns the cookie(s) as string.","seealso":[],"url":"function.http-build-cookie","name":"http_build_cookie","params":[{"list":[],"ret_type":"string"}]},"http_build_query":{"desc":"Generate URL-encoded query string","long_desc":"Generates a URL-encoded query string from the associative (or indexed) array provided.","ver":"PHP 5","ret_desc":"Returns a URL-encoded string.","seealso":[],"url":"function.http-build-query","name":"http_build_query","params":[{"list":[{"type":"mixed","var":"$query_data","beh":1,"desc":"May be an array or object containing properties. If query_data is an array, it may be a simple one-dimensional structure, or an array of arrays (which in turn may contain other arrays). If query_data is an object, then only public properties will be incorporated into the result."},{"type":"string","var":"$numeric_prefix","beh":1,"desc":"If numeric indices are used in the base array and this parameter is provided, it will be prepended to the numeric index for elements in the base array only. This is meant to allow for legal variable names when the data is decoded by PHP or another CGI application later on."},{"type":"string","var":"$arg_separator","beh":1,"desc":"arg_separator.output is used to separate arguments, unless this parameter is specified, and is then used."},{"type":"int","var":"$enc_type","beh":1,"desc":"By default, PHP_QUERY_RFC1738. If enc_type is PHP_QUERY_RFC1738, then encoding is performed per \u00bb\u00a0RFC 1738 and the application\/x-www-form-urlencoded media type, which implies that spaces are encoded as plus (+) signs. If enc_type is PHP_QUERY_RFC3986, then encoding is performed according to \u00bb\u00a0RFC 3986, and spaces will be percent encoded (%20).","def":"PHP_QUERY_RFC1738"}],"ret_type":"string"}]},"http_build_str":{"desc":"Build query string","long_desc":"Opponent to parse_str().","ver":"PECL pecl_http >= 0.23.0","ret_desc":"Returns the built query as string on success or FALSE on failure.","seealso":[],"url":"function.http-build-str","name":"http_build_str","params":[{"list":[{"type":"array","var":"$query","beh":1,"desc":"associative array of query string parameters"},{"type":"string","var":"$prefix","beh":1,"desc":"top level prefix"},{"type":"string","var":"$arg_separator","beh":1,"desc":"argument separator to use (by default the INI setting arg_separator.output will be used, or \"&\" if neither is set","def":"ini_get(\"arg_separator.output\")"}],"ret_type":"string"}]},"http_build_url":{"desc":"Build a URL","long_desc":"Build a URL. The parts of the second URL will be merged into the first according to the flags argument.","ver":"PECL pecl_http >= 0.21.0","ret_desc":"Returns the new URL as string on success or FALSE on failure.","seealso":[],"url":"function.http-build-url","name":"http_build_url","params":[{"list":[{"type":"mixed","var":"$url","beh":1,"desc":"(part(s) of) an URL in form of a string or associative array like parse_url() returns"},{"type":"mixed","var":"$parts","beh":1,"desc":"same as the first argument"},{"type":"int","var":"$flags","beh":1,"desc":"a bitmask of binary or'ed HTTP_URL constants; HTTP_URL_REPLACE is the default","def":"HTTP_URL_REPLACE"},{"type":"array","var":"&$new_url","beh":1,"desc":"if set, it will be filled with the parts of the composed url like parse_url() would return"}],"ret_type":"string"}]},"http_cache_etag":{"desc":"Caching by ETag","long_desc":"Attempts to cache the sent entity by its ETag, either supplied or generated by the hash algorithm specified by the INI setting http.etag.mode. If the clients If-None-Match header matches the supplied\/calculated ETag, the body is considered cached on the clients side and a 304 Not Modified status code is issued. A log entry is written to the cache log if the INI setting http.log.cache is set and the cache attempt was successful. If this function is used outside the http_send_*() API, it facilitates the ob_etaghandler().","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns FALSE or exits on success with 304 Not Modified if the entity is cached. See the INI setting http.force_exit for what \"exits\" means.","seealso":[],"url":"function.http-cache-etag","name":"http_cache_etag","params":[{"list":[],"ret_type":"bool"}]},"http_cache_last_modified":{"desc":"Caching by last modification","long_desc":"Attempts to cache the sent entity by its last modification date. If the supplied argument is greater than 0, it is handled as timestamp and will be sent as date of last modification. If it is 0 or omitted, the current time will be sent as Last-Modified date. If it's negative, it is handled as expiration time in seconds, which means that if the requested last modification date is not between the calculated timespan, the Last-Modified header is updated and the actual body will be sent. A log entry will be written to the cache log if the INI setting http.log.cache is set and the cache attempt was successful.","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns FALSE or exits on success with 304 Not Modified if the entity is cached. See the INI setting http.force_exit for what \"exits\" means.","seealso":[],"url":"function.http-cache-last-modified","name":"http_cache_last_modified","params":[{"list":[],"ret_type":"bool"}]},"http_chunked_decode":{"desc":"Decode chunked-encoded data","long_desc":"Decodes a string which is HTTP-chunked encoded.","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns the decoded string on success or FALSE on failure.","url":"function.http-chunked-decode","name":"http_chunked_decode","params":[{"list":[],"ret_type":"string"}]},"http_date":{"desc":"Compose HTTP RFC compliant date","long_desc":"Compose a valid HTTP date regarding RFC 1123 looking like: Wed, 22 Dec 2004 11:34:47 GMT.","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns the HTTP date as string.","seealso":[],"url":"function.http-date","name":"http_date","params":[{"list":[],"ret_type":"string"}]},"http_deflate":{"desc":"Deflate data","long_desc":"Compress data with gzip, zlib AKA deflate or raw deflate encoding. See the deflate constants table for possible values for the flags parameter.","ver":"PECL pecl_http >= 0.15.0","ret_desc":"Returns the encoded string on success, or NULL on failure.","seealso":[],"url":"function.http-deflate","name":"http_deflate","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":"String containing the data that should be encoded"},{"type":"int","var":"$flags","beh":0,"desc":"deflate options","def":0}],"ret_type":"string"}]},"http_get":{"desc":"Perform GET request","long_desc":"Performs an HTTP GET request on the supplied url. See the full list of request options.","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns the HTTP response(s) as string on success, or FALSE on failure.","url":"function.http-get","name":"http_get","params":[{"list":[{"type":"string","var":"$url","beh":1,"desc":"URL"},{"type":"array","var":"$options","beh":1,"desc":"request options"},{"type":"array","var":"&$info","beh":1,"desc":"Will be filled with request\/response information"}],"ret_type":"string"}]},"http_get_request_body":{"desc":"Get request body as string","long_desc":"Get the raw request body (e.g. POST or PUT data). This function can not be used after http_get_request_body_stream() if the request method was another than POST.","ver":"PECL pecl_http >= 0.10.0","ret_desc":"Returns the raw request body as string on success or NULL on failure.","seealso":[],"url":"function.http-get-request-body","name":"http_get_request_body","params":[{"list":[],"ret_type":"string"}]},"http_get_request_body_stream":{"desc":"Get request body as stream","long_desc":"Create a stream to read the raw request body (e.g. POST or PUT data). This function can only be used once if the request method was another than POST.","ver":"PECL pecl_http >= 0.22.0","ret_desc":"Returns the raw request body as stream on success or NULL on failure.","seealso":[],"url":"function.http-get-request-body-stream","name":"http_get_request_body_stream","params":[{"list":[],"ret_type":"resource"}]},"http_get_request_headers":{"desc":"Get request headers as array","long_desc":"Get a list of incoming HTTP headers.","ver":"PECL pecl_http >= 0.10.0","ret_desc":"Returns an associative array of incoming request headers.","seealso":[],"url":"function.http-get-request-headers","name":"http_get_request_headers","params":[{"list":[],"ret_type":"array"}]},"http_head":{"desc":"Perform HEAD request","long_desc":"Performs an HTTP HEAD request on the supplied url. See the full list of request options.","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns the HTTP response(s) as string on success, or FALSE on failure.","url":"function.http-head","name":"http_head","params":[{"list":[{"type":"string","var":"$url","beh":1,"desc":"URL"},{"type":"array","var":"$options","beh":1,"desc":"request options"},{"type":"array","var":"&$info","beh":1,"desc":"Request\/response information"}],"ret_type":"string"}]},"http_inflate":{"desc":"Inflate data","long_desc":"Decompress data compressed with either gzip, deflate AKA zlib or raw deflate encoding.","ver":"PECL pecl_http >= 0.15.0","ret_desc":"Returns the decoded string on success, or NULL on failure.","seealso":[],"url":"function.http-inflate","name":"http_inflate","params":[{"list":[],"ret_type":"string"}]},"http_match_etag":{"desc":"Match ETag","long_desc":"Matches the given ETag against the clients If-Match resp. If-None-Match HTTP headers.","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns TRUE if ETag matches or the header contained the asterisk (\"*\"), else FALSE.","seealso":[],"url":"function.http-match-etag","name":"http_match_etag","params":[{"list":[{"type":"string","var":"$etag","beh":0,"desc":"the ETag to match"},{"type":"bool","var":"$for_range","beh":0,"desc":"if set to TRUE, the header usually used to validate HTTP ranges will be checked","def":"false"}],"ret_type":"bool"}]},"http_match_modified":{"desc":"Match last modification","long_desc":"Matches the given Unix timestamp against the clients If-Modified-Since resp. If-Unmodified-Since HTTP headers.","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns TRUE if timestamp represents an earlier date than the header, else FALSE.","seealso":[],"url":"function.http-match-modified","name":"http_match_modified","params":[{"list":[{"type":"int","var":"$timestamp","beh":0,"desc":"Unix timestamp; current time, if omitted","def":-1},{"type":"bool","var":"$for_range","beh":1,"desc":"if set to TRUE, the header usually used to validate HTTP ranges will be checked","def":"false"}],"ret_type":"bool"}]},"http_match_request_header":{"desc":"Match any header","long_desc":"Match an incoming HTTP header.","ver":"PECL pecl_http >= 0.10.0","ret_desc":"Returns TRUE if header value matches, else FALSE.","seealso":[],"url":"function.http-match-request-header","name":"http_match_request_header","params":[{"list":[{"type":"string","var":"$header","beh":0,"desc":"the header name (case-insensitive)"},{"type":"string","var":"$value","beh":1,"desc":"the header value that should be compared"},{"type":"bool","var":"$match_case","beh":1,"desc":"whether the value should be compared case sensitively","def":"false"}],"ret_type":"bool"}]},"http_negotiate_charset":{"desc":"Negotiate client's preferred character set","long_desc":"This function negotiates the clients preferred charset based on its Accept-Charset HTTP header. The qualifier is recognized and charsets without qualifier are rated highest.","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns the negotiated charset or the default charset (i.e. first array entry) if none match.","url":"function.http-negotiate-charset","name":"http_negotiate_charset","params":[{"list":[{"type":"array","var":"$supported","beh":0,"desc":"array containing the supported charsets as values"},{"type":"array","var":"&$result","beh":1,"desc":"will be filled with an array containing the negotiation results"}],"ret_type":"string"}]},"http_negotiate_content_type":{"desc":"Negotiate client's preferred content type","long_desc":"This function negotiates the clients preferred content type based on its Accept HTTP header. The qualifier is recognized and content types without qualifier are rated highest.","ver":"PECL pecl_http >= 0.19.0","ret_desc":"Returns the negotiated content type or the default content type (i.e. first array entry) if none match.","url":"function.http-negotiate-content-type","name":"http_negotiate_content_type","params":[{"list":[{"type":"array","var":"$supported","beh":0,"desc":"array containing the supported content types as values"},{"type":"array","var":"&$result","beh":1,"desc":"will be filled with an array containing the negotiation results"}],"ret_type":"string"}]},"http_negotiate_language":{"desc":"Negotiate client's preferred language","long_desc":"This function negotiates the clients preferred language based on its Accept-Language HTTP header. The qualifier is recognized and languages without qualifier are rated highest. The qualifier will be decreased by 10% for partial matches (i.e. matching primary language).","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns the negotiated language or the default language (i.e. first array entry) if none match.","url":"function.http-negotiate-language","name":"http_negotiate_language","params":[{"list":[{"type":"array","var":"$supported","beh":0,"desc":"array containing the supported languages as values"},{"type":"array","var":"&$result","beh":1,"desc":"will be filled with an array containing the negotiation results"}],"ret_type":"string"}]},"http_parse_cookie":{"desc":"Parse HTTP cookie","long_desc":"Parses HTTP cookies like sent in a response into a struct.","ver":"PECL pecl_http >= 0.20.0","ret_desc":"Returns a stdClass object on success or FALSE on failure.","seealso":[],"url":"function.http-parse-cookie","name":"http_parse_cookie","params":[{"list":[{"type":"string","var":"$cookie","beh":1,"desc":"string containing the value of a Set-Cookie response header"},{"type":"int","var":"$flags","beh":1,"desc":"parse flags (HTTP_COOKIE_PARSE_RAW)"},{"type":"array","var":"$allowed_extras","beh":1,"desc":"array containing recognized extra keys; by default all unknown keys will be treated as cookie names"}],"ret_type":"object"}]},"http_parse_headers":{"desc":"Parse HTTP headers","long_desc":"Parses HTTP headers into an associative array.","ver":"PECL pecl_http >= 0.10.0","ret_desc":"Returns an array on success or FALSE on failure.","seealso":[],"url":"function.http-parse-headers","name":"http_parse_headers","params":[{"list":[],"ret_type":"array"}]},"http_parse_message":{"desc":"Parse HTTP messages","long_desc":"Parses the HTTP message into a simple recursive object.","ver":"PECL pecl_http >= 0.12.0","ret_desc":"Returns a hierarchical object structure of the parsed messages.","seealso":[],"url":"function.http-parse-message","name":"http_parse_message","params":[{"list":[],"ret_type":"object"}]},"http_parse_params":{"desc":"Parse parameter list","long_desc":"Parse parameter list. See the params parsing constants table for possible values of the flags argument.","ver":"PECL pecl_http >= 1.0.0","ret_desc":"Returns parameter list as stdClass object.","seealso":[],"url":"function.http-parse-params","name":"http_parse_params","params":[{"list":[{"type":"string","var":"$param","beh":0,"desc":"Parameters"},{"type":"int","var":"$flags","beh":0,"desc":"Parse flags","def":"HTTP_PARAMS_DEFAULT"}],"ret_type":"object"}]},"http_persistent_handles_clean":{"desc":"Clean up persistent handles","long_desc":"Clean up (close) persistent handles, optionally identified with ident.","ver":"PECL pecl_http >= 1.5.0","ret_desc":"No value is returned.","seealso":[],"url":"function.http-persistent-handles-clean","name":"http_persistent_handles_clean","params":[{"list":[],"ret_type":"string"}]},"http_persistent_handles_count":{"desc":"Stat persistent handles","long_desc":"List statistics about persistent handles usage.","ver":"PECL pecl_http >= 1.5.0","ret_desc":"Returns persistent handles statistics as stdClass object on success or FALSE on failure.","seealso":[],"url":"function.http-persistent-handles-count","name":"http_persistent_handles_count","params":[{"list":[],"ret_type":"object"}]},"http_persistent_handles_ident":{"desc":"Get\/set ident of persistent handles","long_desc":"Query or define the ident of persistent handles.","ver":"PECL pecl_http >= 1.5.0","ret_desc":"Returns the prior ident as string on success or FALSE on failure.","seealso":[],"url":"function.http-persistent-handles-ident","name":"http_persistent_handles_ident","params":[{"list":[],"ret_type":"string"}]},"http_post_data":{"desc":"Perform POST request with pre-encoded data","long_desc":"Performs an HTTP POST request on the supplied url. See the full list of request options.","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns the HTTP response(s) as string on success, or FALSE on failure.","url":"function.http-post-data","name":"http_post_data","params":[{"list":[{"type":"string","var":"$url","beh":1,"desc":"URL"},{"type":"string","var":"$data","beh":1,"desc":"String containing the pre-encoded post data"},{"type":"array","var":"$options","beh":1,"desc":"request options"},{"type":"array","var":"&$info","beh":1,"desc":"Request\/response information"}],"ret_type":"string"}]},"http_post_fields":{"desc":"Perform POST request with data to be encoded","long_desc":"Performs an HTTP POST request on the supplied url. See the full list of request options.","ver":"PECL pecl_http >= 0.10.0","ret_desc":"Returns the HTTP response(s) as string on success, or FALSE on failure.","url":"function.http-post-fields","name":"http_post_fields","params":[{"list":[{"type":"string","var":"$url","beh":1,"desc":"URL"},{"type":"array","var":"$data","beh":1,"desc":"Associative array of POST values"},{"type":"array","var":"$files","beh":1,"desc":"Array of files to post"},{"type":"array","var":"$options","beh":1,"desc":"request options"},{"type":"array","var":"&$info","beh":1,"desc":"Request\/response information"}],"ret_type":"string"}]},"http_put_data":{"desc":"Perform PUT request with data","long_desc":"Performs an HTTP PUT request on the supplied url. See the full list of request options.","ver":"PECL pecl_http >= 0.25.0","ret_desc":"Returns the HTTP response(s) as string on success, or FALSE on failure.","url":"function.http-put-data","name":"http_put_data","params":[{"list":[{"type":"string","var":"$url","beh":1,"desc":"URL"},{"type":"string","var":"$data","beh":1,"desc":"PUT request body"},{"type":"array","var":"$options","beh":1,"desc":"request options"},{"type":"array","var":"&$info","beh":1,"desc":"Request\/response information"}],"ret_type":"string"}]},"http_put_file":{"desc":"Perform PUT request with file","long_desc":"Performs an HTTP PUT request on the supplied url. See the full list of request options.","ver":"PECL pecl_http >= 0.10.0","ret_desc":"Returns the HTTP response(s) as string on success, or FALSE on failure.","url":"function.http-put-file","name":"http_put_file","params":[{"list":[{"type":"string","var":"$url","beh":1,"desc":"URL"},{"type":"string","var":"$file","beh":1,"desc":"The file to put"},{"type":"array","var":"$options","beh":1,"desc":"request options"},{"type":"array","var":"&$info","beh":1,"desc":"Request\/response information"}],"ret_type":"string"}]},"http_put_stream":{"desc":"Perform PUT request with stream","long_desc":"Performs an HTTP PUT request on the supplied url. See the full list of request options.","ver":"PECL pecl_http >= 0.10.0","ret_desc":"Returns the HTTP response(s) as string on success, or FALSE on failure.","url":"function.http-put-stream","name":"http_put_stream","params":[{"list":[{"type":"string","var":"$url","beh":1,"desc":"URL"},{"type":"resource","var":"$stream","beh":1,"desc":"The stream to read the PUT request body from"},{"type":"array","var":"$options","beh":1,"desc":"request options"},{"type":"array","var":"&$info","beh":1,"desc":"Request\/response information"}],"ret_type":"string"}]},"http_redirect":{"desc":"Issue HTTP redirect","long_desc":"Redirect to the given url. The supplied url will be expanded with http_build_url(), the params array will be treated with http_build_str() and the session identification will be appended if session is true. The HTTP response code will be set according to status. You can use one of the redirect constants for convenience. Please see \u00bb\u00a0RFC 2616 for which redirect response code to use in which situation. By default PHP will decide which response status fits best. To be RFC compliant, \"Redirecting to <a>URL<\/a>.\" will be displayed, if the client doesn't redirect immediately, and the request method was another one than HEAD. A log entry will be written to the redirect log, if the INI setting http.log.redirect is set and the redirect attempt was successful.","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns FALSE or exits on success with the specified redirection status code. See the INI setting http.force_exit for what \"exits\" means.","seealso":[],"url":"function.http-redirect","name":"http_redirect","params":[{"list":[{"type":"string","var":"$url","beh":1,"desc":"the URL to redirect to"},{"type":"array","var":"$params","beh":1,"desc":"associative array of query parameters"},{"type":"bool","var":"$session","beh":1,"desc":"whether to append session information","def":"false"},{"type":"int","var":"$status","beh":1,"desc":"custom response status code","def":0}],"ret_type":"bool"}]},"http_request":{"desc":"Perform custom request","long_desc":"Performs a custom HTTP request on the supplied url. See the full list of request options.","ver":"PECL pecl_http >= 1.0.0","ret_desc":"Returns the HTTP response(s) as string on success, or FALSE on failure.","url":"function.http-request","name":"http_request","params":[{"list":[{"type":"int","var":"$method","beh":1,"desc":"Request method"},{"type":"string","var":"$url","beh":1,"desc":"URL"},{"type":"string","var":"$body","beh":1,"desc":"Request body"},{"type":"array","var":"$options","beh":1,"desc":"request options"},{"type":"array","var":"&$info","beh":1,"desc":"Request\/response information"}],"ret_type":"string"}]},"http_request_body_encode":{"desc":"Encode request body","long_desc":"Generate x-www-form-urlencoded resp. form-data encoded request body.","ver":"PECL pecl_http >= 1.0.0","ret_desc":"Returns encoded string on success or FALSE on failure.","url":"function.http-request-body-encode","name":"http_request_body_encode","params":[{"list":[{"type":"array","var":"$fields","beh":0,"desc":"POST fields"},{"type":"array","var":"$files","beh":0,"desc":"POST files"}],"ret_type":"string"}]},"http_request_method_exists":{"desc":"Check whether request method exists","long_desc":"Check if a request method is registered (or available by default).","ver":"PECL pecl_http >= 0.10.0","ret_desc":"Returns TRUE if the request method is known, else FALSE.","url":"function.http-request-method-exists","name":"http_request_method_exists","params":[{"list":[],"ret_type":"int"}]},"http_request_method_name":{"desc":"Get request method name","long_desc":"Get the literal string representation of a standard or registered request method.","ver":"PECL pecl_http >= 0.10.0","ret_desc":"Returns the request method name as string on success or FALSE on failure.","url":"function.http-request-method-name","name":"http_request_method_name","params":[{"list":[],"ret_type":"string"}]},"http_request_method_register":{"desc":"Register request method","long_desc":"Register a custom request method.","ver":"PECL pecl_http >= 0.10.0","ret_desc":"Returns the ID of the request method on success or FALSE on failure.","url":"function.http-request-method-register","name":"http_request_method_register","params":[{"list":[],"ret_type":"int"}]},"http_request_method_unregister":{"desc":"Unregister request method","long_desc":"Unregister a previously registered custom request method.","ver":"PECL pecl_http >= 0.10.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.http-request-method-unregister","name":"http_request_method_unregister","params":[{"list":[],"ret_type":"bool"}]},"http_response_code":{"desc":"Get or Set the HTTP response code","long_desc":"If you pass no parameters then http_response_code will get the current status code. If you pass a parameter it will set the response code.","ver":"No version information available, might only be in SVN","ret_desc":"The current response code. By default the return value is int(200).","seealso":[],"url":"function.http-response-code","name":"http_response_code","params":[{"list":[],"ret_type":"int"}]},"http_send_content_disposition":{"desc":"Send Content-Disposition","long_desc":"Send the Content-Disposition. The Content-Disposition header is very useful if the data actually being sent came from a file or something similar, that should be \"saved\" by the client\/user (i.e. by the browser's \"Save as...\" popup window).","ver":"PECL pecl_http >= 0.10.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.http-send-content-disposition","name":"http_send_content_disposition","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"the file name the \"Save as...\" dialog should display"},{"type":"bool","var":"$inline","beh":0,"desc":"if set to TRUE and the user agent knows how to handle the content type, it will probably not cause the popup window to be shown","def":"false"}],"ret_type":"bool"}]},"http_send_content_type":{"desc":"Send Content-Type","long_desc":"Send the Content-Type of the sent entity.","ver":"PECL pecl_http >= 0.10.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.http-send-content-type","name":"http_send_content_type","params":[{"list":[],"ret_type":"bool"}]},"http_send_data":{"desc":"Send arbitrary data","long_desc":"Sends raw data with support for (multiple) range requests.","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.http-send-data","name":"http_send_data","params":[{"list":[],"ret_type":"bool"}]},"http_send_file":{"desc":"Send file","long_desc":"Sends a file with support for (multiple) range requests. This functions behaviour and further action is dependent on the following INI settings: http.send.not_found_404 and http.log.not_found. If the INI setting http.send.not_found_404 is enabled and the INI setting http.log.not_found points to a writable file, a log message is written when the file was not found.","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.http-send-file","name":"http_send_file","params":[{"list":[],"ret_type":"bool"}]},"http_send_last_modified":{"desc":"Send Last-Modified","long_desc":"Send a Last-Modified header with a valid HTTP date.","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.http-send-last-modified","name":"http_send_last_modified","params":[{"list":[],"ret_type":"bool"}]},"http_send_status":{"desc":"Send HTTP response status","long_desc":"Send HTTP status code.","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.http-send-status","name":"http_send_status","params":[{"list":[],"ret_type":"bool"}]},"http_send_stream":{"desc":"Send stream","long_desc":"Sends an already opened stream with support for (multiple) range requests.","ver":"PECL pecl_http >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.http-send-stream","name":"http_send_stream","params":[{"list":[],"ret_type":"bool"}]},"http_support":{"desc":"Check built-in HTTP support","long_desc":"Check for features that require external libraries. See the feature support constants table for possible values for the feature argument.","ver":"PECL pecl_http >= 0.15.0","ret_desc":"Returns integer, whether requested feature is supported, or a bitmask with all supported features if feature was omitted.","url":"function.http-support","name":"http_support","params":[{"list":[],"ret_type":"int"}]},"http_throttle":{"desc":"HTTP throttling","long_desc":"Sets the throttle delay and send buffer size.","ver":"PECL pecl_http >= 0.10.0","seealso":[],"url":"function.http-throttle","name":"http_throttle","params":[{"list":[{"type":"float","var":"$sec","beh":0,"desc":"seconds to sleep after each chunk sent"},{"type":"int","var":"$bytes","beh":0,"desc":"the chunk size in bytes","def":40960}],"ret_type":"void"}]},"hw_Array2Objrec":{"desc":"Convert attributes from object array to object record","long_desc":"Converts an object_array into an object record. Multiple attributes like 'Title' in different languages are treated properly.","ver":"PHP 4","ret_desc":"Returns an object record.","seealso":[],"url":"function.hw-array2objrec","name":"hw_Array2Objrec","params":[{"list":[],"ret_type":"string"}]},"hw_Children":{"desc":"Object ids of children","long_desc":"Returns the identifiers of the collection children.","ver":"PHP 4","ret_desc":"Returns an array of object ids. Each id belongs to a child of the collection with ID objectID. The array contains all children both documents and collections.","url":"function.hw-children","name":"hw_Children","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The object identifier."}],"ret_type":"array"}]},"hw_ChildrenObj":{"desc":"Object records of children","long_desc":"Returns the object records of the collection children.","ver":"PHP 4","ret_desc":"Returns an array of object records. Each object record belongs to a child of the collection with ID objectID. The array contains all children both documents and collections.","url":"function.hw-childrenobj","name":"hw_ChildrenObj","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The object identifier."}],"ret_type":"array"}]},"hw_Close":{"desc":"Closes the Hyperwave connection","long_desc":"Closes down the connection to a Hyperwave server.","ver":"PHP 4","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.hw-close","name":"hw_Close","params":[{"list":[],"ret_type":"bool"}]},"hw_Connect":{"desc":"Opens a connection","long_desc":"Opens a connection to a Hyperwave server. You can have multiple connections open at once.","ver":"PHP 4","ret_desc":"Returns a connection index on success, or FALSE if the connection could not be made.","seealso":[],"url":"function.hw-connect","name":"hw_Connect","params":[{"list":[{"type":"string","var":"$host","beh":0,"desc":"The server host name."},{"type":"int","var":"$port","beh":1,"desc":"The server port number."},{"type":"string","var":"$username","beh":1,"desc":"The Hyperwave user name. If omitted, no identification with the server will be done. It is similar to identify as user anonymous."},{"type":"string","var":"$password","beh":1,"desc":"The password for username. Keep in mind, that the password is not encrypted."}],"ret_type":"int"}]},"hw_Deleteobject":{"desc":"Deletes object","long_desc":"Deletes the object with the given object id in the second parameter. It will delete all instances of the object.","ver":"PHP 4","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.hw-deleteobject","name":"hw_Deleteobject","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$object_to_delete","beh":0,"desc":"The object identifier."}],"ret_type":"bool"}]},"hw_DocByAnchor":{"desc":"Object id object belonging to anchor","long_desc":"Returns an th object id of the document to which anchorID belongs.","ver":"PHP 4","ret_desc":"Returns the document object id.","url":"function.hw-docbyanchor","name":"hw_DocByAnchor","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$anchorID","beh":0,"desc":"The anchor identifier."}],"ret_type":"int"}]},"hw_DocByAnchorObj":{"desc":"Object record object belonging to anchor","long_desc":"Returns an th object record of the document to which anchorID belongs.","ver":"PHP 4","ret_desc":"Returns an object record.","url":"function.hw-docbyanchorobj","name":"hw_DocByAnchorObj","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$anchorID","beh":0,"desc":"The anchor identifier."}],"ret_type":"string"}]},"hw_Document_Attributes":{"desc":"Object record of hw_document","long_desc":"Returns the object record of the document. For backward compatibility, hw_documentattributes() is also accepted. This is deprecated, however.","ver":"PHP 4","ret_desc":"Returns the object record of the document.","seealso":[],"url":"function.hw-document-attributes","name":"hw_Document_Attributes","params":[{"list":[],"ret_type":"string"}]},"hw_Document_BodyTag":{"desc":"Body tag of hw_document","long_desc":"Returns the BODY tag of the document. If the document is an HTML document the BODY tag should be printed before the document. For backward compatibility, hw_documentbodytag() is also accepted. This is deprecated, however.","ver":"PHP 4","ret_desc":"Returns the BODY tag as a string.","seealso":[],"url":"function.hw-document-bodytag","name":"hw_Document_BodyTag","params":[{"list":[{"type":"int","var":"$hw_document","beh":0,"desc":"The document identifier."},{"type":"string","var":"$prefix","beh":1,"desc":""}],"ret_type":"string"}]},"hw_Document_Content":{"desc":"Returns content of hw_document","long_desc":"Gets the content of the document.","ver":"PHP 4","ret_desc":"Returns the content of the document. If the document is an HTML document the content is everything after the BODY tag. Information from the HEAD and BODY tag is in the stored in the object record.","seealso":[],"url":"function.hw-document-content","name":"hw_Document_Content","params":[{"list":[],"ret_type":"string"}]},"hw_Document_SetContent":{"desc":"Sets\/replaces content of hw_document","long_desc":"Sets or replaces the content of the document. If the document is an HTML document the content is everything after the BODY tag. Information from the HEAD and BODY tag is in the stored in the object record. If you provide this information in the content of the document too, the Hyperwave server will change the object record accordingly when the document is inserted. Probably not a very good idea. If this functions fails the document will retain its old content.","ver":"PHP 4","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.hw-document-setcontent","name":"hw_Document_SetContent","params":[{"list":[{"type":"int","var":"$hw_document","beh":0,"desc":"The document identifier."},{"type":"string","var":"$content","beh":0,"desc":""}],"ret_type":"bool"}]},"hw_Document_Size":{"desc":"Size of hw_document","long_desc":"Gets the size of the document. For backward compatibility, hw_documentsize() is also accepted. This is deprecated, however.","ver":"PHP 4","ret_desc":"Returns the size in bytes of the document.","seealso":[],"url":"function.hw-document-size","name":"hw_Document_Size","params":[{"list":[],"ret_type":"int"}]},"hw_EditText":{"desc":"Retrieve text document","long_desc":"Uploads the text document to the server. The object record of the document may not be modified while the document is edited. This function will only works for pure text documents. It will not open a special data connection and therefore blocks the control connection during the transfer.","ver":"PHP 4","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.hw-edittext","name":"hw_EditText","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$hw_document","beh":0,"desc":"The document identifier."}],"ret_type":"bool"}]},"hw_Error":{"desc":"Error number","long_desc":"Returns the last error number, for the last command.","ver":"PHP 4","ret_desc":"Returns the last error number or 0 if no error occurred.","seealso":[],"url":"function.hw-error","name":"hw_Error","params":[{"list":[],"ret_type":"int"}]},"hw_ErrorMsg":{"desc":"Returns error message","long_desc":"Returns a string containing the last error message related to the last command.","ver":"PHP 4","ret_desc":"Returns a string containing the last error message or 'No Error'. If FALSE is returned, this function failed.","seealso":[],"url":"function.hw-errormsg","name":"hw_ErrorMsg","params":[{"list":[],"ret_type":"string"}]},"hw_Free_Document":{"desc":"Frees hw_document","long_desc":"Frees the memory occupied by the Hyperwave document.","ver":"PHP 4","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.hw-free-document","name":"hw_Free_Document","params":[{"list":[],"ret_type":"bool"}]},"hw_GetAnchors":{"desc":"Object ids of anchors of document","long_desc":"Returns an array of object ids with anchors of the specified document.","ver":"PHP 4","ret_desc":"Returns an array of object ids.","url":"function.hw-getanchors","name":"hw_GetAnchors","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The document object id."}],"ret_type":"array"}]},"hw_GetAnchorsObj":{"desc":"Object records of anchors of document","long_desc":"Returns records with anchors of the document with object ID objectID.","ver":"PHP 4","ret_desc":"Returns an array of object records.","url":"function.hw-getanchorsobj","name":"hw_GetAnchorsObj","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The object identifier."}],"ret_type":"array"}]},"hw_GetAndLock":{"desc":"Return object record and lock object","long_desc":"Returns the object record for the object with ID objectID. It will also lock the object, so other users cannot access it until it is unlocked.","ver":"PHP 4","ret_desc":"Returns the object record for the object with ID objectID.","seealso":[],"url":"function.hw-getandlock","name":"hw_GetAndLock","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The object identifier."}],"ret_type":"string"}]},"hw_GetChildColl":{"desc":"Object ids of child collections","long_desc":"Returns object ids. Each object ID belongs to a child collection of the collection with ID objectID. The function will not return child documents.","ver":"PHP 4","ret_desc":"Returns an array of object ids.","seealso":[],"url":"function.hw-getchildcoll","name":"hw_GetChildColl","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The object identifier."}],"ret_type":"array"}]},"hw_GetChildCollObj":{"desc":"Object records of child collections","long_desc":"Returns object records. Each object records belongs to a child collection of the collection with ID objectID. The function will not return child documents.","ver":"PHP 4","ret_desc":"Returns an array of object records.","seealso":[],"url":"function.hw-getchildcollobj","name":"hw_GetChildCollObj","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The object identifier."}],"ret_type":"array"}]},"hw_GetChildDocColl":{"desc":"Object ids of child documents of collection","long_desc":"Returns array of object ids for child documents of a collection.","ver":"PHP 4","ret_desc":"Returns an array of object ids.","seealso":[],"url":"function.hw-getchilddoccoll","name":"hw_GetChildDocColl","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The object identifier."}],"ret_type":"array"}]},"hw_GetChildDocCollObj":{"desc":"Object records of child documents of collection","long_desc":"Returns an array of object records for child documents of a collection.","ver":"PHP 4","ret_desc":"Returns an array of object records.","seealso":[],"url":"function.hw-getchilddoccollobj","name":"hw_GetChildDocCollObj","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The object identifier."}],"ret_type":"array"}]},"hw_GetObject":{"desc":"Object record","long_desc":"Gets an object record. If the second parameter is an array of integer the function will","ver":"PHP 4","ret_desc":"Returns the object record for the given object ID if the second parameter is an integer.","seealso":[],"url":"function.hw-getobject","name":"hw_GetObject","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"mixed","var":"$objectID","beh":1,"desc":"The object identifier, or an array of identifiers."},{"type":"string","var":"$query","beh":1,"desc":"The query string has the following syntax:"}],"ret_type":"mixed"}]},"hw_GetObjectByQuery":{"desc":"Search object","long_desc":"Searches for objects on the whole server and returns an array of object ids.","ver":"PHP 4","ret_desc":"Returns an array of object ids.","seealso":[],"url":"function.hw-getobjectbyquery","name":"hw_GetObjectByQuery","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"string","var":"$query","beh":0,"desc":"The query will only work with indexed attributes."},{"type":"int","var":"$max_hits","beh":1,"desc":"The maximum number of matches is limited to max_hits. If max_hits is set to -1 the maximum number of matches is unlimited."}],"ret_type":"array"}]},"hw_GetObjectByQueryColl":{"desc":"Search object in collection","long_desc":"Searches for objects in collection with ID objectID and returns an array of object ids.","ver":"PHP 4","ret_desc":"Returns an array of object ids.","seealso":[],"url":"function.hw-getobjectbyquerycoll","name":"hw_GetObjectByQueryColl","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The collection id."},{"type":"string","var":"$query","beh":1,"desc":"The query will only work with indexed attributes."},{"type":"int","var":"$max_hits","beh":1,"desc":"The maximum number of matches is limited to max_hits. If max_hits is set to -1 the maximum number of matches is unlimited."}],"ret_type":"array"}]},"hw_GetObjectByQueryCollObj":{"desc":"Search object in collection","long_desc":"Searches for objects in collection with ID objectID and returns an array of object records.","ver":"PHP 4","ret_desc":"Returns an array of object records.","seealso":[],"url":"function.hw-getobjectbyquerycollobj","name":"hw_GetObjectByQueryCollObj","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The collection id."},{"type":"string","var":"$query","beh":1,"desc":"The query will only work with indexed attributes."},{"type":"int","var":"$max_hits","beh":1,"desc":"The maximum number of matches is limited to max_hits. If max_hits is set to -1 the maximum number of matches is unlimited."}],"ret_type":"array"}]},"hw_GetObjectByQueryObj":{"desc":"Search object","long_desc":"Searches for objects on the whole server and returns an array of object records.","ver":"PHP 4","ret_desc":"Returns an array of object records.","seealso":[],"url":"function.hw-getobjectbyqueryobj","name":"hw_GetObjectByQueryObj","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"string","var":"$query","beh":0,"desc":"The query will only work with indexed attributes."},{"type":"int","var":"$max_hits","beh":1,"desc":"The maximum number of matches is limited to max_hits. If max_hits is set to -1 the maximum number of matches is unlimited."}],"ret_type":"array"}]},"hw_GetParents":{"desc":"Object ids of parents","long_desc":"Returns the object identifiers of the parents of an object.","ver":"PHP 4","ret_desc":"Returns an indexed array of object ids. Each object id belongs to a parent of the object with ID objectID.","url":"function.hw-getparents","name":"hw_GetParents","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The object identifier."}],"ret_type":"array"}]},"hw_GetParentsObj":{"desc":"Object records of parents","long_desc":"Returns object records and statistical information about the object records. Each object record belongs to a parent of the object with ID objectID.","ver":"PHP 4","ret_desc":"Returns an indexed array of object records plus an associated array with statistical information about the object records. The associated array is the last entry of the returned array.","url":"function.hw-getparentsobj","name":"hw_GetParentsObj","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The object identifier."}],"ret_type":"array"}]},"hw_GetRemote":{"desc":"Gets a remote document","long_desc":"Gets a remote document. Remote documents in Hyperwave notation are documents retrieved from an external source. Common remote documents are for example external web pages or queries in a database. In order to be able to access external sources through remote documents Hyperwave introduces the HGI (Hyperwave Gateway Interface) which is similar to the CGI. Currently, only ftp, http-servers and some databases can be accessed by the HGI. Calling hw_getremote() returns the document from the external source. If you want to use this function you should be very familiar with HGIs. You should also consider to use PHP instead of Hyperwave to access external sources. Adding database support by a Hyperwave gateway should be more difficult than doing it in PHP.","ver":"PHP 4","ret_desc":"Returns a remote document.","seealso":[],"url":"function.hw-getremote","name":"hw_GetRemote","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The object identifier."}],"ret_type":"int"}]},"hw_GetSrcByDestObj":{"desc":"Returns anchors pointing at object","long_desc":"Gets the object records of all anchors pointing to the object with ID objectID.","ver":"PHP 4","ret_desc":"Returns an array of object records.","seealso":[],"url":"function.hw-getsrcbydestobj","name":"hw_GetSrcByDestObj","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The object identifier. The object can either be a document or an anchor of type destination."}],"ret_type":"array"}]},"hw_GetText":{"desc":"Retrieve text document","long_desc":"Returns the document with object ID objectID. If the document has anchors which can be inserted, they will be inserted already. This function will only work for pure text documents. It will not open a special data connection and therefore blocks the control connection during the transfer.","ver":"PHP 4","ret_desc":"Returns the text document.","seealso":[],"url":"function.hw-gettext","name":"hw_GetText","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":1,"desc":"The object identifier."},{"type":"mixed","var":"$rootID\/prefix","beh":1,"desc":"The optional parameter rootID\/prefix can be a string or an integer. If it is an integer it determines how links are inserted into the document. The default is 0 and will result in links that are constructed from the name of the link's destination object. This is useful for web applications. If a link points to an object with name 'internet_movie' the HTML link will be <A href=\"\/internet_movie\">. The actual location of the source and destination object in the document hierarchy is disregarded. You will have to set up your web browser, to rewrite that URL to for example '\/my_script.php\/internet_movie'. 'my_script.php' will have to evaluate $PATH_INFO and retrieve the document. All links will have the prefix '\/my_script.php\/'. If you do not want this you can set the optional parameter rootID\/prefix to any prefix which is used instead. Is this case it has to be a string. If rootID\/prefix is an integer and unequal to 0 the link is constructed from all the names starting at the object with the id rootID\/prefix separated by a slash relative to the current object. If for example the above document 'internet_movie' is located at 'a-b-c-internet_movie' with '-' being the separator between hierarchy levels on the Hyperwave server and the source document is located at 'a-b-d-source' the resulting HTML link would be: <A HREF=\"..\/c\/internet_movie\">. This is useful if you want to download the whole server content onto disk and map the document hierarchy onto the file system."}],"ret_type":"int"}]},"hw_Identify":{"desc":"Identifies as user","long_desc":"Identifies as user with username and password. Identification is only valid for the current session. I do not think this function will be needed very often. In most cases it will be easier to identify with the opening of the connection.","ver":"PHP 4","seealso":[],"url":"function.hw-identify","name":"hw_Identify","params":[{"list":[{"type":"int","var":"$link","beh":0,"desc":"The connection identifier."},{"type":"string","var":"$username","beh":0,"desc":"The username."},{"type":"string","var":"$password","beh":1,"desc":"The password."}],"ret_type":"string"}]},"hw_InCollections":{"desc":"Check if object ids in collections","long_desc":"Checks whether a set of objects (documents or collections) specified by the object_id_array is part of the collections listed in collection_id_array.","ver":"PHP 4","ret_desc":"Returns an array of object ids.","url":"function.hw-incollections","name":"hw_InCollections","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"array","var":"$object_id_array","beh":0,"desc":"An array of object ids."},{"type":"array","var":"$collection_id_array","beh":1,"desc":"An array of collection ids."},{"type":"int","var":"$return_collections","beh":1,"desc":"When set to 0, the subset of object ids that is part of the collections (i.e., the documents or collections that are children of one or more collections of collection ids or their subcollections, recursively) is returned as an array. When set to 1, the set of collections that have one or more objects of this subset as children are returned as an array. This option allows a client to, e.g., highlight the part of the collection hierarchy that contains the matches of a previous query, in a graphical overview."}],"ret_type":"array"}]},"hw_Info":{"desc":"Info about connection","long_desc":"Returns information about the current connection.","ver":"PHP 4","ret_desc":"The returned string has the following format: <Serverstring>, <Host>, <Port>, <Username>, <Port of Client>, <Byte swapping>","url":"function.hw-info","name":"hw_Info","params":[{"list":[],"ret_type":"string"}]},"hw_InsColl":{"desc":"Insert collection","long_desc":"Inserts a new collection with attributes as in object_array into collection with object ID objectID.","ver":"PHP 4","ret_desc":"","url":"function.hw-inscoll","name":"hw_InsColl","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":""},{"type":"array","var":"$object_array","beh":1,"desc":""}],"ret_type":"int"}]},"hw_InsDoc":{"desc":"Insert document","long_desc":"Inserts a new document with attributes as in object_record into acollection. If you want to insert a general document of any kind use hw_insertdocument() instead.","ver":"PHP 4","ret_desc":"","seealso":[],"url":"function.hw-insdoc","name":"hw_InsDoc","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$parentID","beh":1,"desc":"The collection id."},{"type":"string","var":"$object_record","beh":1,"desc":"Object attributes."},{"type":"string","var":"$text","beh":1,"desc":"If provided, this ascii text will be inserted too."}],"ret_type":"int"}]},"hw_InsertDocument":{"desc":"Upload any document","long_desc":"Uploads a document into the given collection. The document has to be created before with hw_new_document(). Make sure that the object record of the new document contains at least the attributes: Type, DocumentType, Title and Name. Possibly you also want to set the MimeType.","ver":"PHP 4","ret_desc":"The functions returns the object id of the new document or FALSE.","seealso":[],"url":"function.hw-insertdocument","name":"hw_InsertDocument","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$parent_id","beh":0,"desc":"The collection identifier."},{"type":"int","var":"$hw_document","beh":1,"desc":"The document identifier."}],"ret_type":"int"}]},"hw_InsertObject":{"desc":"Inserts an object record","long_desc":"Inserts an object into the server. Note: If you want to insert an Anchor, the attribute Position has always been set either to a start\/end value or to 'invisible'. Invisible positions are needed if the annotation has no corresponding link in the annotation text.","ver":"PHP 4","seealso":[],"url":"function.hw-insertobject","name":"hw_InsertObject","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"string","var":"$object_rec","beh":0,"desc":"The object can be any valid hyperwave object."},{"type":"string","var":"$parameter","beh":1,"desc":"See the HG-CSP documentation for a detailed information on how the parameters have to be."}],"ret_type":"int"}]},"hw_Modifyobject":{"desc":"Modifies object record","long_desc":"This command allows to remove, add, or modify individual attributes of an object record. The object is specified by the Object ID object_to_change. In order to modify an attribute one will have to remove the old one and add a new one. hw_modifyobject() will always remove the attributes before it adds attributes unless the value of the attribute to remove is not a string or array. The keys of both arrays are the attributes name. The value of each array element can either be an array, a string or anything else. If it is an array each attribute value is constructed by the key of each element plus a colon and the value of each element. If it is a string it is taken as the attribute value. An empty string will result in a complete removal of that attribute. If the value is neither a string nor an array but something else, e.g. an integer, no operation at all will be performed on the attribute. This is necessary if you want to add a completely new attribute not just a new value for an existing attribute. If the remove array contained an empty string for that attribute, the attribute would be tried to be removed which would fail since it doesn't exist. The following addition of a new value for that attribute would also fail. Setting the value for that attribute to e.g. 0 would not even try to remove it and the addition will work. If you would like to change the attribute 'Name' with the current value 'books' into 'articles' you will have to create two arrays and call hw_modifyobject().","ver":"PHP 4","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.hw-modifyobject","name":"hw_Modifyobject","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$object_to_change","beh":1,"desc":"The object to be changed."},{"type":"array","var":"$remove","beh":1,"desc":"An array of attributes to remove."},{"type":"array","var":"$add","beh":1,"desc":"An array of attributes to add."},{"type":"int","var":"$mode","beh":1,"desc":"The last parameter determines if the modification is performed recursively. 1 means recursive modification. If some of the objects cannot be modified they will be skipped without notice. hw_error() may not indicate an error though some of the objects could not be modified."}],"ret_type":"bool"}]},"hw_New_Document":{"desc":"Create new document","long_desc":"Returns a new Hyperwave document with the given document data and object record. This function does not insert the document into the Hyperwave server.","ver":"PHP 4","ret_desc":"Returns the new Hyperwave document.","seealso":[],"url":"function.hw-new-document","name":"hw_New_Document","params":[{"list":[{"type":"string","var":"$object_record","beh":0,"desc":"The object record."},{"type":"string","var":"$document_data","beh":0,"desc":"The document data."},{"type":"int","var":"$document_size","beh":1,"desc":"The document size. Must be the length of document_data."}],"ret_type":"int"}]},"hw_Output_Document":{"desc":"Prints hw_document","long_desc":"Prints the document without the BODY tag. For backward compatibility, hw_outputdocument() is also accepted. This is deprecated, however.","ver":"PHP 4","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.hw-output-document","name":"hw_Output_Document","params":[{"list":[],"ret_type":"bool"}]},"hw_PipeDocument":{"desc":"Retrieve any document","long_desc":"Gets the Hyperwave document with the given object ID. If the document has anchors which can be inserted, they will have been inserted already. The document will be transferred via a special data connection which does not block the control connection.","ver":"PHP 4","ret_desc":"Returns the Hyperwave document.","seealso":[],"url":"function.hw-pipedocument","name":"hw_PipeDocument","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":1,"desc":"The object identifier."},{"type":"array","var":"$url_prefixes","beh":1,"desc":""}],"ret_type":"int"}]},"hw_Root":{"desc":"Root object id","long_desc":"Returns the object ID of the hyperroot collection. Currently this is always 0. The child collection of the hyperroot is the root collection of the connected server.","ver":"PHP 4","ret_desc":"Returns 0.","url":"function.hw-root","name":"hw_Root","params":[{"list":[],"ret_type":"int"}]},"hw_Unlock":{"desc":"Unlock object","long_desc":"Unlocks a document, so other users regain access.","ver":"PHP 4","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.hw-unlock","name":"hw_Unlock","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$objectID","beh":0,"desc":"The document object identifier."}],"ret_type":"bool"}]},"hw_Who":{"desc":"List of currently logged in users","long_desc":"Gets the list of currently logged in users.","ver":"PHP 4","ret_desc":"Returns an array of users currently logged into the Hyperwave server. Each entry in this array is an array itself containing the elements id, name, system, onSinceDate, onSinceTime, TotalTime and self. 'self' is 1 if this entry belongs to the user who initiated the request.","url":"function.hw-who","name":"hw_Who","params":[{"list":[],"ret_type":"array"}]},"hw_changeobject":{"desc":"Changes attributes of an object (obsolete)","long_desc":"","ver":"PHP 4","url":"function.hw-changeobject","name":"hw_changeobject","params":[{"list":[{"type":"int","var":"$link","beh":0,"desc":""},{"type":"int","var":"$objid","beh":0,"desc":""},{"type":"array","var":"$attributes","beh":1,"desc":""}],"ret_type":"bool"}]},"hw_connection_info":{"desc":"Prints information about the connection to Hyperwave server","long_desc":"","ver":"PHP 4","url":"function.hw-connection-info","name":"hw_connection_info","params":[{"list":[],"ret_type":"void"}]},"hw_cp":{"desc":"Copies objects","long_desc":"Copies the objects with object ids as specified in the second parameter to the collection with the id destination id.","ver":"PHP 4","ret_desc":"Returns the number of copied objects.","seealso":[],"url":"function.hw-cp","name":"hw_cp","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"array","var":"$object_id_array","beh":0,"desc":"An array of object ids."},{"type":"int","var":"$destination_id","beh":1,"desc":"The target collection id."}],"ret_type":"int"}]},"hw_dummy":{"desc":"Hyperwave dummy function","long_desc":"","ver":"PHP 4","url":"function.hw-dummy","name":"hw_dummy","params":[{"list":[{"type":"int","var":"$link","beh":0,"desc":""},{"type":"int","var":"$id","beh":0,"desc":""},{"type":"int","var":"$msgid","beh":1,"desc":""}],"ret_type":"string"}]},"hw_getrellink":{"desc":"Get link from source to dest relative to rootid","long_desc":"","ver":"PHP 4","url":"function.hw-getrellink","name":"hw_getrellink","params":[{"list":[{"type":"int","var":"$link","beh":0,"desc":""},{"type":"int","var":"$rootid","beh":0,"desc":""},{"type":"int","var":"$sourceid","beh":1,"desc":""},{"type":"int","var":"$destid","beh":1,"desc":""}],"ret_type":"string"}]},"hw_getremotechildren":{"desc":"Gets children of remote document","long_desc":"Returns the children of a remote document. Children of a remote document are remote documents itself. This makes sense if a database query has to be narrowed and is explained in Hyperwave Programmers' Guide. If you want to use this function you should be very familiar with HGIs. You should also consider to use PHP instead of Hyperwave to access external sources. Adding database support by a Hyperwave gateway should be more difficult than doing it in PHP.","ver":"PHP 4","ret_desc":"If the number of children is 1 the function will return the document itself formatted by the Hyperwave Gateway Interface (HGI). If the number of children is greater than 1 it will return an array of object record with each maybe the input value for another call to hw_getremotechildren(). Those object records are virtual and do not exist in the Hyperwave server, therefore they do not have a valid object ID. How exactly such an object record looks like is up to the HGI.","seealso":[],"url":"function.hw-getremotechildren","name":"hw_getremotechildren","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"string","var":"$object_record","beh":0,"desc":"The object record."}],"ret_type":"mixed"}]},"hw_getusername":{"desc":"Name of currently logged in user","long_desc":"Returns the username of the connection.","ver":"PHP 4","ret_desc":"Returns the username as a string.","url":"function.hw-getusername","name":"hw_getusername","params":[{"list":[],"ret_type":"string"}]},"hw_insertanchors":{"desc":"Inserts only anchors into text","long_desc":"","ver":"PHP 4 >= 4.0.4","url":"function.hw-insertanchors","name":"hw_insertanchors","params":[{"list":[{"type":"int","var":"$hwdoc","beh":0,"desc":""},{"type":"array","var":"$anchorecs","beh":1,"desc":""},{"type":"array","var":"$dest","beh":1,"desc":""},{"type":"array","var":"$urlprefixes","beh":1,"desc":""}],"ret_type":"bool"}]},"hw_mapid":{"desc":"Maps global id on virtual local id","long_desc":"Maps a global object id on any hyperwave server, even those you did not connect to with hw_connect(), onto a virtual object id. This virtual object id can then be used as any other object id, e.g. to obtain the object record with hw_getobject(). Note: In order to use this function you will have to set the F_DISTRIBUTED flag, which can currently only be set at compile time in hg_comm.c. It is not set by default. Read the comment at the beginning of hg_comm.c","ver":"PHP 4","ret_desc":"Returns the virtual object id.","url":"function.hw-mapid","name":"hw_mapid","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"int","var":"$server_id","beh":0,"desc":"The server id is the first part of the global object id (GOid) of the object which is actually the IP number as an integer."},{"type":"int","var":"$object_id","beh":1,"desc":"The object identifier."}],"ret_type":"int"}]},"hw_mv":{"desc":"Moves objects","long_desc":"Moves the specified objects from a collection to another.","ver":"PHP 4","ret_desc":"Returns the number of moved objects.","seealso":[],"url":"function.hw-mv","name":"hw_mv","params":[{"list":[{"type":"int","var":"$connection","beh":0,"desc":"The connection identifier."},{"type":"array","var":"$object_id_array","beh":0,"desc":"An array of object ids."},{"type":"int","var":"$source_id","beh":1,"desc":"The source collection id."},{"type":"int","var":"$destination_id","beh":1,"desc":"The target collection id. If set to 0 the objects will be unlinked from the source collection. If this is the last instance of that object it will be deleted. If you want to delete all instances at once, use hw_deleteobject()."}],"ret_type":"int"}]},"hw_objrec2array":{"desc":"Convert attributes from object record to object array","long_desc":"Converts an object_record into an object array.","ver":"PHP 4","ret_desc":"Returns an array. The keys of the resulting array are the attributes names. Multi-value attributes like 'Title' in different languages form its own array. The keys of this array are the left part to the colon of the attribute value. This left part must be two characters long.","seealso":[],"url":"function.hw-objrec2array","name":"hw_objrec2array","params":[{"list":[{"type":"string","var":"$object_record","beh":0,"desc":"The object record."},{"type":"array","var":"$format","beh":1,"desc":"An associative array with the attribute name as its key and the value being one of HW_ATTR_LANG or HW_ATTR_NONE."}],"ret_type":"array"}]},"hw_pConnect":{"desc":"Make a persistent database connection","long_desc":"Opens a persistent connection to a Hyperwave server. You can have multiple persistent connections open at once.","ver":"PHP 4","ret_desc":"Returns a connection index on success, or FALSE if the connection could not be made.","seealso":[],"url":"function.hw-pconnect","name":"hw_pConnect","params":[{"list":[{"type":"string","var":"$host","beh":0,"desc":"The server host name."},{"type":"int","var":"$port","beh":1,"desc":"The server port number."},{"type":"string","var":"$username","beh":1,"desc":"The Hyperwave user name. If omitted, no identification with the server will be done. It is similar to identify as user anonymous."},{"type":"string","var":"$password","beh":1,"desc":"The password for username. Keep in mind, that the password is not encrypted."}],"ret_type":"int"}]},"hw_setlinkroot":{"desc":"Set the id to which links are calculated","long_desc":"","ver":"PHP 4","url":"function.hw-setlinkroot","name":"hw_setlinkroot","params":[{"list":[{"type":"int","var":"$link","beh":0,"desc":""},{"type":"int","var":"$rootid","beh":0,"desc":""}],"ret_type":"int"}]},"hw_stat":{"desc":"Returns status string","long_desc":"","ver":"PHP 4","url":"function.hw-stat","name":"hw_stat","params":[{"list":[],"ret_type":"string"}]},"hwapi_attribute_new":{"desc":"Creates instance of class hw_api_attribute","long_desc":"Creates a new instance of hw_api_attribute with the given name and value.","ver":"No version information available, might only be in SVN","ret_desc":"Returns an instance of hw_api_attribute.","url":"function.hwapi-attribute-new","name":"hwapi_attribute_new","params":[{"list":[{"type":"string","var":"$name","beh":1,"desc":"The attribute name."},{"type":"string","var":"$value","beh":1,"desc":"The attribute value."}],"ret_type":"HW_API_Attribute"}]},"hwapi_content_new":{"desc":"Create new instance of class hw_api_content","long_desc":"Creates a new content object from the string content.","ver":"No version information available, might only be in SVN","ret_desc":"","url":"function.hwapi-content-new","name":"hwapi_content_new","params":[{"list":[{"type":"string","var":"$content","beh":0,"desc":""},{"type":"string","var":"$mimetype","beh":0,"desc":"The mimetype for the contents."}],"ret_type":"HW_API_Content"}]},"hwapi_hgcsp":{"desc":"Returns object of class hw_api","long_desc":"Opens a connection to the Hyperwave server on host hostname. The protocol used is HGCSP.","ver":"PHP 4, PHP 5 < 5.2.0, PECL hwapi SVN","ret_desc":"Returns an instance of HW_API.","url":"function.hwapi-hgcsp","name":"hwapi_hgcsp","params":[{"list":[{"type":"string","var":"$hostname","beh":0,"desc":"The host name."},{"type":"int","var":"$port","beh":1,"desc":"If you do not pass a port number, 418 is used."}],"ret_type":"HW_API"}]},"hwapi_object_new":{"desc":"Creates a new instance of class hwapi_object_new","long_desc":"Creates a new instance of the class hw_api_object.","ver":"No version information available, might only be in SVN","ret_desc":"","seealso":[],"url":"function.hwapi-object-new","name":"hwapi_object_new","params":[{"list":[],"ret_type":"hw_api_object"}]},"hypot":{"desc":"Calculate the length of the hypotenuse of a right-angle triangle","long_desc":"hypot() returns the length of the hypotenuse of a right-angle triangle with sides of length x and y, or the distance of the point (x, y) from the origin. This is equivalent to sqrt(x*x + y*y).","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Calculated length of the hypotenuse","url":"function.hypot","name":"hypot","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":"Length of first side"},{"type":"float","var":"$y","beh":0,"desc":"Length of second side"}],"ret_type":"float"}]},"ibase_add_user":{"desc":"Add a user to a security database (only for IB6 or later)","long_desc":"PHP 4 uses server, dba_user_name and dba_user_password instead of service_handle parameter.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ibase-add-user","name":"ibase_add_user","params":[{"list":[{"type":"resource","var":"$service_handle","beh":1,"desc":""},{"type":"string","var":"$user_name","beh":1,"desc":""},{"type":"string","var":"$password","beh":1,"desc":""},{"type":"string","var":"$first_name","beh":1,"desc":""},{"type":"string","var":"$middle_name","beh":1,"desc":""},{"type":"string","var":"$last_name","beh":1,"desc":""}],"ret_type":"bool"}]},"ibase_affected_rows":{"desc":"Return the number of rows that were affected by the previous query","long_desc":"This function returns the number of rows that were affected by the previous query (INSERT, UPDATE or DELETE) that was executed from within the specified transaction context.","ver":"PHP 5","ret_desc":"Returns the number of rows as an integer.","seealso":[],"url":"function.ibase-affected-rows","name":"ibase_affected_rows","params":[{"list":[],"ret_type":"int"}]},"ibase_backup":{"desc":"Initiates a backup task in the service manager and returns immediately","ver":"PHP 5","url":"function.ibase-backup","name":"ibase_backup","params":[{"list":[{"type":"resource","var":"$service_handle","beh":1,"desc":""},{"type":"string","var":"$source_db","beh":1,"desc":""},{"type":"string","var":"$dest_file","beh":1,"desc":""},{"type":"int","var":"$options","beh":1,"desc":"","def":0},{"type":"bool","var":"$verbose","beh":1,"desc":"","def":"false"}],"ret_type":"mixed"}]},"ibase_blob_add":{"desc":"Add data into a newly created blob","long_desc":"ibase_blob_add() adds data into a blob created with ibase_blob_create().","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.ibase-blob-add","name":"ibase_blob_add","params":[{"list":[{"type":"resource","var":"$blob_handle","beh":0,"desc":"A blob handle opened with ibase_blob_create()."},{"type":"string","var":"$data","beh":0,"desc":"The data to be added."}],"ret_type":"void"}]},"ibase_blob_cancel":{"desc":"Cancel creating blob","long_desc":"This function will discard a BLOB if it has not yet been closed by ibase_blob_close().","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ibase-blob-cancel","name":"ibase_blob_cancel","params":[{"list":[],"ret_type":"bool"}]},"ibase_blob_close":{"desc":"Close blob","long_desc":"This function closes a BLOB that has either been opened for reading by ibase_blob_open() or has been opened for writing by ibase_blob_create().","ver":"PHP 4, PHP 5","ret_desc":"If the BLOB was being read, this function returns TRUE on success, if the BLOB was being written to, this function returns a string containing the BLOB id that has been assigned to it by the database. On failure, this function returns FALSE.","seealso":[],"url":"function.ibase-blob-close","name":"ibase_blob_close","params":[{"list":[],"ret_type":"mixed"}]},"ibase_blob_create":{"desc":"Create a new blob for adding data","long_desc":"ibase_blob_create() creates a new BLOB for filling with data.","ver":"PHP 4, PHP 5","ret_desc":"Returns a BLOB handle for later use with ibase_blob_add() or FALSE on failure.","seealso":[],"url":"function.ibase-blob-create","name":"ibase_blob_create","params":[{"list":[],"ret_type":"resource"}]},"ibase_blob_echo":{"desc":"Output blob contents to browser","long_desc":"This function opens a BLOB for reading and sends its contents directly to standard output (the browser, in most cases).","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ibase-blob-echo","name":"ibase_blob_echo","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An InterBase link identifier. If omitted, the last opened link is assumed."},{"type":"string","var":"$blob_id","beh":0,"desc":""}],"ret_type":"bool"}]},"ibase_blob_get":{"desc":"Get len bytes data from open blob","long_desc":"This function returns at most len bytes from a BLOB that has been opened for reading by ibase_blob_open().","ver":"PHP 4, PHP 5","ret_desc":"Returns at most len bytes from the BLOB, or FALSE on failure.","seealso":[],"url":"function.ibase-blob-get","name":"ibase_blob_get","params":[{"list":[{"type":"resource","var":"$blob_handle","beh":0,"desc":"A BLOB handle opened with ibase_blob_open()."},{"type":"int","var":"$len","beh":0,"desc":"Size of returned data."}],"ret_type":"string"}]},"ibase_blob_import":{"desc":"Create blob, copy file in it, and close it","long_desc":"This function creates a BLOB, reads an entire file into it, closes it and returns the assigned BLOB id.","ver":"PHP 4, PHP 5","ret_desc":"Returns the BLOB id on success, or FALSE on error.","seealso":[],"url":"function.ibase-blob-import","name":"ibase_blob_import","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An InterBase link identifier. If omitted, the last opened link is assumed."},{"type":"resource","var":"$file_handle","beh":0,"desc":"The file handle is a handle returned by fopen()."}],"ret_type":"string"},{"list":[],"ret_type":"string"}]},"ibase_blob_info":{"desc":"Return blob length and other useful info","long_desc":"Returns the BLOB length and other useful information.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array containing information about a BLOB. The information returned consists of the length of the BLOB, the number of segments it contains, the size of the largest segment, and whether it is a stream BLOB or a segmented BLOB.","url":"function.ibase-blob-info","name":"ibase_blob_info","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An InterBase link identifier. If omitted, the last opened link is assumed."},{"type":"string","var":"$blob_id","beh":0,"desc":"A BLOB id."}],"ret_type":"array"},{"list":[],"ret_type":"array"}]},"ibase_blob_open":{"desc":"Open blob for retrieving data parts","long_desc":"Opens an existing BLOB for reading.","ver":"PHP 4, PHP 5","ret_desc":"Returns a BLOB handle for later use with ibase_blob_get() or FALSE on failure.","seealso":[],"url":"function.ibase-blob-open","name":"ibase_blob_open","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An InterBase link identifier. If omitted, the last opened link is assumed."},{"type":"string","var":"$blob_id","beh":0,"desc":"A BLOB id."}],"ret_type":"resource"},{"list":[],"ret_type":"resource"}]},"ibase_close":{"desc":"Close a connection to an InterBase database","long_desc":"Closes the link to an InterBase database that's associated with a connection id returned from ibase_connect(). Default transaction on link is committed, other transactions are rolled back.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ibase-close","name":"ibase_close","params":[{"list":[],"ret_type":"bool"}]},"ibase_commit":{"desc":"Commit a transaction","long_desc":"Commits a transaction.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ibase-commit","name":"ibase_commit","params":[{"list":[],"ret_type":"bool"}]},"ibase_commit_ret":{"desc":"Commit a transaction without closing it","long_desc":"Commits a transaction without closing it.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ibase-commit-ret","name":"ibase_commit_ret","params":[{"list":[],"ret_type":"bool"}]},"ibase_connect":{"desc":"Open a connection to an InterBase database","long_desc":"Establishes a connection to an InterBase server. In case a second call is made to ibase_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned. The link to the server will be closed as soon as the execution of the script ends, unless it's closed earlier by explicitly calling ibase_close().","ver":"PHP 4, PHP 5","ret_desc":"Returns an InterBase link identifier on success, or FALSE on error.","seealso":[],"url":"function.ibase-connect","name":"ibase_connect","params":[{"list":[{"type":"string","var":"$database","beh":1,"desc":"The database argument has to be a valid path to database file on the server it resides on. If the server is not local, it must be prefixed with either 'hostname:' (TCP\/IP), '\/\/hostname\/' (NetBEUI) or 'hostname@' (IPX\/SPX), depending on the connection protocol used."},{"type":"string","var":"$username","beh":1,"desc":"The user name. Can be set with the ibase.default_user php.ini directive."},{"type":"string","var":"$password","beh":1,"desc":"The password for username. Can be set with the ibase.default_password php.ini directive."},{"type":"string","var":"$charset","beh":1,"desc":"charset is the default character set for a database."},{"type":"int","var":"$buffers","beh":1,"desc":"buffers is the number of database buffers to allocate for the server-side cache. If 0 or omitted, server chooses its own default."},{"type":"int","var":"$dialect","beh":1,"desc":"dialect selects the default SQL dialect for any statement executed within a connection, and it defaults to the highest one supported by client libraries. Functional only with InterBase 6 and up."},{"type":"string","var":"$role","beh":1,"desc":"Functional only with InterBase 5 and up."},{"type":"int","var":"$sync","beh":1,"desc":""}],"ret_type":"resource"}]},"ibase_db_info":{"desc":"Request statistics about a database","ver":"PHP 5","url":"function.ibase-db-info","name":"ibase_db_info","params":[{"list":[{"type":"resource","var":"$service_handle","beh":0,"desc":""},{"type":"string","var":"$db","beh":1,"desc":""},{"type":"int","var":"$action","beh":1,"desc":""},{"type":"int","var":"$argument","beh":1,"desc":"","def":0}],"ret_type":"string"}]},"ibase_delete_user":{"desc":"Delete a user from a security database (only for IB6 or later)","long_desc":"PHP 4 uses server, dba_user_name and dba_user_password instead of service_handle parameter.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ibase-delete-user","name":"ibase_delete_user","params":[{"list":[{"type":"resource","var":"$service_handle","beh":0,"desc":""},{"type":"string","var":"$user_name","beh":0,"desc":""}],"ret_type":"bool"}]},"ibase_drop_db":{"desc":"Drops a database","long_desc":"This functions drops a database that was opened by either ibase_connect() or ibase_pconnect(). The database is closed and deleted from the server.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ibase-drop-db","name":"ibase_drop_db","params":[{"list":[],"ret_type":"bool"}]},"ibase_errcode":{"desc":"Return an error code","long_desc":"Returns the error code that resulted from the most recent InterBase function call.","ver":"PHP 5","ret_desc":"Returns the error code as an integer, or FALSE if no error occurred.","seealso":[],"url":"function.ibase-errcode","name":"ibase_errcode","params":[{"list":[],"ret_type":"int"}]},"ibase_errmsg":{"desc":"Return error messages","long_desc":"Returns the error message that resulted from the most recent InterBase function call.","ver":"PHP 4, PHP 5","ret_desc":"Returns the error message as a string, or FALSE if no error occurred.","seealso":[],"url":"function.ibase-errmsg","name":"ibase_errmsg","params":[{"list":[],"ret_type":"string"}]},"ibase_execute":{"desc":"Execute a previously prepared query","long_desc":"Execute a query prepared by ibase_prepare(). This is a lot more effective than using ibase_query() if you are repeating a same kind of query several times with only some parameters changing.","ver":"PHP 4, PHP 5","ret_desc":"If the query raises an error, returns FALSE. If it is successful and there is a (possibly empty) result set (such as with a SELECT query), returns a result identifier. If the query was successful and there were no results, returns TRUE.","seealso":[],"url":"function.ibase-execute","name":"ibase_execute","params":[{"list":[{"type":"resource","var":"$query","beh":1,"desc":"An InterBase query prepared by ibase_prepare()."},{"type":"mixed","var":"$bind_arg","beh":1,"desc":""},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"resource"}]},"ibase_fetch_assoc":{"desc":"Fetch a result row from a query as an associative array","long_desc":"Fetch a result row from a query as an associative array. ibase_fetch_assoc() fetches one row of data from the result. If two or more columns of the result have the same field names, the last column will take precedence. To access the other column(s) of the same name, you either need to access the result with numeric indices by using ibase_fetch_row() or use alias names in your query.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns an associative array that corresponds to the fetched row. Subsequent calls will return the next row in the result set, or FALSE if there are no more rows.","seealso":[],"url":"function.ibase-fetch-assoc","name":"ibase_fetch_assoc","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result handle."},{"type":"int","var":"$fetch_flag","beh":0,"desc":"fetch_flag is a combination of the constants IBASE_TEXT and IBASE_UNIXTIME ORed together. Passing IBASE_TEXT will cause this function to return BLOB contents instead of BLOB ids. Passing IBASE_UNIXTIME will cause this function to return date\/time values as Unix timestamps instead of as formatted strings.","def":0}],"ret_type":"array"}]},"ibase_fetch_object":{"desc":"Get an object from a InterBase database","long_desc":"Fetches a row as a pseudo-object from a given result identifier. Subsequent calls to ibase_fetch_object() return the next row in the result set.","ver":"PHP 4, PHP 5","ret_desc":"Returns an object with the next row information, or FALSE if there are no more rows.","seealso":[],"url":"function.ibase-fetch-object","name":"ibase_fetch_object","params":[{"list":[{"type":"resource","var":"$result_id","beh":0,"desc":"An InterBase result identifier obtained either by ibase_query() or ibase_execute()."},{"type":"int","var":"$fetch_flag","beh":0,"desc":"fetch_flag is a combination of the constants IBASE_TEXT and IBASE_UNIXTIME ORed together. Passing IBASE_TEXT will cause this function to return BLOB contents instead of BLOB ids. Passing IBASE_UNIXTIME will cause this function to return date\/time values as Unix timestamps instead of as formatted strings.","def":0}],"ret_type":"object"}]},"ibase_fetch_row":{"desc":"Fetch a row from an InterBase database","long_desc":"ibase_fetch_row() fetches one row of data from the given result set. Subsequent calls to ibase_fetch_row() return the next row in the result set, or FALSE if there are no more rows.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array that corresponds to the fetched row, or FALSE if there are no more rows. Each result column is stored in an array offset, starting at offset 0.","seealso":[],"url":"function.ibase-fetch-row","name":"ibase_fetch_row","params":[{"list":[{"type":"resource","var":"$result_identifier","beh":0,"desc":"An InterBase result identifier."},{"type":"int","var":"$fetch_flag","beh":0,"desc":"fetch_flag is a combination of the constants IBASE_TEXT and IBASE_UNIXTIME ORed together. Passing IBASE_TEXT will cause this function to return BLOB contents instead of BLOB ids. Passing IBASE_UNIXTIME will cause this function to return date\/time values as Unix timestamps instead of as formatted strings.","def":0}],"ret_type":"array"}]},"ibase_field_info":{"desc":"Get information about a field","long_desc":"Returns an array with information about a field after a select query has been run.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array with the following keys: name, alias, relation, length and type.","seealso":[],"url":"function.ibase-field-info","name":"ibase_field_info","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"An InterBase result identifier."},{"type":"int","var":"$field_number","beh":0,"desc":"Field offset."}],"ret_type":"array"}]},"ibase_free_event_handler":{"desc":"Cancels a registered event handler","long_desc":"This function causes the registered event handler specified by event to be cancelled. The callback function will no longer be called for the events it was registered to handle.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ibase-free-event-handler","name":"ibase_free_event_handler","params":[{"list":[],"ret_type":"bool"}]},"ibase_free_query":{"desc":"Free memory allocated by a prepared query","long_desc":"Frees a prepared query.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ibase-free-query","name":"ibase_free_query","params":[{"list":[],"ret_type":"bool"}]},"ibase_free_result":{"desc":"Free a result set","long_desc":"Frees a result set.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ibase-free-result","name":"ibase_free_result","params":[{"list":[],"ret_type":"bool"}]},"ibase_gen_id":{"desc":"Increments the named generator and returns its new value","ver":"PHP 5","ret_desc":"Returns new generator value as integer, or as string if the value is too big.","url":"function.ibase-gen-id","name":"ibase_gen_id","params":[{"list":[{"type":"string","var":"$generator","beh":1,"desc":""},{"type":"int","var":"$increment","beh":1,"desc":"","def":1},{"type":"resource","var":"$link_identifier","beh":1,"desc":"","def":"NULL"}],"ret_type":"mixed"}]},"ibase_maintain_db":{"desc":"Execute a maintenance command on the database server","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ibase-maintain-db","name":"ibase_maintain_db","params":[{"list":[{"type":"resource","var":"$service_handle","beh":0,"desc":""},{"type":"string","var":"$db","beh":1,"desc":""},{"type":"int","var":"$action","beh":1,"desc":""},{"type":"int","var":"$argument","beh":1,"desc":"","def":0}],"ret_type":"bool"}]},"ibase_modify_user":{"desc":"Modify a user to a security database (only for IB6 or later)","long_desc":"PHP 4 uses server, dba_user_name and dba_user_password instead of service_handle parameter.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ibase-modify-user","name":"ibase_modify_user","params":[{"list":[{"type":"resource","var":"$service_handle","beh":1,"desc":""},{"type":"string","var":"$user_name","beh":1,"desc":""},{"type":"string","var":"$password","beh":1,"desc":""},{"type":"string","var":"$first_name","beh":1,"desc":""},{"type":"string","var":"$middle_name","beh":1,"desc":""},{"type":"string","var":"$last_name","beh":1,"desc":""}],"ret_type":"bool"}]},"ibase_name_result":{"desc":"Assigns a name to a result set","long_desc":"This function assigns a name to a result set. This name can be used later in UPDATE|DELETE ... WHERE CURRENT OF name statements.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ibase-name-result","name":"ibase_name_result","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"An InterBase result set."},{"type":"string","var":"$name","beh":0,"desc":"The name to be assigned."}],"ret_type":"bool"}]},"ibase_num_fields":{"desc":"Get the number of fields in a result set","long_desc":"Get the number of fields in a result set.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of fields as an integer.","seealso":[],"url":"function.ibase-num-fields","name":"ibase_num_fields","params":[{"list":[],"ret_type":"int"}]},"ibase_num_params":{"desc":"Return the number of parameters in a prepared query","long_desc":"This function returns the number of parameters in the prepared query specified by query. This is the number of binding arguments that must be present when calling ibase_execute().","ver":"PHP 5","ret_desc":"Returns the number of parameters as an integer.","seealso":[],"url":"function.ibase-num-params","name":"ibase_num_params","params":[{"list":[],"ret_type":"int"}]},"ibase_param_info":{"desc":"Return information about a parameter in a prepared query","long_desc":"Returns an array with information about a parameter after a query has been prepared.","ver":"PHP 5","ret_desc":"Returns an array with the following keys: name, alias, relation, length and type.","seealso":[],"url":"function.ibase-param-info","name":"ibase_param_info","params":[{"list":[{"type":"resource","var":"$query","beh":0,"desc":"An InterBase prepared query handle."},{"type":"int","var":"$param_number","beh":0,"desc":"Parameter offset."}],"ret_type":"array"}]},"ibase_pconnect":{"desc":"Open a persistent connection to an InterBase database","long_desc":"Opens a persistent connection to an InterBase database. ibase_pconnect() acts very much like ibase_connect() with two major differences. First, when connecting, the function will first try to find a (persistent) link that's already opened with the same parameters. If one is found, an identifier for it will be returned instead of opening a new connection. Second, the connection to the InterBase server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (ibase_close() will not close links established by ibase_pconnect()). This type of link is therefore called 'persistent'.","ver":"PHP 4, PHP 5","ret_desc":"Returns an InterBase link identifier on success, or FALSE on error.","seealso":[],"url":"function.ibase-pconnect","name":"ibase_pconnect","params":[{"list":[{"type":"string","var":"$database","beh":1,"desc":"The database argument has to be a valid path to database file on the server it resides on. If the server is not local, it must be prefixed with either 'hostname:' (TCP\/IP), '\/\/hostname\/' (NetBEUI) or 'hostname@' (IPX\/SPX), depending on the connection protocol used."},{"type":"string","var":"$username","beh":1,"desc":"The user name. Can be set with the ibase.default_user php.ini directive."},{"type":"string","var":"$password","beh":1,"desc":"The password for username. Can be set with the ibase.default_password php.ini directive."},{"type":"string","var":"$charset","beh":1,"desc":"charset is the default character set for a database."},{"type":"int","var":"$buffers","beh":1,"desc":"buffers is the number of database buffers to allocate for the server-side cache. If 0 or omitted, server chooses its own default."},{"type":"int","var":"$dialect","beh":1,"desc":"dialect selects the default SQL dialect for any statement executed within a connection, and it defaults to the highest one supported by client libraries. Functional only with InterBase 6 and up."},{"type":"string","var":"$role","beh":1,"desc":"Functional only with InterBase 5 and up."},{"type":"int","var":"$sync","beh":1,"desc":""}],"ret_type":"resource"}]},"ibase_prepare":{"desc":"Prepare a query for later binding of parameter placeholders and execution","long_desc":"Prepare a query for later binding of parameter placeholders and execution (via ibase_execute()).","ver":"PHP 4, PHP 5","ret_desc":"Returns a prepared query handle, or FALSE on error.","url":"function.ibase-prepare","name":"ibase_prepare","params":[{"list":[],"ret_type":"resource"},{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An InterBase query."},{"type":"string","var":"$query","beh":0,"desc":""}],"ret_type":"resource"},{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An InterBase query."},{"type":"string","var":"$trans","beh":0,"desc":""},{"type":"string","var":"$query","beh":1,"desc":""}],"ret_type":"resource"}]},"ibase_query":{"desc":"Execute a query on an InterBase database","long_desc":"Performs a query on an InterBase database.","ver":"PHP 4, PHP 5","ret_desc":"If the query raises an error, returns FALSE. If it is successful and there is a (possibly empty) result set (such as with a SELECT query), returns a result identifier. If the query was successful and there were no results, returns TRUE.","seealso":[],"url":"function.ibase-query","name":"ibase_query","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":1,"desc":"An InterBase link identifier. If omitted, the last opened link is assumed."},{"type":"string","var":"$query","beh":1,"desc":"An InterBase query."},{"type":"int","var":"$bind_args","beh":1,"desc":""}],"ret_type":"resource"}]},"ibase_restore":{"desc":"Initiates a restore task in the service manager and returns immediately","ver":"PHP 5","url":"function.ibase-restore","name":"ibase_restore","params":[{"list":[{"type":"resource","var":"$service_handle","beh":1,"desc":""},{"type":"string","var":"$source_file","beh":1,"desc":""},{"type":"string","var":"$dest_db","beh":1,"desc":""},{"type":"int","var":"$options","beh":1,"desc":"","def":0},{"type":"bool","var":"$verbose","beh":1,"desc":"","def":"false"}],"ret_type":"mixed"}]},"ibase_rollback":{"desc":"Roll back a transaction","long_desc":"Rolls back a transaction.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ibase-rollback","name":"ibase_rollback","params":[{"list":[],"ret_type":"bool"}]},"ibase_rollback_ret":{"desc":"Roll back a transaction without closing it","long_desc":"Rolls back a transaction without closing it.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ibase-rollback-ret","name":"ibase_rollback_ret","params":[{"list":[],"ret_type":"bool"}]},"ibase_server_info":{"desc":"Request information about a database server","ver":"PHP 5","url":"function.ibase-server-info","name":"ibase_server_info","params":[{"list":[{"type":"resource","var":"$service_handle","beh":0,"desc":""},{"type":"int","var":"$action","beh":0,"desc":""}],"ret_type":"string"}]},"ibase_service_attach":{"desc":"Connect to the service manager","ver":"PHP 5","url":"function.ibase-service-attach","name":"ibase_service_attach","params":[{"list":[{"type":"string","var":"$host","beh":0,"desc":""},{"type":"string","var":"$dba_username","beh":0,"desc":""},{"type":"string","var":"$dba_password","beh":1,"desc":""}],"ret_type":"resource"}]},"ibase_service_detach":{"desc":"Disconnect from the service manager","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ibase-service-detach","name":"ibase_service_detach","params":[{"list":[],"ret_type":"bool"}]},"ibase_set_event_handler":{"desc":"Register a callback function to be called when events are posted","long_desc":"This function registers a PHP user function as event handler for the specified events.","ver":"PHP 5","ret_desc":"The return value is an event resource. This resource can be used to free the event handler using ibase_free_event_handler().","seealso":[],"url":"function.ibase-set-event-handler","name":"ibase_set_event_handler","params":[{"list":[{"type":"callable","var":"$event_handler","beh":1,"desc":"The callback is called with the event name and the link resource as arguments whenever one of the specified events is posted by the database. The callback must return FALSE if the event handler should be canceled. Any other return value is ignored. This function accepts up to 15 event arguments."},{"type":"string","var":"$event_name1","beh":1,"desc":"An event name."},{"type":"string","var":"$event_name2","beh":1,"desc":"At most 15 events allowed."},{"type":"string","var":"$...","beh":1,"desc":""}],"ret_type":"resource"},{"list":[{"type":"resource","var":"$connection","beh":1,"desc":"The callback is called with the event name and the link resource as arguments whenever one of the specified events is posted by the database. The callback must return FALSE if the event handler should be canceled. Any other return value is ignored. This function accepts up to 15 event arguments."},{"type":"callable","var":"$event_handler","beh":1,"desc":"An event name."},{"type":"string","var":"$event_name1","beh":1,"desc":"At most 15 events allowed."},{"type":"string","var":"$event_name2","beh":1,"desc":""},{"type":"string","var":"$...","beh":1,"desc":""}],"ret_type":"resource"}]},"ibase_timefmt":{"desc":"Sets the format of timestamp, date and time type columns returned from queries","long_desc":"Sets the format of timestamp, date or time type columns returned from queries. You can set defaults for these formats with the PHP configuration directives ibase.timestampformat, ibase.dateformat and ibase.timeformat.","ver":"PHP 4","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ibase-timefmt","name":"ibase_timefmt","params":[{"list":[{"type":"string","var":"$format","beh":0,"desc":"Internally, the columns are formatted by c-function strftime(), so refer to its documentation regarding to the format of the string."},{"type":"int","var":"$columntype","beh":0,"desc":"columntype is one of the constants IBASE_TIMESTAMP, IBASE_DATE and IBASE_TIME. If omitted, defaults to IBASE_TIMESTAMP for backwards compatibility.","def":"IBASE_TIMESTAMP"}],"ret_type":"bool"}]},"ibase_trans":{"desc":"Begin a transaction","long_desc":"Begins a transaction.","ver":"PHP 4, PHP 5","ret_desc":"Returns a transaction handle, or FALSE on error.","url":"function.ibase-trans","name":"ibase_trans","params":[{"list":[{"type":"int","var":"$trans_args","beh":1,"desc":"trans_args can be a combination of IBASE_READ, IBASE_WRITE, IBASE_COMMITTED, IBASE_CONSISTENCY, IBASE_CONCURRENCY, IBASE_REC_VERSION, IBASE_REC_NO_VERSION, IBASE_WAIT and IBASE_NOWAIT."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"An InterBase link identifier. If omitted, the last opened link is assumed."}],"ret_type":"resource"},{"list":[{"type":"resource","var":"$link_identifier","beh":1,"desc":"trans_args can be a combination of IBASE_READ, IBASE_WRITE, IBASE_COMMITTED, IBASE_CONSISTENCY, IBASE_CONCURRENCY, IBASE_REC_VERSION, IBASE_REC_NO_VERSION, IBASE_WAIT and IBASE_NOWAIT."},{"type":"int","var":"$trans_args","beh":1,"desc":"An InterBase link identifier. If omitted, the last opened link is assumed."}],"ret_type":"resource"}]},"ibase_wait_event":{"desc":"Wait for an event to be posted by the database","long_desc":"This function suspends execution of the script until one of the specified events is posted by the database. The name of the event that was posted is returned. This function accepts up to 15 event arguments.","ver":"PHP 5","ret_desc":"Returns the name of the event that was posted.","seealso":[],"url":"function.ibase-wait-event","name":"ibase_wait_event","params":[{"list":[{"type":"string","var":"$event_name1","beh":1,"desc":"The event name."},{"type":"string","var":"$event_name2","beh":1,"desc":""},{"type":"string","var":"$...","beh":1,"desc":""}],"ret_type":"string"},{"list":[{"type":"resource","var":"$connection","beh":1,"desc":"The event name."},{"type":"string","var":"$event_name1","beh":1,"desc":""},{"type":"string","var":"$event_name2","beh":1,"desc":""},{"type":"string","var":"$...","beh":1,"desc":""}],"ret_type":"string"}]},"iconv":{"desc":"Convert string to requested character encoding","long_desc":"Performs a character set conversion on the string str from in_charset to out_charset.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns the converted string or FALSE on failure.","url":"function.iconv","name":"iconv","params":[{"list":[{"type":"string","var":"$in_charset","beh":0,"desc":"The input charset."},{"type":"string","var":"$out_charset","beh":0,"desc":"The output charset. If you append the string \/\/TRANSLIT to out_charset transliteration is activated. This means that when a character can't be represented in the target charset, it can be approximated through one or several similarly looking characters. If you append the string \/\/IGNORE, characters that cannot be represented in the target charset are silently discarded. Otherwise, str is cut from the first illegal character and an E_NOTICE is generated."},{"type":"string","var":"$str","beh":1,"desc":"The string to be converted."}],"ret_type":"string"}]},"iconv_get_encoding":{"desc":"Retrieve internal configuration variables of iconv extension","long_desc":"Retrieve internal configuration variables of iconv extension.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns the current value of the internal configuration variable if successful or FALSE on failure.","seealso":[],"url":"function.iconv-get-encoding","name":"iconv_get_encoding","params":[{"list":[],"ret_type":"mixed"}]},"iconv_mime_decode":{"desc":"Decodes a MIME header field","long_desc":"Decodes a MIME header field.","ver":"PHP 5","ret_desc":"Returns a decoded MIME field on success, or FALSE if an error occurs during the decoding.","seealso":[],"url":"function.iconv-mime-decode","name":"iconv_mime_decode","params":[{"list":[{"type":"string","var":"$encoded_header","beh":1,"desc":"The encoded header, as a string."},{"type":"int","var":"$mode","beh":1,"desc":"mode determines the behaviour in the event iconv_mime_decode() encounters a malformed MIME header field. You can specify any combination of the following bitmasks.","def":0},{"type":"string","var":"$charset","beh":1,"desc":"The optional charset parameter specifies the character set to represent the result by. If omitted, iconv.internal_encoding will be used.","def":"ini_get(\"iconv.internal_encoding\")"}],"ret_type":"string"}]},"iconv_mime_decode_headers":{"desc":"Decodes multiple MIME header fields at once","long_desc":"Decodes multiple MIME header fields at once.","ver":"PHP 5","ret_desc":"Returns an associative array that holds a whole set of MIME header fields specified by encoded_headers on success, or FALSE if an error occurs during the decoding.","seealso":[],"url":"function.iconv-mime-decode-headers","name":"iconv_mime_decode_headers","params":[{"list":[{"type":"string","var":"$encoded_headers","beh":1,"desc":"The encoded headers, as a string."},{"type":"int","var":"$mode","beh":1,"desc":"mode determines the behaviour in the event iconv_mime_decode_headers() encounters a malformed MIME header field. You can specify any combination of the following bitmasks.","def":0},{"type":"string","var":"$charset","beh":1,"desc":"The optional charset parameter specifies the character set to represent the result by. If omitted, iconv.internal_encoding will be used.","def":"ini_get(\"iconv.internal_encoding\")"}],"ret_type":"array"}]},"iconv_mime_encode":{"desc":"Composes a MIME header field","long_desc":"Composes and returns a string that represents a valid MIME header field, which looks like the following:","ver":"PHP 5","ret_desc":"Returns an encoded MIME field on success, or FALSE if an error occurs during the encoding.","seealso":[],"url":"function.iconv-mime-encode","name":"iconv_mime_encode","params":[{"list":[{"type":"string","var":"$field_name","beh":0,"desc":"The field name."},{"type":"string","var":"$field_value","beh":1,"desc":"The field value."},{"type":"array","var":"$preferences","beh":1,"desc":"You can control the behaviour of iconv_mime_encode() by specifying an associative array that contains configuration items to the optional third parameter preferences. The items supported by iconv_mime_encode() are listed below. Note that item names are treated case-sensitive.","def":"NULL"}],"ret_type":"string"}]},"iconv_set_encoding":{"desc":"Set current setting for character encoding conversion","long_desc":"Changes the value of the internal configuration variable specified by type to charset.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.iconv-set-encoding","name":"iconv_set_encoding","params":[{"list":[{"type":"string","var":"$type","beh":0,"desc":"The value of type can be any one of these:"},{"type":"string","var":"$charset","beh":0,"desc":"The character set."}],"ret_type":"bool"}]},"iconv_strlen":{"desc":"Returns the character count of string","long_desc":"In contrast to strlen(), iconv_strlen() counts the occurrences of characters in the given byte sequence str on the basis of the specified character set, the result of which is not necessarily identical to the length of the string in byte.","ver":"PHP 5","ret_desc":"Returns the character count of str, as an integer.","seealso":[],"url":"function.iconv-strlen","name":"iconv_strlen","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string."},{"type":"string","var":"$charset","beh":0,"desc":"If charset parameter is omitted, str is assumed to be encoded in iconv.internal_encoding.","def":"ini_get(\"iconv.internal_encoding\")"}],"ret_type":"int"}]},"iconv_strpos":{"desc":"Finds position of first occurrence of a needle within a haystack","long_desc":"Finds position of first occurrence of a needle within a haystack. In contrast to strpos(), the return value of iconv_strpos() is the number of characters that appear before the needle, rather than the offset in bytes to the position where the needle has been found. The characters are counted on the basis of the specified character set charset.","ver":"PHP 5","ret_desc":"Returns the numeric position of the first occurrence of needle in haystack.","seealso":[],"url":"function.iconv-strpos","name":"iconv_strpos","params":[{"list":[{"type":"string","var":"$haystack","beh":1,"desc":"The entire string."},{"type":"string","var":"$needle","beh":1,"desc":"The searched substring."},{"type":"int","var":"$offset","beh":1,"desc":"The optional offset parameter specifies the position from which the search should be performed.","def":0},{"type":"string","var":"$charset","beh":1,"desc":"If charset parameter is omitted, string are assumed to be encoded in iconv.internal_encoding.","def":"ini_get(\"iconv.internal_encoding\")"}],"ret_type":"int"}]},"iconv_strrpos":{"desc":"Finds the last occurrence of a needle within a haystack","long_desc":"Finds the last occurrence of a needle within a haystack. In contrast to strrpos(), the return value of iconv_strrpos() is the number of characters that appear before the needle, rather than the offset in bytes to the position where the needle has been found. The characters are counted on the basis of the specified character set charset.","ver":"PHP 5","ret_desc":"Returns the numeric position of the last occurrence of needle in haystack.","seealso":[],"url":"function.iconv-strrpos","name":"iconv_strrpos","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The entire string."},{"type":"string","var":"$needle","beh":1,"desc":"The searched substring."},{"type":"string","var":"$charset","beh":1,"desc":"If charset parameter is omitted, string are assumed to be encoded in iconv.internal_encoding.","def":"ini_get(\"iconv.internal_encoding\")"}],"ret_type":"int"}]},"iconv_substr":{"desc":"Cut out part of a string","long_desc":"Cuts a portion of str specified by the offset and length parameters.","ver":"PHP 5","ret_desc":"Returns the portion of str specified by the offset and length parameters.","seealso":[],"url":"function.iconv-substr","name":"iconv_substr","params":[{"list":[{"type":"string","var":"$str","beh":1,"desc":"The original string."},{"type":"int","var":"$offset","beh":1,"desc":"If offset is non-negative, iconv_substr() cuts the portion out of str beginning at offset'th character, counting from zero. If offset is negative, iconv_substr() cuts out the portion beginning at the position, offset characters away from the end of str."},{"type":"int","var":"$length","beh":1,"desc":"If length is given and is positive, the return value will contain at most length characters of the portion that begins at offset (depending on the length of string). If negative length is passed, iconv_substr() cuts the portion out of str from the offset'th character up to the character that is length characters away from the end of the string. In case offset is also negative, the start position is calculated beforehand according to the rule explained above.","def":"iconv_strlen($str, $charset)"},{"type":"string","var":"$charset","beh":1,"desc":"If charset parameter is omitted, string are assumed to be encoded in iconv.internal_encoding. Note that offset and length parameters are always deemed to represent offsets that are calculated on the basis of the character set determined by charset, whilst the counterpart substr() always takes these for byte offsets.","def":"ini_get(\"iconv.internal_encoding\")"}],"ret_type":"string"}]},"id3_get_frame_long_name":{"desc":"Get the long name of an ID3v2 frame","long_desc":"id3_get_frame_long_name() returns the long name for an ID3v2 frame.","ver":"PECL id3 >= 0.2","ret_desc":"Returns the frame long name or FALSE on errors.","seealso":[],"url":"function.id3-get-frame-long-name","name":"id3_get_frame_long_name","params":[{"list":[],"ret_type":"string"}]},"id3_get_frame_short_name":{"desc":"Get the short name of an ID3v2 frame","long_desc":"id3_get_frame_short_name() returns the short name for an ID3v2 frame.","ver":"PECL id3 >= 0.2","ret_desc":"Returns the frame short name or FALSE on errors.","seealso":[],"url":"function.id3-get-frame-short-name","name":"id3_get_frame_short_name","params":[{"list":[],"ret_type":"string"}]},"id3_get_genre_id":{"desc":"Get the id for a genre","long_desc":"id3_get_genre_id() returns the id for a genre.","ver":"PECL id3 >= 0.1","ret_desc":"The genre id or FALSE on errors.","seealso":[],"url":"function.id3-get-genre-id","name":"id3_get_genre_id","params":[{"list":[],"ret_type":"int"}]},"id3_get_genre_list":{"desc":"Get all possible genre values","long_desc":"id3_get_genre_list() returns an array containing all possible genres that may be stored in an ID3 tag. This list has been created by Eric Kemp and later extended by WinAmp. This function is useful to provide you users a list of genres from which they may choose one. When updating the ID3 tag you will always have to specify the genre as an integer ranging from 0 to 147.","ver":"PECL id3 >= 0.1","ret_desc":"Returns an array containing all possible genres that may be stored in an ID3 tag.","seealso":[],"url":"function.id3-get-genre-list","name":"id3_get_genre_list","params":[{"list":[],"ret_type":"array"}]},"id3_get_genre_name":{"desc":"Get the name for a genre id","long_desc":"id3_get_genre_name() returns the name for a genre id.","ver":"PECL id3 >= 0.1","ret_desc":"Returns the name as a string.","seealso":[],"url":"function.id3-get-genre-name","name":"id3_get_genre_name","params":[{"list":[],"ret_type":"string"}]},"id3_get_tag":{"desc":"Get all information stored in an ID3 tag","long_desc":"id3_get_tag() is used to get all information stored in the id3 tag of the specified file.","ver":"PECL id3 >= 0.1","ret_desc":"Returns an associative array with various keys like: title, artist, ..","seealso":[],"url":"function.id3-get-tag","name":"id3_get_tag","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The path to the MP3 file Instead of a filename you may also pass a valid stream resource"},{"type":"int","var":"$version","beh":0,"desc":"Allows you to specify the version of the tag as MP3 files may contain both, version 1.x and version 2.x tags Since version 0.2 id3_get_tag() also supports ID3 tags of version 2.2, 2.3 and 2.4. To extract information from these tags, pass one of the constants ID3_V2_2, ID3_V2_3 or ID3_V2_4 as the second parameter. ID3 v2.x tags can contain a lot more information about the MP3 file than ID3 v1.x tags.","def":"ID3_BEST"}],"ret_type":"array"}]},"id3_get_version":{"desc":"Get version of an ID3 tag","long_desc":"id3_get_version() retrieves the version(s) of the ID3 tag(s) in the MP3 file. If a file contains an ID3 v1.1 tag, it always contains a 1.0 tag, as version 1.1 is just an extension of 1.0.","ver":"PECL id3 >= 0.1","ret_desc":"Returns the version number of the ID3 tag of the file. As a tag can contain ID3 v1.x and v2.x tags, the return value of this function should be bitwise compared with the predefined constants ID3_V1_0, ID3_V1_1 and ID3_V2.","seealso":[],"url":"function.id3-get-version","name":"id3_get_version","params":[{"list":[],"ret_type":"int"}]},"id3_remove_tag":{"desc":"Remove an existing ID3 tag","long_desc":"id3_remove_tag() is used to remove the information stored of an ID3 tag.","ver":"PECL id3 >= 0.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.id3-remove-tag","name":"id3_remove_tag","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The path to the MP3 file Instead of a filename you may also pass a valid stream resource"},{"type":"int","var":"$version","beh":0,"desc":"Allows you to specify the version of the tag as MP3 files may contain both, version 1.x and version 2.x tags.","def":"ID3_V1_0"}],"ret_type":"bool"}]},"id3_set_tag":{"desc":"Update information stored in an ID3 tag","long_desc":"id3_set_tag() is used to change the information stored of an ID3 tag. If no tag has been present, it will be added to the file.","ver":"PECL id3 >= 0.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.id3-set-tag","name":"id3_set_tag","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The path to the MP3 file Instead of a filename you may also pass a valid stream resource"},{"type":"array","var":"$tag","beh":1,"desc":"An associative array of tag keys and values The following keys may be used in the associative array:"},{"type":"int","var":"$version","beh":1,"desc":"Allows you to specify the version of the tag as MP3 files may contain both, version 1.x and version 2.x tags","def":"ID3_V1_0"}],"ret_type":"bool"}]},"idate":{"desc":"Format a local time\/date as integer","long_desc":"Returns a number formatted according to the given format string using the given integer timestamp or the current local time if no timestamp is given. In other words, timestamp is optional and defaults to the value of time(). Unlike the function date(), idate() accepts just one char in the format parameter.","ver":"PHP 5","ret_desc":"Returns an integer.","seealso":[],"url":"function.idate","name":"idate","params":[{"list":[{"type":"string","var":"$format","beh":0,"desc":""},{"type":"int","var":"$timestamp","beh":0,"desc":"The optional timestamp parameter is an integer Unix timestamp that defaults to the current local time if a timestamp is not given. In other words, it defaults to the value of time().","def":"time()"}],"ret_type":"int"}]},"idn_to_ascii":{"desc":"Convert domain name to IDNA ASCII form.","long_desc":"Procedural style This function converts Unicode domain name to IDNA ASCII-compatible format.","ver":"PHP 5 >= 5.3.0, PECL intl >= 1.0.2, PECL idn >= 0.1","ret_desc":"Domain name encoded in ASCII-compatible form. or FALSE on failure","seealso":[],"url":"function.idn-to-ascii","name":"idn_to_ascii","params":[{"list":[{"type":"string","var":"$domain","beh":1,"desc":"Domain to convert. In PHP 5 must be UTF-8 encoded."},{"type":"int","var":"$options","beh":1,"desc":"Conversion options - combination of IDNA_* constants (except IDNA_ERROR_* constants).","def":0},{"type":"int","var":"$variant","beh":1,"desc":"Either INTL_IDNA_VARIANT_2003 for IDNA 2003 or INTL_IDNA_VARIANT_UTS46 for UTS #46.","def":"INTL_IDNA_VARIANT_2003"},{"type":"array","var":"&$idna_info","beh":1,"desc":"This parameter can be used only if INTL_IDNA_VARIANT_UTS46 was used for variant. In that case, it will be filled with an array with the keys 'result', the possibly illegal result of the transformation, 'isTransitionalDifferent', a boolean indicating whether the usage of the transitional mechanisms of UTS #46 either has or would have changed the result and 'errors', which is an int representing a bitset of the error constants IDNA_ERROR_*."}],"ret_type":"string"}]},"idn_to_unicode":{"desc":"Alias of idn_to_utf8()","long_desc":"This function is an alias of: idn_to_utf8().","ver":"No version information available, might only be in SVN","url":"function.idn-to-unicode","name":"idn_to_unicode","params":[]},"idn_to_utf8":{"desc":"Convert domain name from IDNA ASCII to Unicode.","long_desc":"Procedural style This function converts Unicode domain name from IDNA ASCII-compatible format to plain Unicode, encoded in UTF-8.","ver":"PHP 5 >= 5.3.0, PECL intl >= 1.0.2, PECL idn >= 0.1","ret_desc":"Domain name in Unicode, encoded in UTF-8. or FALSE on failure","seealso":[],"url":"function.idn-to-utf8","name":"idn_to_utf8","params":[{"list":[{"type":"string","var":"$domain","beh":1,"desc":"Domain to convert in IDNA ASCII-compatible format."},{"type":"int","var":"$options","beh":1,"desc":"Conversion options - combination of IDNA_* constants (except IDNA_ERROR_* constants).","def":0},{"type":"int","var":"$variant","beh":1,"desc":"Either INTL_IDNA_VARIANT_2003 for IDNA 2003 or INTL_IDNA_VARIANT_UTS46 for UTS #46.","def":"INTL_IDNA_VARIANT_2003"},{"type":"array","var":"&$idna_info","beh":1,"desc":"This parameter can be used only if INTL_IDNA_VARIANT_UTS46 was used for variant. In that case, it will be filled with an array with the keys 'result', the possibly illegal result of the transformation, 'isTransitionalDifferent', a boolean indicating whether the usage of the transitional mechanisms of UTS #46 either has or would have changed the result and 'errors', which is an int representing a bitset of the error constants IDNA_ERROR_*."}],"ret_type":"string"}]},"ifx_affected_rows":{"desc":"Get number of rows affected by a query","long_desc":"Returns the number of rows affected by a query associated with result_id. For inserts, updates and deletes the number is the real number (sqlerrd[2]) of affected rows. For selects it is an estimate (sqlerrd[0]). Don't rely on it. The database server can never return the actual number of rows that will be returned by a SELECT because it has not even begun fetching them at this stage (just after the \"PREPARE\" when the optimizer has determined the query plan). Useful after ifx_prepare() to limit queries to reasonable result sets.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns the number of rows as an integer.","seealso":[],"url":"function.ifx-affected-rows","name":"ifx_affected_rows","params":[{"list":[],"ret_type":"int"}]},"ifx_blobinfile_mode":{"desc":"Set the default blob mode for all select queries","long_desc":"Set the default blob mode for all select queries.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ifx-blobinfile-mode","name":"ifx_blobinfile_mode","params":[{"list":[],"ret_type":"bool"}]},"ifx_byteasvarchar":{"desc":"Set the default byte mode","long_desc":"Sets the default byte mode for all select-queries.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ifx-byteasvarchar","name":"ifx_byteasvarchar","params":[{"list":[],"ret_type":"bool"}]},"ifx_close":{"desc":"Close Informix connection","long_desc":"ifx_close() closes the link to an Informix database that's associated with the specified link identifier. Note that this isn't usually necessary, as non-persistent open links are automatically closed at the end of the script's execution. ifx_close() will not close persistent links generated by ifx_pconnect().","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ifx-close","name":"ifx_close","params":[{"list":[],"ret_type":"bool"}]},"ifx_connect":{"desc":"Open Informix server connection","long_desc":"ifx_connect() establishes a connection to an Informix server. In case a second call is made to ifx_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned. The link to the server will be closed as soon as the execution of the script ends, unless it's closed earlier by explicitly calling ifx_close().","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns a connection identifier on success, or FALSE on error.","seealso":[],"url":"function.ifx-connect","name":"ifx_connect","params":[{"list":[{"type":"string","var":"$database","beh":1,"desc":"The database name, as a string."},{"type":"string","var":"$userid","beh":1,"desc":"The username, as a string."},{"type":"string","var":"$password","beh":1,"desc":"The password, as a string."}],"ret_type":"resource"}]},"ifx_copy_blob":{"desc":"Duplicates the given blob object","long_desc":"Duplicates the given blob object.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns the new blob object-id, or FALSE on errors.","seealso":[],"url":"function.ifx-copy-blob","name":"ifx_copy_blob","params":[{"list":[],"ret_type":"int"}]},"ifx_create_blob":{"desc":"Creates an blob object","long_desc":"Creates a blob object.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns the new BLOB object-id, or FALSE on errors.","seealso":[],"url":"function.ifx-create-blob","name":"ifx_create_blob","params":[{"list":[{"type":"int","var":"$type","beh":0,"desc":"1 = TEXT, 0 = BYTE"},{"type":"int","var":"$mode","beh":0,"desc":"0 = blob-object holds the content in memory, 1 = blob-object holds the content in file."},{"type":"string","var":"$param","beh":1,"desc":"if mode = 0: pointer to the content, if mode = 1: pointer to the filestring."}],"ret_type":"int"}]},"ifx_create_char":{"desc":"Creates an char object","long_desc":"Creates an char object.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns the new char object id, or FALSE on errors.","seealso":[],"url":"function.ifx-create-char","name":"ifx_create_char","params":[{"list":[],"ret_type":"int"}]},"ifx_do":{"desc":"Execute a previously prepared SQL-statement","long_desc":"Executes a previously prepared query or opens a cursor for it. Does NOT free result_id on error. Also sets the real number of ifx_affected_rows() for non-select statements for retrieval by ifx_affected_rows().","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ifx-do","name":"ifx_do","params":[{"list":[],"ret_type":"bool"}]},"ifx_error":{"desc":"Returns error code of last Informix call","long_desc":"Returns in a string one character describing the general results of a statement and both SQLSTATE and SQLCODE associated with the most recent SQL statement executed.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"The Informix error codes (SQLSTATE & SQLCODE) formatted as x [SQLSTATE = aa bbb SQLCODE=cccc].","seealso":[],"url":"function.ifx-error","name":"ifx_error","params":[{"list":[],"ret_type":"string"}]},"ifx_errormsg":{"desc":"Returns error message of last Informix call","long_desc":"Returns the Informix error message associated with the most recent Informix error.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Return the error message, as a string.","seealso":[],"url":"function.ifx-errormsg","name":"ifx_errormsg","params":[{"list":[],"ret_type":"string"}]},"ifx_fetch_row":{"desc":"Get row as an associative array","long_desc":"Fetches one row of data from the result associated with the specified result identifier. Subsequent calls to ifx_fetch_row() would return the next row in the result set, or FALSE if there are no more rows.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns an associative array that corresponds to the fetched row, or FALSE if there are no more rows.","url":"function.ifx-fetch-row","name":"ifx_fetch_row","params":[{"list":[{"type":"resource","var":"$result_id","beh":0,"desc":"result_id is a valid resultid returned by ifx_query() or ifx_prepare() (select type queries only!)."},{"type":"mixed","var":"$position","beh":1,"desc":"An optional parameter for a \"fetch\" operation on \"scroll\" cursors: NEXT, PREVIOUS, CURRENT, FIRST, LAST or a number. If you specify a number, an \"absolute\" row fetch is executed. This parameter is optional, and only valid for SCROLL cursors."}],"ret_type":"array"}]},"ifx_fieldproperties":{"desc":"List of SQL fieldproperties","long_desc":"Returns the Informix SQL fieldproperties of every field in the query as an associative array. Properties are encoded as: \"SQLTYPE;length;precision;scale;ISNULLABLE\" where SQLTYPE = the Informix type like \"SQLVCHAR\" etc. and ISNULLABLE = \"Y\" or \"N\".","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns an associative array with fieldnames as key and the SQL fieldproperties as data for a query with result_id. Returns FALSE on errors.","seealso":[],"url":"function.ifx-fieldproperties","name":"ifx_fieldproperties","params":[{"list":[],"ret_type":"array"}]},"ifx_fieldtypes":{"desc":"List of Informix SQL fields","long_desc":"Returns an associative array with fieldnames as key and the SQL fieldtypes as data for the query associated with result_id.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns an associative array with fieldnames as key and the SQL fieldtypes as data for query with result_id. Returns FALSE on error.","seealso":[],"url":"function.ifx-fieldtypes","name":"ifx_fieldtypes","params":[{"list":[],"ret_type":"array"}]},"ifx_free_blob":{"desc":"Deletes the blob object","long_desc":"Deletes the blobobject for the given blob object-id.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ifx-free-blob","name":"ifx_free_blob","params":[{"list":[],"ret_type":"bool"}]},"ifx_free_char":{"desc":"Deletes the char object","long_desc":"Deletes the charobject for the given char object-id.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ifx-free-char","name":"ifx_free_char","params":[{"list":[],"ret_type":"bool"}]},"ifx_free_result":{"desc":"Releases resources for the query","long_desc":"Releases resources for the query associated with result_id.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ifx-free-result","name":"ifx_free_result","params":[{"list":[],"ret_type":"bool"}]},"ifx_get_blob":{"desc":"Return the content of a blob object","long_desc":"Returns the content of the blob object.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"The contents of the BLOB as a string, or FALSE on errors.","seealso":[],"url":"function.ifx-get-blob","name":"ifx_get_blob","params":[{"list":[],"ret_type":"string"}]},"ifx_get_char":{"desc":"Return the content of the char object","long_desc":"Returns the content of the char object.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns the contents as a string, or FALSE on errors.","seealso":[],"url":"function.ifx-get-char","name":"ifx_get_char","params":[{"list":[],"ret_type":"string"}]},"ifx_getsqlca":{"desc":"Get the contents of sqlca.sqlerrd[0..5] after a query","long_desc":"Returns a pseudo-row with sqlca.sqlerrd[0] ... sqlca.sqlerrd[5] after the query associated with result_id. For inserts, updates and deletes the values returned are those as set by the server after executing the query. This gives access to the number of affected rows and the serial insert value. For SELECTs the values are those saved after the PREPARE statement. This gives access to the *estimated* number of affected rows. The use of this function saves the overhead of executing a SELECT dbinfo('sqlca.sqlerrdx') query, as it retrieves the values that were saved by the ifx driver at the appropriate moment.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns an associative array with the following entries: sqlerrd0, sqlerrd1, sqlerrd2, sqlerrd3, sqlerrd4 and sqlerrd5.","url":"function.ifx-getsqlca","name":"ifx_getsqlca","params":[{"list":[],"ret_type":"array"}]},"ifx_htmltbl_result":{"desc":"Formats all rows of a query into a HTML table","long_desc":"Formats and prints all rows of the result_id query into a HTML table.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns the number of fetched rows, or FALSE on errors.","url":"function.ifx-htmltbl-result","name":"ifx_htmltbl_result","params":[{"list":[{"type":"resource","var":"$result_id","beh":0,"desc":"result_id is a valid resultid returned by ifx_query() or ifx_prepare() (select type queries only!)."},{"type":"string","var":"$html_table_options","beh":1,"desc":"This optional argument is a string of <table> tag options."}],"ret_type":"int"}]},"ifx_nullformat":{"desc":"Sets the default return value on a fetch row","long_desc":"Sets the default return value of a NULL-value on a fetch row.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ifx-nullformat","name":"ifx_nullformat","params":[{"list":[],"ret_type":"bool"}]},"ifx_num_fields":{"desc":"Returns the number of columns in the query","long_desc":"After preparing or executing a query, this call gives you the number of columns in the query.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns the number of columns in query for result_id, or FALSE on errors.","seealso":[],"url":"function.ifx-num-fields","name":"ifx_num_fields","params":[{"list":[],"ret_type":"int"}]},"ifx_num_rows":{"desc":"Count the rows already fetched from a query","long_desc":"Gives the number of rows fetched so far for a query with result_id after a ifx_query() or ifx_do() query.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns the number of fetched rows or FALSE on errors.","seealso":[],"url":"function.ifx-num-rows","name":"ifx_num_rows","params":[{"list":[],"ret_type":"int"}]},"ifx_pconnect":{"desc":"Open persistent Informix connection","long_desc":"ifx_pconnect() acts very much like ifx_connect() with two major differences. First, when connecting, the function would first try to find a (persistent) link that's already open with the same host, username and password. If one is found, an identifier for it will be returned instead of opening a new connection. Second, the connection to the SQL server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (ifx_close() will not close links established by ifx_pconnect()). This type of links is therefore called 'persistent'.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns: valid Informix persistent link identifier on success, or FALSE on errors.","seealso":[],"url":"function.ifx-pconnect","name":"ifx_pconnect","params":[{"list":[{"type":"string","var":"$database","beh":1,"desc":"The database name, as a string."},{"type":"string","var":"$userid","beh":1,"desc":"The username, as a string."},{"type":"string","var":"$password","beh":1,"desc":"The password, as a string."}],"ret_type":"resource"}]},"ifx_prepare":{"desc":"Prepare an SQL-statement for execution","long_desc":"Prepares a query for later use with ifx_do(). For \"select-type\" queries a cursor is declared and opened. Non-select queries are \"execute immediate\". For either query type the number of (estimated or real) affected rows is saved for retrieval by ifx_affected_rows(). If the contents of the TEXT (or BYTE) column allow it, you can also use ifx_textasvarchar(1) and ifx_byteasvarchar(1). This allows you to treat TEXT (or BYTE) columns just as if they were ordinary (but long) VARCHAR columns for select queries, and you don't need to bother with blob id's. With ifx_textasvarchar(0) or ifx_byteasvarchar(0) (the default situation), select queries will return BLOB columns as blob id's (integer value). You can get the value of the blob as a string or file with the blob functions (see below).","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns a valid result identifier for use by ifx_do(), or FALSE on errors.","seealso":[],"url":"function.ifx-prepare","name":"ifx_prepare","params":[{"list":[{"type":"string","var":"$query","beh":0,"desc":"The query string."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"The link identifier."},{"type":"int","var":"$cursor_def","beh":1,"desc":"This optional parameter allows you to make this a scroll and\/or hold cursor. It's a bitmask and can be either IFX_SCROLL, IFX_HOLD, or both or'ed together."},{"type":"mixed","var":"$blobidarray","beh":1,"desc":"If you have BLOB (BYTE or TEXT) columns in the query, you can add a blobidarray parameter containing the corresponding \"blob ids\", and you should replace those columns with a \"?\" in the query text."}],"ret_type":"resource"}]},"ifx_query":{"desc":"Send Informix query","long_desc":"Sends a query to the currently active database on the server that's associated with the specified link identifier. For \"select-type\" queries a cursor is declared and opened. Non-select queries are \"execute immediate\". For either query type the number of (estimated or real) affected rows is saved for retrieval by ifx_affected_rows(). If the contents of the TEXT (or BYTE) column allow it, you can also use ifx_textasvarchar(1) and ifx_byteasvarchar(1). This allows you to treat TEXT (or BYTE) columns just as if they were ordinary (but long) VARCHAR columns for select queries, and you don't need to bother with blob id's. With ifx_textasvarchar(0) or ifx_byteasvarchar(0) (the default situation), select queries will return BLOB columns as blob id's (integer value). You can get the value of the blob as a string or file with the blob functions (see below).","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns valid Informix result identifier on success, or FALSE on errors.","seealso":[],"url":"function.ifx-query","name":"ifx_query","params":[{"list":[{"type":"string","var":"$query","beh":1,"desc":"The query string."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"The link identifier."},{"type":"int","var":"$cursor_type","beh":1,"desc":"This optional parameter allows you to make this a scroll and\/or hold cursor. It's a bitmask and can be either IFX_SCROLL, IFX_HOLD, or both or'ed together. I you omit this parameter the cursor is a normal sequential cursor."},{"type":"mixed","var":"$blobidarray","beh":1,"desc":"If you have BLOB (BYTE or TEXT) columns in the query, you can add a blobidarray parameter containing the corresponding \"blob ids\", and you should replace those columns with a \"?\" in the query text."}],"ret_type":"resource"}]},"ifx_textasvarchar":{"desc":"Set the default text mode","long_desc":"Sets the default text mode for all select-queries.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ifx-textasvarchar","name":"ifx_textasvarchar","params":[{"list":[],"ret_type":"bool"}]},"ifx_update_blob":{"desc":"Updates the content of the blob object","long_desc":"Updates the content of the blob object for the given blob object bid.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ifx-update-blob","name":"ifx_update_blob","params":[{"list":[{"type":"int","var":"$bid","beh":0,"desc":"A BLOB object identifier."},{"type":"string","var":"$content","beh":0,"desc":"The new data, as a string."}],"ret_type":"bool"}]},"ifx_update_char":{"desc":"Updates the content of the char object","long_desc":"Updates the content of the char object for the given char object bid.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ifx-update-char","name":"ifx_update_char","params":[{"list":[{"type":"int","var":"$bid","beh":0,"desc":"A char object identifier."},{"type":"string","var":"$content","beh":0,"desc":"The new data, as a string."}],"ret_type":"bool"}]},"ifxus_close_slob":{"desc":"Deletes the slob object","long_desc":"Deletes the slob object on the given slob object-id bid.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ifxus-close-slob","name":"ifxus_close_slob","params":[{"list":[],"ret_type":"bool"}]},"ifxus_create_slob":{"desc":"Creates an slob object and opens it","long_desc":"Creates an slob object and opens it.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Return the new slob object-id, or FALSE on errors.","seealso":[],"url":"function.ifxus-create-slob","name":"ifxus_create_slob","params":[{"list":[],"ret_type":"int"}]},"ifxus_free_slob":{"desc":"Deletes the slob object","long_desc":"Deletes the slob object.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ifxus-free-slob","name":"ifxus_free_slob","params":[{"list":[],"ret_type":"bool"}]},"ifxus_open_slob":{"desc":"Opens an slob object","long_desc":"Opens an slob object. bid should be an existing slob id.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns the new slob object-id, or FALSE on errors.","seealso":[],"url":"function.ifxus-open-slob","name":"ifxus_open_slob","params":[{"list":[{"type":"int","var":"$bid","beh":0,"desc":"An existing slob id."},{"type":"int","var":"$mode","beh":0,"desc":"A combination of IFX_LO_RDONLY, IFX_LO_WRONLY, IFX_LO_APPEND IFX_LO_RDWR, IFX_LO_BUFFER, IFX_LO_NOBUFFER."}],"ret_type":"int"}]},"ifxus_read_slob":{"desc":"Reads nbytes of the slob object","long_desc":"Reads nbytes of the slob object.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns the slob contents as a string, or FALSE on errors.","seealso":[],"url":"function.ifxus-read-slob","name":"ifxus_read_slob","params":[{"list":[{"type":"int","var":"$bid","beh":0,"desc":"An existing slob id."},{"type":"int","var":"$nbytes","beh":0,"desc":"The number of bytes to read."}],"ret_type":"string"}]},"ifxus_seek_slob":{"desc":"Sets the current file or seek position","long_desc":"Sets the current file or seek position of an open slob object.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns the seek position as an integer, or FALSE on errors.","seealso":[],"url":"function.ifxus-seek-slob","name":"ifxus_seek_slob","params":[{"list":[{"type":"int","var":"$bid","beh":0,"desc":"An existing slob id."},{"type":"int","var":"$mode","beh":0,"desc":"0 = LO_SEEK_SET, 1 = LO_SEEK_CUR, 2 = LO_SEEK_END."},{"type":"int","var":"$offset","beh":1,"desc":"A byte offset."}],"ret_type":"int"}]},"ifxus_tell_slob":{"desc":"Returns the current file or seek position","long_desc":"Returns the current file or seek position of an open slob object","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns the seek position as an integer, or FALSE on errors.","seealso":[],"url":"function.ifxus-tell-slob","name":"ifxus_tell_slob","params":[{"list":[],"ret_type":"int"}]},"ifxus_write_slob":{"desc":"Writes a string into the slob object","long_desc":"Writes a string into the slob object.","ver":"PHP 4, PHP <=5.2.0","ret_desc":"Returns the bytes written as an integer, or FALSE on errors.","seealso":[],"url":"function.ifxus-write-slob","name":"ifxus_write_slob","params":[{"list":[{"type":"int","var":"$bid","beh":0,"desc":"An existing slob id."},{"type":"string","var":"$content","beh":0,"desc":"The content to write, as a string."}],"ret_type":"int"}]},"ignore_user_abort":{"desc":"Set whether a client disconnect should abort script execution","long_desc":"Sets whether a client disconnect should cause a script to be aborted. When running PHP as a command line script, and the script's tty goes away without the script being terminated then the script will die the next time it tries to write anything, unless value is set to TRUE","ver":"PHP 4, PHP 5","ret_desc":"Returns the previous setting, as an integer.","seealso":[],"url":"function.ignore-user-abort","name":"ignore_user_abort","params":[{"list":[],"ret_type":"int"}]},"iis_add_server":{"desc":"Creates a new virtual web server","ver":"PECL iisfunc SVN","url":"function.iis-add-server","name":"iis_add_server","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":""},{"type":"string","var":"$comment","beh":0,"desc":""},{"type":"string","var":"$server_ip","beh":1,"desc":""},{"type":"int","var":"$port","beh":1,"desc":""},{"type":"string","var":"$host_name","beh":1,"desc":""},{"type":"int","var":"$rights","beh":1,"desc":""},{"type":"int","var":"$start_server","beh":1,"desc":""}],"ret_type":"int"}]},"iis_get_dir_security":{"desc":"Gets Directory Security","ver":"PECL iisfunc SVN","url":"function.iis-get-dir-security","name":"iis_get_dir_security","params":[{"list":[{"type":"int","var":"$server_instance","beh":0,"desc":""},{"type":"string","var":"$virtual_path","beh":0,"desc":""}],"ret_type":"int"}]},"iis_get_script_map":{"desc":"Gets script mapping on a virtual directory for a specific extension","ver":"PECL iisfunc SVN","url":"function.iis-get-script-map","name":"iis_get_script_map","params":[{"list":[{"type":"int","var":"$server_instance","beh":0,"desc":""},{"type":"string","var":"$virtual_path","beh":0,"desc":""},{"type":"string","var":"$script_extension","beh":1,"desc":""}],"ret_type":"string"}]},"iis_get_server_by_comment":{"desc":"Return the instance number associated with the Comment","ver":"PECL iisfunc SVN","url":"function.iis-get-server-by-comment","name":"iis_get_server_by_comment","params":[{"list":[],"ret_type":"int"}]},"iis_get_server_by_path":{"desc":"Return the instance number associated with the Path","long_desc":"Each virtual server in IIS is associated with an instance number. iis_get_server_by_path() finds the instance number from the actual path to the root directory.","ver":"PECL iisfunc SVN","ret_desc":"Returns the server instance number.","url":"function.iis-get-server-by-path","name":"iis_get_server_by_path","params":[{"list":[],"ret_type":"int"}]},"iis_get_server_rights":{"desc":"Gets server rights","ver":"PECL iisfunc SVN","url":"function.iis-get-server-rights","name":"iis_get_server_rights","params":[{"list":[{"type":"int","var":"$server_instance","beh":0,"desc":""},{"type":"string","var":"$virtual_path","beh":0,"desc":""}],"ret_type":"int"}]},"iis_get_service_state":{"desc":"Returns the state for the service defined by ServiceId","ver":"PECL iisfunc SVN","url":"function.iis-get-service-state","name":"iis_get_service_state","params":[{"list":[],"ret_type":"int"}]},"iis_remove_server":{"desc":"Removes the virtual web server indicated by ServerInstance","ver":"PECL iisfunc SVN","url":"function.iis-remove-server","name":"iis_remove_server","params":[{"list":[],"ret_type":"int"}]},"iis_set_app_settings":{"desc":"Creates application scope for a virtual directory","ver":"PECL iisfunc SVN","url":"function.iis-set-app-settings","name":"iis_set_app_settings","params":[{"list":[{"type":"int","var":"$server_instance","beh":0,"desc":""},{"type":"string","var":"$virtual_path","beh":0,"desc":""},{"type":"string","var":"$application_scope","beh":1,"desc":""}],"ret_type":"int"}]},"iis_set_dir_security":{"desc":"Sets Directory Security","ver":"PECL iisfunc SVN","url":"function.iis-set-dir-security","name":"iis_set_dir_security","params":[{"list":[{"type":"int","var":"$server_instance","beh":0,"desc":""},{"type":"string","var":"$virtual_path","beh":0,"desc":""},{"type":"int","var":"$directory_flags","beh":1,"desc":""}],"ret_type":"int"}]},"iis_set_script_map":{"desc":"Sets script mapping on a virtual directory","ver":"PECL iisfunc SVN","url":"function.iis-set-script-map","name":"iis_set_script_map","params":[{"list":[{"type":"int","var":"$server_instance","beh":0,"desc":""},{"type":"string","var":"$virtual_path","beh":0,"desc":""},{"type":"string","var":"$script_extension","beh":1,"desc":""},{"type":"string","var":"$engine_path","beh":1,"desc":""},{"type":"int","var":"$allow_scripting","beh":1,"desc":""}],"ret_type":"int"}]},"iis_set_server_rights":{"desc":"Sets server rights","ver":"PECL iisfunc SVN","url":"function.iis-set-server-rights","name":"iis_set_server_rights","params":[{"list":[{"type":"int","var":"$server_instance","beh":0,"desc":""},{"type":"string","var":"$virtual_path","beh":0,"desc":""},{"type":"int","var":"$directory_flags","beh":1,"desc":""}],"ret_type":"int"}]},"iis_start_server":{"desc":"Starts the virtual web server","ver":"PECL iisfunc SVN","url":"function.iis-start-server","name":"iis_start_server","params":[{"list":[],"ret_type":"int"}]},"iis_start_service":{"desc":"Starts the service defined by ServiceId","ver":"PECL iisfunc SVN","url":"function.iis-start-service","name":"iis_start_service","params":[{"list":[],"ret_type":"int"}]},"iis_stop_server":{"desc":"Stops the virtual web server","ver":"PECL iisfunc SVN","url":"function.iis-stop-server","name":"iis_stop_server","params":[{"list":[],"ret_type":"int"}]},"iis_stop_service":{"desc":"Stops the service defined by ServiceId","ver":"PECL iisfunc SVN","url":"function.iis-stop-service","name":"iis_stop_service","params":[{"list":[],"ret_type":"int"}]},"image2wbmp":{"desc":"Output image to browser or file","long_desc":"image2wbmp() outputs or save a WBMP version of the given image.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.image2wbmp","name":"image2wbmp","params":[{"list":[{"type":"resource","var":"$image","beh":1,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"string","var":"$filename","beh":1,"desc":"Path to the saved file. If not given, the raw image stream will be outputted directly."},{"type":"int","var":"$threshold","beh":1,"desc":"Threshold value, between 0 and 255 (inclusive)."}],"ret_type":"bool"}]},"image_type_to_extension":{"desc":"Get file extension for image type","long_desc":"Returns the extension for the given IMAGETYPE_XXX constant.","ver":"PHP 5","ret_desc":"A string with the extension corresponding to the given image type.","url":"function.image-type-to-extension","name":"image_type_to_extension","params":[{"list":[{"type":"int","var":"$imagetype","beh":0,"desc":"One of the IMAGETYPE_XXX constant."},{"type":"bool","var":"$include_dot","beh":0,"desc":"Whether to prepend a dot to the extension or not. Default to TRUE.","def":"TRUE"}],"ret_type":"string"}]},"image_type_to_mime_type":{"desc":"Get Mime-Type for image-type returned by getimagesize, exif_read_data, exif_thumbnail, exif_imagetype","long_desc":"The image_type_to_mime_type() function will determine the Mime-Type for an IMAGETYPE constant.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"The returned values are as follows","seealso":[],"url":"function.image-type-to-mime-type","name":"image_type_to_mime_type","params":[{"list":[],"ret_type":"string"}]},"imagealphablending":{"desc":"Set the blending mode for an image","long_desc":"imagealphablending() allows for two different modes of drawing on truecolor images. In blending mode, the alpha channel component of the color supplied to all drawing function, such as imagesetpixel() determines how much of the underlying color should be allowed to shine through. As a result, gd automatically blends the existing color at that point with the drawing color, and stores the result in the image. The resulting pixel is opaque. In non-blending mode, the drawing color is copied literally with its alpha channel information, replacing the destination pixel. Blending mode is not available when drawing on palette images.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagealphablending","name":"imagealphablending","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"bool","var":"$blendmode","beh":0,"desc":"Whether to enable the blending mode or not. On true color images the default value is TRUE otherwise the default value is FALSE"}],"ret_type":"bool"}]},"imageantialias":{"desc":"Should antialias functions be used or not","long_desc":"Activate the fast drawing antialiased methods for lines and wired polygons. It does not support alpha components. It works using a direct blend operation. It works only with truecolor images. Thickness and styled are not supported. Using antialiased primitives with transparent background color can end with some unexpected results. The blend method uses the background color as any other colors. The lack of alpha component support does not allow an alpha based antialiasing method.","ver":"PHP 4 >= 4.3.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imageantialias","name":"imageantialias","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"bool","var":"$enabled","beh":0,"desc":"Whether to enable antialiasing or not."}],"ret_type":"bool"}]},"imagearc":{"desc":"Draws an arc","long_desc":"imagearc() draws an arc of circle centered at the given coordinates.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagearc","name":"imagearc","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$cx","beh":0,"desc":"x-coordinate of the center."},{"type":"int","var":"$cy","beh":1,"desc":"y-coordinate of the center."},{"type":"int","var":"$width","beh":1,"desc":"The arc width."},{"type":"int","var":"$height","beh":1,"desc":"The arc height."},{"type":"int","var":"$start","beh":1,"desc":"The arc start angle, in degrees."},{"type":"int","var":"$end","beh":1,"desc":"The arc end angle, in degrees. 0\u00b0 is located at the three-o'clock position, and the arc is drawn clockwise."},{"type":"int","var":"$color","beh":1,"desc":"A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imagechar":{"desc":"Draw a character horizontally","long_desc":"imagechar() draws the first character of c in the image identified by image with its upper-left at x,y (top left is 0, 0) with the color color.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagechar","name":"imagechar","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$font","beh":0,"desc":"Can be 1, 2, 3, 4, 5 for built-in fonts in latin2 encoding (where higher numbers corresponding to larger fonts) or any of your own font identifiers registered with imageloadfont()."},{"type":"int","var":"$x","beh":1,"desc":"x-coordinate of the start."},{"type":"int","var":"$y","beh":1,"desc":"y-coordinate of the start."},{"type":"string","var":"$c","beh":1,"desc":"The character to draw."},{"type":"int","var":"$color","beh":1,"desc":"A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imagecharup":{"desc":"Draw a character vertically","long_desc":"Draws the character c vertically at the specified coordinate on the given image.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagecharup","name":"imagecharup","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$font","beh":0,"desc":"Can be 1, 2, 3, 4, 5 for built-in fonts in latin2 encoding (where higher numbers corresponding to larger fonts) or any of your own font identifiers registered with imageloadfont()."},{"type":"int","var":"$x","beh":1,"desc":"x-coordinate of the start."},{"type":"int","var":"$y","beh":1,"desc":"y-coordinate of the start."},{"type":"string","var":"$c","beh":1,"desc":"The character to draw."},{"type":"int","var":"$color","beh":1,"desc":"A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imagecolorallocate":{"desc":"Allocate a color for an image","long_desc":"Returns a color identifier representing the color composed of the given RGB components. imagecolorallocate() must be called to create each color that is to be used in the image represented by image.","ver":"PHP 4, PHP 5","ret_desc":"A color identifier or FALSE if the allocation failed.","seealso":[],"url":"function.imagecolorallocate","name":"imagecolorallocate","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$red","beh":0,"desc":"Value of red component."},{"type":"int","var":"$green","beh":1,"desc":"Value of green component."},{"type":"int","var":"$blue","beh":1,"desc":"Value of blue component."}],"ret_type":"int"}]},"imagecolorallocatealpha":{"desc":"Allocate a color for an image","long_desc":"imagecolorallocatealpha() behaves identically to imagecolorallocate() with the addition of the transparency parameter alpha.","ver":"PHP 4 >= 4.3.2, PHP 5","ret_desc":"A color identifier or FALSE if the allocation failed.","seealso":[],"url":"function.imagecolorallocatealpha","name":"imagecolorallocatealpha","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$red","beh":0,"desc":"Value of red component."},{"type":"int","var":"$green","beh":1,"desc":"Value of green component."},{"type":"int","var":"$blue","beh":1,"desc":"Value of blue component."},{"type":"int","var":"$alpha","beh":1,"desc":"A value between 0 and 127. 0 indicates completely opaque while 127 indicates completely transparent."}],"ret_type":"int"}]},"imagecolorat":{"desc":"Get the index of the color of a pixel","long_desc":"Returns the index of the color of the pixel at the specified location in the image specified by image. If PHP is compiled against GD library 2.0 or higher and the image is a truecolor image, this function returns the RGB value of that pixel as integer. Use bitshifting and masking to access the distinct red, green and blue component values:","ver":"PHP 4, PHP 5","ret_desc":"Returns the index of the color.","seealso":[],"url":"function.imagecolorat","name":"imagecolorat","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$x","beh":0,"desc":"x-coordinate of the point."},{"type":"int","var":"$y","beh":1,"desc":"y-coordinate of the point."}],"ret_type":"int"}]},"imagecolorclosest":{"desc":"Get the index of the closest color to the specified color","long_desc":"Returns the index of the color in the palette of the image which is \"closest\" to the specified RGB value. The \"distance\" between the desired color and each color in the palette is calculated as if the RGB values represented points in three-dimensional space. If you created the image from a file, only colors used in the image are resolved. Colors present only in the palette are not resolved.","ver":"PHP 4, PHP 5","ret_desc":"Returns the index of the closest color, in the palette of the image, to the specified one","seealso":[],"url":"function.imagecolorclosest","name":"imagecolorclosest","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$red","beh":0,"desc":"Value of red component."},{"type":"int","var":"$green","beh":1,"desc":"Value of green component."},{"type":"int","var":"$blue","beh":1,"desc":"Value of blue component."}],"ret_type":"int"}]},"imagecolorclosestalpha":{"desc":"Get the index of the closest color to the specified color + alpha","long_desc":"Returns the index of the color in the palette of the image which is \"closest\" to the specified RGB value and alpha level.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the index of the closest color in the palette.","seealso":[],"url":"function.imagecolorclosestalpha","name":"imagecolorclosestalpha","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$red","beh":0,"desc":"Value of red component."},{"type":"int","var":"$green","beh":1,"desc":"Value of green component."},{"type":"int","var":"$blue","beh":1,"desc":"Value of blue component."},{"type":"int","var":"$alpha","beh":1,"desc":"A value between 0 and 127. 0 indicates completely opaque while 127 indicates completely transparent."}],"ret_type":"int"}]},"imagecolorclosesthwb":{"desc":"Get the index of the color which has the hue, white and blackness","long_desc":"Get the index of the color which has the hue, white and blackness nearest the given color.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns an integer with the index of the color which has the hue, white and blackness nearest the given color.","seealso":[],"url":"function.imagecolorclosesthwb","name":"imagecolorclosesthwb","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$red","beh":0,"desc":"Value of red component."},{"type":"int","var":"$green","beh":1,"desc":"Value of green component."},{"type":"int","var":"$blue","beh":1,"desc":"Value of blue component."}],"ret_type":"int"}]},"imagecolordeallocate":{"desc":"De-allocate a color for an image","long_desc":"De-allocates a color previously allocated with imagecolorallocate() or imagecolorallocatealpha().","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagecolordeallocate","name":"imagecolordeallocate","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$color","beh":0,"desc":"The color identifier."}],"ret_type":"bool"}]},"imagecolorexact":{"desc":"Get the index of the specified color","long_desc":"Returns the index of the specified color in the palette of the image. If you created the image from a file, only colors used in the image are resolved. Colors present only in the palette are not resolved.","ver":"PHP 4, PHP 5","ret_desc":"Returns the index of the specified color in the palette, or -1 if the color does not exist.","seealso":[],"url":"function.imagecolorexact","name":"imagecolorexact","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$red","beh":0,"desc":"Value of red component."},{"type":"int","var":"$green","beh":1,"desc":"Value of green component."},{"type":"int","var":"$blue","beh":1,"desc":"Value of blue component."}],"ret_type":"int"}]},"imagecolorexactalpha":{"desc":"Get the index of the specified color + alpha","long_desc":"Returns the index of the specified color+alpha in the palette of the image.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the index of the specified color+alpha in the palette of the image, or -1 if the color does not exist in the image's palette.","seealso":[],"url":"function.imagecolorexactalpha","name":"imagecolorexactalpha","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$red","beh":0,"desc":"Value of red component."},{"type":"int","var":"$green","beh":1,"desc":"Value of green component."},{"type":"int","var":"$blue","beh":1,"desc":"Value of blue component."},{"type":"int","var":"$alpha","beh":1,"desc":"A value between 0 and 127. 0 indicates completely opaque while 127 indicates completely transparent."}],"ret_type":"int"}]},"imagecolormatch":{"desc":"Makes the colors of the palette version of an image more closely match the true color version","long_desc":"Makes the colors of the palette version of an image more closely match the true color version.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagecolormatch","name":"imagecolormatch","params":[{"list":[{"type":"resource","var":"$image1","beh":0,"desc":"A truecolor image link resource."},{"type":"resource","var":"$image2","beh":0,"desc":"A palette image link resource pointing to an image that has the same size as image1."}],"ret_type":"bool"}]},"imagecolorresolve":{"desc":"Get the index of the specified color or its closest possible alternative","long_desc":"This function is guaranteed to return a color index for a requested color, either the exact color or the closest possible alternative. If you created the image from a file, only colors used in the image are resolved. Colors present only in the palette are not resolved.","ver":"PHP 4, PHP 5","ret_desc":"Returns a color index.","seealso":[],"url":"function.imagecolorresolve","name":"imagecolorresolve","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$red","beh":0,"desc":"Value of red component."},{"type":"int","var":"$green","beh":1,"desc":"Value of green component."},{"type":"int","var":"$blue","beh":1,"desc":"Value of blue component."}],"ret_type":"int"}]},"imagecolorresolvealpha":{"desc":"Get the index of the specified color + alpha or its closest possible alternative","long_desc":"This function is guaranteed to return a color index for a requested color, either the exact color or the closest possible alternative.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns a color index.","seealso":[],"url":"function.imagecolorresolvealpha","name":"imagecolorresolvealpha","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$red","beh":0,"desc":"Value of red component."},{"type":"int","var":"$green","beh":1,"desc":"Value of green component."},{"type":"int","var":"$blue","beh":1,"desc":"Value of blue component."},{"type":"int","var":"$alpha","beh":1,"desc":"A value between 0 and 127. 0 indicates completely opaque while 127 indicates completely transparent."}],"ret_type":"int"}]},"imagecolorset":{"desc":"Set the color for the specified palette index","long_desc":"This sets the specified index in the palette to the specified color. This is useful for creating flood-fill-like effects in palleted images without the overhead of performing the actual flood-fill.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.imagecolorset","name":"imagecolorset","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$index","beh":1,"desc":"An index in the palette."},{"type":"int","var":"$red","beh":1,"desc":"Value of red component."},{"type":"int","var":"$green","beh":1,"desc":"Value of green component."},{"type":"int","var":"$blue","beh":1,"desc":"Value of blue component."},{"type":"int","var":"$alpha","beh":1,"desc":"Value of alpha component.","def":0}],"ret_type":"void"}]},"imagecolorsforindex":{"desc":"Get the colors for an index","long_desc":"Gets the color for a specified index.","ver":"PHP 4, PHP 5","ret_desc":"Returns an associative array with red, green, blue and alpha keys that contain the appropriate values for the specified color index.","seealso":[],"url":"function.imagecolorsforindex","name":"imagecolorsforindex","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$index","beh":0,"desc":"The color index."}],"ret_type":"array"}]},"imagecolorstotal":{"desc":"Find out the number of colors in an image's palette","long_desc":"Returns the number of colors in an image palette.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of colors in the specified image's palette or 0 for truecolor images.","seealso":[],"url":"function.imagecolorstotal","name":"imagecolorstotal","params":[{"list":[],"ret_type":"int"}]},"imagecolortransparent":{"desc":"Define a color as transparent","long_desc":"Sets the transparent color in the given image.","ver":"PHP 4, PHP 5","ret_desc":"The identifier of the new (or current, if none is specified) transparent color is returned.","url":"function.imagecolortransparent","name":"imagecolortransparent","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$color","beh":1,"desc":"A color identifier created with imagecolorallocate()."}],"ret_type":"int"}]},"imageconvolution":{"desc":"Apply a 3x3 convolution matrix, using coefficient and offset","long_desc":"Applies a convolution matrix on the image, using the given coefficient and offset.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imageconvolution","name":"imageconvolution","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"array","var":"$matrix","beh":0,"desc":"A 3x3 matrix: an array of three arrays of three floats."},{"type":"float","var":"$div","beh":1,"desc":"The divisor of the result of the convolution, used for normalization."},{"type":"float","var":"$offset","beh":1,"desc":"Color offset."}],"ret_type":"bool"}]},"imagecopy":{"desc":"Copy part of an image","long_desc":"Copy a part of src_im onto dst_im starting at the x,y coordinates src_x, src_y with a width of src_w and a height of src_h. The portion defined will be copied onto the x,y coordinates, dst_x and dst_y.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagecopy","name":"imagecopy","params":[{"list":[{"type":"resource","var":"$dst_im","beh":0,"desc":"Destination image link resource."},{"type":"resource","var":"$src_im","beh":0,"desc":"Source image link resource."},{"type":"int","var":"$dst_x","beh":1,"desc":"x-coordinate of destination point."},{"type":"int","var":"$dst_y","beh":1,"desc":"y-coordinate of destination point."},{"type":"int","var":"$src_x","beh":1,"desc":"x-coordinate of source point."},{"type":"int","var":"$src_y","beh":1,"desc":"y-coordinate of source point."},{"type":"int","var":"$src_w","beh":1,"desc":"Source width."},{"type":"int","var":"$src_h","beh":1,"desc":"Source height."}],"ret_type":"bool"}]},"imagecopymerge":{"desc":"Copy and merge part of an image","long_desc":"Copy a part of src_im onto dst_im starting at the x,y coordinates src_x, src_y with a width of src_w and a height of src_h. The portion defined will be copied onto the x,y coordinates, dst_x and dst_y.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagecopymerge","name":"imagecopymerge","params":[{"list":[{"type":"resource","var":"$dst_im","beh":0,"desc":"Destination image link resource."},{"type":"resource","var":"$src_im","beh":0,"desc":"Source image link resource."},{"type":"int","var":"$dst_x","beh":1,"desc":"x-coordinate of destination point."},{"type":"int","var":"$dst_y","beh":1,"desc":"y-coordinate of destination point."},{"type":"int","var":"$src_x","beh":1,"desc":"x-coordinate of source point."},{"type":"int","var":"$src_y","beh":1,"desc":"y-coordinate of source point."},{"type":"int","var":"$src_w","beh":1,"desc":"Source width."},{"type":"int","var":"$src_h","beh":1,"desc":"Source height."},{"type":"int","var":"$pct","beh":1,"desc":"The two images will be merged according to pct which can range from 0 to 100. When pct = 0, no action is taken, when 100 this function behaves identically to imagecopy() for pallete images, while it implements alpha transparency for true colour images."}],"ret_type":"bool"}]},"imagecopymergegray":{"desc":"Copy and merge part of an image with gray scale","long_desc":"imagecopymergegray() copy a part of src_im onto dst_im starting at the x,y coordinates src_x, src_y with a width of src_w and a height of src_h. The portion defined will be copied onto the x,y coordinates, dst_x and dst_y. This function is identical to imagecopymerge() except that when merging it preserves the hue of the source by converting the destination pixels to gray scale before the copy operation.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagecopymergegray","name":"imagecopymergegray","params":[{"list":[{"type":"resource","var":"$dst_im","beh":0,"desc":"Destination image link resource."},{"type":"resource","var":"$src_im","beh":0,"desc":"Source image link resource."},{"type":"int","var":"$dst_x","beh":1,"desc":"x-coordinate of destination point."},{"type":"int","var":"$dst_y","beh":1,"desc":"y-coordinate of destination point."},{"type":"int","var":"$src_x","beh":1,"desc":"x-coordinate of source point."},{"type":"int","var":"$src_y","beh":1,"desc":"y-coordinate of source point."},{"type":"int","var":"$src_w","beh":1,"desc":"Source width."},{"type":"int","var":"$src_h","beh":1,"desc":"Source height."},{"type":"int","var":"$pct","beh":1,"desc":"The src_im will be changed to grayscale according to pct where 0 is fully grayscale and 100 is unchanged. When pct = 100 this function behaves identically to imagecopy() for pallete images, while it implements alpha transparency for true colour images."}],"ret_type":"bool"}]},"imagecopyresampled":{"desc":"Copy and resize part of an image with resampling","long_desc":"imagecopyresampled() copies a rectangular portion of one image to another image, smoothly interpolating pixel values so that, in particular, reducing the size of an image still retains a great deal of clarity. In other words, imagecopyresampled() will take a rectangular area from src_image of width src_w and height src_h at position (src_x,src_y) and place it in a rectangular area of dst_image of width dst_w and height dst_h at position (dst_x,dst_y). If the source and destination coordinates and width and heights differ, appropriate stretching or shrinking of the image fragment will be performed. The coordinates refer to the upper left corner. This function can be used to copy regions within the same image (if dst_image is the same as src_image) but if the regions overlap the results will be unpredictable.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagecopyresampled","name":"imagecopyresampled","params":[{"list":[{"type":"resource","var":"$dst_image","beh":0,"desc":"Destination image link resource."},{"type":"resource","var":"$src_image","beh":0,"desc":"Source image link resource."},{"type":"int","var":"$dst_x","beh":1,"desc":"x-coordinate of destination point."},{"type":"int","var":"$dst_y","beh":1,"desc":"y-coordinate of destination point."},{"type":"int","var":"$src_x","beh":1,"desc":"x-coordinate of source point."},{"type":"int","var":"$src_y","beh":1,"desc":"y-coordinate of source point."},{"type":"int","var":"$dst_w","beh":1,"desc":"Destination width."},{"type":"int","var":"$dst_h","beh":1,"desc":"Destination height."},{"type":"int","var":"$src_w","beh":1,"desc":"Source width."},{"type":"int","var":"$src_h","beh":1,"desc":"Source height."}],"ret_type":"bool"}]},"imagecopyresized":{"desc":"Copy and resize part of an image","long_desc":"imagecopyresized() copies a rectangular portion of one image to another image. dst_image is the destination image, src_image is the source image identifier. In other words, imagecopyresized() will take an rectangular area from src_image of width src_w and height src_h at position (src_x,src_y) and place it in a rectangular area of dst_image of width dst_w and height dst_h at position (dst_x,dst_y). If the source and destination coordinates and width and heights differ, appropriate stretching or shrinking of the image fragment will be performed. The coordinates refer to the upper left corner. This function can be used to copy regions within the same image (if dst_image is the same as src_image) but if the regions overlap the results will be unpredictable.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagecopyresized","name":"imagecopyresized","params":[{"list":[{"type":"resource","var":"$dst_image","beh":0,"desc":"Destination image link resource."},{"type":"resource","var":"$src_image","beh":0,"desc":"Source image link resource."},{"type":"int","var":"$dst_x","beh":1,"desc":"x-coordinate of destination point."},{"type":"int","var":"$dst_y","beh":1,"desc":"y-coordinate of destination point."},{"type":"int","var":"$src_x","beh":1,"desc":"x-coordinate of source point."},{"type":"int","var":"$src_y","beh":1,"desc":"y-coordinate of source point."},{"type":"int","var":"$dst_w","beh":1,"desc":"Destination width."},{"type":"int","var":"$dst_h","beh":1,"desc":"Destination height."},{"type":"int","var":"$src_w","beh":1,"desc":"Source width."},{"type":"int","var":"$src_h","beh":1,"desc":"Source height."}],"ret_type":"bool"}]},"imagecreate":{"desc":"Create a new palette based image","long_desc":"imagecreate() returns an image identifier representing a blank image of specified size. We recommend the use of imagecreatetruecolor().","ver":"PHP 4, PHP 5","ret_desc":"Returns an image resource identifier on success, FALSE on errors.","seealso":[],"url":"function.imagecreate","name":"imagecreate","params":[{"list":[{"type":"int","var":"$width","beh":0,"desc":"The image width."},{"type":"int","var":"$height","beh":0,"desc":"The image height."}],"ret_type":"resource"}]},"imagecreatefromgd":{"desc":"Create a new image from GD file or URL","long_desc":"Create a new image from GD file or URL.","ver":"PHP 4 >= 4.0.7, PHP 5","ret_desc":"Returns an image resource identifier on success, FALSE on errors.","url":"function.imagecreatefromgd","name":"imagecreatefromgd","params":[{"list":[],"ret_type":"resource"}]},"imagecreatefromgd2":{"desc":"Create a new image from GD2 file or URL","long_desc":"Create a new image from GD2 file or URL.","ver":"PHP 4 >= 4.0.7, PHP 5","ret_desc":"Returns an image resource identifier on success, FALSE on errors.","url":"function.imagecreatefromgd2","name":"imagecreatefromgd2","params":[{"list":[],"ret_type":"resource"}]},"imagecreatefromgd2part":{"desc":"Create a new image from a given part of GD2 file or URL","long_desc":"Create a new image from a given part of GD2 file or URL.","ver":"PHP 4 >= 4.0.7, PHP 5","ret_desc":"Returns an image resource identifier on success, FALSE on errors.","url":"function.imagecreatefromgd2part","name":"imagecreatefromgd2part","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"Path to the GD2 image."},{"type":"int","var":"$srcX","beh":0,"desc":"x-coordinate of source point."},{"type":"int","var":"$srcY","beh":1,"desc":"y-coordinate of source point."},{"type":"int","var":"$width","beh":1,"desc":"Source width."},{"type":"int","var":"$height","beh":1,"desc":"Source height."}],"ret_type":"resource"}]},"imagecreatefromgif":{"desc":"Create a new image from file or URL","long_desc":"imagecreatefromgif() returns an image identifier representing the image obtained from the given filename.","ver":"PHP 4, PHP 5","ret_desc":"Returns an image resource identifier on success, FALSE on errors.","url":"function.imagecreatefromgif","name":"imagecreatefromgif","params":[{"list":[],"ret_type":"resource"}]},"imagecreatefromjpeg":{"desc":"Create a new image from file or URL","long_desc":"imagecreatefromjpeg() returns an image identifier representing the image obtained from the given filename.","ver":"PHP 4, PHP 5","ret_desc":"Returns an image resource identifier on success, FALSE on errors.","url":"function.imagecreatefromjpeg","name":"imagecreatefromjpeg","params":[{"list":[],"ret_type":"resource"}]},"imagecreatefrompng":{"desc":"Create a new image from file or URL","long_desc":"imagecreatefrompng() returns an image identifier representing the image obtained from the given filename.","ver":"PHP 4, PHP 5","ret_desc":"Returns an image resource identifier on success, FALSE on errors.","url":"function.imagecreatefrompng","name":"imagecreatefrompng","params":[{"list":[],"ret_type":"resource"}]},"imagecreatefromstring":{"desc":"Create a new image from the image stream in the string","long_desc":"imagecreatefromstring() returns an image identifier representing the image obtained from the given data. These types will be automatically detected if your build of PHP supports them: JPEG, PNG, GIF, WBMP, and GD2.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"An image resource will be returned on success. FALSE is returned if the image type is unsupported, the data is not in a recognised format, or the image is corrupt and cannot be loaded.","seealso":[],"url":"function.imagecreatefromstring","name":"imagecreatefromstring","params":[{"list":[],"ret_type":"resource"}]},"imagecreatefromwbmp":{"desc":"Create a new image from file or URL","long_desc":"imagecreatefromwbmp() returns an image identifier representing the image obtained from the given filename.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns an image resource identifier on success, FALSE on errors.","url":"function.imagecreatefromwbmp","name":"imagecreatefromwbmp","params":[{"list":[],"ret_type":"resource"}]},"imagecreatefromxbm":{"desc":"Create a new image from file or URL","long_desc":"imagecreatefromxbm() returns an image identifier representing the image obtained from the given filename.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns an image resource identifier on success, FALSE on errors.","url":"function.imagecreatefromxbm","name":"imagecreatefromxbm","params":[{"list":[],"ret_type":"resource"}]},"imagecreatefromxpm":{"desc":"Create a new image from file or URL","long_desc":"imagecreatefromxpm() returns an image identifier representing the image obtained from the given filename.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns an image resource identifier on success, FALSE on errors.","url":"function.imagecreatefromxpm","name":"imagecreatefromxpm","params":[{"list":[],"ret_type":"resource"}]},"imagecreatetruecolor":{"desc":"Create a new true color image","long_desc":"imagecreatetruecolor() returns an image identifier representing a black image of the specified size. Depending on your PHP and GD versions this function is defined or not. With PHP 4.0.6 through 4.1.x this function always exists if the GD module is loaded, but calling it without GD2 being installed PHP will issue a fatal error and exit. With PHP 4.2.x this behaviour is different in issuing a warning instead of an error. Other versions only define this function, if the correct GD version is installed.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns an image resource identifier on success, FALSE on errors.","seealso":[],"url":"function.imagecreatetruecolor","name":"imagecreatetruecolor","params":[{"list":[{"type":"int","var":"$width","beh":0,"desc":"Image width."},{"type":"int","var":"$height","beh":0,"desc":"Image height."}],"ret_type":"resource"}]},"imagedashedline":{"desc":"Draw a dashed line","long_desc":"This function is deprecated. Use combination of imagesetstyle() and imageline() instead.","ver":"PHP 4, PHP 5","ret_desc":"Always returns true","seealso":[],"url":"function.imagedashedline","name":"imagedashedline","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$x1","beh":0,"desc":"Upper left x coordinate."},{"type":"int","var":"$y1","beh":1,"desc":"Upper left y coordinate 0, 0 is the top left corner of the image."},{"type":"int","var":"$x2","beh":1,"desc":"Bottom right x coordinate."},{"type":"int","var":"$y2","beh":1,"desc":"Bottom right y coordinate."},{"type":"int","var":"$color","beh":1,"desc":"The fill color. A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imagedestroy":{"desc":"Destroy an image","long_desc":"imagedestroy() frees any memory associated with image image.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagedestroy","name":"imagedestroy","params":[{"list":[],"ret_type":"bool"}]},"imageellipse":{"desc":"Draw an ellipse","long_desc":"Draws an ellipse centered at the specified coordinates.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imageellipse","name":"imageellipse","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$cx","beh":0,"desc":"x-coordinate of the center."},{"type":"int","var":"$cy","beh":1,"desc":"y-coordinate of the center."},{"type":"int","var":"$width","beh":1,"desc":"The ellipse width."},{"type":"int","var":"$height","beh":1,"desc":"The ellipse height."},{"type":"int","var":"$color","beh":1,"desc":"The color of the ellipse. A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imagefill":{"desc":"Flood fill","long_desc":"Performs a flood fill starting at the given coordinate (top left is 0, 0) with the given color in the image.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagefill","name":"imagefill","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$x","beh":0,"desc":"x-coordinate of start point."},{"type":"int","var":"$y","beh":1,"desc":"y-coordinate of start point."},{"type":"int","var":"$color","beh":1,"desc":"The fill color. A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imagefilledarc":{"desc":"Draw a partial arc and fill it","long_desc":"Draws a partial arc centered at the specified coordinate in the given image.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagefilledarc","name":"imagefilledarc","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$cx","beh":0,"desc":"x-coordinate of the center."},{"type":"int","var":"$cy","beh":1,"desc":"y-coordinate of the center."},{"type":"int","var":"$width","beh":1,"desc":"The arc width."},{"type":"int","var":"$height","beh":1,"desc":"The arc height."},{"type":"int","var":"$start","beh":1,"desc":"The arc start angle, in degrees."},{"type":"int","var":"$end","beh":1,"desc":"The arc end angle, in degrees. 0\u00b0 is located at the three-o'clock position, and the arc is drawn clockwise."},{"type":"int","var":"$color","beh":1,"desc":"A color identifier created with imagecolorallocate()."},{"type":"int","var":"$style","beh":1,"desc":"A bitwise OR of the following possibilities:"}],"ret_type":"bool"}]},"imagefilledellipse":{"desc":"Draw a filled ellipse","long_desc":"Draws an ellipse centered at the specified coordinate on the given image.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagefilledellipse","name":"imagefilledellipse","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$cx","beh":0,"desc":"x-coordinate of the center."},{"type":"int","var":"$cy","beh":1,"desc":"y-coordinate of the center."},{"type":"int","var":"$width","beh":1,"desc":"The ellipse width."},{"type":"int","var":"$height","beh":1,"desc":"The ellipse height."},{"type":"int","var":"$color","beh":1,"desc":"The fill color. A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imagefilledpolygon":{"desc":"Draw a filled polygon","long_desc":"imagefilledpolygon() creates a filled polygon in the given image.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagefilledpolygon","name":"imagefilledpolygon","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"array","var":"$points","beh":0,"desc":"An array containing the x and y coordinates of the polygons vertices consecutively."},{"type":"int","var":"$num_points","beh":1,"desc":"Total number of vertices, which must be at least 3."},{"type":"int","var":"$color","beh":1,"desc":"A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imagefilledrectangle":{"desc":"Draw a filled rectangle","long_desc":"Creates a rectangle filled with color in the given image starting at point 1 and ending at point 2. 0, 0 is the top left corner of the image.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagefilledrectangle","name":"imagefilledrectangle","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$x1","beh":0,"desc":"x-coordinate for point 1."},{"type":"int","var":"$y1","beh":1,"desc":"y-coordinate for point 1."},{"type":"int","var":"$x2","beh":1,"desc":"x-coordinate for point 2."},{"type":"int","var":"$y2","beh":1,"desc":"y-coordinate for point 2."},{"type":"int","var":"$color","beh":1,"desc":"The fill color. A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imagefilltoborder":{"desc":"Flood fill to specific color","long_desc":"imagefilltoborder() performs a flood fill whose border color is defined by border. The starting point for the fill is x, y (top left is 0, 0) and the region is filled with color color.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagefilltoborder","name":"imagefilltoborder","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$x","beh":0,"desc":"x-coordinate of start."},{"type":"int","var":"$y","beh":1,"desc":"y-coordinate of start."},{"type":"int","var":"$border","beh":1,"desc":"The border color. A color identifier created with imagecolorallocate()."},{"type":"int","var":"$color","beh":1,"desc":"The fill color. A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imagefilter":{"desc":"Applies a filter to an image","long_desc":"imagefilter() applies the given filter filtertype on the image.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagefilter","name":"imagefilter","params":[{"list":[{"type":"resource","var":"$image","beh":1,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$filtertype","beh":1,"desc":"filtertype can be one of the following:"},{"type":"int","var":"$arg1","beh":1,"desc":""},{"type":"int","var":"$arg2","beh":1,"desc":""},{"type":"int","var":"$arg3","beh":1,"desc":""},{"type":"int","var":"$arg4","beh":1,"desc":""}],"ret_type":"bool"}]},"imagefontheight":{"desc":"Get font height","long_desc":"Returns the pixel height of a character in the specified font.","ver":"PHP 4, PHP 5","ret_desc":"Returns the height of the pixel.","seealso":[],"url":"function.imagefontheight","name":"imagefontheight","params":[{"list":[],"ret_type":"int"}]},"imagefontwidth":{"desc":"Get font width","long_desc":"Returns the pixel width of a character in font.","ver":"PHP 4, PHP 5","ret_desc":"Returns the width of the pixel","seealso":[],"url":"function.imagefontwidth","name":"imagefontwidth","params":[{"list":[],"ret_type":"int"}]},"imageftbbox":{"desc":"Give the bounding box of a text using fonts via freetype2","long_desc":"This function calculates and returns the bounding box in pixels for a FreeType text.","ver":"PHP 4 >= 4.0.7, PHP 5","ret_desc":"imageftbbox() returns an array with 8 elements representing four points making the bounding box of the text:","url":"function.imageftbbox","name":"imageftbbox","params":[{"list":[{"type":"float","var":"$size","beh":0,"desc":"The font size. Depending on your version of GD, this should be specified as the pixel size (GD1) or point size (GD2)."},{"type":"float","var":"$angle","beh":1,"desc":"Angle in degrees in which text will be measured."},{"type":"string","var":"$fontfile","beh":1,"desc":"The name of the TrueType font file (can be a URL). Depending on which version of the GD library that PHP is using, it may attempt to search for files that do not begin with a leading '\/' by appending '.ttf' to the filename and searching along a library-defined font path."},{"type":"string","var":"$text","beh":1,"desc":"The string to be measured."},{"type":"array","var":"$extrainfo","beh":1,"desc":""}],"ret_type":"array"}]},"imagefttext":{"desc":"Write text to the image using fonts using FreeType 2","ver":"PHP 4 >= 4.0.7, PHP 5","ret_desc":"This function returns an array defining the four points of the box, starting in the lower left and moving counter-clockwise:","url":"function.imagefttext","name":"imagefttext","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"float","var":"$size","beh":1,"desc":"The font size to use in points."},{"type":"float","var":"$angle","beh":1,"desc":"The angle in degrees, with 0 degrees being left-to-right reading text. Higher values represent a counter-clockwise rotation. For example, a value of 90 would result in bottom-to-top reading text."},{"type":"int","var":"$x","beh":1,"desc":"The coordinates given by x and y will define the basepoint of the first character (roughly the lower-left corner of the character). This is different from the imagestring(), where x and y define the upper-left corner of the first character. For example, \"top left\" is 0, 0."},{"type":"int","var":"$y","beh":1,"desc":"The y-ordinate. This sets the position of the fonts baseline, not the very bottom of the character."},{"type":"int","var":"$color","beh":1,"desc":"The index of the desired color for the text, see imagecolorexact()."},{"type":"string","var":"$fontfile","beh":1,"desc":"The path to the TrueType font you wish to use. Depending on which version of the GD library PHP is using, when fontfile does not begin with a leading \/ then .ttf will be appended to the filename and the library will attempt to search for that filename along a library-defined font path. When using versions of the GD library lower than 2.0.18, a space character, rather than a semicolon, was used as the 'path separator' for different font files. Unintentional use of this feature will result in the warning message: Warning: Could not find\/open font. For these affected versions, the only solution is moving the font to a path which does not contain spaces. In many cases where a font resides in the same directory as the script using it the following trick will alleviate any include problems."},{"type":"string","var":"$text","beh":1,"desc":"Text to be inserted into image."},{"type":"array","var":"$extrainfo","beh":1,"desc":""}],"ret_type":"array"}]},"imagegammacorrect":{"desc":"Apply a gamma correction to a GD image","long_desc":"Applies gamma correction to the given gd image given an input and an output gamma.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagegammacorrect","name":"imagegammacorrect","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"float","var":"$inputgamma","beh":0,"desc":"The input gamma."},{"type":"float","var":"$outputgamma","beh":1,"desc":"The output gamma."}],"ret_type":"bool"}]},"imagegd":{"desc":"Output GD image to browser or file","long_desc":"Outputs a GD image to the given filename.","ver":"PHP 4 >= 4.0.7, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagegd","name":"imagegd","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"string","var":"$filename","beh":1,"desc":"The path to save the file to. If not set or NULL, the raw image stream will be outputted directly."}],"ret_type":"bool"}]},"imagegd2":{"desc":"Output GD2 image to browser or file","long_desc":"Outputs a GD2 image to the given filename.","ver":"PHP 4 >= 4.0.7, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagegd2","name":"imagegd2","params":[{"list":[{"type":"resource","var":"$image","beh":1,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"string","var":"$filename","beh":1,"desc":"The path to save the file to. If not set or NULL, the raw image stream will be outputted directly."},{"type":"int","var":"$chunk_size","beh":1,"desc":"Chunk size."},{"type":"int","var":"$type","beh":1,"desc":"Either IMG_GD2_RAW or IMG_GD2_COMPRESSED. Default is IMG_GD2_RAW.","def":"IMG_GD2_RAW"}],"ret_type":"bool"}]},"imagegif":{"desc":"Output image to browser or file","long_desc":"imagegif() creates the GIF file in filename from the image image. The image argument is the return from the imagecreate() or imagecreatefrom* function. The image format will be GIF87a unless the image has been made transparent with imagecolortransparent(), in which case the image format will be GIF89a.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagegif","name":"imagegif","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"string","var":"$filename","beh":1,"desc":"The path to save the file to. If not set or NULL, the raw image stream will be outputted directly."}],"ret_type":"bool"}]},"imagegrabscreen":{"desc":"Captures the whole screen","long_desc":"Grabs a screenshot of the whole screen.","ver":"PHP 5 >= 5.2.2","ret_desc":"Returns an image resource identifier on success, FALSE on failure.","seealso":[],"url":"function.imagegrabscreen","name":"imagegrabscreen","params":[{"list":[],"ret_type":"resource"}]},"imagegrabwindow":{"desc":"Captures a window","long_desc":"Grabs a window or its client area using a windows handle (HWND property in COM instance)","ver":"PHP 5 >= 5.2.2","ret_desc":"Returns an image resource identifier on success, FALSE on failure.","seealso":[],"url":"function.imagegrabwindow","name":"imagegrabwindow","params":[{"list":[{"type":"int","var":"$window_handle","beh":0,"desc":"The HWND window ID."},{"type":"int","var":"$client_area","beh":0,"desc":"Include the client area of the application window.","def":0}],"ret_type":"resource"}]},"imageinterlace":{"desc":"Enable or disable interlace","long_desc":"imageinterlace() turns the interlace bit on or off. If the interlace bit is set and the image is used as a JPEG image, the image is created as a progressive JPEG.","ver":"PHP 4, PHP 5","ret_desc":"Returns 1 if the interlace bit is set for the image, 0 otherwise.","url":"function.imageinterlace","name":"imageinterlace","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$interlace","beh":0,"desc":"If non-zero, the image will be interlaced, else the interlace bit is turned off.","def":0}],"ret_type":"int"}]},"imageistruecolor":{"desc":"Finds whether an image is a truecolor image","long_desc":"imageistruecolor() finds whether the image image is a truecolor image.","ver":"PHP 4 >= 4.3.2, PHP 5","ret_desc":"Returns TRUE if the image is truecolor, FALSE otherwise.","seealso":[],"url":"function.imageistruecolor","name":"imageistruecolor","params":[{"list":[],"ret_type":"bool"}]},"imagejpeg":{"desc":"Output image to browser or file","long_desc":"imagejpeg() creates a JPEG file from the given image.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagejpeg","name":"imagejpeg","params":[{"list":[{"type":"resource","var":"$image","beh":1,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"string","var":"$filename","beh":1,"desc":"The path to save the file to. If not set or NULL, the raw image stream will be outputted directly. To skip this argument in order to provide the quality parameter, use NULL."},{"type":"int","var":"$quality","beh":1,"desc":"quality is optional, and ranges from 0 (worst quality, smaller file) to 100 (best quality, biggest file). The default is the default IJG quality value (about 75)."}],"ret_type":"bool"}]},"imagelayereffect":{"desc":"Set the alpha blending flag to use the bundled libgd layering effects","long_desc":"Set the alpha blending flag to use the bundled libgd layering effects.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagelayereffect","name":"imagelayereffect","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$effect","beh":0,"desc":"One of the following constants:"}],"ret_type":"bool"}]},"imageline":{"desc":"Draw a line","long_desc":"Draws a line between the two given points.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imageline","name":"imageline","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$x1","beh":0,"desc":"x-coordinate for first point."},{"type":"int","var":"$y1","beh":1,"desc":"y-coordinate for first point."},{"type":"int","var":"$x2","beh":1,"desc":"x-coordinate for second point."},{"type":"int","var":"$y2","beh":1,"desc":"y-coordinate for second point."},{"type":"int","var":"$color","beh":1,"desc":"The line color. A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imageloadfont":{"desc":"Load a new font","long_desc":"imageloadfont() loads a user-defined bitmap and returns its identifier.","ver":"PHP 4, PHP 5","ret_desc":"The font identifier which is always bigger than 5 to avoid conflicts with built-in fonts or FALSE on errors.","seealso":[],"url":"function.imageloadfont","name":"imageloadfont","params":[{"list":[],"ret_type":"int"}]},"imagepalettecopy":{"desc":"Copy the palette from one image to another","long_desc":"imagepalettecopy() copies the palette from the source image to the destination image.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"No value is returned.","url":"function.imagepalettecopy","name":"imagepalettecopy","params":[{"list":[{"type":"resource","var":"$destination","beh":0,"desc":"The destination image resource."},{"type":"resource","var":"$source","beh":0,"desc":"The source image resource."}],"ret_type":"void"}]},"imagepng":{"desc":"Output a PNG image to either the browser or a file","long_desc":"Outputs or saves a PNG image from the given image.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagepng","name":"imagepng","params":[{"list":[{"type":"resource","var":"$image","beh":1,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"string","var":"$filename","beh":1,"desc":"The path to save the file to. If not set or NULL, the raw image stream will be outputted directly."},{"type":"int","var":"$quality","beh":1,"desc":"Compression level: from 0 (no compression) to 9."},{"type":"int","var":"$filters","beh":1,"desc":"Allows reducing the PNG file size. It is a bitmask field which may be set to any combination of the PNG_FILTER_XXX constants. PNG_NO_FILTER or PNG_ALL_FILTERS may also be used to respectively disable or activate all filters."}],"ret_type":"bool"}]},"imagepolygon":{"desc":"Draws a polygon","long_desc":"imagepolygon() creates a polygon in the given image.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagepolygon","name":"imagepolygon","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"array","var":"$points","beh":0,"desc":"An array containing the polygon's vertices, e.g.:"},{"type":"int","var":"$num_points","beh":1,"desc":"Total number of points (vertices)."},{"type":"int","var":"$color","beh":1,"desc":"A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imagepsbbox":{"desc":"Give the bounding box of a text rectangle using PostScript Type1 fonts","long_desc":"Gives the bounding box of a text rectangle using PostScript Type1 fonts. The bounding box is calculated using information available from character metrics, and unfortunately tends to differ slightly from the results achieved by actually rasterizing the text. If the angle is 0 degrees, you can expect the text to need 1 pixel more to every direction.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array containing the following elements:","seealso":[],"url":"function.imagepsbbox","name":"imagepsbbox","params":[{"list":[{"type":"string","var":"$text","beh":0,"desc":"The text to be written."},{"type":"resource","var":"$font","beh":0,"desc":"A font resource, returned by imagepsloadfont()."},{"type":"int","var":"$size","beh":1,"desc":"size is expressed in pixels."}],"ret_type":"array"},{"list":[{"type":"string","var":"$text","beh":0,"desc":"The text to be written."},{"type":"resource","var":"$font","beh":0,"desc":"A font resource, returned by imagepsloadfont()."},{"type":"int","var":"$size","beh":1,"desc":"size is expressed in pixels."},{"type":"int","var":"$space","beh":1,"desc":"Allows you to change the default value of a space in a font. This amount is added to the normal value and can also be negative. Expressed in character space units, where 1 unit is 1\/1000th of an em-square."},{"type":"int","var":"$tightness","beh":1,"desc":"tightness allows you to control the amount of white space between characters. This amount is added to the normal character width and can also be negative. Expressed in character space units, where 1 unit is 1\/1000th of an em-square."},{"type":"float","var":"$angle","beh":1,"desc":"angle is in degrees."}],"ret_type":"array"}]},"imagepsencodefont":{"desc":"Change the character encoding vector of a font","long_desc":"Loads a character encoding vector from a file and changes the fonts encoding vector to it. As a PostScript fonts default vector lacks most of the character positions above 127, you'll definitely want to change this if you use an other language than English. If you find yourself using this function all the time, a much better way to define the encoding is to set ps.default_encoding in the configuration file to point to the right encoding file and all fonts you load will automatically have the right encoding.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagepsencodefont","name":"imagepsencodefont","params":[{"list":[{"type":"resource","var":"$font_index","beh":0,"desc":"A font resource, returned by imagepsloadfont()."},{"type":"string","var":"$encodingfile","beh":0,"desc":"The exact format of this file is described in T1libs documentation. T1lib comes with two ready-to-use files, IsoLatin1.enc and IsoLatin2.enc."}],"ret_type":"bool"}]},"imagepsextendfont":{"desc":"Extend or condense a font","long_desc":"Extend or condense a font (font_index), if the value of the extend parameter is less than one you will be condensing the font.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagepsextendfont","name":"imagepsextendfont","params":[{"list":[{"type":"resource","var":"$font_index","beh":0,"desc":"A font resource, returned by imagepsloadfont()."},{"type":"float","var":"$extend","beh":0,"desc":"Extension value, must be greater than 0."}],"ret_type":"bool"}]},"imagepsfreefont":{"desc":"Free memory used by a PostScript Type 1 font","long_desc":"imagepsfreefont() frees memory used by a PostScript Type 1 font.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagepsfreefont","name":"imagepsfreefont","params":[{"list":[],"ret_type":"bool"}]},"imagepsloadfont":{"desc":"Load a PostScript Type 1 font from file","long_desc":"Load a PostScript Type 1 font from the given filename.","ver":"PHP 4, PHP 5","ret_desc":"In the case everything went right, a valid font index will be returned and can be used for further purposes. Otherwise the function returns FALSE.","seealso":[],"url":"function.imagepsloadfont","name":"imagepsloadfont","params":[{"list":[],"ret_type":"resource"}]},"imagepsslantfont":{"desc":"Slant a font","long_desc":"Slant a given font given.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagepsslantfont","name":"imagepsslantfont","params":[{"list":[{"type":"resource","var":"$font_index","beh":0,"desc":"A font resource, returned by imagepsloadfont()."},{"type":"float","var":"$slant","beh":0,"desc":"Slant level."}],"ret_type":"bool"}]},"imagepstext":{"desc":"Draws a text over an image using PostScript Type1 fonts","long_desc":"Draws a text on an image using PostScript Type1 fonts. Refer to PostScript documentation about fonts and their measuring system if you have trouble understanding how this works.","ver":"PHP 4, PHP 5","ret_desc":"This function returns an array containing the following elements:","seealso":[],"url":"function.imagepstext","name":"imagepstext","params":[{"list":[{"type":"resource","var":"$image","beh":1,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"string","var":"$text","beh":1,"desc":"The text to be written."},{"type":"resource","var":"$font_index","beh":1,"desc":"A font resource, returned by imagepsloadfont()."},{"type":"int","var":"$size","beh":1,"desc":"size is expressed in pixels."},{"type":"int","var":"$foreground","beh":1,"desc":"The color in which the text will be painted."},{"type":"int","var":"$background","beh":1,"desc":"The color to which the text will try to fade in with antialiasing. No pixels with the color background are actually painted, so the background image does not need to be of solid color."},{"type":"int","var":"$x","beh":1,"desc":"x-coordinate for the lower-left corner of the first character."},{"type":"int","var":"$y","beh":1,"desc":"y-coordinate for the lower-left corner of the first character."},{"type":"int","var":"$space","beh":1,"desc":"Allows you to change the default value of a space in a font. This amount is added to the normal value and can also be negative. Expressed in character space units, where 1 unit is 1\/1000th of an em-square.","def":0},{"type":"int","var":"$tightness","beh":1,"desc":"tightness allows you to control the amount of white space between characters. This amount is added to the normal character width and can also be negative. Expressed in character space units, where 1 unit is 1\/1000th of an em-square.","def":0},{"type":"float","var":"$angle","beh":1,"desc":"angle is in degrees.","def":0},{"type":"int","var":"$antialias_steps","beh":1,"desc":"Allows you to control the number of colours used for antialiasing text. Allowed values are 4 and 16. The higher value is recommended for text sizes lower than 20, where the effect in text quality is quite visible. With bigger sizes, use 4. It's less computationally intensive.","def":4}],"ret_type":"array"}]},"imagerectangle":{"desc":"Draw a rectangle","long_desc":"imagerectangle() creates a rectangle starting at the specified coordinates.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagerectangle","name":"imagerectangle","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$x1","beh":0,"desc":"Upper left x coordinate."},{"type":"int","var":"$y1","beh":1,"desc":"Upper left y coordinate 0, 0 is the top left corner of the image."},{"type":"int","var":"$x2","beh":1,"desc":"Bottom right x coordinate."},{"type":"int","var":"$y2","beh":1,"desc":"Bottom right y coordinate."},{"type":"int","var":"$color","beh":1,"desc":"A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imagerotate":{"desc":"Rotate an image with a given angle","long_desc":"Rotates the image image using the given angle in degrees. The center of rotation is the center of the image, and the rotated image may have different dimensions than the original image.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns an image resource for the rotated image, or FALSE on failure.","url":"function.imagerotate","name":"imagerotate","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"float","var":"$angle","beh":1,"desc":"Rotation angle, in degrees. The rotation angle is interpreted as the number of degrees to rotate the image anticlockwise."},{"type":"int","var":"$bgd_color","beh":1,"desc":"Specifies the color of the uncovered zone after the rotation"},{"type":"int","var":"$ignore_transparent","beh":1,"desc":"If set and non-zero, transparent colors are ignored (otherwise kept).","def":0}],"ret_type":"resource"}]},"imagesavealpha":{"desc":"Set the flag to save full alpha channel information (as opposed to single-color transparency) when saving PNG images","long_desc":"imagesavealpha() sets the flag to attempt to save full alpha channel information (as opposed to single-color transparency) when saving PNG images. You have to unset alphablending (imagealphablending($im, false)), to use it. Alpha channel is not supported by all browsers, if you have problem with your browser, try to load your script with an alpha channel compliant browser, e.g. latest Mozilla.","ver":"PHP 4 >= 4.3.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagesavealpha","name":"imagesavealpha","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"bool","var":"$saveflag","beh":0,"desc":"Whether to save the alpha channel or not. Default to FALSE."}],"ret_type":"bool"}]},"imagesetbrush":{"desc":"Set the brush image for line drawing","long_desc":"imagesetbrush() sets the brush image to be used by all line drawing functions (such as imageline() and imagepolygon()) when drawing with the special colors IMG_COLOR_BRUSHED or IMG_COLOR_STYLEDBRUSHED.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagesetbrush","name":"imagesetbrush","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"resource","var":"$brush","beh":0,"desc":"An image resource."}],"ret_type":"bool"}]},"imagesetpixel":{"desc":"Set a single pixel","long_desc":"imagesetpixel() draws a pixel at the specified coordinate.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagesetpixel","name":"imagesetpixel","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$x","beh":0,"desc":"x-coordinate."},{"type":"int","var":"$y","beh":1,"desc":"y-coordinate."},{"type":"int","var":"$color","beh":1,"desc":"A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imagesetstyle":{"desc":"Set the style for line drawing","long_desc":"imagesetstyle() sets the style to be used by all line drawing functions (such as imageline() and imagepolygon()) when drawing with the special color IMG_COLOR_STYLED or lines of images with color IMG_COLOR_STYLEDBRUSHED.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagesetstyle","name":"imagesetstyle","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"array","var":"$style","beh":0,"desc":"An array of pixel colors. You can use the IMG_COLOR_TRANSPARENT constant to add a transparent pixel."}],"ret_type":"bool"}]},"imagesetthickness":{"desc":"Set the thickness for line drawing","long_desc":"imagesetthickness() sets the thickness of the lines drawn when drawing rectangles, polygons, ellipses etc. etc. to thickness pixels.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagesetthickness","name":"imagesetthickness","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$thickness","beh":0,"desc":"Thickness, in pixels."}],"ret_type":"bool"}]},"imagesettile":{"desc":"Set the tile image for filling","long_desc":"imagesettile() sets the tile image to be used by all region filling functions (such as imagefill() and imagefilledpolygon()) when filling with the special color IMG_COLOR_TILED. A tile is an image used to fill an area with a repeated pattern. Any GD image can be used as a tile, and by setting the transparent color index of the tile image with imagecolortransparent(), a tile allows certain parts of the underlying area to shine through can be created.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagesettile","name":"imagesettile","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"resource","var":"$tile","beh":0,"desc":"The image resource to be used as a tile."}],"ret_type":"bool"}]},"imagestring":{"desc":"Draw a string horizontally","long_desc":"Draws a string at the given coordinates.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagestring","name":"imagestring","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$font","beh":0,"desc":"Can be 1, 2, 3, 4, 5 for built-in fonts in latin2 encoding (where higher numbers corresponding to larger fonts) or any of your own font identifiers registered with imageloadfont()."},{"type":"int","var":"$x","beh":1,"desc":"x-coordinate of the upper left corner."},{"type":"int","var":"$y","beh":1,"desc":"y-coordinate of the upper left corner."},{"type":"string","var":"$string","beh":1,"desc":"The string to be written."},{"type":"int","var":"$color","beh":1,"desc":"A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imagestringup":{"desc":"Draw a string vertically","long_desc":"Draws a string vertically at the given coordinates.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagestringup","name":"imagestringup","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"int","var":"$font","beh":0,"desc":"Can be 1, 2, 3, 4, 5 for built-in fonts in latin2 encoding (where higher numbers corresponding to larger fonts) or any of your own font identifiers registered with imageloadfont()."},{"type":"int","var":"$x","beh":1,"desc":"x-coordinate of the bottom left corner."},{"type":"int","var":"$y","beh":1,"desc":"y-coordinate of the bottom left corner."},{"type":"string","var":"$string","beh":1,"desc":"The string to be written."},{"type":"int","var":"$color","beh":1,"desc":"A color identifier created with imagecolorallocate()."}],"ret_type":"bool"}]},"imagesx":{"desc":"Get image width","long_desc":"Returns the width of the given image resource.","ver":"PHP 4, PHP 5","ret_desc":"Return the width of the image or FALSE on errors.","seealso":[],"url":"function.imagesx","name":"imagesx","params":[{"list":[],"ret_type":"int"}]},"imagesy":{"desc":"Get image height","long_desc":"Returns the height of the given image resource.","ver":"PHP 4, PHP 5","ret_desc":"Return the height of the image or FALSE on errors.","seealso":[],"url":"function.imagesy","name":"imagesy","params":[{"list":[],"ret_type":"int"}]},"imagetruecolortopalette":{"desc":"Convert a true color image to a palette image","long_desc":"imagetruecolortopalette() converts a truecolor image to a palette image. The code for this function was originally drawn from the Independent JPEG Group library code, which is excellent. The code has been modified to preserve as much alpha channel information as possible in the resulting palette, in addition to preserving colors as well as possible. This does not work as well as might be hoped. It is usually best to simply produce a truecolor output image instead, which guarantees the highest output quality.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagetruecolortopalette","name":"imagetruecolortopalette","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"bool","var":"$dither","beh":0,"desc":"Indicates if the image should be dithered - if it is TRUE then dithering will be used which will result in a more speckled image but with better color approximation."},{"type":"int","var":"$ncolors","beh":1,"desc":"Sets the maximum number of colors that should be retained in the palette."}],"ret_type":"bool"}]},"imagettfbbox":{"desc":"Give the bounding box of a text using TrueType fonts","long_desc":"This function calculates and returns the bounding box in pixels for a TrueType text.","ver":"PHP 4, PHP 5","ret_desc":"imagettfbbox() returns an array with 8 elements representing four points making the bounding box of the text on success and FALSE on error.","seealso":[],"url":"function.imagettfbbox","name":"imagettfbbox","params":[{"list":[{"type":"float","var":"$size","beh":0,"desc":"The font size."},{"type":"float","var":"$angle","beh":0,"desc":"Angle in degrees in which text will be measured."},{"type":"string","var":"$fontfile","beh":1,"desc":"The name of the TrueType font file (can be a URL). Depending on which version of the GD library that PHP is using, it may attempt to search for files that do not begin with a leading '\/' by appending '.ttf' to the filename and searching along a library-defined font path."},{"type":"string","var":"$text","beh":1,"desc":"The string to be measured."}],"ret_type":"array"}]},"imagettftext":{"desc":"Write text to the image using TrueType fonts","long_desc":"Writes the given text into the image using TrueType fonts.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array with 8 elements representing four points making the bounding box of the text. The order of the points is lower left, lower right, upper right, upper left. The points are relative to the text regardless of the angle, so \"upper left\" means in the top left-hand corner when you see the text horizontally. Returns FALSE on error.","seealso":[],"url":"function.imagettftext","name":"imagettftext","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"float","var":"$size","beh":0,"desc":"The font size. Depending on your version of GD, this should be specified as the pixel size (GD1) or point size (GD2)."},{"type":"float","var":"$angle","beh":1,"desc":"The angle in degrees, with 0 degrees being left-to-right reading text. Higher values represent a counter-clockwise rotation. For example, a value of 90 would result in bottom-to-top reading text."},{"type":"int","var":"$x","beh":1,"desc":"The coordinates given by x and y will define the basepoint of the first character (roughly the lower-left corner of the character). This is different from the imagestring(), where x and y define the upper-left corner of the first character. For example, \"top left\" is 0, 0."},{"type":"int","var":"$y","beh":1,"desc":"The y-ordinate. This sets the position of the fonts baseline, not the very bottom of the character."},{"type":"int","var":"$color","beh":1,"desc":"The color index. Using the negative of a color index has the effect of turning off antialiasing. See imagecolorallocate()."},{"type":"string","var":"$fontfile","beh":1,"desc":"The path to the TrueType font you wish to use. Depending on which version of the GD library PHP is using, when fontfile does not begin with a leading \/ then .ttf will be appended to the filename and the library will attempt to search for that filename along a library-defined font path. When using versions of the GD library lower than 2.0.18, a space character, rather than a semicolon, was used as the 'path separator' for different font files. Unintentional use of this feature will result in the warning message: Warning: Could not find\/open font. For these affected versions, the only solution is moving the font to a path which does not contain spaces. In many cases where a font resides in the same directory as the script using it the following trick will alleviate any include problems."},{"type":"string","var":"$text","beh":1,"desc":"The text string in UTF-8 encoding. May include decimal numeric character references (of the form: &#8364;) to access characters in a font beyond position 127. The hexadecimal format (like &#xA9;) is supported. Strings in UTF-8 encoding can be passed directly. Named entities, such as &copy;, are not supported. Consider using html_entity_decode() to decode these named entities into UTF-8 strings (html_entity_decode() supports this as of PHP 5.0.0). If a character is used in the string which is not supported by the font, a hollow rectangle will replace the character."}],"ret_type":"array"}]},"imagetypes":{"desc":"Return the image types supported by this PHP build","long_desc":"Returns the image types supported by the current PHP installation.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns a bit-field corresponding to the image formats supported by the version of GD linked into PHP. The following bits are returned, IMG_GIF | IMG_JPG | IMG_PNG | IMG_WBMP | IMG_XPM.","url":"function.imagetypes","name":"imagetypes","params":[{"list":[],"ret_type":"int"}]},"imagewbmp":{"desc":"Output image to browser or file","long_desc":"imagewbmp() outputs or save a WBMP version of the given image.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imagewbmp","name":"imagewbmp","params":[{"list":[{"type":"resource","var":"$image","beh":1,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"string","var":"$filename","beh":1,"desc":"The path to save the file to. If not set or NULL, the raw image stream will be outputted directly."},{"type":"int","var":"$foreground","beh":1,"desc":"You can set the foreground color with this parameter by setting an identifier obtained from imagecolorallocate(). The default foreground color is black."}],"ret_type":"bool"}]},"imagexbm":{"desc":"Output XBM image to browser or file","long_desc":"Outputs or save an XBM version of the given image.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imagexbm","name":"imagexbm","params":[{"list":[{"type":"resource","var":"$image","beh":0,"desc":"An image resource, returned by one of the image creation functions, such as imagecreatetruecolor()."},{"type":"string","var":"$filename","beh":1,"desc":"The path to save the file to. If not set or NULL, the raw image stream will be outputted directly."},{"type":"int","var":"$foreground","beh":1,"desc":"You can set the foreground color with this parameter by setting an identifier obtained from imagecolorallocate(). The default foreground color is black."}],"ret_type":"bool"}]},"imap_8bit":{"desc":"Convert an 8bit string to a quoted-printable string","long_desc":"Convert an 8bit string to a quoted-printable string (according to \u00bb\u00a0RFC2045, section 6.7).","ver":"PHP 4, PHP 5","ret_desc":"Returns a quoted-printable string.","seealso":[],"url":"function.imap-8bit","name":"imap_8bit","params":[{"list":[],"ret_type":"string"}]},"imap_alerts":{"desc":"Returns all IMAP alert messages that have occurred","long_desc":"Returns all of the IMAP alert messages generated since the last imap_alerts() call, or the beginning of the page. When imap_alerts() is called, the alert stack is subsequently cleared. The IMAP specification requires that these messages be passed to the user.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of all of the IMAP alert messages generated or FALSE if no alert messages are available.","seealso":[],"url":"function.imap-alerts","name":"imap_alerts","params":[{"list":[],"ret_type":"array"}]},"imap_append":{"desc":"Append a string message to a specified mailbox","long_desc":"Appends a string message to the specified mailbox.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imap-append","name":"imap_append","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":1,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$mailbox","beh":1,"desc":"The mailbox name, see imap_open() for more information"},{"type":"string","var":"$message","beh":1,"desc":"The message to be append, as a string When talking to the Cyrus IMAP server, you must use \"\\r\\n\" as your end-of-line terminator instead of \"\\n\" or the operation will fail"},{"type":"string","var":"$options","beh":1,"desc":"If provided, the options will also be written to the mailbox","def":"NULL"},{"type":"string","var":"$internal_date","beh":1,"desc":"If this parameter is set, it will set the INTERNALDATE on the appended message. The parameter should be a date string that conforms to the rfc2060 specifications for a date_time value.","def":"NULL"}],"ret_type":"bool"}]},"imap_base64":{"desc":"Decode BASE64 encoded text","long_desc":"Decodes the given BASE-64 encoded text.","ver":"PHP 4, PHP 5","ret_desc":"Returns the decoded message as a string.","seealso":[],"url":"function.imap-base64","name":"imap_base64","params":[{"list":[],"ret_type":"string"}]},"imap_binary":{"desc":"Convert an 8bit string to a base64 string","long_desc":"Convert an 8bit string to a base64 string according to \u00bb\u00a0RFC2045, Section 6.8.","ver":"PHP 4, PHP 5","ret_desc":"Returns a base64 encoded string.","seealso":[],"url":"function.imap-binary","name":"imap_binary","params":[{"list":[],"ret_type":"string"}]},"imap_body":{"desc":"Read the message body","long_desc":"imap_body() returns the body of the message, numbered msg_number in the current mailbox. imap_body() will only return a verbatim copy of the message body. To extract single parts of a multipart MIME-encoded message you have to use imap_fetchstructure() to analyze its structure and imap_fetchbody() to extract a copy of a single body component.","ver":"PHP 4, PHP 5","ret_desc":"Returns the body of the specified message, as a string.","url":"function.imap-body","name":"imap_body","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"int","var":"$msg_number","beh":1,"desc":"The message number"},{"type":"int","var":"$options","beh":1,"desc":"The optional options are a bit mask with one or more of the following:","def":0}],"ret_type":"string"}]},"imap_bodystruct":{"desc":"Read the structure of a specified body section of a specific message","long_desc":"Read the structure of a specified body section of a specific message.","ver":"PHP 4, PHP 5","ret_desc":"Returns the information in an object, for a detailed description of the object structure and properties see imap_fetchstructure().","seealso":[],"url":"function.imap-bodystruct","name":"imap_bodystruct","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"int","var":"$msg_number","beh":0,"desc":"The message number"},{"type":"string","var":"$section","beh":1,"desc":"The body section to read"}],"ret_type":"object"}]},"imap_check":{"desc":"Check current mailbox","long_desc":"Checks information about the current mailbox.","ver":"PHP 4, PHP 5","ret_desc":"Returns the information in an object with following properties:","url":"function.imap-check","name":"imap_check","params":[{"list":[],"ret_type":"object"}]},"imap_clearflag_full":{"desc":"Clears flags on messages","long_desc":"This function causes a store to delete the specified flag to the flags set for the messages in the specified sequence.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imap-clearflag-full","name":"imap_clearflag_full","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$sequence","beh":1,"desc":"A sequence of message numbers. You can enumerate desired messages with the X,Y syntax, or retrieve all messages within an interval with the X:Y syntax"},{"type":"string","var":"$flag","beh":1,"desc":"The flags which you can unset are \"\\\\Seen\", \"\\\\Answered\", \"\\\\Flagged\", \"\\\\Deleted\", and \"\\\\Draft\" (as defined by \u00bb\u00a0RFC2060)"},{"type":"int","var":"$options","beh":1,"desc":"options are a bit mask and may contain the single option:","def":0}],"ret_type":"bool"}]},"imap_close":{"desc":"Close an IMAP stream","long_desc":"Closes the imap stream.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imap-close","name":"imap_close","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"int","var":"$flag","beh":0,"desc":"If set to CL_EXPUNGE, the function will silently expunge the mailbox before closing, removing all messages marked for deletion. You can achieve the same thing by using imap_expunge()","def":0}],"ret_type":"bool"}]},"imap_create":{"desc":"Alias of imap_createmailbox()","long_desc":"This function is an alias of: imap_createmailbox().","ver":"PHP 4, PHP 5","url":"function.imap-create","name":"imap_create","params":[]},"imap_createmailbox":{"desc":"Create a new mailbox","long_desc":"Creates a new mailbox specified by mailbox.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imap-createmailbox","name":"imap_createmailbox","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$mailbox","beh":0,"desc":"The mailbox name, see imap_open() for more information. Names containing international characters should be encoded by imap_utf7_encode()"}],"ret_type":"bool"}]},"imap_delete":{"desc":"Mark a message for deletion from current mailbox","long_desc":"Marks messages listed in msg_number for deletion. Messages marked for deletion will stay in the mailbox until either imap_expunge() is called or imap_close() is called with the optional parameter CL_EXPUNGE.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE.","seealso":[],"url":"function.imap-delete","name":"imap_delete","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"int","var":"$msg_number","beh":1,"desc":"The message number"},{"type":"int","var":"$options","beh":1,"desc":"You can set the FT_UID which tells the function to treat the msg_number argument as an UID.","def":0}],"ret_type":"bool"}]},"imap_deletemailbox":{"desc":"Delete a mailbox","long_desc":"Deletes the specified mailbox.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imap-deletemailbox","name":"imap_deletemailbox","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$mailbox","beh":0,"desc":"The mailbox name, see imap_open() for more information"}],"ret_type":"bool"}]},"imap_errors":{"desc":"Returns all of the IMAP errors that have occured","long_desc":"Gets all of the IMAP errors (if any) that have occurred during this page request or since the error stack was reset. When imap_errors() is called, the error stack is subsequently cleared.","ver":"PHP 4, PHP 5","ret_desc":"This function returns an array of all of the IMAP error messages generated since the last imap_errors() call, or the beginning of the page. Returns FALSE if no error messages are available.","seealso":[],"url":"function.imap-errors","name":"imap_errors","params":[{"list":[],"ret_type":"array"}]},"imap_expunge":{"desc":"Delete all messages marked for deletion","long_desc":"Deletes all the messages marked for deletion by imap_delete(), imap_mail_move(), or imap_setflag_full().","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE.","url":"function.imap-expunge","name":"imap_expunge","params":[{"list":[],"ret_type":"bool"}]},"imap_fetch_overview":{"desc":"Read an overview of the information in the headers of the given message","long_desc":"This function fetches mail headers for the given sequence and returns an overview of their contents.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of objects describing one message header each. The object will only define a property if it exists. The possible properties are:","seealso":[],"url":"function.imap-fetch-overview","name":"imap_fetch_overview","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$sequence","beh":1,"desc":"A message sequence description. You can enumerate desired messages with the X,Y syntax, or retrieve all messages within an interval with the X:Y syntax"},{"type":"int","var":"$options","beh":1,"desc":"sequence will contain a sequence of message indices or UIDs, if this parameter is set to FT_UID.","def":0}],"ret_type":"array"}]},"imap_fetchbody":{"desc":"Fetch a particular section of the body of the message","long_desc":"Fetch of a particular section of the body of the specified messages. Body parts are not decoded by this function.","ver":"PHP 4, PHP 5","ret_desc":"Returns a particular section of the body of the specified messages as a text string.","seealso":[],"url":"function.imap-fetchbody","name":"imap_fetchbody","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"int","var":"$msg_number","beh":1,"desc":"The message number"},{"type":"string","var":"$section","beh":1,"desc":"The part number. It is a string of integers delimited by period which index into a body part list as per the IMAP4 specification"},{"type":"int","var":"$options","beh":1,"desc":"A bitmask with one or more of the following:","def":0}],"ret_type":"string"}]},"imap_fetchheader":{"desc":"Returns header for a message","long_desc":"This function causes a fetch of the complete, unfiltered \u00bb\u00a0RFC2822 format header of the specified message.","ver":"PHP 4, PHP 5","ret_desc":"Returns the header of the specified message as a text string.","seealso":[],"url":"function.imap-fetchheader","name":"imap_fetchheader","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"int","var":"$msg_number","beh":1,"desc":"The message number"},{"type":"int","var":"$options","beh":1,"desc":"The possible options are:","def":0}],"ret_type":"string"}]},"imap_fetchmime":{"desc":"Fetch MIME headers for a particular section of the message","long_desc":"Fetch the MIME headers of a particular section of the body of the specified messages.","ver":"PHP 5 >= 5.3.6","ret_desc":"Returns the MIME headers of a particular section of the body of the specified messages as a text string.","seealso":[],"url":"function.imap-fetchmime","name":"imap_fetchmime","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"int","var":"$msg_number","beh":1,"desc":"The message number"},{"type":"string","var":"$section","beh":1,"desc":"The part number. It is a string of integers delimited by period which index into a body part list as per the IMAP4 specification"},{"type":"int","var":"$options","beh":1,"desc":"A bitmask with one or more of the following:","def":0}],"ret_type":"string"}]},"imap_fetchstructure":{"desc":"Read the structure of a particular message","long_desc":"Fetches all the structured information for a given message.","ver":"PHP 4, PHP 5","ret_desc":"Returns an object includes the envelope, internal date, size, flags and body structure along with a similar object for each mime attachment. The structure of the returned objects is as follows:","seealso":[],"url":"function.imap-fetchstructure","name":"imap_fetchstructure","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"int","var":"$msg_number","beh":1,"desc":"The message number"},{"type":"int","var":"$options","beh":1,"desc":"This optional parameter only has a single option, FT_UID, which tells the function to treat the msg_number argument as a UID.","def":0}],"ret_type":"object"}]},"imap_fetchtext":{"desc":"Alias of imap_body()","long_desc":"This function is an alias of: imap_body().","ver":"PHP 4, PHP 5","url":"function.imap-fetchtext","name":"imap_fetchtext","params":[]},"imap_gc":{"desc":"Clears IMAP cache","long_desc":"Purges the cache of entries of a specific type.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.imap-gc","name":"imap_gc","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"int","var":"$caches","beh":0,"desc":"Specifies the cache to purge. It may one or a combination of the following constants: IMAP_GC_ELT (message cache elements), IMAP_GC_ENV (enveloppe and bodies), IMAP_GC_TEXTS (texts)."}],"ret_type":"bool"}]},"imap_get_quota":{"desc":"Retrieve the quota level settings, and usage statics per mailbox","long_desc":"Retrieve the quota level settings, and usage statics per mailbox. For a non-admin user version of this function, please see the imap_get_quotaroot() function of PHP.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns an array with integer values limit and usage for the given mailbox. The value of limit represents the total amount of space allowed for this mailbox. The usage value represents the mailboxes current level of capacity. Will return FALSE in the case of failure.","seealso":[],"url":"function.imap-get-quota","name":"imap_get_quota","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$quota_root","beh":0,"desc":"quota_root should normally be in the form of user.name where name is the mailbox you wish to retrieve information about."}],"ret_type":"array"}]},"imap_get_quotaroot":{"desc":"Retrieve the quota settings per user","long_desc":"Retrieve the quota settings per user. The limit value represents the total amount of space allowed for this user's total mailbox usage. The usage value represents the user's current total mailbox capacity.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns an array of integer values pertaining to the specified user mailbox. All values contain a key based upon the resource name, and a corresponding array with the usage and limit values within.","seealso":[],"url":"function.imap-get-quotaroot","name":"imap_get_quotaroot","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$quota_root","beh":0,"desc":"quota_root should normally be in the form of which mailbox (i.e. INBOX)."}],"ret_type":"array"}]},"imap_getacl":{"desc":"Gets the ACL for a given mailbox","long_desc":"Gets the ACL for a given mailbox.","ver":"PHP 5","ret_desc":"Returns an associative array of \"folder\" => \"acl\" pairs.","seealso":[],"url":"function.imap-getacl","name":"imap_getacl","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$mailbox","beh":0,"desc":"The mailbox name, see imap_open() for more information"}],"ret_type":"array"}]},"imap_getmailboxes":{"desc":"Read the list of mailboxes, returning detailed information on each one","long_desc":"Gets information on the mailboxes.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of objects containing mailbox information. Each object has the attributes name, specifying the full name of the mailbox; delimiter, which is the hierarchy delimiter for the part of the hierarchy this mailbox is in; and attributes. Attributes is a bitmask that can be tested against:","seealso":[],"url":"function.imap-getmailboxes","name":"imap_getmailboxes","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$ref","beh":0,"desc":"ref should normally be just the server specification as described in imap_open()"},{"type":"string","var":"$pattern","beh":1,"desc":"Specifies where in the mailbox hierarchy to start searching. There are two special characters you can pass as part of the pattern: '*' and '%'. '*' means to return all mailboxes. If you pass pattern as '*', you will get a list of the entire mailbox hierarchy. '%' means to return the current level only. '%' as the pattern parameter will return only the top level mailboxes; '~\/mail\/%' on UW_IMAPD will return every mailbox in the ~\/mail directory, but none in subfolders of that directory."}],"ret_type":"array"}]},"imap_getsubscribed":{"desc":"List all the subscribed mailboxes","long_desc":"Gets information about the subscribed mailboxes. Identical to imap_getmailboxes(), except that it only returns mailboxes that the user is subscribed to.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of objects containing mailbox information. Each object has the attributes name, specifying the full name of the mailbox; delimiter, which is the hierarchy delimiter for the part of the hierarchy this mailbox is in; and attributes. Attributes is a bitmask that can be tested against:","url":"function.imap-getsubscribed","name":"imap_getsubscribed","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$ref","beh":0,"desc":"ref should normally be just the server specification as described in imap_open()"},{"type":"string","var":"$pattern","beh":1,"desc":"Specifies where in the mailbox hierarchy to start searching. There are two special characters you can pass as part of the pattern: '*' and '%'. '*' means to return all mailboxes. If you pass pattern as '*', you will get a list of the entire mailbox hierarchy. '%' means to return the current level only. '%' as the pattern parameter will return only the top level mailboxes; '~\/mail\/%' on UW_IMAPD will return every mailbox in the ~\/mail directory, but none in subfolders of that directory."}],"ret_type":"array"}]},"imap_header":{"desc":"Alias of imap_headerinfo()","long_desc":"This function is an alias of: imap_headerinfo().","ver":"PHP 4, PHP 5","url":"function.imap-header","name":"imap_header","params":[]},"imap_headerinfo":{"desc":"Read the header of the message","long_desc":"Gets information about the given message number by reading its headers.","ver":"PHP 4, PHP 5","ret_desc":"Returns the information in an object with following properties:","seealso":[],"url":"function.imap-headerinfo","name":"imap_headerinfo","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":1,"desc":"An IMAP stream returned by imap_open()."},{"type":"int","var":"$msg_number","beh":1,"desc":"The message number"},{"type":"int","var":"$fromlength","beh":1,"desc":"Number of characters for the fetchfrom property. Must be greater than or equal to zero.","def":0},{"type":"int","var":"$subjectlength","beh":1,"desc":"Number of characters for the fetchsubject property Must be greater than or equal to zero.","def":0},{"type":"string","var":"$defaulthost","beh":1,"desc":"","def":"NULL"}],"ret_type":"object"}]},"imap_headers":{"desc":"Returns headers for all messages in a mailbox","long_desc":"Returns headers for all messages in a mailbox.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of string formatted with header info. One element per mail message.","url":"function.imap-headers","name":"imap_headers","params":[{"list":[],"ret_type":"array"}]},"imap_last_error":{"desc":"Gets the last IMAP error that occurred during this page request","long_desc":"Gets the full text of the last IMAP error message that occurred on the current page. The error stack is untouched; calling imap_last_error() subsequently, with no intervening errors, will return the same error.","ver":"PHP 4, PHP 5","ret_desc":"Returns the full text of the last IMAP error message that occurred on the current page. Returns FALSE if no error messages are available.","seealso":[],"url":"function.imap-last-error","name":"imap_last_error","params":[{"list":[],"ret_type":"string"}]},"imap_list":{"desc":"Read the list of mailboxes","long_desc":"Read the list of mailboxes.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array containing the names of the mailboxes.","seealso":[],"url":"function.imap-list","name":"imap_list","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$ref","beh":0,"desc":"ref should normally be just the server specification as described in imap_open()."},{"type":"string","var":"$pattern","beh":1,"desc":"Specifies where in the mailbox hierarchy to start searching. There are two special characters you can pass as part of the pattern: '*' and '%'. '*' means to return all mailboxes. If you pass pattern as '*', you will get a list of the entire mailbox hierarchy. '%' means to return the current level only. '%' as the pattern parameter will return only the top level mailboxes; '~\/mail\/%' on UW_IMAPD will return every mailbox in the ~\/mail directory, but none in subfolders of that directory."}],"ret_type":"array"}]},"imap_listmailbox":{"desc":"Alias of imap_list()","long_desc":"This function is an alias of: imap_list().","ver":"PHP 4, PHP 5","url":"function.imap-listmailbox","name":"imap_listmailbox","params":[]},"imap_listscan":{"desc":"Returns the list of mailboxes that matches the given text","long_desc":"Returns an array containing the names of the mailboxes that have content in the text of the mailbox. This function is similar to imap_listmailbox(), but it will additionally check for the presence of the string content inside the mailbox data.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array containing the names of the mailboxes that have content in the text of the mailbox.","seealso":[],"url":"function.imap-listscan","name":"imap_listscan","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$ref","beh":0,"desc":"ref should normally be just the server specification as described in imap_open()"},{"type":"string","var":"$pattern","beh":1,"desc":"Specifies where in the mailbox hierarchy to start searching. There are two special characters you can pass as part of the pattern: '*' and '%'. '*' means to return all mailboxes. If you pass pattern as '*', you will get a list of the entire mailbox hierarchy. '%' means to return the current level only. '%' as the pattern parameter will return only the top level mailboxes; '~\/mail\/%' on UW_IMAPD will return every mailbox in the ~\/mail directory, but none in subfolders of that directory."},{"type":"string","var":"$content","beh":1,"desc":"The searched string"}],"ret_type":"array"}]},"imap_listsubscribed":{"desc":"Alias of imap_lsub()","long_desc":"This function is an alias of: imap_lsub().","ver":"PHP 4, PHP 5","url":"function.imap-listsubscribed","name":"imap_listsubscribed","params":[]},"imap_lsub":{"desc":"List all the subscribed mailboxes","long_desc":"Gets an array of all the mailboxes that you have subscribed.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of all the subscribed mailboxes.","seealso":[],"url":"function.imap-lsub","name":"imap_lsub","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$ref","beh":0,"desc":"ref should normally be just the server specification as described in imap_open()"},{"type":"string","var":"$pattern","beh":1,"desc":"Specifies where in the mailbox hierarchy to start searching. There are two special characters you can pass as part of the pattern: '*' and '%'. '*' means to return all mailboxes. If you pass pattern as '*', you will get a list of the entire mailbox hierarchy. '%' means to return the current level only. '%' as the pattern parameter will return only the top level mailboxes; '~\/mail\/%' on UW_IMAPD will return every mailbox in the ~\/mail directory, but none in subfolders of that directory."}],"ret_type":"array"}]},"imap_mail":{"desc":"Send an email message","long_desc":"This function allows sending of emails with correct handling of Cc and Bcc receivers. The parameters to, cc and bcc are all strings and are all parsed as \u00bb\u00a0RFC822 address lists.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imap-mail","name":"imap_mail","params":[{"list":[{"type":"string","var":"$to","beh":1,"desc":"The receiver"},{"type":"string","var":"$subject","beh":1,"desc":"The mail subject"},{"type":"string","var":"$message","beh":1,"desc":"The mail body"},{"type":"string","var":"$additional_headers","beh":1,"desc":"As string with additional headers to be set on the mail","def":"NULL"},{"type":"string","var":"$cc","beh":1,"desc":"","def":"NULL"},{"type":"string","var":"$bcc","beh":1,"desc":"The receivers specified in bcc will get the mail, but are excluded from the headers.","def":"NULL"},{"type":"string","var":"$rpath","beh":1,"desc":"Use this parameter to specify return path upon mail delivery failure. This is useful when using PHP as a mail client for multiple users.","def":"NULL"}],"ret_type":"bool"}]},"imap_mail_compose":{"desc":"Create a MIME message based on given envelope and body sections","long_desc":"Create a MIME message based on the given envelope and body sections.","ver":"PHP 4, PHP 5","ret_desc":"Returns the MIME message.","url":"function.imap-mail-compose","name":"imap_mail_compose","params":[{"list":[{"type":"array","var":"$envelope","beh":0,"desc":"An associative array of headers fields. Valid keys are: \"remail\", \"return_path\", \"date\", \"from\", \"reply_to\", \"in_reply_to\", \"subject\", \"to\", \"cc\", \"bcc\", \"message_id\" and \"custom_headers\" (which contains associative array of other headers)."},{"type":"array","var":"$body","beh":0,"desc":"An indexed array of bodies A body is an associative array which can consist of the following keys: \"type\", \"encoding\", \"charset\", \"type.parameters\", \"subtype\", \"id\", \"description\", \"disposition.type\", \"disposition\", \"contents.data\", \"lines\", \"bytes\" and \"md5\"."}],"ret_type":"string"}]},"imap_mail_copy":{"desc":"Copy specified messages to a mailbox","long_desc":"Copies mail messages specified by msglist to specified mailbox.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imap-mail-copy","name":"imap_mail_copy","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$msglist","beh":1,"desc":"msglist is a range not just message numbers (as described in \u00bb\u00a0RFC2060)."},{"type":"string","var":"$mailbox","beh":1,"desc":"The mailbox name, see imap_open() for more information"},{"type":"int","var":"$options","beh":1,"desc":"options is a bitmask of one or more of","def":0}],"ret_type":"bool"}]},"imap_mail_move":{"desc":"Move specified messages to a mailbox","long_desc":"Moves mail messages specified by msglist to the specified mailbox.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imap-mail-move","name":"imap_mail_move","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$msglist","beh":1,"desc":"msglist is a range not just message numbers (as described in \u00bb\u00a0RFC2060)."},{"type":"string","var":"$mailbox","beh":1,"desc":"The mailbox name, see imap_open() for more information"},{"type":"int","var":"$options","beh":1,"desc":"options is a bitmask and may contain the single option:","def":0}],"ret_type":"bool"}]},"imap_mailboxmsginfo":{"desc":"Get information about the current mailbox","long_desc":"Checks the current mailbox status on the server. It is similar to imap_status(), but will additionally sum up the size of all messages in the mailbox, which will take some additional time to execute.","ver":"PHP 4, PHP 5","ret_desc":"Returns the information in an object with following properties:","url":"function.imap-mailboxmsginfo","name":"imap_mailboxmsginfo","params":[{"list":[],"ret_type":"object"}]},"imap_mime_header_decode":{"desc":"Decode MIME header elements","long_desc":"Decodes MIME message header extensions that are non ASCII text (see \u00bb\u00a0RFC2047).","ver":"PHP 4, PHP 5","ret_desc":"The decoded elements are returned in an array of objects, where each object has two properties, charset and text.","seealso":[],"url":"function.imap-mime-header-decode","name":"imap_mime_header_decode","params":[{"list":[],"ret_type":"array"}]},"imap_msgno":{"desc":"Gets the message sequence number for the given UID","long_desc":"Returns the message sequence number for the given uid. This function is the inverse of imap_uid().","ver":"PHP 4, PHP 5","ret_desc":"Returns the message sequence number for the given uid.","seealso":[],"url":"function.imap-msgno","name":"imap_msgno","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"int","var":"$uid","beh":0,"desc":"The message UID"}],"ret_type":"int"}]},"imap_num_msg":{"desc":"Gets the number of messages in the current mailbox","long_desc":"Gets the number of messages in the current mailbox.","ver":"PHP 4, PHP 5","ret_desc":"Return the number of messages in the current mailbox, as an integer.","seealso":[],"url":"function.imap-num-msg","name":"imap_num_msg","params":[{"list":[],"ret_type":"int"}]},"imap_num_recent":{"desc":"Gets the number of recent messages in current mailbox","long_desc":"Gets the number of recent messages in the current mailbox.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of recent messages in the current mailbox, as an integer.","seealso":[],"url":"function.imap-num-recent","name":"imap_num_recent","params":[{"list":[],"ret_type":"int"}]},"imap_open":{"desc":"Open an IMAP stream to a mailbox","long_desc":"Opens an IMAP stream to a mailbox. This function can also be used to open streams to POP3 and NNTP servers, but some functions and features are only available on IMAP servers.","ver":"PHP 4, PHP 5","ret_desc":"Returns an IMAP stream on success or FALSE on error.","seealso":[],"url":"function.imap-open","name":"imap_open","params":[{"list":[{"type":"string","var":"$mailbox","beh":1,"desc":"A mailbox name consists of a server and a mailbox path on this server. The special name INBOX stands for the current users personal mailbox. Mailbox names that contain international characters besides those in the printable ASCII space have to be encoded width imap_utf7_encode(). The server part, which is enclosed in '{' and '}', consists of the servers name or ip address, an optional port (prefixed by ':'), and an optional protocol specification (prefixed by '\/'). The server part is mandatory in all mailbox parameters. All names which start with { are remote names, and are in the form \"{\" remote_system_name [\":\" port] [flags] \"}\" [mailbox_name] where:"},{"type":"string","var":"$username","beh":1,"desc":"The user name"},{"type":"string","var":"$password","beh":1,"desc":"The password associated with the username"},{"type":"int","var":"$options","beh":1,"desc":"The options are a bit mask with one or more of the following:","def":"NIL"},{"type":"int","var":"$n_retries","beh":1,"desc":"Number of maximum connect attempts","def":0},{"type":"array","var":"$params","beh":1,"desc":"Connection parameters, the following (string) keys maybe used to set one or more connection parameters:","def":"NULL"}],"ret_type":"resource"}]},"imap_ping":{"desc":"Check if the IMAP stream is still active","long_desc":"imap_ping() pings the stream to see if it's still active. It may discover new mail; this is the preferred method for a periodic \"new mail check\" as well as a \"keep alive\" for servers which have inactivity timeout.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the stream is still alive, FALSE otherwise.","url":"function.imap-ping","name":"imap_ping","params":[{"list":[],"ret_type":"bool"}]},"imap_qprint":{"desc":"Convert a quoted-printable string to an 8 bit string","long_desc":"Convert a quoted-printable string to an 8 bit string according to \u00bb\u00a0RFC2045, section 6.7.","ver":"PHP 4, PHP 5","ret_desc":"Returns an 8 bits string.","seealso":[],"url":"function.imap-qprint","name":"imap_qprint","params":[{"list":[],"ret_type":"string"}]},"imap_rename":{"desc":"Alias of imap_renamemailbox()","long_desc":"This function is an alias of: imap_renamemailbox().","ver":"PHP 4, PHP 5","url":"function.imap-rename","name":"imap_rename","params":[]},"imap_renamemailbox":{"desc":"Rename an old mailbox to new mailbox","long_desc":"This function renames on old mailbox to new mailbox (see imap_open() for the format of mbox names).","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imap-renamemailbox","name":"imap_renamemailbox","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$old_mbox","beh":0,"desc":"The old mailbox name, see imap_open() for more information"},{"type":"string","var":"$new_mbox","beh":1,"desc":"The new mailbox name, see imap_open() for more information"}],"ret_type":"bool"}]},"imap_reopen":{"desc":"Reopen IMAP stream to new mailbox","long_desc":"Reopens the specified stream to a new mailbox on an IMAP or NNTP server.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the stream is reopened, FALSE otherwise.","url":"function.imap-reopen","name":"imap_reopen","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":1,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$mailbox","beh":1,"desc":"The mailbox name, see imap_open() for more information"},{"type":"int","var":"$options","beh":1,"desc":"The options are a bit mask with one or more of the following:","def":0},{"type":"int","var":"$n_retries","beh":1,"desc":"Number of maximum connect attempts","def":0}],"ret_type":"bool"}]},"imap_rfc822_parse_adrlist":{"desc":"Parses an address string","long_desc":"Parses the address string as defined in \u00bb\u00a0RFC2822 and for each address.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of objects. The objects properties are:","seealso":[],"url":"function.imap-rfc822-parse-adrlist","name":"imap_rfc822_parse_adrlist","params":[{"list":[{"type":"string","var":"$address","beh":0,"desc":"A string containing addresses"},{"type":"string","var":"$default_host","beh":0,"desc":"The default host name"}],"ret_type":"array"}]},"imap_rfc822_parse_headers":{"desc":"Parse mail headers from a string","long_desc":"Gets an object of various header elements, similar to imap_header().","ver":"PHP 4, PHP 5","ret_desc":"Returns an object similar to the one returned by imap_header(), except for the flags and other properties that come from the IMAP server.","seealso":[],"url":"function.imap-rfc822-parse-headers","name":"imap_rfc822_parse_headers","params":[{"list":[{"type":"string","var":"$headers","beh":0,"desc":"The parsed headers data"},{"type":"string","var":"$defaulthost","beh":0,"desc":"The default host name","def":"\"UNKNOWN\""}],"ret_type":"object"}]},"imap_rfc822_write_address":{"desc":"Returns a properly formatted email address given the mailbox, host, and personal info","long_desc":"Returns a properly formatted email address as defined in \u00bb\u00a0RFC2822 given the needed information.","ver":"PHP 4, PHP 5","ret_desc":"Returns a string properly formatted email address as defined in \u00bb\u00a0RFC2822.","url":"function.imap-rfc822-write-address","name":"imap_rfc822_write_address","params":[{"list":[{"type":"string","var":"$mailbox","beh":0,"desc":"The mailbox name, see imap_open() for more information"},{"type":"string","var":"$host","beh":0,"desc":"The email host part"},{"type":"string","var":"$personal","beh":1,"desc":"The name of the account owner"}],"ret_type":"string"}]},"imap_savebody":{"desc":"Save a specific body section to a file","long_desc":"Saves a part or the whole body of the specified message.","ver":"PHP 5 >= 5.1.3","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imap-savebody","name":"imap_savebody","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":1,"desc":"An IMAP stream returned by imap_open()."},{"type":"mixed","var":"$file","beh":1,"desc":"The path to the saved file as a string, or a valid file descriptor returned by fopen()."},{"type":"int","var":"$msg_number","beh":1,"desc":"The message number"},{"type":"string","var":"$part_number","beh":1,"desc":"The part number. It is a string of integers delimited by period which index into a body part list as per the IMAP4 specification","def":"\"\""},{"type":"int","var":"$options","beh":1,"desc":"A bitmask with one or more of the following:","def":0}],"ret_type":"bool"}]},"imap_scan":{"desc":"Alias of imap_listscan()","long_desc":"This function is an alias of: imap_listscan().","ver":"PHP 4, PHP 5","url":"function.imap-scan","name":"imap_scan","params":[]},"imap_scanmailbox":{"desc":"Alias of imap_listscan()","long_desc":"This function is an alias of: imap_listscan().","ver":"PHP 4, PHP 5","url":"function.imap-scanmailbox","name":"imap_scanmailbox","params":[]},"imap_search":{"desc":"This function returns an array of messages matching the given search criteria","long_desc":"This function performs a search on the mailbox currently opened in the given IMAP stream. For example, to match all unanswered messages sent by Mom, you'd use: \"UNANSWERED FROM mom\". Searches appear to be case insensitive. This list of criteria is from a reading of the UW c-client source code and may be incomplete or inaccurate (see also \u00bb\u00a0RFC2060, section 6.4.4).","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of message numbers or UIDs.","seealso":[],"url":"function.imap-search","name":"imap_search","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":1,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$criteria","beh":1,"desc":"A string, delimited by spaces, in which the following keywords are allowed. Any multi-word arguments (e.g. FROM \"joey smith\") must be quoted. Results will match all criteria entries."},{"type":"int","var":"$options","beh":1,"desc":"Valid values for options are SE_UID, which causes the returned array to contain UIDs instead of messages sequence numbers.","def":"SE_FREE"},{"type":"string","var":"$charset","beh":1,"desc":"","def":"NIL"}],"ret_type":"array"}]},"imap_set_quota":{"desc":"Sets a quota for a given mailbox","long_desc":"Sets an upper limit quota on a per mailbox basis.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imap-set-quota","name":"imap_set_quota","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$quota_root","beh":0,"desc":"The mailbox to have a quota set. This should follow the IMAP standard format for a mailbox: user.name."},{"type":"int","var":"$quota_limit","beh":1,"desc":"The maximum size (in KB) for the quota_root"}],"ret_type":"bool"}]},"imap_setacl":{"desc":"Sets the ACL for a giving mailbox","long_desc":"Sets the ACL for a giving mailbox.","ver":"PHP 4 >= 4.0.7, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imap-setacl","name":"imap_setacl","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$mailbox","beh":0,"desc":"The mailbox name, see imap_open() for more information"},{"type":"string","var":"$id","beh":1,"desc":"The user to give the rights to."},{"type":"string","var":"$rights","beh":1,"desc":"The rights to give to the user. Passing an empty string will delete acl."}],"ret_type":"bool"}]},"imap_setflag_full":{"desc":"Sets flags on messages","long_desc":"Causes a store to add the specified flag to the flags set for the messages in the specified sequence.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imap-setflag-full","name":"imap_setflag_full","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$sequence","beh":1,"desc":"A sequence of message numbers. You can enumerate desired messages with the X,Y syntax, or retrieve all messages within an interval with the X:Y syntax"},{"type":"string","var":"$flag","beh":1,"desc":"The flags which you can set are \\Seen, \\Answered, \\Flagged, \\Deleted, and \\Draft as defined by \u00bb\u00a0RFC2060."},{"type":"int","var":"$options","beh":1,"desc":"A bit mask that may contain the single option:","def":"NIL"}],"ret_type":"bool"}]},"imap_sort":{"desc":"Gets and sort messages","long_desc":"Gets and sorts message numbers by the given parameters.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of message numbers sorted by the given parameters.","url":"function.imap-sort","name":"imap_sort","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":1,"desc":"An IMAP stream returned by imap_open()."},{"type":"int","var":"$criteria","beh":1,"desc":"Criteria can be one (and only one) of the following:"},{"type":"int","var":"$reverse","beh":1,"desc":"Set this to 1 for reverse sorting"},{"type":"int","var":"$options","beh":1,"desc":"The options are a bitmask of one or more of the following:","def":0},{"type":"string","var":"$search_criteria","beh":1,"desc":"","def":"NULL"},{"type":"string","var":"$charset","beh":1,"desc":"","def":"NIL"}],"ret_type":"array"}]},"imap_status":{"desc":"Returns status information on a mailbox","long_desc":"Gets status information about the given mailbox.","ver":"PHP 4, PHP 5","ret_desc":"This function returns an object containing status information. The object has the following properties: messages, recent, unseen, uidnext, and uidvalidity.","url":"function.imap-status","name":"imap_status","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$mailbox","beh":0,"desc":"The mailbox name, see imap_open() for more information"},{"type":"int","var":"$options","beh":1,"desc":"Valid flags are:"}],"ret_type":"object"}]},"imap_subscribe":{"desc":"Subscribe to a mailbox","long_desc":"Subscribe to a new mailbox.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imap-subscribe","name":"imap_subscribe","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$mailbox","beh":0,"desc":"The mailbox name, see imap_open() for more information"}],"ret_type":"bool"}]},"imap_thread":{"desc":"Returns a tree of threaded message","long_desc":"Gets a tree of a threaded message.","ver":"PHP 4 >= 4.0.7, PHP 5","ret_desc":"imap_thread() returns an associative array containing a tree of messages threaded by REFERENCES, or FALSE on error.","url":"function.imap-thread","name":"imap_thread","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"int","var":"$options","beh":0,"desc":"","def":"SE_FREE"}],"ret_type":"array"}]},"imap_timeout":{"desc":"Set or fetch imap timeout","long_desc":"Sets or fetches the imap timeout.","ver":"PHP 4 >= 4.3.3, PHP 5","ret_desc":"If the timeout parameter is set, this function returns TRUE on success and FALSE on failure.","url":"function.imap-timeout","name":"imap_timeout","params":[{"list":[{"type":"int","var":"$timeout_type","beh":0,"desc":"One of the following: IMAP_OPENTIMEOUT, IMAP_READTIMEOUT, IMAP_WRITETIMEOUT, or IMAP_CLOSETIMEOUT."},{"type":"int","var":"$timeout","beh":0,"desc":"The timeout, in seconds.","def":-1}],"ret_type":"mixed"}]},"imap_uid":{"desc":"This function returns the UID for the given message sequence number","long_desc":"This function returns the UID for the given message sequence number. An UID is a unique identifier that will not change over time while a message sequence number may change whenever the content of the mailbox changes. This function is the inverse of imap_msgno().","ver":"PHP 4, PHP 5","ret_desc":"The UID of the given message.","seealso":[],"url":"function.imap-uid","name":"imap_uid","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"int","var":"$msg_number","beh":0,"desc":"The message number."}],"ret_type":"int"}]},"imap_undelete":{"desc":"Unmark the message which is marked deleted","long_desc":"Removes the deletion flag for a specified message, which is set by imap_delete() or imap_mail_move().","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imap-undelete","name":"imap_undelete","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"int","var":"$msg_number","beh":1,"desc":"The message number"},{"type":"int","var":"$flags","beh":1,"desc":"","def":0}],"ret_type":"bool"}]},"imap_unsubscribe":{"desc":"Unsubscribe from a mailbox","long_desc":"Unsubscribe from the specified mailbox.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.imap-unsubscribe","name":"imap_unsubscribe","params":[{"list":[{"type":"resource","var":"$imap_stream","beh":0,"desc":"An IMAP stream returned by imap_open()."},{"type":"string","var":"$mailbox","beh":0,"desc":"The mailbox name, see imap_open() for more information"}],"ret_type":"bool"}]},"imap_utf7_decode":{"desc":"Decodes a modified UTF-7 encoded string","long_desc":"Decodes modified UTF-7 text into ISO-8859-1 string. This function is needed to decode mailbox names that contain certain characters which are not in range of printable ASCII characters.","ver":"PHP 4, PHP 5","ret_desc":"Returns a string that is encoded in ISO-8859-1 and consists of the same sequence of characters in text, or FALSE if text contains invalid modified UTF-7 sequence or text contains a character that is not part of ISO-8859-1 character set.","seealso":[],"url":"function.imap-utf7-decode","name":"imap_utf7_decode","params":[{"list":[],"ret_type":"string"}]},"imap_utf7_encode":{"desc":"Converts ISO-8859-1 string to modified UTF-7 text","long_desc":"Converts data to modified UTF-7 text. This is needed to encode mailbox names that contain certain characters which are not in range of printable ASCII characters.","ver":"PHP 4, PHP 5","ret_desc":"Returns data encoded with the modified UTF-7 encoding as defined in \u00bb\u00a0RFC 2060, section 5.1.3 (original UTF-7 was defined in \u00bb\u00a0RFC1642).","seealso":[],"url":"function.imap-utf7-encode","name":"imap_utf7_encode","params":[{"list":[],"ret_type":"string"}]},"imap_utf8":{"desc":"Converts MIME-encoded text to UTF-8","long_desc":"Converts the given mime_encoded_text to UTF-8.","ver":"PHP 4, PHP 5","ret_desc":"Returns an UTF-8 encoded string.","seealso":[],"url":"function.imap-utf8","name":"imap_utf8","params":[{"list":[],"ret_type":"string"}]},"implode":{"desc":"Join array elements with a string","long_desc":"Join array elements with a glue string.","ver":"PHP 4, PHP 5","ret_desc":"Returns a string containing a string representation of all the array elements in the same order, with the glue string between each element.","seealso":[],"url":"function.implode","name":"implode","params":[{"list":[{"type":"string","var":"$glue","beh":0,"desc":"Defaults to an empty string. This is not the preferred usage of implode() as glue would be the second parameter and thus, the bad prototype would be used."},{"type":"array","var":"$pieces","beh":0,"desc":"The array of strings to implode."}],"ret_type":"string"},{"list":[],"ret_type":"string"}]},"import_request_variables":{"desc":"Import GET\/POST\/Cookie variables into the global scope","long_desc":"Imports GET\/POST\/Cookie variables into the global scope. It is useful if you disabled register_globals, but would like to see some variables in the global scope. If you're interested in importing other variables into the global scope, such as $_SERVER, consider using extract().","ver":"PHP 4 >= 4.1.0, PHP 5 < 5.4.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.import-request-variables","name":"import_request_variables","params":[{"list":[{"type":"string","var":"$types","beh":0,"desc":"Using the types parameter, you can specify which request variables to import. You can use 'G', 'P' and 'C' characters respectively for GET, POST and Cookie. These characters are not case sensitive, so you can also use any combination of 'g', 'p' and 'c'. POST includes the POST uploaded file information."},{"type":"string","var":"$prefix","beh":1,"desc":"Variable name prefix, prepended before all variable's name imported into the global scope. So if you have a GET value named \"userid\", and provide a prefix \"pref_\", then you'll get a global variable named $pref_userid."}],"ret_type":"bool"}]},"in_array":{"desc":"Checks if a value exists in an array","long_desc":"Searches haystack for needle using loose comparison unless strict is set.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if needle is found in the array, FALSE otherwise.","seealso":[],"url":"function.in-array","name":"in_array","params":[{"list":[{"type":"mixed","var":"$needle","beh":0,"desc":"The searched value."},{"type":"array","var":"$haystack","beh":1,"desc":"The array."},{"type":"bool","var":"$strict","beh":1,"desc":"If the third parameter strict is set to TRUE then the in_array() function will also check the types of the needle in the haystack.","def":"FALSE"}],"ret_type":"bool"}]},"inclued_get_data":{"desc":"Get the inclued data","long_desc":"Get the inclued data.","ver":"PECL inclued >= 0.1.0","ret_desc":"The inclued data.","seealso":[],"url":"function.inclued-get-data","name":"inclued_get_data","params":[{"list":[],"ret_type":"array"}]},"inet_ntop":{"desc":"Converts a packed internet address to a human readable representation","long_desc":"This function converts a 32bit IPv4, or 128bit IPv6 address (if PHP was built with IPv6 support enabled) into an address family appropriate string representation.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns a string representation of the address or FALSE on failure.","seealso":[],"url":"function.inet-ntop","name":"inet_ntop","params":[{"list":[],"ret_type":"string"}]},"inet_pton":{"desc":"Converts a human readable IP address to its packed in_addr representation","long_desc":"This function converts a human readable IPv4 or IPv6 address (if PHP was built with IPv6 support enabled) into an address family appropriate 32bit or 128bit binary structure.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the in_addr representation of the given address, or FALSE if a syntactically invalid address is given (for example, an IPv4 address without dots or an IPv6 address without colons).","seealso":[],"url":"function.inet-pton","name":"inet_pton","params":[{"list":[],"ret_type":"string"}]},"ingres_autocommit":{"desc":"Switch autocommit on or off","long_desc":"ingres_autocommit() is called before opening a transaction (before the first call to ingres_query() or just after a call to ingres_rollback() or ingres_commit()) to switch the autocommit mode of the server on or off (when the script begins the autocommit mode is off). When autocommit mode is on, every query is automatically committed by the server, as if ingres_commit() was called after every call to ingres_query(). To see if autocommit is enabled use, ingres_autocommit_state(). By default Ingres will rollback any uncommitted transactions at the end of a request. Use this function or ingres_commit() to ensure your data is committed to the database.","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ingres-autocommit","name":"ingres_autocommit","params":[{"list":[],"ret_type":"bool"}]},"ingres_autocommit_state":{"desc":"Test if the connection is using autocommit","long_desc":"ingres_autocommit_state() is called to determine whether the current link has autocommit enabled or not.","ver":"PECL ingres >= 2.0.0","ret_desc":"Returns TRUE if autocommit is enabled or FALSE when autocommit is disabled","seealso":[],"url":"function.ingres-autocommit-state","name":"ingres_autocommit_state","params":[{"list":[],"ret_type":"bool"}]},"ingres_charset":{"desc":"Returns the installation character set","long_desc":"ingres_charset() is called to determine the character set being used by the Ingres client, from II_CHARSETxx (where xx is the installation code).","ver":"PECL ingres >= 2.1.0","ret_desc":"Returns a string with the value for II_CHARSETxx or returns NULL if the value could not be determined.","seealso":[],"url":"function.ingres-charset","name":"ingres_charset","params":[{"list":[],"ret_type":"string"}]},"ingres_close":{"desc":"Close an Ingres database connection","long_desc":"ingres_close() closes the connection to the Ingres server that is associated with the specified link. ingres_close() is usually unnecessary, as it will not close persistent connections and all non-persistent connections are automatically closed at the end of the script.","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ingres-close","name":"ingres_close","params":[{"list":[],"ret_type":"bool"}]},"ingres_commit":{"desc":"Commit a transaction","long_desc":"ingres_commit() commits the currently open transaction, making all changes made to the database permanent. This closes the transaction. A new transaction can be opened by sending a query with ingres_query(). You can also have the server commit automatically after every query by calling ingres_autocommit() before opening the transaction. By default Ingres will roll back any uncommitted transactions at the end of a request. Use this function or ingres_autocommit() to ensure your that data is committed to the database.","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ingres-commit","name":"ingres_commit","params":[{"list":[],"ret_type":"bool"}]},"ingres_connect":{"desc":"Open a connection to an Ingres database","long_desc":"ingres_connect() opens a connection with the given Ingres database. The connection is closed when the script ends or when ingres_close() is called on this link.","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"Returns a Ingres link resource on success or FALSE on failure","seealso":[],"url":"function.ingres-connect","name":"ingres_connect","params":[{"list":[{"type":"string","var":"$database","beh":1,"desc":"The database name. Must follow the syntax: [vnode::]dbname[\/svr_class]"},{"type":"string","var":"$username","beh":1,"desc":"The Ingres user name"},{"type":"string","var":"$password","beh":1,"desc":"The password associated with username"},{"type":"array","var":"$options","beh":1,"desc":"ingres_connect() options"}],"ret_type":"resource"}]},"ingres_cursor":{"desc":"Get a cursor name for a given result resource","long_desc":"Returns a string with the active cursor name. If no cursor is active then NULL is returned.","ver":"PECL ingres >= 1.1.0","ret_desc":"Returns a string containing the active cursor name. If no cursor is active then NULL is returned.","seealso":[],"url":"function.ingres-cursor","name":"ingres_cursor","params":[{"list":[],"ret_type":"string"}]},"ingres_errno":{"desc":"Get the last Ingres error number generated","long_desc":"Returns an integer containing the last error number. If no error was reported 0 is returned. If a link resource is passed to ingres_errno() it returns the last error recorded for the link. If no link is passed, then ingres_errno() returns the last error reported using the default link. The function, ingres_errno(), should always be called after executing a database query. Calling another function before ingres_errno() is called will reset or change any error code from the last Ingres function call.","ver":"PECL ingres >= 1.1.0","ret_desc":"Returns an integer containing the last error number. If no error was reported, 0 is returned.","seealso":[],"url":"function.ingres-errno","name":"ingres_errno","params":[{"list":[],"ret_type":"int"}]},"ingres_error":{"desc":"Get a meaningful error message for the last error generated","long_desc":"Returns a string containing the last error, or NULL if no error has occurred. If a link resource is passed to ingres_error(), it returns the last error recorded for the link. If no link is passed then ingres_error() returns the last error reported using the default link. The function, ingres_error(), should always be called after executing any database query. Calling another function before ingres_error() is called will reset or change any error message from the last Ingres function call.","ver":"PECL ingres >= 1.1.0","ret_desc":"Returns a string containing the last error, or NULL if no error has occurred.","seealso":[],"url":"function.ingres-error","name":"ingres_error","params":[{"list":[],"ret_type":"string"}]},"ingres_errsqlstate":{"desc":"Get the last SQLSTATE error code generated","long_desc":"Returns a string containing the last SQLSTATE, or NULL if no error has occurred. If a link resource is passed to ingres_errsqlstate(), it returns the last error recorded for the link. If no link is passed, then ingres_errsqlstate() returns the last error reported using the default link. The function, ingres_errsqlstate(), should always be called after executing any database query. Calling another function before ingres_errsqlstate() is called will reset or change any error message from the last Ingres function call.","ver":"PECL ingres >= 1.1.0","ret_desc":"Returns a string containing the last SQLSTATE, or NULL if no error has occurred.","seealso":[],"url":"function.ingres-errsqlstate","name":"ingres_errsqlstate","params":[{"list":[],"ret_type":"string"}]},"ingres_escape_string":{"desc":"Escape special characters for use in a query","long_desc":"ingres_escape_string() is used to escape certain characters within a string before it is sent to the database server.","ver":"PECL ingres >= 2.1.0","ret_desc":"Returns a string containing the escaped data.","seealso":[],"url":"function.ingres-escape-string","name":"ingres_escape_string","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":"The connection link identifier"},{"type":"string","var":"$source_string","beh":0,"desc":"The source string to be parsed"}],"ret_type":"string"}]},"ingres_execute":{"desc":"Execute a prepared query","long_desc":"Execute a query prepared using ingres_prepare().","ver":"PECL ingres >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ingres-execute","name":"ingres_execute","params":[{"list":[{"type":"resource","var":"$result","beh":1,"desc":"The result query identifier"},{"type":"array","var":"$params","beh":1,"desc":"An array of parameter values to be used with the query"},{"type":"string","var":"$types","beh":1,"desc":"A string containing a sequence of types for the parameter values passed. See the types parameter in ingres_query() for the list of type codes."}],"ret_type":"bool"}]},"ingres_fetch_array":{"desc":"Fetch a row of result into an array","long_desc":"This function is an extended version of ingres_fetch_row(). In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys. If two or more columns of the result have the same field names, the last column will take precedence. To access the another column or columns of the same name, you must use the numeric index of the column or make an alias for the column. For example: With regard to speed, the function is identical to ingres_fetch_object(), and almost as quick as ingres_fetch_row() (the difference is insignificant). By default, arrays created by ingres_fetch_array() start from position 1 and not 0 as with other DBMS extensions. The starting position can be adjusted to 0 using the configuration parameter ingres.array_index_start.","ver":" PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"Returns an array that corresponds to the fetched row, or FALSE if there are no more rows","seealso":[],"url":"function.ingres-fetch-array","name":"ingres_fetch_array","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The query result identifier"},{"type":"int","var":"$result_type","beh":1,"desc":"The result type. This result_type can be INGRES_NUM for enumerated array, INGRES_ASSOC for associative array, or INGRES_BOTH (default)."}],"ret_type":"array"}]},"ingres_fetch_assoc":{"desc":"Fetch a row of result into an associative array","long_desc":"This function is stores the data fetched from a query executed using ingres_query() in an associative array, using the field names as keys. With regard to speed, the function is identical to ingres_fetch_object(), and almost as quick as ingres_fetch_row() (the difference is insignificant). By default, arrays created by ingres_fetch_assoc() start from position 1 and not 0 as with other DBMS extensions. The starting position can be adjusted to 0 using the configuration parameter ingres.array_index_start.","ver":"PECL ingres >= 2.2.2","ret_desc":"Returns an associative array that corresponds to the fetched row, or FALSE if there are no more rows","seealso":[],"url":"function.ingres-fetch-assoc","name":"ingres_fetch_assoc","params":[{"list":[],"ret_type":"array"}]},"ingres_fetch_object":{"desc":"Fetch a row of result into an object","long_desc":"This function is similar to ingres_fetch_array(), with one difference - an object is returned instead of an array. Indirectly, this means that you can access the data only by the field names and not by their offsets (numbers are illegal property names). With regard to speed, the function is identical to ingres_fetch_array(), and almost as quick as ingres_fetch_row() (the difference is insignificant).","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"Returns an object that corresponds to the fetched row, or FALSE if there are no more rows","seealso":[],"url":"function.ingres-fetch-object","name":"ingres_fetch_object","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The query result identifier"},{"type":"int","var":"$result_type","beh":1,"desc":"(Optional argument.) result_type is a constant and can take the following values: INGRES_ASSOC, INGRES_NUM, and INGRES_BOTH."}],"ret_type":"object"}]},"ingres_fetch_proc_return":{"desc":"Get the return value from a procedure call","long_desc":"This function is used to retrieve the return value following the execution of an Ingres database procedure (stored procedure).","ver":"PECL ingres >= 1.4.0","ret_desc":"Returns an integer if there is a return value otherwise it will return NULL.","seealso":[],"url":"function.ingres-fetch-proc-return","name":"ingres_fetch_proc_return","params":[{"list":[],"ret_type":"int"}]},"ingres_fetch_row":{"desc":"Fetch a row of result into an enumerated array","long_desc":"ingres_fetch_row() returns an array that corresponds to the fetched row, or FALSE if there are no more rows. Each result column is stored in an array offset, starting at offset 1. Subsequent calls to ingres_fetch_row() return the next row in the result set, or FALSE if there are no more rows. By default, arrays created by ingres_fetch_row() start from position 1 and not 0 as with other DBMS extensions. The starting position can be adjusted to 0 using the configuration parameter ingres.array_index_start.","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"Returns an array that corresponds to the fetched row, or FALSE if there are no more rows","seealso":[],"url":"function.ingres-fetch-row","name":"ingres_fetch_row","params":[{"list":[],"ret_type":"array"}]},"ingres_field_length":{"desc":"Get the length of a field","long_desc":"ingres_field_length() returns the length of a field. This is the number of bytes the server uses to store the field. For detailed information, see the Ingres OpenAPI User Guide, Appendix \"Data Types\" in the Ingres documentation.","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"Returns the length of a field.","seealso":[],"url":"function.ingres-field-length","name":"ingres_field_length","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The query result identifier"},{"type":"int","var":"$index","beh":0,"desc":"index is the column number whose length will be retrieved. The possible values of index depend upon the value of ingres.array_index_start. If ingres.array_index_start is 1 (the default) then index must be between 1 and the value returned by ingres_num_fields(). If ingres.array_index_start is 0 then index must be between 0 and ingres_num_fields() - 1."}],"ret_type":"int"}]},"ingres_field_name":{"desc":"Get the name of a field in a query result","long_desc":"ingres_field_name() returns the name of a field in a query result.","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"Returns the name of a field in a query result or FALSE on failure","seealso":[],"url":"function.ingres-field-name","name":"ingres_field_name","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The query result identifier"},{"type":"int","var":"$index","beh":0,"desc":"index is the field whose name will be retrieved. The possible values of index depend upon the value of ingres.array_index_start. If ingres.array_index_start is 1 (the default) then index must be between 1 and the value returned by ingres_num_fields(). If ingres.array_index_start is 0 then index must be between 0 and ingres_num_fields() - 1."}],"ret_type":"string"}]},"ingres_field_nullable":{"desc":"Test if a field is nullable","long_desc":"Test if a field is nullable.","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"ingres_field_nullable() returns TRUE if the field can be set to the NULL value and FALSE if it cannot","seealso":[],"url":"function.ingres-field-nullable","name":"ingres_field_nullable","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The query result identifier"},{"type":"int","var":"$index","beh":0,"desc":"index is the field whose nullability will be retrieved. The possible values of index depend upon the value of ingres.array_index_start. If ingres.array_index_start is 1 (the default) then index must be between 1 and the value returned by ingres_num_fields(). If ingres.array_index_start is 0 then index must be between 0 and ingres_num_fields() - 1."}],"ret_type":"bool"}]},"ingres_field_precision":{"desc":"Get the precision of a field","long_desc":"ingres_field_precision() returns the precision of a field. This value is used only for decimal, float, and money SQL data types. For detailed information, see the Ingres OpenAPI User Guide, Appendix \"Data Types\" in the Ingres documentation.","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"Returns the field precision as an integer","seealso":[],"url":"function.ingres-field-precision","name":"ingres_field_precision","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The query result identifier"},{"type":"int","var":"$index","beh":0,"desc":"index is the field whose precision will be retrieved. The possible values of index depend upon the value of ingres.array_index_start. If ingres.array_index_start is 1 (the default) then index must be between 1 and the value returned by ingres_num_fields(). If ingres.array_index_start is 0 then index must be between 0 and ingres_num_fields() - 1."}],"ret_type":"int"}]},"ingres_field_scale":{"desc":"Get the scale of a field","long_desc":"ingres_field_scale() returns the scale of a field. This value is used only for the decimal SQL data type. For detailed information, see the Ingres OpenAPI User Guide, Appendix \"Data Types\" in the Ingres documentation.","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"Returns the scale of the field, as an integer","seealso":[],"url":"function.ingres-field-scale","name":"ingres_field_scale","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The query result identifier"},{"type":"int","var":"$index","beh":0,"desc":"index is the field whose scale will be retrieved. The possible values of index depend upon the value of ingres.array_index_start. If ingres.array_index_start is 1 (the default) then index must be between 1 and the value returned by ingres_num_fields(). If ingres.array_index_start is 0 then index must be between 0 and ingres_num_fields() - 1."}],"ret_type":"int"}]},"ingres_field_type":{"desc":"Get the type of a field in a query result","long_desc":"Get the type of a field in a query result.","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"ingres_field_type() returns the type of a field in a query result or FALSE on failure. Examples of types returned are IIAPI_BYTE_TYPE, IIAPI_CHA_TYPE, IIAPI_DTE_TYPE, IIAPI_FLT_TYPE, IIAPI_INT_TYPE, IIAPI_VCH_TYPE. Some of these types can map to more than one SQL type depending on the length of the field (see ingres_field_length()). For example IIAPI_FLT_TYPE can be a float4 or a float8. For detailed information, see the Ingres OpenAPI User Guide, Appendix \"Data Types\" in the Ingres documentation.","seealso":[],"url":"function.ingres-field-type","name":"ingres_field_type","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The query result identifier"},{"type":"int","var":"$index","beh":0,"desc":"index is the field whose type will be retrieved. The possible values of index depend upon the value of ingres.array_index_start. If ingres.array_index_start is 1 (the default) then index must be between 1 and the value returned by ingres_num_fields(). If ingres.array_index_start is 0 then index must be between 0 and ingres_num_fields() - 1."}],"ret_type":"string"}]},"ingres_free_result":{"desc":"Free the resources associated with a result identifier","long_desc":"","ver":"PECL ingres >= 2.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ingres-free-result","name":"ingres_free_result","params":[{"list":[],"ret_type":"bool"}]},"ingres_next_error":{"desc":"Get the next Ingres error","long_desc":"Get the next Ingres error for the last executed query. Each call to ingres_next_error() can be followed by a call to ingres_errno(), ingres_error() or ingres_errsqlstate() to get the respective error number, error text, or SQL STATE. While ingres_next_error() returns TRUE, there are more errors to fetch.","ver":"PECL ingres >= 2.0.0","ret_desc":"ingres_next_error() returns TRUE if there is another error to retrieve or FALSE when there are no more errors","seealso":[],"url":"function.ingres-next-error","name":"ingres_next_error","params":[{"list":[],"ret_type":"bool"}]},"ingres_num_fields":{"desc":"Get the number of fields returned by the last query","long_desc":"ingres_num_fields() returns the number of fields in the results returned by the Ingres server after a call to ingres_query().","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"Returns the number of fields","seealso":[],"url":"function.ingres-num-fields","name":"ingres_num_fields","params":[{"list":[],"ret_type":"int"}]},"ingres_num_rows":{"desc":"Get the number of rows affected or returned by a query","long_desc":"This function primarily is meant to get the number of rows modified in the database. However, it can be used to retrieve the number of rows to fetch for a SELECT statement.","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"For delete, insert, or update queries, ingres_num_rows() returns the number of rows affected by the query. For other queries, ingres_num_rows() returns the number of rows in the query's result.","seealso":[],"url":"function.ingres-num-rows","name":"ingres_num_rows","params":[{"list":[],"ret_type":"int"}]},"ingres_pconnect":{"desc":"Open a persistent connection to an Ingres database","long_desc":"Open a persistent connection to an Ingres database. There are only two differences between this function and ingres_connect(): First, when connecting, the function will initially try to find a (persistent) link that is already opened with the same parameters. If one is found, an identifier for it will be returned instead of opening a new connection. Second, the connection to the Ingres server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (ingres_close() will not close links established by ingres_pconnect()). This type of link is therefore called \"persistent\".","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"Returns an Ingres link resource on success or FALSE on failure","seealso":[],"url":"function.ingres-pconnect","name":"ingres_pconnect","params":[{"list":[{"type":"string","var":"$database","beh":1,"desc":"The database name. Must follow the syntax: [vnode::]dbname[\/svr_class]"},{"type":"string","var":"$username","beh":1,"desc":"The Ingres user name"},{"type":"string","var":"$password","beh":1,"desc":"The password associated with username"},{"type":"array","var":"$options","beh":1,"desc":"See ingres_connect() for the list of options that can be passed"}],"ret_type":"resource"}]},"ingres_prepare":{"desc":"Prepare a query for later execution","long_desc":"Prepares a query for execution by ingres_execute(). The query becomes part of the currently open transaction. If there is no open transaction, ingres_query() opens a new transaction. To close the transaction, you can call either ingres_commit() to commit the changes made to the database or ingres_rollback() to cancel these changes. When the script ends, any open transaction is rolled back (by calling ingres_rollback()). You can also use ingres_autocommit() before opening a new transaction to have every SQL query immediately committed.","ver":"PECL ingres >= 1.1.0","ret_desc":"ingres_prepare() returns a query result identifier that is used with ingres_execute() to execute the query. To see if an error occurred, use ingres_errno(), ingres_error(), or ingres_errsqlstate().","seealso":[],"url":"function.ingres-prepare","name":"ingres_prepare","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":"The connection link identifier"},{"type":"string","var":"$query","beh":0,"desc":"A valid SQL query (see the Ingres SQL reference guide) in the Ingres documentation. See the query parameter in ingres_query() for a list of SQL statements which cannot be executed using ingres_prepare()"}],"ret_type":"mixed"}]},"ingres_query":{"desc":"Send an SQL query to Ingres","long_desc":"ingres_query() sends the given query to the Ingres server. The query becomes part of the currently open transaction. If there is no open transaction, ingres_query() opens a new transaction. To close the transaction, you can call either ingres_commit() to commit the changes made to the database or ingres_rollback() to cancel these changes. When the script ends, any open transaction is rolled back (by calling ingres_rollback()). You can also use ingres_autocommit() before opening a new transaction to have every SQL query immediately committed.","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"ingres_query() returns a query result identifier on success else it returns FALSE. To see if an error occurred use ingres_errno(), ingres_error() or ingres_errsqlstate().","seealso":[],"url":"function.ingres-query","name":"ingres_query","params":[{"list":[{"type":"resource","var":"$link","beh":1,"desc":"The connection link identifier."},{"type":"string","var":"$query","beh":1,"desc":"A valid SQL query (see the Ingres SQL reference guide) in the Ingres documentation. Data inside the query should be properly escaped. The following types of SQL queries cannot be sent with this function:"},{"type":"array","var":"$params","beh":1,"desc":"An array of parameter values to be used with the query"},{"type":"string","var":"$types","beh":1,"desc":"A string containing a sequence of types for the parameter values passed. When ingres.describe is enabled, this parameter can be ignored as the driver automatically fetches the expected parameter types from the server."}],"ret_type":"mixed"}]},"ingres_result_seek":{"desc":"Set the row position before fetching data","long_desc":"This function is used to position the cursor associated with the result resource before issuing a fetch. If ingres.array_index_start is set to 0 then the first row is 0 else it is 1. ingres_result_seek() can be used only with queries that make use of scrollable cursors. It cannot be used with ingres_unbuffered_query().","ver":"PECL ingres >= 2.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ingres-result-seek","name":"ingres_result_seek","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result identifier for a query"},{"type":"int","var":"$position","beh":0,"desc":"The row to position the cursor on. If ingres.array_index_start is set to 0, then the first row is 0, else it is 1"}],"ret_type":"bool"}]},"ingres_rollback":{"desc":"Roll back a transaction","long_desc":"ingres_rollback() rolls back the currently open transaction, actually cancelling all changes made to the database during the transaction. This closes the transaction. A new transaction can be opened by sending a query with ingres_query().","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ingres-rollback","name":"ingres_rollback","params":[{"list":[],"ret_type":"bool"}]},"ingres_set_environment":{"desc":"Set environment features controlling output options","long_desc":"ingres_set_environment() is called to set environmental options that affect the output of certain values from Ingres, such as the timezone, date format, decimal character separator, and float precision.","ver":"PECL ingres >= 1.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ingres-set-environment","name":"ingres_set_environment","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":"The connection link identifier"},{"type":"array","var":"$options","beh":0,"desc":"An enumerated array of option name\/value pairs. The following table lists the option name and the expected type"}],"ret_type":"bool"}]},"ingres_unbuffered_query":{"desc":"Send an unbuffered SQL query to Ingres","long_desc":"ingres_unbuffered_query() sends the given query to the Ingres server. The query becomes part of the currently open transaction. If there is no open transaction, ingres_unbuffered_query() opens a new transaction. To close the transaction, you can call either ingres_commit() to commit the changes made to the database or ingres_rollback() to cancel these changes. When the script ends, any open transaction is rolled back (by calling ingres_rollback()). You can also use ingres_autocommit() before opening a new transaction to have every SQL query immediately committed. Ingres allows only a single unbuffered statement to be active at any one time. The extension will close any active unbuffered statements before executing any SQL. In addition you cannot use ingres_result_seek() to position the row before fetching.","ver":"No version information available, might only be in SVN","ret_desc":"ingres_unbuffered_query() returns a query result identifier when there are rows to fetch; else it returns FALSE when there are no rows, as is the case of an INSERT, UPDATE, or DELETE statement. To see if an error occurred, use ingres_errno(), ingres_error(), or ingres_errsqlstate().","seealso":[],"url":"function.ingres-unbuffered-query","name":"ingres_unbuffered_query","params":[{"list":[{"type":"resource","var":"$link","beh":1,"desc":"The connection link identifier"},{"type":"string","var":"$query","beh":1,"desc":"A valid SQL query (see the Ingres SQL reference guide) in the Ingres documentation. See the query parameter in ingres_query() for a list of SQL statements that cannot be executed via ingres_unbuffered_query(). Data inside the query should be properly escaped."},{"type":"array","var":"$params","beh":1,"desc":"An array of parameter values to be used with the query"},{"type":"string","var":"$types","beh":1,"desc":"A string containing a sequence of types for the parameter values passed. See the types parameter in ingres_query() for the list of type codes."}],"ret_type":"mixed"}]},"ini_alter":{"desc":"Alias of ini_set()","long_desc":"This function is an alias of: ini_set().","ver":"PHP 4, PHP 5","url":"function.ini-alter","name":"ini_alter","params":[]},"ini_get":{"desc":"Gets the value of a configuration option","long_desc":"Returns the value of the configuration option on success.","ver":"PHP 4, PHP 5","ret_desc":"Returns the value of the configuration option as a string on success, or an empty string for null values. Returns FALSE if the configuration option doesn't exist.","seealso":[],"url":"function.ini-get","name":"ini_get","params":[{"list":[],"ret_type":"string"}]},"ini_get_all":{"desc":"Gets all configuration options","long_desc":"Returns all the registered configuration options.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns an associative array with directive name as the array key.","seealso":[],"url":"function.ini-get-all","name":"ini_get_all","params":[{"list":[{"type":"string","var":"$extension","beh":1,"desc":"An optional extension name. If set, the function return only options specific for that extension."},{"type":"bool","var":"$details","beh":1,"desc":"Retrieve details settings or only the current value for each setting. Default is TRUE (retrieve details).","def":"true"}],"ret_type":"array"}]},"ini_restore":{"desc":"Restores the value of a configuration option","long_desc":"Restores a given configuration option to its original value.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.ini-restore","name":"ini_restore","params":[{"list":[],"ret_type":"void"}]},"ini_set":{"desc":"Sets the value of a configuration option","long_desc":"Sets the value of the given configuration option. The configuration option will keep this new value during the script's execution, and will be restored at the script's ending.","ver":"PHP 4, PHP 5","ret_desc":"Returns the old value on success, FALSE on failure.","seealso":[],"url":"function.ini-set","name":"ini_set","params":[{"list":[{"type":"string","var":"$varname","beh":0,"desc":"Not all the available options can be changed using ini_set(). There is a list of all available options in the appendix."},{"type":"string","var":"$newvalue","beh":0,"desc":"The new value for the option."}],"ret_type":"string"}]},"inotify_add_watch":{"desc":"Add a watch to an initialized inotify instance","long_desc":"inotify_add_watch() adds a new watch or modify an existing watch for the file or directory specified in pathname. Using inotify_add_watch() on a watched object replaces the existing watch. Using the IN_MASK_ADD constant adds (OR) events to the existing watch.","ver":"PECL inotify >= 0.1.2","ret_desc":"The return value is a unique (inotify instance wide) watch descriptor.","seealso":[],"url":"function.inotify-add-watch","name":"inotify_add_watch","params":[{"list":[{"type":"resource","var":"$inotify_instance","beh":0,"desc":"Resource returned by inotify_init()"},{"type":"string","var":"$pathname","beh":0,"desc":"File or directory to watch"},{"type":"int","var":"$mask","beh":1,"desc":"Events to watch for. See Predefined Constants."}],"ret_type":"int"}]},"inotify_init":{"desc":"Initialize an inotify instance","long_desc":"Initialize an inotify instance for use with inotify_add_watch()","ver":"PECL inotify >= 0.1.2","ret_desc":"A stream resource or FALSE on error.","seealso":[],"url":"function.inotify-init","name":"inotify_init","params":[{"list":[],"ret_type":"resource"}]},"inotify_queue_len":{"desc":"Return a number upper than zero if there are pending events","long_desc":"This function allows to know if inotify_read() will block or not. If a number upper than zero is returned, there are pending events and inotify_read() will not block.","ver":"PECL inotify >= 0.1.2","ret_desc":"Returns a number upper than zero if there are pending events.","seealso":[],"url":"function.inotify-queue-len","name":"inotify_queue_len","params":[{"list":[],"ret_type":"int"}]},"inotify_read":{"desc":"Read events from an inotify instance","long_desc":"Read inotify events from an inotify instance.","ver":"PECL inotify >= 0.1.2","ret_desc":"An array of inotify events or FALSE if no events was pending and inotify_instance is non-blocking. Each event is an array with the following keys:","seealso":[],"url":"function.inotify-read","name":"inotify_read","params":[{"list":[],"ret_type":"array"}]},"inotify_rm_watch":{"desc":"Remove an existing watch from an inotify instance","long_desc":"inotify_rm_watch() removes the watch watch_descriptor from the inotify instance inotify_instance.","ver":"PECL inotify >= 0.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.inotify-rm-watch","name":"inotify_rm_watch","params":[{"list":[{"type":"resource","var":"$inotify_instance","beh":0,"desc":"Resource returned by inotify_init()"},{"type":"int","var":"$watch_descriptor","beh":0,"desc":"Watch to remove from the instance"}],"ret_type":"bool"}]},"interface_exists":{"desc":"Checks if the interface has been defined","long_desc":"Checks if the given interface has been defined.","ver":"PHP 5 >= 5.0.2","ret_desc":"Returns TRUE if the interface given by interface_name has been defined, FALSE otherwise.","seealso":[],"url":"function.interface-exists","name":"interface_exists","params":[{"list":[{"type":"string","var":"$interface_name","beh":0,"desc":"The interface name"},{"type":"bool","var":"$autoload","beh":0,"desc":"Whether to call __autoload or not by default.","def":"true"}],"ret_type":"bool"}]},"intl_error_name":{"desc":"Get symbolic name for a given error code","long_desc":"Return ICU error code name.","ver":"PHP 5 >= 5.3.0, PECL intl >= 1.0.0","ret_desc":"The returned string will be the same as the name of the error code constant.","seealso":[],"url":"function.intl-error-name","name":"intl_error_name","params":[{"list":[],"ret_type":"string"}]},"intl_get_error_code":{"desc":"Get the last error code","long_desc":"Useful to handle errors occurred in static methods when there's no object to get error code from.","ver":"PHP 5 >= 5.3.0, PECL intl >= 1.0.0","ret_desc":"Error code returned by the last API function call.","seealso":[],"url":"function.intl-get-error-code","name":"intl_get_error_code","params":[{"list":[],"ret_type":"int"}]},"intl_get_error_message":{"desc":"Get description of the last error","long_desc":"Get error message from last internationalization function called.","ver":"PHP 5 >= 5.3.0, PECL intl >= 1.0.0","ret_desc":"Description of an error occurred in the last API function call.","seealso":[],"url":"function.intl-get-error-message","name":"intl_get_error_message","params":[{"list":[],"ret_type":"string"}]},"intl_is_failure":{"desc":"Check whether the given error code indicates failure","long_desc":"","ver":"PHP 5 >= 5.3.0, PECL intl >= 1.0.0","ret_desc":"TRUE if it the code indicates some failure, and FALSE in case of success or a warning.","seealso":[],"url":"function.intl-is-failure","name":"intl_is_failure","params":[{"list":[],"ret_type":"bool"}]},"intval":{"desc":"Get the integer value of a variable","long_desc":"Returns the integer value of var, using the specified base for the conversion (the default is base 10). intval() should not be used on objects, as doing so will emit an E_NOTICE level error and return 1.","ver":"PHP 4, PHP 5","ret_desc":"The integer value of var on success, or 0 on failure. Empty arrays return 0, non-empty arrays return 1.","seealso":[],"url":"function.intval","name":"intval","params":[{"list":[{"type":"mixed","var":"$var","beh":0,"desc":"The scalar value being converted to an integer"},{"type":"int","var":"$base","beh":0,"desc":"The base for the conversion","def":10}],"ret_type":"int"}]},"ip2long":{"desc":"Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address","long_desc":"The function ip2long() generates an IPv4 Internet network address from its Internet standard format (dotted string) representation. ip2long() will also work with non-complete IP addresses. Read \u00bb\u00a0http:\/\/publibn.boulder.ibm.com\/doc_link\/en_US\/a_doc_lib\/libs\/commtrf2\/inet_addr.htm for more info.","ver":"PHP 4, PHP 5","ret_desc":"Returns the IPv4 address or FALSE if ip_address is invalid.","seealso":[],"url":"function.ip2long","name":"ip2long","params":[{"list":[],"ret_type":"int"}]},"iptcembed":{"desc":"Embeds binary IPTC data into a JPEG image","long_desc":"Embeds binary IPTC data into a JPEG image.","ver":"PHP 4, PHP 5","ret_desc":"If success and spool flag is lower than 2 then the JPEG will not be returned as a string, FALSE on errors.","url":"function.iptcembed","name":"iptcembed","params":[{"list":[{"type":"string","var":"$iptcdata","beh":0,"desc":"The data to be written."},{"type":"string","var":"$jpeg_file_name","beh":1,"desc":"Path to the JPEG image."},{"type":"int","var":"$spool","beh":1,"desc":"Spool flag. If the spool flag is over 2 then the JPEG will be returned as a string."}],"ret_type":"mixed"}]},"iptcparse":{"desc":"Parse a binary IPTC block into single tags.","long_desc":"Parses an \u00bb\u00a0IPTC block into its single tags.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array using the tagmarker as an index and the value as the value. It returns FALSE on error or if no IPTC data was found.","url":"function.iptcparse","name":"iptcparse","params":[{"list":[],"ret_type":"array"}]},"is_a":{"desc":"Checks if the object is of this class or has this class as one of its parents","long_desc":"Checks if the given object is of this class or has this class as one of its parents.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE if the object is of this class or has this class as one of its parents, FALSE otherwise.","seealso":[],"url":"function.is-a","name":"is_a","params":[{"list":[{"type":"object","var":"$object","beh":0,"desc":"The tested object"},{"type":"string","var":"$class_name","beh":1,"desc":"The class name"},{"type":"bool","var":"$allow_string","beh":1,"desc":"Whether to call autoloader if the class doesn't exist.","def":"FALSE"}],"ret_type":"bool"}]},"is_array":{"desc":"Finds whether a variable is an array","long_desc":"Finds whether the given variable is an array.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if var is an array, FALSE otherwise.","seealso":[],"url":"function.is-array","name":"is_array","params":[{"list":[],"ret_type":"bool"}]},"is_bool":{"desc":"Finds out whether a variable is a boolean","long_desc":"Finds whether the given variable is a boolean.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if var is a boolean, FALSE otherwise.","seealso":[],"url":"function.is-bool","name":"is_bool","params":[{"list":[],"ret_type":"bool"}]},"is_callable":{"desc":"Verify that the contents of a variable can be called as a function","long_desc":"Verify that the contents of a variable can be called as a function. This can check that a simple variable contains the name of a valid function, or that an array contains a properly encoded object and function name.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE if name is callable, FALSE otherwise.","seealso":[],"url":"function.is-callable","name":"is_callable","params":[{"list":[{"type":"callable","var":"$name","beh":1,"desc":"The callback function to check"},{"type":"bool","var":"$syntax_only","beh":1,"desc":"If set to TRUE the function only verifies that name might be a function or method. It will only reject simple variables that are not strings, or an array that does not have a valid structure to be used as a callback. The valid ones are supposed to have only 2 entries, the first of which is an object or a string, and the second a string.","def":"false"},{"type":"string","var":"&$callable_name","beh":1,"desc":"Receives the \"callable name\". In the example below it is \"someClass::someMethod\". Note, however, that despite the implication that someClass::SomeMethod() is a callable static method, this is not the case."}],"ret_type":"bool"}]},"is_dir":{"desc":"Tells whether the filename is a directory","long_desc":"Tells whether the given filename is a directory.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the filename exists and is a directory, FALSE otherwise.","seealso":[],"url":"function.is-dir","name":"is_dir","params":[{"list":[],"ret_type":"bool"}]},"is_double":{"desc":"Alias of is_float()","long_desc":"This function is an alias of: is_float().","ver":"PHP 4, PHP 5","url":"function.is-double","name":"is_double","params":[]},"is_executable":{"desc":"Tells whether the filename is executable","long_desc":"Tells whether the filename is executable.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the filename exists and is executable, or FALSE on error.","seealso":[],"url":"function.is-executable","name":"is_executable","params":[{"list":[],"ret_type":"bool"}]},"is_file":{"desc":"Tells whether the filename is a regular file","long_desc":"Tells whether the given file is a regular file.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the filename exists and is a regular file, FALSE otherwise.","seealso":[],"url":"function.is-file","name":"is_file","params":[{"list":[],"ret_type":"bool"}]},"is_finite":{"desc":"Finds whether a value is a legal finite number","long_desc":"Checks whether val is a legal finite on this platform.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"TRUE if val is a legal finite number within the allowed range for a PHP float on this platform, else FALSE.","seealso":[],"url":"function.is-finite","name":"is_finite","params":[{"list":[],"ret_type":"bool"}]},"is_float":{"desc":"Finds whether the type of a variable is float","long_desc":"Finds whether the type of the given variable is float.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if var is a float, FALSE otherwise.","seealso":[],"url":"function.is-float","name":"is_float","params":[{"list":[],"ret_type":"bool"}]},"is_infinite":{"desc":"Finds whether a value is infinite","long_desc":"Returns TRUE if val is infinite (positive or negative), like the result of log(0) or any value too big to fit into a float on this platform.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"TRUE if val is infinite, else FALSE.","seealso":[],"url":"function.is-infinite","name":"is_infinite","params":[{"list":[],"ret_type":"bool"}]},"is_int":{"desc":"Find whether the type of a variable is integer","long_desc":"Finds whether the type of the given variable is integer.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if var is an integer, FALSE otherwise.","seealso":[],"url":"function.is-int","name":"is_int","params":[{"list":[],"ret_type":"bool"}]},"is_integer":{"desc":"Alias of is_int()","long_desc":"This function is an alias of: is_int().","ver":"PHP 4, PHP 5","url":"function.is-integer","name":"is_integer","params":[]},"is_link":{"desc":"Tells whether the filename is a symbolic link","long_desc":"Tells whether the given file is a symbolic link.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the filename exists and is a symbolic link, FALSE otherwise.","seealso":[],"url":"function.is-link","name":"is_link","params":[{"list":[],"ret_type":"bool"}]},"is_long":{"desc":"Alias of is_int()","long_desc":"This function is an alias of: is_int().","ver":"PHP 4, PHP 5","url":"function.is-long","name":"is_long","params":[]},"is_nan":{"desc":"Finds whether a value is not a number","long_desc":"Checks whether val is 'not a number', like the result of acos(1.01).","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE if val is 'not a number', else FALSE.","seealso":[],"url":"function.is-nan","name":"is_nan","params":[{"list":[],"ret_type":"bool"}]},"is_null":{"desc":"Finds whether a variable is NULL","long_desc":"Finds whether the given variable is NULL.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE if var is null, FALSE otherwise.","seealso":[],"url":"function.is-null","name":"is_null","params":[{"list":[],"ret_type":"bool"}]},"is_numeric":{"desc":"Finds whether a variable is a number or a numeric string","long_desc":"Finds whether the given variable is numeric. Numeric strings consist of optional sign, any number of digits, optional decimal part and optional exponential part. Thus +0123.45e6 is a valid numeric value. Hexadecimal notation (0xFF) is allowed too but only without sign, decimal and exponential part.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if var is a number or a numeric string, FALSE otherwise.","seealso":[],"url":"function.is-numeric","name":"is_numeric","params":[{"list":[],"ret_type":"bool"}]},"is_object":{"desc":"Finds whether a variable is an object","long_desc":"Finds whether the given variable is an object.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if var is an object, FALSE otherwise.","seealso":[],"url":"function.is-object","name":"is_object","params":[{"list":[],"ret_type":"bool"}]},"is_readable":{"desc":"Tells whether a file exists and is readable","long_desc":"Tells whether a file exists and is readable.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the file or directory specified by filename exists and is readable, FALSE otherwise.","seealso":[],"url":"function.is-readable","name":"is_readable","params":[{"list":[],"ret_type":"bool"}]},"is_real":{"desc":"Alias of is_float()","long_desc":"This function is an alias of: is_float().","ver":"PHP 4, PHP 5","url":"function.is-real","name":"is_real","params":[]},"is_resource":{"desc":"Finds whether a variable is a resource","long_desc":"Finds whether the given variable is a resource.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if var is a resource, FALSE otherwise.","seealso":[],"url":"function.is-resource","name":"is_resource","params":[{"list":[],"ret_type":"bool"}]},"is_scalar":{"desc":"Finds whether a variable is a scalar","long_desc":"Finds whether the given variable is a scalar. Scalar variables are those containing an integer, float, string or boolean. Types array, object and resource are not scalar.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns TRUE if var is a scalar FALSE otherwise.","seealso":[],"url":"function.is-scalar","name":"is_scalar","params":[{"list":[],"ret_type":"bool"}]},"is_soap_fault":{"desc":"Checks if a SOAP call has failed","long_desc":"This function is useful to check if the SOAP call failed, but without using exceptions. To use it, create a SoapClient object with the exceptions option set to zero or FALSE. In this case, the SOAP method will return a special SoapFault object which encapsulates the fault details (faultcode, faultstring, faultactor and faultdetails). If exceptions is not set then SOAP call will throw an exception on error. is_soap_fault() checks if the given parameter is a SoapFault object.","ver":"Unknown","ret_desc":"This will return TRUE on error, and FALSE otherwise.","seealso":[],"url":"function.is-soap-fault","name":"is_soap_fault","params":[{"list":[],"ret_type":"bool"}]},"is_string":{"desc":"Find whether the type of a variable is string","long_desc":"Finds whether the type given variable is string.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if var is of type string, FALSE otherwise.","seealso":[],"url":"function.is-string","name":"is_string","params":[{"list":[],"ret_type":"bool"}]},"is_subclass_of":{"desc":"Checks if the object has this class as one of its parents","long_desc":"Checks if the given object has the class class_name as one of its parents.","ver":"PHP 4, PHP 5","ret_desc":"This function returns TRUE if the object object, belongs to a class which is a subclass of class_name, FALSE otherwise.","seealso":[],"url":"function.is-subclass-of","name":"is_subclass_of","params":[{"list":[{"type":"mixed","var":"$object","beh":0,"desc":"A class name or an object instance"},{"type":"string","var":"$class_name","beh":1,"desc":"The class name"},{"type":"bool","var":"$allow_string","beh":1,"desc":"Whether to call autoloader if the class doesn't exist.","def":"TRUE"}],"ret_type":"bool"}]},"is_tainted":{"desc":"Checks whether a string is tainted","long_desc":"Checks whether a string is tainted","ver":"PECL taint >=0.1.0","ret_desc":"Return TRUE if the string is tainted, FALSE otherwise.","url":"function.is-tainted","name":"is_tainted","params":[{"list":[],"ret_type":"bool"}]},"is_uploaded_file":{"desc":"Tells whether the file was uploaded via HTTP POST","long_desc":"Returns TRUE if the file named by filename was uploaded via HTTP POST. This is useful to help ensure that a malicious user hasn't tried to trick the script into working on files upon which it should not be working--for instance, \/etc\/passwd. This sort of check is especially important if there is any chance that anything done with uploaded files could reveal their contents to the user, or even to other users on the same system. For proper working, the function is_uploaded_file() needs an argument like $_FILES['userfile']['tmp_name'], - the name of the uploaded file on the client's machine $_FILES['userfile']['name'] does not work.","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.is-uploaded-file","name":"is_uploaded_file","params":[{"list":[],"ret_type":"bool"}]},"is_writable":{"desc":"Tells whether the filename is writable","long_desc":"Returns TRUE if the filename exists and is writable. The filename argument may be a directory name allowing you to check if a directory is writable. Keep in mind that PHP may be accessing the file as the user id that the web server runs as (often 'nobody'). Safe mode limitations are not taken into account.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the filename exists and is writable.","seealso":[],"url":"function.is-writable","name":"is_writable","params":[{"list":[],"ret_type":"bool"}]},"is_writeable":{"desc":"Alias of is_writable()","long_desc":"This function is an alias of: is_writable().","ver":"PHP 4, PHP 5","url":"function.is-writeable","name":"is_writeable","params":[]},"isset":{"desc":"Determine if a variable is set and is not NULL","long_desc":"Determine if a variable is set and is not NULL. If a variable has been unset with unset(), it will no longer be set. isset() will return FALSE if testing a variable that has been set to NULL. Also note that a NULL byte (\"\\0\") is not equivalent to the PHP NULL constant. If multiple parameters are supplied then isset() will return TRUE only if all of the parameters are set. Evaluation goes from left to right and stops as soon as an unset variable is encountered.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if var exists and has value other than NULL, FALSE otherwise.","seealso":[],"url":"function.isset","name":"isset","params":[{"list":[{"type":"mixed","var":"$var","beh":0,"desc":"The variable to be checked."},{"type":"mixed","var":"$...","beh":1,"desc":"Another variable ..."}],"ret_type":"bool"}]},"iterator_apply":{"desc":"Call a function for every element in an iterator","long_desc":"Calls a function for every element in an iterator.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns the iteration count.","seealso":[],"url":"function.iterator-apply","name":"iterator_apply","params":[{"list":[{"type":"Traversable","var":"$iterator","beh":0,"desc":"The class to iterate over."},{"type":"callable","var":"$function","beh":1,"desc":"The callback function to call on every element."},{"type":"array","var":"$args","beh":1,"desc":"Arguments to pass to the callback function."}],"ret_type":"int"}]},"iterator_count":{"desc":"Count the elements in an iterator","long_desc":"Count the elements in an iterator.","ver":"PHP 5 >= 5.1.0","ret_desc":"The number of elements in iterator.","url":"function.iterator-count","name":"iterator_count","params":[{"list":[],"ret_type":"int"}]},"iterator_to_array":{"desc":"Copy the iterator into an array","long_desc":"Copy the elements of an iterator into an array.","ver":"PHP 5 >= 5.1.0","ret_desc":"An array containing the elements of the iterator.","url":"function.iterator-to-array","name":"iterator_to_array","params":[{"list":[{"type":"Traversable","var":"$iterator","beh":0,"desc":"The iterator being copied."},{"type":"bool","var":"$use_keys","beh":0,"desc":"Whether to use the iterator element keys as index.","def":"true"}],"ret_type":"array"}]},"java_last_exception_clear":{"desc":"Clear last Java exception","long_desc":"Clears last Java exception.","ver":"PHP 4 >= 4.0.2","ret_desc":"No value is returned.","url":"function.java-last-exception-clear","name":"java_last_exception_clear","params":[{"list":[],"ret_type":"void"}]},"java_last_exception_get":{"desc":"Get last Java exception","long_desc":"Gets last Java exception.","ver":"PHP 4 >= 4.0.2","ret_desc":"Returns an exception object.","url":"function.java-last-exception-get","name":"java_last_exception_get","params":[{"list":[],"ret_type":"object"}]},"jdtojewish":{"desc":"Converts a Julian day count to a Jewish calendar date","long_desc":"Converts a Julian Day Count to the Jewish Calendar.","ver":"PHP 4, PHP 5","ret_desc":"The jewish date as a string in the form \"month\/day\/year\"","seealso":[],"url":"function.jdtojewish","name":"jdtojewish","params":[{"list":[{"type":"int","var":"$juliandaycount","beh":1,"desc":"A julian day number as integer"},{"type":"bool","var":"$hebrew","beh":1,"desc":"If the hebrew parameter is set to TRUE, the fl parameter is used for Hebrew, string based, output format.","def":"false"},{"type":"int","var":"$fl","beh":1,"desc":"The available formats are: CAL_JEWISH_ADD_ALAFIM_GERESH, CAL_JEWISH_ADD_ALAFIM, CAL_JEWISH_ADD_GERESHAYIM.","def":0}],"ret_type":"string"}]},"jdtounix":{"desc":"Convert Julian Day to Unix timestamp","long_desc":"This function will return a Unix timestamp corresponding to the Julian Day given in jday or FALSE if jday is not inside the Unix epoch (Gregorian years between 1970 and 2037 or 2440588 <= jday <= 2465342 ). The time returned is localtime (and not GMT).","ver":"PHP 4, PHP 5","ret_desc":"The unix timestamp for the start of the given julian day.","seealso":[],"url":"function.jdtounix","name":"jdtounix","params":[{"list":[],"ret_type":"int"}]},"join":{"desc":"Alias of implode()","long_desc":"This function is an alias of: implode().","ver":"PHP 4, PHP 5","url":"function.join","name":"join","params":[]},"jpeg2wbmp":{"desc":"Convert JPEG image file to WBMP image file","long_desc":"Converts a JPEG file into a WBMP file.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.jpeg2wbmp","name":"jpeg2wbmp","params":[{"list":[{"type":"string","var":"$jpegname","beh":0,"desc":"Path to JPEG file."},{"type":"string","var":"$wbmpname","beh":0,"desc":"Path to destination WBMP file."},{"type":"int","var":"$dest_height","beh":1,"desc":"Destination image height."},{"type":"int","var":"$dest_width","beh":1,"desc":"Destination image width."},{"type":"int","var":"$threshold","beh":1,"desc":"Threshold value, between 0 and 8 (inclusive)."}],"ret_type":"bool"}]},"json_decode":{"desc":"Decodes a JSON string","long_desc":"Takes a JSON encoded string and converts it into a PHP variable.","ver":"PHP 5 >= 5.2.0, PECL json >= 1.2.0","ret_desc":"Returns the value encoded in json in appropriate PHP type. Values true, false and null (case-insensitive) are returned as TRUE, FALSE and NULL respectively. NULL is returned if the json cannot be decoded or if the encoded data is deeper than the recursion limit.","seealso":[],"url":"function.json-decode","name":"json_decode","params":[{"list":[{"type":"string","var":"$json","beh":1,"desc":"The json string being decoded. This function only works with UTF-8 encoded data."},{"type":"bool","var":"$assoc","beh":1,"desc":"When TRUE, returned objects will be converted into associative arrays.","def":"false"},{"type":"int","var":"$depth","beh":1,"desc":"User specified recursion depth.","def":512},{"type":"int","var":"$options","beh":1,"desc":"Bitmask of JSON decode options. Currently only JSON_BIGINT_AS_STRING is supported (default is to cast large integers as floats)","def":0}],"ret_type":"mixed"}]},"json_encode":{"desc":"Returns the JSON representation of a value","long_desc":"Returns a string containing the JSON representation of value.","ver":"PHP 5 >= 5.2.0, PECL json >= 1.2.0","ret_desc":"Returns a JSON encoded string on success or FALSE on failure.","seealso":[],"url":"function.json-encode","name":"json_encode","params":[{"list":[{"type":"mixed","var":"$value","beh":0,"desc":"The value being encoded. Can be any type except a resource. This function only works with UTF-8 encoded data."},{"type":"int","var":"$options","beh":0,"desc":"Bitmask consisting of JSON_HEX_QUOT, JSON_HEX_TAG, JSON_HEX_AMP, JSON_HEX_APOS, JSON_NUMERIC_CHECK, JSON_BIGINT_AS_STRING, JSON_PRETTY_PRINT, JSON_UNESCAPED_SLASHES, JSON_FORCE_OBJECT, JSON_UNESCAPED_UNICODE.","def":0}],"ret_type":"string"}]},"json_last_error":{"desc":"Returns the last error occurred","long_desc":"Returns the last error (if any) occurred during the last JSON encoding\/decoding.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an integer, the value can be one of the following constants:","seealso":[],"url":"function.json-last-error","name":"json_last_error","params":[{"list":[],"ret_type":"int"}]},"judy_type":{"desc":"Return the type of a Judy array","long_desc":"judy_type() return an integer corresponding to the Judy type of the specified Judy array.","ver":"PECL judy >= 0.1.1","ret_desc":"Return an integer corresponding to a Judy type.","url":"function.judy-type","name":"judy_type","params":[{"list":[],"ret_type":"int"}]},"judy_version":{"desc":"Return or print the current PHP Judy version","long_desc":"Return a string of the PHP Judy version. If the return value is not used, the string will be printed.","ver":"PECL judy >= 0.1.1","ret_desc":"Return a string of the PHP Judy version.","url":"function.judy-version","name":"judy_version","params":[{"list":[],"ret_type":"string"}]},"kadm5_chpass_principal":{"desc":"Changes the principal's password","long_desc":"kadm5_chpass_principal() sets the new password password for the principal.","ver":"PECL kadm5 >= 0.2.3","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.kadm5-chpass-principal","name":"kadm5_chpass_principal","params":[{"list":[{"type":"resource","var":"$handle","beh":0,"desc":"A KADM5 handle."},{"type":"string","var":"$principal","beh":0,"desc":"The principal."},{"type":"string","var":"$password","beh":1,"desc":"The new password."}],"ret_type":"bool"}]},"kadm5_create_principal":{"desc":"Creates a kerberos principal with the given parameters","long_desc":"Creates a principal with the given password.","ver":"PECL kadm5 >= 0.2.3","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.kadm5-create-principal","name":"kadm5_create_principal","params":[{"list":[{"type":"resource","var":"$handle","beh":1,"desc":"A KADM5 handle."},{"type":"string","var":"$principal","beh":1,"desc":"The principal."},{"type":"string","var":"$password","beh":1,"desc":"If password is omitted or is NULL, a random key will be generated."},{"type":"array","var":"$options","beh":1,"desc":"It is possible to specify several optional parameters within the array options. Allowed are the following options: KADM5_PRINC_EXPIRE_TIME, KADM5_PW_EXPIRATION, KADM5_ATTRIBUTES, KADM5_MAX_LIFE, KADM5_KVNO, KADM5_POLICY, KADM5_CLEARPOLICY, KADM5_MAX_RLIFE."}],"ret_type":"bool"}]},"kadm5_delete_principal":{"desc":"Deletes a kerberos principal","long_desc":"Removes the principal from the Kerberos database.","ver":"PECL kadm5 >= 0.2.3","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.kadm5-delete-principal","name":"kadm5_delete_principal","params":[{"list":[{"type":"resource","var":"$handle","beh":0,"desc":"A KADM5 handle."},{"type":"string","var":"$principal","beh":0,"desc":"The removed principal."}],"ret_type":"bool"}]},"kadm5_destroy":{"desc":"Closes the connection to the admin server and releases all related resources","long_desc":"Closes the connection to the admin server and releases all related resources.","ver":"PECL kadm5 >= 0.2.3","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.kadm5-destroy","name":"kadm5_destroy","params":[{"list":[],"ret_type":"bool"}]},"kadm5_flush":{"desc":"Flush all changes to the Kerberos database","long_desc":"Flush all changes to the Kerberos database, leaving the connection to the Kerberos admin server open.","ver":"PECL kadm5 >= 0.2.3","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.kadm5-flush","name":"kadm5_flush","params":[{"list":[],"ret_type":"bool"}]},"kadm5_get_policies":{"desc":"Gets all policies from the Kerberos database","long_desc":"Gets an array containing the policies's names.","ver":"PECL kadm5 >= 0.2.3","ret_desc":"Returns array of policies on success or FALSE on failure.","url":"function.kadm5-get-policies","name":"kadm5_get_policies","params":[{"list":[],"ret_type":"array"}]},"kadm5_get_principal":{"desc":"Gets the principal's entries from the Kerberos database","long_desc":"Gets the principal's entries from the Kerberos database.","ver":"PECL kadm5 >= 0.2.3","ret_desc":"Returns array of options containing the following keys: KADM5_PRINCIPAL, KADM5_PRINC_EXPIRE_TIME, KADM5_PW_EXPIRATION, KADM5_ATTRIBUTES, KADM5_MAX_LIFE, KADM5_MOD_NAME, KADM5_MOD_TIME, KADM5_KVNO, KADM5_POLICY, KADM5_MAX_RLIFE, KADM5_LAST_SUCCESS, KADM5_LAST_FAILED, KADM5_FAIL_AUTH_COUNT on success or FALSE on failure.","seealso":[],"url":"function.kadm5-get-principal","name":"kadm5_get_principal","params":[{"list":[{"type":"resource","var":"$handle","beh":0,"desc":"A KADM5 handle."},{"type":"string","var":"$principal","beh":0,"desc":"The principal."}],"ret_type":"array"}]},"kadm5_get_principals":{"desc":"Gets all principals from the Kerberos database","long_desc":"kadm5_get_principals() returns an array containing the principals's names.","ver":"PECL kadm5 >= 0.2.3","ret_desc":"Returns array of principals on success or FALSE on failure.","seealso":[],"url":"function.kadm5-get-principals","name":"kadm5_get_principals","params":[{"list":[],"ret_type":"array"}]},"kadm5_init_with_password":{"desc":"Opens a connection to the KADM5 library","long_desc":"Opens a connection with the KADM5 library using the principal and the given password to obtain initial credentials from the admin_server.","ver":"PECL kadm5 >= 0.2.3","ret_desc":"Returns a KADM5 handle on success or FALSE on failure.","seealso":[],"url":"function.kadm5-init-with-password","name":"kadm5_init_with_password","params":[{"list":[{"type":"string","var":"$admin_server","beh":0,"desc":"The server."},{"type":"string","var":"$realm","beh":0,"desc":"Defines the authentication domain for the connection."},{"type":"string","var":"$principal","beh":1,"desc":"The principal."},{"type":"string","var":"$password","beh":1,"desc":"If password is omitted or is NULL, a random key will be generated."}],"ret_type":"resource"}]},"kadm5_modify_principal":{"desc":"Modifies a kerberos principal with the given parameters","long_desc":"Modifies a principal according to the given options.","ver":"PECL kadm5 >= 0.2.3","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.kadm5-modify-principal","name":"kadm5_modify_principal","params":[{"list":[{"type":"resource","var":"$handle","beh":0,"desc":"A KADM5 handle."},{"type":"string","var":"$principal","beh":0,"desc":"The principal."},{"type":"array","var":"$options","beh":1,"desc":"It is possible to specify several optional parameters within the array options. Allowed are the following options: KADM5_PRINC_EXPIRE_TIME, KADM5_PW_EXPIRATION, KADM5_ATTRIBUTES, KADM5_MAX_LIFE, KADM5_KVNO, KADM5_POLICY, KADM5_CLEARPOLICY, KADM5_MAX_RLIFE. KADM5_FAIL_AUTH_COUNT."}],"ret_type":"bool"}]},"key":{"desc":"Fetch a key from an array","long_desc":"key() returns the index element of the current array position.","ver":"PHP 4, PHP 5","ret_desc":"The key() function simply returns the key of the array element that's currently being pointed to by the internal pointer. It does not move the pointer in any way. If the internal pointer points beyond the end of the elements list or the array is empty, key() returns NULL.","seealso":[],"url":"function.key","name":"key","params":[{"list":[],"ret_type":"mixed"}]},"krsort":{"desc":"Sort an array by key in reverse order","long_desc":"Sorts an array by key in reverse order, maintaining key to data correlations. This is useful mainly for associative arrays.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.krsort","name":"krsort","params":[{"list":[{"type":"array","var":"&$array","beh":0,"desc":"The input array."},{"type":"int","var":"$sort_flags","beh":0,"desc":"You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().","def":"SORT_REGULAR"}],"ret_type":"bool"}]},"ksort":{"desc":"Sort an array by key","long_desc":"Sorts an array by key, maintaining key to data correlations. This is useful mainly for associative arrays.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ksort","name":"ksort","params":[{"list":[{"type":"array","var":"&$array","beh":0,"desc":"The input array."},{"type":"int","var":"$sort_flags","beh":0,"desc":"You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().","def":"SORT_REGULAR"}],"ret_type":"bool"}]},"lcfirst":{"desc":"Make a string's first character lowercase","long_desc":"Returns a string with the first character of str , lowercased if that character is alphabetic. Note that 'alphabetic' is determined by the current locale. For instance, in the default \"C\" locale characters such as umlaut-a (\u00e4) will not be converted.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the resulting string.","seealso":[],"url":"function.lcfirst","name":"lcfirst","params":[{"list":[],"ret_type":"string"}]},"lcg_value":{"desc":"Combined linear congruential generator","long_desc":"lcg_value() returns a pseudo random number in the range of (0, 1). The function combines two CGs with periods of 2^31 - 85 and 2^31 - 249. The period of this function is equal to the product of both primes.","ver":"PHP 4, PHP 5","ret_desc":"A pseudo random float value in the range of (0, 1)","seealso":[],"url":"function.lcg-value","name":"lcg_value","params":[{"list":[],"ret_type":"float"}]},"lchgrp":{"desc":"Changes group ownership of symlink","long_desc":"Attempts to change the group of the symlink filename to group. Only the superuser may change the group of a symlink arbitrarily; other users may change the group of a symlink to any group of which that user is a member.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.lchgrp","name":"lchgrp","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"Path to the symlink."},{"type":"mixed","var":"$group","beh":0,"desc":"The group specified by name or number."}],"ret_type":"bool"}]},"lchown":{"desc":"Changes user ownership of symlink","long_desc":"Attempts to change the owner of the symlink filename to user user. Only the superuser may change the owner of a symlink.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.lchown","name":"lchown","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"Path to the file."},{"type":"mixed","var":"$user","beh":0,"desc":"User name or number."}],"ret_type":"bool"}]},"ldap_8859_to_t61":{"desc":"Translate 8859 characters to t61 characters","long_desc":"Translate ISO-8859 characters to t61 characters. This function is useful if you have to talk to a legacy LDAPv2 server.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Return the t61 translation of value.","seealso":[],"url":"function.ldap-8859-to-t61","name":"ldap_8859_to_t61","params":[{"list":[],"ret_type":"string"}]},"ldap_add":{"desc":"Add entries to LDAP directory","long_desc":"Add entries in the LDAP directory.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ldap-add","name":"ldap_add","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"string","var":"$dn","beh":0,"desc":"The distinguished name of an LDAP entity."},{"type":"array","var":"$entry","beh":1,"desc":"An array that specifies the information about the entry. The values in the entries are indexed by individual attributes. In case of multiple values for an attribute, they are indexed using integers starting with 0."}],"ret_type":"bool"}]},"ldap_bind":{"desc":"Bind to LDAP directory","long_desc":"Binds to the LDAP directory with specified RDN and password.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ldap-bind","name":"ldap_bind","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":1,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"string","var":"$bind_rdn","beh":1,"desc":"","def":"NULL"},{"type":"string","var":"$bind_password","beh":1,"desc":"","def":"NULL"}],"ret_type":"bool"}]},"ldap_close":{"desc":"Alias of ldap_unbind()","long_desc":"This function is an alias of: ldap_unbind().","ver":"PHP 4, PHP 5","url":"function.ldap-close","name":"ldap_close","params":[]},"ldap_compare":{"desc":"Compare value of attribute found in entry specified with DN","long_desc":"Compare value of attribute with value of same attribute in an LDAP directory entry.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE if value matches otherwise returns FALSE. Returns -1 on error.","url":"function.ldap-compare","name":"ldap_compare","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"string","var":"$dn","beh":0,"desc":"The distinguished name of an LDAP entity."},{"type":"string","var":"$attribute","beh":1,"desc":"The attribute name."},{"type":"string","var":"$value","beh":1,"desc":"The compared value."}],"ret_type":"mixed"}]},"ldap_connect":{"desc":"Connect to an LDAP server","long_desc":"Establishes a connection to a LDAP server on a specified hostname and port.","ver":"PHP 4, PHP 5","ret_desc":"Returns a positive LDAP link identifier on success, or FALSE on error. When OpenLDAP 2.x.x is used, ldap_connect() will always return a resource as it does not actually connect but just initializes the connecting parameters. The actual connect happens with the next calls to ldap_* funcs, usually with ldap_bind().","seealso":[],"url":"function.ldap-connect","name":"ldap_connect","params":[{"list":[{"type":"string","var":"$hostname","beh":0,"desc":"If you are using OpenLDAP 2.x.x you can specify a URL instead of the hostname. To use LDAP with SSL, compile OpenLDAP 2.x.x with SSL support, configure PHP with SSL, and set this parameter as ldaps:\/\/hostname\/.","def":"NULL"},{"type":"int","var":"$port","beh":1,"desc":"The port to connect to. Not used when using URLs.","def":389}],"ret_type":"resource"}]},"ldap_control_paged_result":{"desc":"Inject paged results control","ver":"PHP 5 >= 5.4.0","url":"function.ldap-control-paged-result","name":"ldap_control_paged_result","params":[{"list":[{"type":"resource","var":"$link","beh":1,"desc":""},{"type":"int","var":"$pagesize","beh":1,"desc":""},{"type":"bool","var":"&$iscritical","beh":1,"desc":""},{"type":"string","var":"&$cookie","beh":1,"desc":""}],"ret_type":"mixed"}]},"ldap_control_paged_result_response":{"desc":"Extract paged results control response","ver":"PHP 5 >= 5.4.0","url":"function.ldap-control-paged-result-response","name":"ldap_control_paged_result_response","params":[{"list":[{"type":"resource","var":"$link","beh":1,"desc":""},{"type":"resource","var":"$result","beh":1,"desc":""},{"type":"string","var":"&$cookie","beh":1,"desc":""},{"type":"int","var":"&$estimated","beh":1,"desc":""}],"ret_type":"bool"}]},"ldap_count_entries":{"desc":"Count the number of entries in a search","long_desc":"Returns the number of entries stored in the result of previous search operations.","ver":"PHP 4, PHP 5","ret_desc":"Returns number of entries in the result or FALSE on error.","url":"function.ldap-count-entries","name":"ldap_count_entries","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"resource","var":"$result_identifier","beh":0,"desc":"The internal LDAP result."}],"ret_type":"int"}]},"ldap_delete":{"desc":"Delete an entry from a directory","long_desc":"Deletes a particular entry in LDAP directory.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ldap-delete","name":"ldap_delete","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"string","var":"$dn","beh":0,"desc":"The distinguished name of an LDAP entity."}],"ret_type":"bool"}]},"ldap_dn2ufn":{"desc":"Convert DN to User Friendly Naming format","long_desc":"Turns the specified dn, into a more user-friendly form, stripping off type names.","ver":"PHP 4, PHP 5","ret_desc":"Returns the user friendly name.","url":"function.ldap-dn2ufn","name":"ldap_dn2ufn","params":[{"list":[],"ret_type":"string"}]},"ldap_err2str":{"desc":"Convert LDAP error number into string error message","long_desc":"Returns the string error message explaining the error number errno. While LDAP errno numbers are standardized, different libraries return different or even localized textual error messages. Never check for a specific error message text, but always use an error number to check.","ver":"PHP 4, PHP 5","ret_desc":"Returns the error message, as a string.","seealso":[],"url":"function.ldap-err2str","name":"ldap_err2str","params":[{"list":[],"ret_type":"string"}]},"ldap_errno":{"desc":"Return the LDAP error number of the last LDAP command","long_desc":"Returns the standardized error number returned by the last LDAP command. This number can be converted into a textual error message using ldap_err2str().","ver":"PHP 4, PHP 5","ret_desc":"Return the LDAP error number of the last LDAP command for this link.","seealso":[],"url":"function.ldap-errno","name":"ldap_errno","params":[{"list":[],"ret_type":"int"}]},"ldap_error":{"desc":"Return the LDAP error message of the last LDAP command","long_desc":"Returns the string error message explaining the error generated by the last LDAP command for the given link_identifier. While LDAP errno numbers are standardized, different libraries return different or even localized textual error messages. Never check for a specific error message text, but always use an error number to check. Unless you lower your warning level in your php.ini sufficiently or prefix your LDAP commands with @ (at) characters to suppress warning output, the errors generated will also show up in your HTML output.","ver":"PHP 4, PHP 5","ret_desc":"Returns string error message.","seealso":[],"url":"function.ldap-error","name":"ldap_error","params":[{"list":[],"ret_type":"string"}]},"ldap_explode_dn":{"desc":"Splits DN into its component parts","long_desc":"Splits the DN returned by ldap_get_dn() and breaks it up into its component parts. Each part is known as Relative Distinguished Name, or RDN.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of all DN components. The first element in this array has count key and represents the number of returned values, next elements are numerically indexed DN components.","url":"function.ldap-explode-dn","name":"ldap_explode_dn","params":[{"list":[{"type":"string","var":"$dn","beh":0,"desc":"The distinguished name of an LDAP entity."},{"type":"int","var":"$with_attrib","beh":0,"desc":"Used to request if the RDNs are returned with only values or their attributes as well. To get RDNs with the attributes (i.e. in attribute=value format) set with_attrib to 0 and to get only values set it to 1."}],"ret_type":"array"}]},"ldap_first_attribute":{"desc":"Return first attribute","long_desc":"Gets the first attribute in the given entry. Remaining attributes are retrieved by calling ldap_next_attribute() successively. Similar to reading entries, attributes are also read one by one from a particular entry.","ver":"PHP 4, PHP 5","ret_desc":"Returns the first attribute in the entry on success and FALSE on error.","seealso":[],"url":"function.ldap-first-attribute","name":"ldap_first_attribute","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"resource","var":"$result_entry_identifier","beh":0,"desc":""}],"ret_type":"string"}]},"ldap_first_entry":{"desc":"Return first result id","long_desc":"Returns the entry identifier for first entry in the result. This entry identifier is then supplied to ldap_next_entry() routine to get successive entries from the result. Entries in the LDAP result are read sequentially using the ldap_first_entry() and ldap_next_entry() functions.","ver":"PHP 4, PHP 5","ret_desc":"Returns the result entry identifier for the first entry on success and FALSE on error.","seealso":[],"url":"function.ldap-first-entry","name":"ldap_first_entry","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"resource","var":"$result_identifier","beh":0,"desc":""}],"ret_type":"resource"}]},"ldap_first_reference":{"desc":"Return first reference","ver":"PHP 4 >= 4.0.5, PHP 5","url":"function.ldap-first-reference","name":"ldap_first_reference","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"resource","var":"$result","beh":0,"desc":""}],"ret_type":"resource"}]},"ldap_free_result":{"desc":"Free result memory","long_desc":"Frees up the memory allocated internally to store the result. All result memory will be automatically freed when the script terminates. Typically all the memory allocated for the LDAP result gets freed at the end of the script. In case the script is making successive searches which return large result sets, ldap_free_result() could be called to keep the runtime memory usage by the script low.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ldap-free-result","name":"ldap_free_result","params":[{"list":[],"ret_type":"bool"}]},"ldap_get_attributes":{"desc":"Get attributes from a search result entry","long_desc":"Reads attributes and values from an entry in the search result. Having located a specific entry in the directory, you can find out what information is held for that entry by using this call. You would use this call for an application which \"browses\" directory entries and\/or where you do not know the structure of the directory entries. In many applications you will be searching for a specific attribute such as an email address or a surname, and won't care what other data is held.","ver":"PHP 4, PHP 5","ret_desc":"Returns a complete entry information in a multi-dimensional array on success and FALSE on error.","seealso":[],"url":"function.ldap-get-attributes","name":"ldap_get_attributes","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"resource","var":"$result_entry_identifier","beh":0,"desc":""}],"ret_type":"array"}]},"ldap_get_dn":{"desc":"Get the DN of a result entry","long_desc":"Finds out the DN of an entry in the result.","ver":"PHP 4, PHP 5","ret_desc":"Returns the DN of the result entry and FALSE on error.","url":"function.ldap-get-dn","name":"ldap_get_dn","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"resource","var":"$result_entry_identifier","beh":0,"desc":""}],"ret_type":"string"}]},"ldap_get_entries":{"desc":"Get all result entries","long_desc":"Reads multiple entries from the given result, and then reading the attributes and multiple values.","ver":"PHP 4, PHP 5","ret_desc":"Returns a complete result information in a multi-dimensional array on success and FALSE on error.","seealso":[],"url":"function.ldap-get-entries","name":"ldap_get_entries","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"resource","var":"$result_identifier","beh":0,"desc":""}],"ret_type":"array"}]},"ldap_get_option":{"desc":"Get the current value for given option","long_desc":"Sets retval to the value of the specified option.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ldap-get-option","name":"ldap_get_option","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"int","var":"$option","beh":0,"desc":"The parameter option can be one of:"},{"type":"mixed","var":"&$retval","beh":1,"desc":"This will be set to the option value."}],"ret_type":"bool"}]},"ldap_get_values":{"desc":"Get all values from a result entry","long_desc":"Reads all the values of the attribute in the entry in the result. This call needs a result_entry_identifier, so needs to be preceded by one of the ldap search calls and one of the calls to get an individual entry. You application will either be hard coded to look for certain attributes (such as \"surname\" or \"mail\") or you will have to use the ldap_get_attributes() call to work out what attributes exist for a given entry.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of values for the attribute on success and FALSE on error. The number of values can be found by indexing \"count\" in the resultant array. Individual values are accessed by integer index in the array. The first index is 0.","seealso":[],"url":"function.ldap-get-values","name":"ldap_get_values","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"resource","var":"$result_entry_identifier","beh":0,"desc":""},{"type":"string","var":"$attribute","beh":1,"desc":""}],"ret_type":"array"}]},"ldap_get_values_len":{"desc":"Get all binary values from a result entry","long_desc":"Reads all the values of the attribute in the entry in the result. This function is used exactly like ldap_get_values() except that it handles binary data and not string data.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of values for the attribute on success and FALSE on error. Individual values are accessed by integer index in the array. The first index is 0. The number of values can be found by indexing \"count\" in the resultant array.","seealso":[],"url":"function.ldap-get-values-len","name":"ldap_get_values_len","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"resource","var":"$result_entry_identifier","beh":0,"desc":""},{"type":"string","var":"$attribute","beh":1,"desc":""}],"ret_type":"array"}]},"ldap_list":{"desc":"Single-level search","long_desc":"Performs the search for a specified filter on the directory with the scope LDAP_SCOPE_ONELEVEL. LDAP_SCOPE_ONELEVEL means that the search should only return information that is at the level immediately below the base_dn given in the call. (Equivalent to typing \"ls\" and getting a list of files and folders in the current working directory.)","ver":"PHP 4, PHP 5","ret_desc":"Returns a search result identifier or FALSE on error.","seealso":[],"url":"function.ldap-list","name":"ldap_list","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":1,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"string","var":"$base_dn","beh":1,"desc":"The base DN for the directory."},{"type":"string","var":"$filter","beh":1,"desc":""},{"type":"array","var":"$attributes","beh":1,"desc":"An array of the required attributes, e.g. array(\"mail\", \"sn\", \"cn\"). Note that the \"dn\" is always returned irrespective of which attributes types are requested. Using this parameter is much more efficient than the default action (which is to return all attributes and their associated values). The use of this parameter should therefore be considered good practice."},{"type":"int","var":"$attrsonly","beh":1,"desc":"Should be set to 1 if only attribute types are wanted. If set to 0 both attributes types and attribute values are fetched which is the default behaviour."},{"type":"int","var":"$sizelimit","beh":1,"desc":"Enables you to limit the count of entries fetched. Setting this to 0 means no limit."},{"type":"int","var":"$timelimit","beh":1,"desc":"Sets the number of seconds how long is spend on the search. Setting this to 0 means no limit."},{"type":"int","var":"$deref","beh":1,"desc":"Specifies how aliases should be handled during the search. It can be one of the following:"}],"ret_type":"resource"}]},"ldap_mod_add":{"desc":"Add attribute values to current attributes","long_desc":"Adds one or more attributes to the specified dn. It performs the modification at the attribute level as opposed to the object level. Object-level additions are done by the ldap_add() function.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ldap-mod-add","name":"ldap_mod_add","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"string","var":"$dn","beh":0,"desc":"The distinguished name of an LDAP entity."},{"type":"array","var":"$entry","beh":1,"desc":""}],"ret_type":"bool"}]},"ldap_mod_del":{"desc":"Delete attribute values from current attributes","long_desc":"Removes one or more attributes from the specified dn. It performs the modification at the attribute level as opposed to the object level. Object-level deletions are done by the ldap_delete() function.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ldap-mod-del","name":"ldap_mod_del","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"string","var":"$dn","beh":0,"desc":"The distinguished name of an LDAP entity."},{"type":"array","var":"$entry","beh":1,"desc":""}],"ret_type":"bool"}]},"ldap_mod_replace":{"desc":"Replace attribute values with new ones","long_desc":"Replaces one or more attributes from the specified dn. It performs the modification at the attribute level as opposed to the object level. Object-level modifications are done by the ldap_modify() function.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ldap-mod-replace","name":"ldap_mod_replace","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"string","var":"$dn","beh":0,"desc":"The distinguished name of an LDAP entity."},{"type":"array","var":"$entry","beh":1,"desc":""}],"ret_type":"bool"}]},"ldap_modify":{"desc":"Modify an LDAP entry","long_desc":"Modify the existing entries in the LDAP directory. The structure of the entry is same as in ldap_add().","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ldap-modify","name":"ldap_modify","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"string","var":"$dn","beh":0,"desc":"The distinguished name of an LDAP entity."},{"type":"array","var":"$entry","beh":1,"desc":""}],"ret_type":"bool"}]},"ldap_next_attribute":{"desc":"Get the next attribute in result","long_desc":"Retrieves the attributes in an entry. The first call to ldap_next_attribute() is made with the result_entry_identifier returned from ldap_first_attribute().","ver":"PHP 4, PHP 5","ret_desc":"Returns the next attribute in an entry on success and FALSE on error.","seealso":[],"url":"function.ldap-next-attribute","name":"ldap_next_attribute","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"resource","var":"$result_entry_identifier","beh":0,"desc":""}],"ret_type":"string"}]},"ldap_next_entry":{"desc":"Get next result entry","long_desc":"Retrieve the entries stored in the result. Successive calls to the ldap_next_entry() return entries one by one till there are no more entries. The first call to ldap_next_entry() is made after the call to ldap_first_entry() with the result_entry_identifier as returned from the ldap_first_entry().","ver":"PHP 4, PHP 5","ret_desc":"Returns entry identifier for the next entry in the result whose entries are being read starting with ldap_first_entry(). If there are no more entries in the result then it returns FALSE.","seealso":[],"url":"function.ldap-next-entry","name":"ldap_next_entry","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"resource","var":"$result_entry_identifier","beh":0,"desc":""}],"ret_type":"resource"}]},"ldap_next_reference":{"desc":"Get next reference","ver":"PHP 4 >= 4.0.5, PHP 5","url":"function.ldap-next-reference","name":"ldap_next_reference","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"resource","var":"$entry","beh":0,"desc":""}],"ret_type":"resource"}]},"ldap_parse_reference":{"desc":"Extract information from reference entry","ver":"PHP 4 >= 4.0.5, PHP 5","url":"function.ldap-parse-reference","name":"ldap_parse_reference","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"resource","var":"$entry","beh":0,"desc":""},{"type":"array","var":"&$referrals","beh":1,"desc":""}],"ret_type":"bool"}]},"ldap_parse_result":{"desc":"Extract information from result","ver":"PHP 4 >= 4.0.5, PHP 5","url":"function.ldap-parse-result","name":"ldap_parse_result","params":[{"list":[{"type":"resource","var":"$link","beh":1,"desc":""},{"type":"resource","var":"$result","beh":1,"desc":""},{"type":"int","var":"&$errcode","beh":1,"desc":""},{"type":"string","var":"&$matcheddn","beh":1,"desc":""},{"type":"string","var":"&$errmsg","beh":1,"desc":""},{"type":"array","var":"&$referrals","beh":1,"desc":""}],"ret_type":"bool"}]},"ldap_read":{"desc":"Read an entry","long_desc":"Performs the search for a specified filter on the directory with the scope LDAP_SCOPE_BASE. So it is equivalent to reading an entry from the directory.","ver":"PHP 4, PHP 5","ret_desc":"Returns a search result identifier or FALSE on error.","url":"function.ldap-read","name":"ldap_read","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":1,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"string","var":"$base_dn","beh":1,"desc":"The base DN for the directory."},{"type":"string","var":"$filter","beh":1,"desc":"An empty filter is not allowed. If you want to retrieve absolutely all information for this entry, use a filter of objectClass=*. If you know which entry types are used on the directory server, you might use an appropriate filter such as objectClass=inetOrgPerson."},{"type":"array","var":"$attributes","beh":1,"desc":"An array of the required attributes, e.g. array(\"mail\", \"sn\", \"cn\"). Note that the \"dn\" is always returned irrespective of which attributes types are requested. Using this parameter is much more efficient than the default action (which is to return all attributes and their associated values). The use of this parameter should therefore be considered good practice."},{"type":"int","var":"$attrsonly","beh":1,"desc":"Should be set to 1 if only attribute types are wanted. If set to 0 both attributes types and attribute values are fetched which is the default behaviour."},{"type":"int","var":"$sizelimit","beh":1,"desc":"Enables you to limit the count of entries fetched. Setting this to 0 means no limit."},{"type":"int","var":"$timelimit","beh":1,"desc":"Sets the number of seconds how long is spend on the search. Setting this to 0 means no limit."},{"type":"int","var":"$deref","beh":1,"desc":"Specifies how aliases should be handled during the search. It can be one of the following:"}],"ret_type":"resource"}]},"ldap_rename":{"desc":"Modify the name of an entry","long_desc":"The entry specified by dn is renamed\/moved.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ldap-rename","name":"ldap_rename","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"string","var":"$dn","beh":0,"desc":"The distinguished name of an LDAP entity."},{"type":"string","var":"$newrdn","beh":1,"desc":"The new RDN."},{"type":"string","var":"$newparent","beh":1,"desc":"The new parent\/superior entry."},{"type":"bool","var":"$deleteoldrdn","beh":1,"desc":"If TRUE the old RDN value(s) is removed, else the old RDN value(s) is retained as non-distinguished values of the entry."}],"ret_type":"bool"}]},"ldap_sasl_bind":{"desc":"Bind to LDAP directory using SASL","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ldap-sasl-bind","name":"ldap_sasl_bind","params":[{"list":[{"type":"resource","var":"$link","beh":1,"desc":""},{"type":"string","var":"$binddn","beh":1,"desc":"","def":"NULL"},{"type":"string","var":"$password","beh":1,"desc":"","def":"NULL"},{"type":"string","var":"$sasl_mech","beh":1,"desc":"","def":"NULL"},{"type":"string","var":"$sasl_realm","beh":1,"desc":"","def":"NULL"},{"type":"string","var":"$sasl_authc_id","beh":1,"desc":"","def":"NULL"},{"type":"string","var":"$sasl_authz_id","beh":1,"desc":"","def":"NULL"},{"type":"string","var":"$props","beh":1,"desc":"","def":"NULL"}],"ret_type":"bool"}]},"ldap_search":{"desc":"Search LDAP tree","long_desc":"Performs the search for a specified filter on the directory with the scope of LDAP_SCOPE_SUBTREE. This is equivalent to searching the entire directory. From 4.0.5 on it's also possible to do parallel searches. To do this you use an array of link identifiers, rather than a single identifier, as the first argument. If you don't want the same base DN and the same filter for all the searches, you can also use an array of base DNs and\/or an array of filters. Those arrays must be of the same size as the link identifier array since the first entries of the arrays are used for one search, the second entries are used for another, and so on. When doing parallel searches an array of search result identifiers is returned, except in case of error, then the entry corresponding to the search will be FALSE. This is very much like the value normally returned, except that a result identifier is always returned when a search was made. There are some rare cases where the normal search returns FALSE while the parallel search returns an identifier.","ver":"PHP 4, PHP 5","ret_desc":"Returns a search result identifier or FALSE on error.","url":"function.ldap-search","name":"ldap_search","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":1,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"string","var":"$base_dn","beh":1,"desc":"The base DN for the directory."},{"type":"string","var":"$filter","beh":1,"desc":"The search filter can be simple or advanced, using boolean operators in the format described in the LDAP documentation (see the \u00bb\u00a0Netscape Directory SDK for full information on filters)."},{"type":"array","var":"$attributes","beh":1,"desc":"An array of the required attributes, e.g. array(\"mail\", \"sn\", \"cn\"). Note that the \"dn\" is always returned irrespective of which attributes types are requested. Using this parameter is much more efficient than the default action (which is to return all attributes and their associated values). The use of this parameter should therefore be considered good practice."},{"type":"int","var":"$attrsonly","beh":1,"desc":"Should be set to 1 if only attribute types are wanted. If set to 0 both attributes types and attribute values are fetched which is the default behaviour."},{"type":"int","var":"$sizelimit","beh":1,"desc":"Enables you to limit the count of entries fetched. Setting this to 0 means no limit."},{"type":"int","var":"$timelimit","beh":1,"desc":"Sets the number of seconds how long is spend on the search. Setting this to 0 means no limit."},{"type":"int","var":"$deref","beh":1,"desc":"Specifies how aliases should be handled during the search. It can be one of the following:"}],"ret_type":"resource"}]},"ldap_set_option":{"desc":"Set the value of the given option","long_desc":"Sets the value of the specified option to be newval.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ldap-set-option","name":"ldap_set_option","params":[{"list":[{"type":"resource","var":"$link_identifier","beh":0,"desc":"An LDAP link identifier, returned by ldap_connect()."},{"type":"int","var":"$option","beh":0,"desc":"The parameter option can be one of: LDAP_OPT_SERVER_CONTROLS and LDAP_OPT_CLIENT_CONTROLS require a list of controls, this means that the value must be an array of controls. A control consists of an oid identifying the control, an optional value, and an optional flag for criticality. In PHP a control is given by an array containing an element with the key oid and string value, and two optional elements. The optional elements are key value with string value and key iscritical with boolean value. iscritical defaults to FALSE if not supplied. See \u00bb\u00a0draft-ietf-ldapext-ldap-c-api-xx.txt for details. See also the second example below."},{"type":"mixed","var":"$newval","beh":1,"desc":"The new value for the specified option."}],"ret_type":"bool"}]},"ldap_set_rebind_proc":{"desc":"Set a callback function to do re-binds on referral chasing","ver":"PHP 4 >= 4.2.0, PHP 5","url":"function.ldap-set-rebind-proc","name":"ldap_set_rebind_proc","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"callable","var":"$callback","beh":0,"desc":""}],"ret_type":"bool"}]},"ldap_sort":{"desc":"Sort LDAP result entries","ver":"PHP 4 >= 4.2.0, PHP 5","url":"function.ldap-sort","name":"ldap_sort","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"resource","var":"$result","beh":0,"desc":""},{"type":"string","var":"$sortfilter","beh":1,"desc":""}],"ret_type":"bool"}]},"ldap_start_tls":{"desc":"Start TLS","ver":"PHP 4 >= 4.2.0, PHP 5","url":"function.ldap-start-tls","name":"ldap_start_tls","params":[{"list":[],"ret_type":"bool"}]},"ldap_t61_to_8859":{"desc":"Translate t61 characters to 8859 characters","ver":"PHP 4 >= 4.0.2, PHP 5","url":"function.ldap-t61-to-8859","name":"ldap_t61_to_8859","params":[{"list":[],"ret_type":"string"}]},"ldap_unbind":{"desc":"Unbind from LDAP directory","long_desc":"Unbinds from the LDAP directory.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ldap-unbind","name":"ldap_unbind","params":[{"list":[],"ret_type":"bool"}]},"levenshtein":{"desc":"Calculate Levenshtein distance between two strings","long_desc":"The Levenshtein distance is defined as the minimal number of characters you have to replace, insert or delete to transform str1 into str2. The complexity of the algorithm is O(m*n), where n and m are the length of str1 and str2 (rather good when compared to similar_text(), which is O(max(n,m)**3), but still expensive). In its simplest form the function will take only the two strings as parameter and will calculate just the number of insert, replace and delete operations needed to transform str1 into str2. A second variant will take three additional parameters that define the cost of insert, replace and delete operations. This is more general and adaptive than variant one, but not as efficient.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"This function returns the Levenshtein-Distance between the two argument strings or -1, if one of the argument strings is longer than the limit of 255 characters.","seealso":[],"url":"function.levenshtein","name":"levenshtein","params":[{"list":[{"type":"string","var":"$str1","beh":0,"desc":"One of the strings being evaluated for Levenshtein distance."},{"type":"string","var":"$str2","beh":0,"desc":"One of the strings being evaluated for Levenshtein distance."}],"ret_type":"int"},{"list":[{"type":"string","var":"$str1","beh":0,"desc":"One of the strings being evaluated for Levenshtein distance."},{"type":"string","var":"$str2","beh":0,"desc":"One of the strings being evaluated for Levenshtein distance."},{"type":"int","var":"$cost_ins","beh":1,"desc":"Defines the cost of insertion."},{"type":"int","var":"$cost_rep","beh":1,"desc":"Defines the cost of replacement."},{"type":"int","var":"$cost_del","beh":1,"desc":"Defines the cost of deletion."}],"ret_type":"int"}]},"libxml_clear_errors":{"desc":"Clear libxml error buffer","long_desc":"libxml_clear_errors() clears the libxml error buffer.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"function.libxml-clear-errors","name":"libxml_clear_errors","params":[{"list":[],"ret_type":"void"}]},"libxml_disable_entity_loader":{"desc":"Disable the ability to load external entities","long_desc":"Disable\/enable the ability to load external entities.","ver":"PHP 5 >= 5.2.11","ret_desc":"Returns the previous value.","seealso":[],"url":"function.libxml-disable-entity-loader","name":"libxml_disable_entity_loader","params":[{"list":[],"ret_type":"bool"}]},"libxml_get_errors":{"desc":"Retrieve array of errors","long_desc":"Retrieve array of errors.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns an array with LibXMLError objects if there are any errors in the buffer, or an empty array otherwise.","seealso":[],"url":"function.libxml-get-errors","name":"libxml_get_errors","params":[{"list":[],"ret_type":"array"}]},"libxml_get_last_error":{"desc":"Retrieve last error from libxml","long_desc":"Retrieve last error from libxml.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns a LibXMLError object if there is any error in the buffer, FALSE otherwise.","seealso":[],"url":"function.libxml-get-last-error","name":"libxml_get_last_error","params":[{"list":[],"ret_type":"LibXMLError"}]},"libxml_set_external_entity_loader":{"desc":"Changes the default external entity loader","long_desc":"Changes the default external entity loader.","ver":"PHP 5 >= 5.4.0","ret_desc":"No value is returned.","seealso":[],"url":"function.libxml-set-external-entity-loader","name":"libxml_set_external_entity_loader","params":[{"list":[],"ret_type":"void"}]},"libxml_set_streams_context":{"desc":"Set the streams context for the next libxml document load or write","long_desc":"Sets the streams context for the next libxml document load or write.","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.libxml-set-streams-context","name":"libxml_set_streams_context","params":[{"list":[],"ret_type":"void"}]},"libxml_use_internal_errors":{"desc":"Disable libxml errors and allow user to fetch error information as needed","long_desc":"libxml_use_internal_errors() allows you to disable standard libxml errors and enable user error handling.","ver":"PHP 5 >= 5.1.0","ret_desc":"This function returns the previous value of use_errors.","seealso":[],"url":"function.libxml-use-internal-errors","name":"libxml_use_internal_errors","params":[{"list":[],"ret_type":"bool"}]},"link":{"desc":"Create a hard link","long_desc":"link() creates a hard link.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.link","name":"link","params":[{"list":[{"type":"string","var":"$target","beh":0,"desc":"Target of the link."},{"type":"string","var":"$link","beh":0,"desc":"The link name."}],"ret_type":"bool"}]},"linkinfo":{"desc":"Gets information about a link","long_desc":"Gets information about a link. This function is used to verify if a link (pointed to by path) really exists (using the same method as the S_ISLNK macro defined in stat.h).","ver":"PHP 4, PHP 5","ret_desc":"linkinfo() returns the st_dev field of the Unix C stat structure returned by the lstat system call. Returns 0 or FALSE in case of error.","seealso":[],"url":"function.linkinfo","name":"linkinfo","params":[{"list":[],"ret_type":"int"}]},"list":{"desc":"Assign variables as if they were an array","long_desc":"Like array(), this is not really a function, but a language construct. list() is used to assign a list of variables in one operation.","ver":"PHP 4, PHP 5","ret_desc":"Returns the assigned array.","seealso":[],"url":"function.list","name":"list","params":[{"list":[{"type":"mixed","var":"$varname","beh":0,"desc":"A variable."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"array"}]},"localeconv":{"desc":"Get numeric formatting information","long_desc":"Returns an associative array containing localized numeric and monetary formatting information.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"localeconv() returns data based upon the current locale as set by setlocale(). The associative array that is returned contains the following fields:","seealso":[],"url":"function.localeconv","name":"localeconv","params":[{"list":[],"ret_type":"array"}]},"localtime":{"desc":"Get the local time","long_desc":"The localtime() function returns an array identical to that of the structure returned by the C function call.","ver":"PHP 4, PHP 5","seealso":[],"url":"function.localtime","name":"localtime","params":[{"list":[{"type":"int","var":"$timestamp","beh":0,"desc":"The optional timestamp parameter is an integer Unix timestamp that defaults to the current local time if a timestamp is not given. In other words, it defaults to the value of time().","def":"time()"},{"type":"bool","var":"$is_associative","beh":1,"desc":"If set to FALSE or not supplied then the array is returned as a regular, numerically indexed array. If the argument is set to TRUE then localtime() returns an associative array containing all the different elements of the structure returned by the C function call to localtime. The names of the different keys of the associative array are as follows:","def":"false"}],"ret_type":"array"}]},"log":{"desc":"Natural logarithm","long_desc":"If the optional base parameter is specified, log() returns logbasearg, otherwise log() returns the natural logarithm of arg.","ver":"PHP 4, PHP 5","ret_desc":"The logarithm of arg to base, if given, or the natural logarithm.","seealso":[],"url":"function.log","name":"log","params":[{"list":[{"type":"float","var":"$arg","beh":0,"desc":"The value to calculate the logarithm for"},{"type":"float","var":"$base","beh":0,"desc":"The optional logarithmic base to use (defaults to 'e' and so to the natural logarithm).","def":"M_E"}],"ret_type":"float"}]},"log10":{"desc":"Base-10 logarithm","long_desc":"Returns the base-10 logarithm of arg.","ver":"PHP 4, PHP 5","ret_desc":"The base-10 logarithm of arg","seealso":[],"url":"function.log10","name":"log10","params":[{"list":[],"ret_type":"float"}]},"log1p":{"desc":"Returns log(1 + number), computed in a way that is accurate even when the value of number is close to zero","long_desc":"log1p() returns log(1 + number) computed in a way that is accurate even when the value of number is close to zero. log() might only return log(1) in this case due to lack of precision.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"log(1 + number)","seealso":[],"url":"function.log1p","name":"log1p","params":[{"list":[],"ret_type":"float"}]},"long2ip":{"desc":"Converts an (IPv4) Internet network address into a string in Internet standard dotted format","long_desc":"The function long2ip() generates an Internet address in dotted format (i.e.: aaa.bbb.ccc.ddd) from the proper address representation.","ver":"PHP 4, PHP 5","ret_desc":"Returns the Internet IP address as a string.","seealso":[],"url":"function.long2ip","name":"long2ip","params":[{"list":[],"ret_type":"string"}]},"lstat":{"desc":"Gives information about a file or symbolic link","long_desc":"Gathers the statistics of the file or symbolic link named by filename.","ver":"PHP 4, PHP 5","ret_desc":"See the manual page for stat() for information on the structure of the array that lstat() returns. This function is identical to the stat() function except that if the filename parameter is a symbolic link, the status of the symbolic link is returned, not the status of the file pointed to by the symbolic link.","seealso":[],"url":"function.lstat","name":"lstat","params":[{"list":[],"ret_type":"array"}]},"ltrim":{"desc":"Strip whitespace (or other characters) from the beginning of a string","long_desc":"Strip whitespace (or other characters) from the beginning of a string.","ver":"PHP 4, PHP 5","ret_desc":"This function returns a string with whitespace stripped from the beginning of str. Without the second parameter, ltrim() will strip these characters:","seealso":[],"url":"function.ltrim","name":"ltrim","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The input string."},{"type":"string","var":"$charlist","beh":1,"desc":"You can also specify the characters you want to strip, by means of the charlist parameter. Simply list all characters that you want to be stripped. With .. you can specify a range of characters."}],"ret_type":"string"}]},"lzf_compress":{"desc":"LZF compression","long_desc":"lzf_compress() compresses the given data string using LZF encoding.","ver":"PECL lzf >= 0.1.0","ret_desc":"Returns the compressed data or FALSE if an error occurred.","seealso":[],"url":"function.lzf-compress","name":"lzf_compress","params":[{"list":[],"ret_type":"string"}]},"lzf_decompress":{"desc":"LZF decompression","long_desc":"lzf_compress() decompresses the given data string containing lzf encoded data.","ver":"PECL lzf >= 0.1.0","ret_desc":"Returns the decompressed data or FALSE if an error occurred.","seealso":[],"url":"function.lzf-decompress","name":"lzf_decompress","params":[{"list":[],"ret_type":"string"}]},"lzf_optimized_for":{"desc":"Determines what LZF extension was optimized for","long_desc":"Determines what was LZF extension optimized for during compilation.","ver":"PECL lzf >= 1.0.0","ret_desc":"Returns 1 if LZF was optimized for speed, 0 for compression.","url":"function.lzf-optimized-for","name":"lzf_optimized_for","params":[{"list":[],"ret_type":"int"}]},"m_checkstatus":{"desc":"Check to see if a transaction has completed","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-checkstatus","name":"m_checkstatus","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$identifier","beh":0,"desc":""}],"ret_type":"int"}]},"m_completeauthorizations":{"desc":"Number of complete authorizations in queue, returning an array of their identifiers","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"What the function returns, first on success, then on failure. See also the &return.success; entity","url":"function.m-completeauthorizations","name":"m_completeauthorizations","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"&$array","beh":0,"desc":"Its description"}],"ret_type":"int"}]},"m_connect":{"desc":"Establish the connection to MCVE","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-connect","name":"m_connect","params":[{"list":[],"ret_type":"int"}]},"m_connectionerror":{"desc":"Get a textual representation of why a connection failed","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-connectionerror","name":"m_connectionerror","params":[{"list":[],"ret_type":"string"}]},"m_deletetrans":{"desc":"Delete specified transaction from MCVE_CONN structure","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-deletetrans","name":"m_deletetrans","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$identifier","beh":0,"desc":""}],"ret_type":"bool"}]},"m_destroyconn":{"desc":"Destroy the connection and MCVE_CONN structure","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"Returns TRUE.","seealso":[],"url":"function.m-destroyconn","name":"m_destroyconn","params":[{"list":[],"ret_type":"bool"}]},"m_destroyengine":{"desc":"Free memory associated with IP\/SSL connectivity","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"No value is returned.","url":"function.m-destroyengine","name":"m_destroyengine","params":[{"list":[],"ret_type":"void"}]},"m_getcell":{"desc":"Get a specific cell from a comma delimited response by column name","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-getcell","name":"m_getcell","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$identifier","beh":0,"desc":""},{"type":"string","var":"$column","beh":1,"desc":""},{"type":"int","var":"$row","beh":1,"desc":""}],"ret_type":"string"}]},"m_getcellbynum":{"desc":"Get a specific cell from a comma delimited response by column number","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-getcellbynum","name":"m_getcellbynum","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$identifier","beh":0,"desc":""},{"type":"int","var":"$column","beh":1,"desc":""},{"type":"int","var":"$row","beh":1,"desc":""}],"ret_type":"string"}]},"m_getcommadelimited":{"desc":"Get the RAW comma delimited data returned from MCVE","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-getcommadelimited","name":"m_getcommadelimited","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$identifier","beh":0,"desc":""}],"ret_type":"string"}]},"m_getheader":{"desc":"Get the name of the column in a comma-delimited response","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-getheader","name":"m_getheader","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$identifier","beh":0,"desc":""},{"type":"int","var":"$column_num","beh":1,"desc":""}],"ret_type":"string"}]},"m_initconn":{"desc":"Create and initialize an MCVE_CONN structure","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"Returns an MCVE_CONN resource.","seealso":[],"url":"function.m-initconn","name":"m_initconn","params":[{"list":[],"ret_type":"resource"}]},"m_initengine":{"desc":"Ready the client for IP\/SSL Communication","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-initengine","name":"m_initengine","params":[{"list":[],"ret_type":"int"}]},"m_iscommadelimited":{"desc":"Checks to see if response is comma delimited","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-iscommadelimited","name":"m_iscommadelimited","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$identifier","beh":0,"desc":""}],"ret_type":"int"}]},"m_maxconntimeout":{"desc":"The maximum amount of time the API will attempt a connection to MCVE","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-maxconntimeout","name":"m_maxconntimeout","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$secs","beh":0,"desc":""}],"ret_type":"bool"}]},"m_monitor":{"desc":"Perform communication with MCVE (send\/receive data) Non-blocking","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-monitor","name":"m_monitor","params":[{"list":[],"ret_type":"int"}]},"m_numcolumns":{"desc":"Number of columns returned in a comma delimited response","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-numcolumns","name":"m_numcolumns","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$identifier","beh":0,"desc":""}],"ret_type":"int"}]},"m_numrows":{"desc":"Number of rows returned in a comma delimited response","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-numrows","name":"m_numrows","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$identifier","beh":0,"desc":""}],"ret_type":"int"}]},"m_parsecommadelimited":{"desc":"Parse the comma delimited response so m_getcell, etc will work","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-parsecommadelimited","name":"m_parsecommadelimited","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$identifier","beh":0,"desc":""}],"ret_type":"int"}]},"m_responsekeys":{"desc":"Returns array of strings which represents the keys that can be used for response parameters on this transaction","ver":"PHP 5 >= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-responsekeys","name":"m_responsekeys","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$identifier","beh":0,"desc":""}],"ret_type":"array"}]},"m_responseparam":{"desc":"Get a custom response parameter","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-responseparam","name":"m_responseparam","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$identifier","beh":0,"desc":""},{"type":"string","var":"$key","beh":1,"desc":""}],"ret_type":"string"}]},"m_returnstatus":{"desc":"Check to see if the transaction was successful","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-returnstatus","name":"m_returnstatus","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$identifier","beh":0,"desc":""}],"ret_type":"int"}]},"m_setblocking":{"desc":"Set blocking\/non-blocking mode for connection","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-setblocking","name":"m_setblocking","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$tf","beh":0,"desc":""}],"ret_type":"int"}]},"m_setdropfile":{"desc":"Set the connection method to Drop-File","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-setdropfile","name":"m_setdropfile","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"string","var":"$directory","beh":0,"desc":""}],"ret_type":"int"}]},"m_setip":{"desc":"Set the connection method to IP","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-setip","name":"m_setip","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"string","var":"$host","beh":0,"desc":""},{"type":"int","var":"$port","beh":1,"desc":""}],"ret_type":"int"}]},"m_setssl":{"desc":"Set the connection method to SSL","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-setssl","name":"m_setssl","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"string","var":"$host","beh":0,"desc":""},{"type":"int","var":"$port","beh":1,"desc":""}],"ret_type":"int"}]},"m_setssl_cafile":{"desc":"Set SSL CA (Certificate Authority) file for verification of server certificate","ver":"PHP 5 >= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-setssl-cafile","name":"m_setssl_cafile","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"string","var":"$cafile","beh":0,"desc":""}],"ret_type":"int"}]},"m_setssl_files":{"desc":"Set certificate key files and certificates if server requires client certificate verification","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-setssl-files","name":"m_setssl_files","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"string","var":"$sslkeyfile","beh":0,"desc":""},{"type":"string","var":"$sslcertfile","beh":1,"desc":""}],"ret_type":"int"}]},"m_settimeout":{"desc":"Set maximum transaction time (per trans)","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-settimeout","name":"m_settimeout","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$seconds","beh":0,"desc":""}],"ret_type":"int"}]},"m_sslcert_gen_hash":{"desc":"Generate hash for SSL client certificate verification","ver":"PECL mcve >= 5.2.0","ret_desc":"","url":"function.m-sslcert-gen-hash","name":"m_sslcert_gen_hash","params":[{"list":[],"ret_type":"string"}]},"m_transactionssent":{"desc":"Check to see if outgoing buffer is clear","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-transactionssent","name":"m_transactionssent","params":[{"list":[],"ret_type":"int"}]},"m_transinqueue":{"desc":"Number of transactions in client-queue","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-transinqueue","name":"m_transinqueue","params":[{"list":[],"ret_type":"int"}]},"m_transkeyval":{"desc":"Add key\/value pair to a transaction. Replaces deprecated transparam()","ver":"PHP 5 >= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-transkeyval","name":"m_transkeyval","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$identifier","beh":0,"desc":""},{"type":"string","var":"$key","beh":1,"desc":""},{"type":"string","var":"$value","beh":1,"desc":""}],"ret_type":"int"}]},"m_transnew":{"desc":"Start a new transaction","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-transnew","name":"m_transnew","params":[{"list":[],"ret_type":"int"}]},"m_transsend":{"desc":"Finalize and send the transaction","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-transsend","name":"m_transsend","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$identifier","beh":0,"desc":""}],"ret_type":"int"}]},"m_uwait":{"desc":"Wait x microsecs","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-uwait","name":"m_uwait","params":[{"list":[],"ret_type":"int"}]},"m_validateidentifier":{"desc":"Whether or not to validate the passed identifier on any transaction it is passed to","ver":"PHP 5 >= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-validateidentifier","name":"m_validateidentifier","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$tf","beh":0,"desc":""}],"ret_type":"int"}]},"m_verifyconnection":{"desc":"Set whether or not to PING upon connect to verify connection","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-verifyconnection","name":"m_verifyconnection","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$tf","beh":0,"desc":""}],"ret_type":"bool"}]},"m_verifysslcert":{"desc":"Set whether or not to verify the server ssl certificate","ver":"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0","ret_desc":"","url":"function.m-verifysslcert","name":"m_verifysslcert","params":[{"list":[{"type":"resource","var":"$conn","beh":0,"desc":"An MCVE_CONN resource returned by m_initengine()."},{"type":"int","var":"$tf","beh":0,"desc":""}],"ret_type":"bool"}]},"magic_quotes_runtime":{"desc":"Alias of set_magic_quotes_runtime()","long_desc":"This function is an alias of: set_magic_quotes_runtime()","ver":"PHP 4, PHP 5","url":"function.magic-quotes-runtime","name":"magic_quotes_runtime","params":[]},"mail":{"desc":"Send mail","long_desc":"Sends an email.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the mail was successfully accepted for delivery, FALSE otherwise.","seealso":[],"url":"function.mail","name":"mail","params":[{"list":[{"type":"string","var":"$to","beh":1,"desc":"Receiver, or receivers of the mail. The formatting of this string must comply with \u00bb\u00a0RFC 2822. Some examples are:"},{"type":"string","var":"$subject","beh":1,"desc":"Subject of the email to be sent."},{"type":"string","var":"$message","beh":1,"desc":"Message to be sent. Each line should be separated with a LF (\\n). Lines should not be larger than 70 characters."},{"type":"string","var":"$additional_headers","beh":1,"desc":"String to be inserted at the end of the email header. This is typically used to add extra headers (From, Cc, and Bcc). Multiple extra headers should be separated with a CRLF (\\r\\n)."},{"type":"string","var":"$additional_parameters","beh":1,"desc":"The additional_parameters parameter can be used to pass additional flags as command line options to the program configured to be used when sending mail, as defined by the sendmail_path configuration setting. For example, this can be used to set the envelope sender address when using sendmail with the -f sendmail option. The user that the webserver runs as should be added as a trusted user to the sendmail configuration to prevent a 'X-Warning' header from being added to the message when the envelope sender (-f) is set using this method. For sendmail users, this file is \/etc\/mail\/trusted-users."}],"ret_type":"bool"}]},"mailparse_determine_best_xfer_encoding":{"desc":"Gets the best way of encoding","long_desc":"Figures out the best way of encoding the content read from the given file pointer.","ver":"PECL mailparse >= 0.9.0","ret_desc":"Returns one of the character encodings supported by the mbstring module.","url":"function.mailparse-determine-best-xfer-encoding","name":"mailparse_determine_best_xfer_encoding","params":[{"list":[],"ret_type":"string"}]},"mailparse_msg_create":{"desc":"Create a mime mail resource","long_desc":"Create a MIME mail resource.","ver":"PECL mailparse >= 0.9.0","ret_desc":"Returns a handle that can be used to parse a message.","seealso":[],"url":"function.mailparse-msg-create","name":"mailparse_msg_create","params":[{"list":[],"ret_type":"resource"}]},"mailparse_msg_extract_part":{"desc":"Extracts\/decodes a message section","ver":"PECL mailparse >= 0.9.0","ret_desc":"No value is returned.","seealso":[],"url":"function.mailparse-msg-extract-part","name":"mailparse_msg_extract_part","params":[{"list":[{"type":"resource","var":"$mimemail","beh":0,"desc":"A valid MIME resource."},{"type":"string","var":"$msgbody","beh":1,"desc":""},{"type":"callable","var":"$callbackfunc","beh":1,"desc":""}],"ret_type":"void"}]},"mailparse_msg_extract_part_file":{"desc":"Extracts\/decodes a message section","long_desc":"Extracts\/decodes a message section from the supplied filename. The contents of the section will be decoded according to their transfer encoding - base64, quoted-printable and uuencoded text are supported.","ver":"PECL mailparse >= 0.9.0","ret_desc":"If callbackfunc is not NULL returns TRUE on success.","seealso":[],"url":"function.mailparse-msg-extract-part-file","name":"mailparse_msg_extract_part_file","params":[{"list":[{"type":"resource","var":"$mimemail","beh":0,"desc":"A valid MIME resource, created with mailparse_msg_create()."},{"type":"mixed","var":"$filename","beh":1,"desc":"Can be a file name or a valid stream resource."},{"type":"callable","var":"$callbackfunc","beh":1,"desc":"If set, this must be either a valid callback that will be passed the extracted section, or NULL to make this function return the extracted section. If not specified, the contents will be sent to \"stdout\"."}],"ret_type":"string"}]},"mailparse_msg_extract_whole_part_file":{"desc":"Extracts a message section including headers without decoding the transfer encoding","ver":"PECL mailparse >= 0.9.0","ret_desc":"","seealso":[],"url":"function.mailparse-msg-extract-whole-part-file","name":"mailparse_msg_extract_whole_part_file","params":[{"list":[{"type":"resource","var":"$mimemail","beh":0,"desc":"A valid MIME resource."},{"type":"string","var":"$filename","beh":1,"desc":""},{"type":"callable","var":"$callbackfunc","beh":1,"desc":""}],"ret_type":"string"}]},"mailparse_msg_free":{"desc":"Frees a MIME resource","long_desc":"Frees a MIME resource.","ver":"PECL mailparse >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mailparse-msg-free","name":"mailparse_msg_free","params":[{"list":[],"ret_type":"bool"}]},"mailparse_msg_get_part":{"desc":"Returns a handle on a given section in a mimemessage","ver":"PECL mailparse >= 0.9.0","url":"function.mailparse-msg-get-part","name":"mailparse_msg_get_part","params":[{"list":[{"type":"resource","var":"$mimemail","beh":0,"desc":"A valid MIME resource."},{"type":"string","var":"$mimesection","beh":0,"desc":""}],"ret_type":"resource"}]},"mailparse_msg_get_part_data":{"desc":"Returns an associative array of info about the message","ver":"PECL mailparse >= 0.9.0","url":"function.mailparse-msg-get-part-data","name":"mailparse_msg_get_part_data","params":[{"list":[],"ret_type":"array"}]},"mailparse_msg_get_structure":{"desc":"Returns an array of mime section names in the supplied message","ver":"PECL mailparse >= 0.9.0","url":"function.mailparse-msg-get-structure","name":"mailparse_msg_get_structure","params":[{"list":[],"ret_type":"array"}]},"mailparse_msg_parse":{"desc":"Incrementally parse data into buffer","long_desc":"Incrementally parse data into the supplied mime mail resource. This function allow you to stream portions of a file at a time, rather than read and parse the whole thing.","ver":"PECL mailparse >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.mailparse-msg-parse","name":"mailparse_msg_parse","params":[{"list":[{"type":"resource","var":"$mimemail","beh":0,"desc":"A valid MIME resource."},{"type":"string","var":"$data","beh":0,"desc":""}],"ret_type":"bool"}]},"mailparse_msg_parse_file":{"desc":"Parses a file","long_desc":"Parses a file. This is the optimal way of parsing a mail file that you have on disk.","ver":"PECL mailparse >= 0.9.0","ret_desc":"Returns a MIME resource representing the structure, or FALSE on error.","seealso":[],"url":"function.mailparse-msg-parse-file","name":"mailparse_msg_parse_file","params":[{"list":[],"ret_type":"resource"}]},"mailparse_rfc822_parse_addresses":{"desc":"Parse RFC 822 compliant addresses","long_desc":"Parses a \u00bb\u00a0RFC 822 compliant recipient list, such as that found in the To: header.","ver":"PECL mailparse >= 0.9.0","ret_desc":"Returns an array of associative arrays with the following keys for each recipient:","url":"function.mailparse-rfc822-parse-addresses","name":"mailparse_rfc822_parse_addresses","params":[{"list":[],"ret_type":"array"}]},"mailparse_stream_encode":{"desc":"Streams data from source file pointer, apply encoding and write to destfp","long_desc":"Streams data from the source file pointer, apply encoding and write to the destination file pointer.","ver":"PECL mailparse >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.mailparse-stream-encode","name":"mailparse_stream_encode","params":[{"list":[{"type":"resource","var":"$sourcefp","beh":0,"desc":"A valid file handle. The file is streamed through the parser."},{"type":"resource","var":"$destfp","beh":0,"desc":"The destination file handle in which the encoded data will be written."},{"type":"string","var":"$encoding","beh":1,"desc":"One of the character encodings supported by the mbstring module."}],"ret_type":"bool"}]},"mailparse_uudecode_all":{"desc":"Scans the data from fp and extract each embedded uuencoded file","long_desc":"Scans the data from the given file pointer and extract each embedded uuencoded file into a temporary file.","ver":"PECL mailparse >= 0.9.0","ret_desc":"Returns an array of associative arrays listing filename information.","url":"function.mailparse-uudecode-all","name":"mailparse_uudecode_all","params":[{"list":[],"ret_type":"array"}]},"main":{"desc":"Dummy for main()","long_desc":"There is no function named main() except in the PHP source. In PHP 4.3.0, a new type of error handling in the PHP source (php_error_docref) was introduced. One feature is to provide links to a manual page in PHP error messages when the PHP directives html_errors (on by default) and docref_root (on by default until PHP 4.3.2) are set. Sometimes error messages refer to a manual page for the function main() which is why this page exists. If you discover such a reference, please \u00bb\u00a0file a bug report, indicating the PHP function caused the error that linked to main() and it will be fixed and properly documented.","seealso":[],"url":"function.main","name":"main","params":[]},"max":{"desc":"Find highest value","long_desc":"If the first and only parameter is an array, max() returns the highest value in that array. If at least two parameters are provided, max() returns the biggest of these values.","ver":"PHP 4, PHP 5","ret_desc":"max() returns the numerically highest of the parameter values. If multiple values can be considered of the same size, the one that is listed first will be returned.","seealso":[],"url":"function.max","name":"max","params":[{"list":[],"ret_type":"mixed"},{"list":[{"type":"mixed","var":"$value1","beh":0,"desc":"An array containing the values."},{"type":"mixed","var":"$value2","beh":1,"desc":""},{"type":"mixed","var":"$value3...","beh":1,"desc":""}],"ret_type":"mixed"}]},"maxdb_affected_rows":{"desc":"Gets the number of affected rows in a previous MaxDB operation","long_desc":"Procedural styleObject oriented style maxdb_affected_rows() returns the number of rows affected by the last INSERT, UPDATE, or DELETE query associated with the provided link parameter. If this number cannot be determined, this function will return -1. The maxdb_affected_rows() function only works with queries which modify a table. In order to return the number of rows from a SELECT query, use the maxdb_num_rows() function instead.","ver":"PECL maxdb >= 1.0","ret_desc":"An integer greater than zero indicates the number of rows affected or retrieved. Zero indicates that no records where updated for an UPDATE statement, no rows matched the WHERE clause in the query or that no query has yet been executed. -1 indicates that the number of rows affected can not be determined.","seealso":[],"url":"function.maxdb-affected-rows","name":"maxdb_affected_rows","params":[{"list":[],"ret_type":"int"}]},"maxdb_autocommit":{"desc":"Turns on or off auto-commiting database modifications","long_desc":"Procedural styleObject oriented style maxdb_autocommit() is used to turn on or off auto-commit mode on queries for the database connection represented by the link resource.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-autocommit","name":"maxdb_autocommit","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"bool","var":"$mode","beh":0,"desc":""}],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_bind_param":{"desc":"Alias of maxdb_stmt_bind_param()","long_desc":"This function is an alias of: maxdb_stmt_bind_param() This function alias is deprecated and only exists for backwards compatibility reasons. The use of this function is not recommended, as it may be removed from PHP in the future.","ver":"PECL maxdb 1.0","url":"function.maxdb-bind-param","name":"maxdb_bind_param","params":[]},"maxdb_bind_result":{"desc":"Alias of maxdb_stmt_bind_result()","long_desc":"This function is an alias of: maxdb_stmt_bind_result(). This function alias is deprecated and only exists for backwards compatibility reasons. The use of this function is not recommended, as it may be removed from PHP in the future.","ver":"PECL maxdb 1.0","url":"function.maxdb-bind-result","name":"maxdb_bind_result","params":[]},"maxdb_change_user":{"desc":"Changes the user of the specified database connection","long_desc":"Procedural styleObject oriented style maxdb_change_user() is used to change the user of the specified database connection as given by the link parameter and to set the current database to that specified by the database parameter. In order to successfully change users a valid username and password parameters must be provided and that user must have sufficient permissions to access the desired database. If for any reason authorization fails, the current user authentication will remain.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-change-user","name":"maxdb_change_user","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"string","var":"$user","beh":0,"desc":""},{"type":"string","var":"$password","beh":1,"desc":""},{"type":"string","var":"$database","beh":1,"desc":""}],"ret_type":"bool"},{"list":[{"type":"string","var":"$user","beh":0,"desc":""},{"type":"string","var":"$password","beh":0,"desc":""},{"type":"string","var":"$database","beh":1,"desc":""}],"ret_type":"bool"}]},"maxdb_character_set_name":{"desc":"Returns the default character set for the database connection","long_desc":"Procedural styleObject oriented style Returns the current character set for the database connection specified by the link parameter.","ver":"PECL maxdb >= 1.0","ret_desc":"The default character set for the current connection, either ascii or unicode.","seealso":[],"url":"function.maxdb-character-set-name","name":"maxdb_character_set_name","params":[{"list":[],"ret_type":"string"},{"list":[],"ret_type":"string"}]},"maxdb_client_encoding":{"desc":"Alias of maxdb_character_set_name()","long_desc":"This function is an alias of: maxdb_character_set_name(). This function alias is deprecated and only exists for backwards compatibility reasons. The use of this function is not recommended, as it may be removed from PHP in the future.","ver":"PECL maxdb 1.0","url":"function.maxdb-client-encoding","name":"maxdb_client_encoding","params":[]},"maxdb_close":{"desc":"Closes a previously opened database connection","long_desc":"Procedural styleObject oriented style The maxdb_close() function closes a previously opened database connection specified by the link parameter.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-close","name":"maxdb_close","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_close_long_data":{"desc":"Alias of maxdb_stmt_close_long_data()","long_desc":"This function is an alias of: maxdb_stmt_close_long_data(). This function alias is deprecated and only exists for backwards compatibility reasons. The use of this function is not recommended, as it may be removed from PHP in the future.","ver":"PECL maxdb >= 1.0","url":"function.maxdb-close-long-data","name":"maxdb_close_long_data","params":[]},"maxdb_commit":{"desc":"Commits the current transaction","long_desc":"Procedural styleObject oriented style Commits the current transaction for the database connection specified by the link parameter.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-commit","name":"maxdb_commit","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_connect":{"desc":"Open a new connection to the MaxDB server","long_desc":"Procedural styleObject oriented style The maxdb_connect() function attempts to open a connection to the MaxDB Server running on host which can be either a host name or an IP address. Passing the string \"localhost\" to this parameter, the local host is assumed. If successful, the maxdb_connect() will return an resource representing the connection to the database or FALSE on failure. The username and password parameters specify the username and password under which to connect to the MaxDB server. If the password is not provided (the NULL value is passed), the MaxDB server will attempt to authenticate the user against the maxdb.default_pw in php.ini. The dbname parameter if provided will specify the default database to be used when performing queries. If not provied, the entry maxdb.default_db in php.ini is used. The port and socket parameters are ignored for the MaxDB server.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns a resource which represents the connection to a MaxDB Server or FALSE if the connection failed.","url":"function.maxdb-connect","name":"maxdb_connect","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":""},{"type":"string","var":"$username","beh":1,"desc":""},{"type":"string","var":"$passwd","beh":1,"desc":""},{"type":"string","var":"$dbname","beh":1,"desc":""},{"type":"int","var":"$port","beh":1,"desc":"","def":0},{"type":"string","var":"$socket","beh":1,"desc":""}],"ret_type":"resource"}]},"maxdb_connect_errno":{"desc":"Returns the error code from last connect call","long_desc":"The maxdb_connect_errno() function will return the last error code number for last call to maxdb_connect(). If no errors have occured, this function will return zero.","ver":"PECL maxdb >= 1.0","ret_desc":"An error code value for the last call to maxdb_connect(), if it failed. zero means no error occurred.","seealso":[],"url":"function.maxdb-connect-errno","name":"maxdb_connect_errno","params":[{"list":[],"ret_type":"int"}]},"maxdb_connect_error":{"desc":"Returns a string description of the last connect error","long_desc":"The maxdb_connect_error() function is identical to the corresponding maxdb_connect_errno() function in every way, except instead of returning an integer error code the maxdb_connect_error() function will return a string representation of the last error to occur for the last maxdb_connect() call. If no error has occured, this function will return an empty string.","ver":"PECL maxdb >= 1.0","ret_desc":"A string that describes the error. An empty string if no error occurred.","seealso":[],"url":"function.maxdb-connect-error","name":"maxdb_connect_error","params":[{"list":[],"ret_type":"string"}]},"maxdb_data_seek":{"desc":"Adjusts the result pointer to an arbitary row in the result","long_desc":"Procedural styleObject oriented style The maxdb_data_seek() function seeks to an arbitrary result pointer specified by the offset in the result set represented by result. The offset parameter must be between zero and the total number of rows minus one (0..maxdb_num_rows() - 1).","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-data-seek","name":"maxdb_data_seek","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":""},{"type":"int","var":"$offset","beh":0,"desc":""}],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_debug":{"desc":"Performs debugging operations","long_desc":"The maxdb_debug() can be used to trace the SQLDBC communication. The following strings can be used as a parameter to maxdb_debug():","ver":"PECL maxdb >= 1.0","ret_desc":"maxdb_debug() doesn't return any value.","url":"function.maxdb-debug","name":"maxdb_debug","params":[{"list":[],"ret_type":"void"}]},"maxdb_disable_reads_from_master":{"desc":"Disable reads from master","long_desc":"Procedural styleObject oriented style","ver":"PECL maxdb >= 1.0","url":"function.maxdb-disable-reads-from-master","name":"maxdb_disable_reads_from_master","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"void"}]},"maxdb_disable_rpl_parse":{"desc":"Disable RPL parse","ver":"PECL maxdb >= 1.0","url":"function.maxdb-disable-rpl-parse","name":"maxdb_disable_rpl_parse","params":[{"list":[],"ret_type":"bool"}]},"maxdb_dump_debug_info":{"desc":"Dump debugging information into the log","ver":"PECL maxdb >= 1.0","url":"function.maxdb-dump-debug-info","name":"maxdb_dump_debug_info","params":[{"list":[],"ret_type":"bool"}]},"maxdb_embedded_connect":{"desc":"Open a connection to an embedded MaxDB server","ver":"PECL maxdb >= 1.0","url":"function.maxdb-embedded-connect","name":"maxdb_embedded_connect","params":[{"list":[],"ret_type":"resource"}]},"maxdb_enable_reads_from_master":{"desc":"Enable reads from master","ver":"PECL maxdb >= 1.0","url":"function.maxdb-enable-reads-from-master","name":"maxdb_enable_reads_from_master","params":[{"list":[],"ret_type":"bool"}]},"maxdb_enable_rpl_parse":{"desc":"Enable RPL parse","ver":"PECL maxdb >= 1.0","url":"function.maxdb-enable-rpl-parse","name":"maxdb_enable_rpl_parse","params":[{"list":[],"ret_type":"bool"}]},"maxdb_errno":{"desc":"Returns the error code for the most recent function call","long_desc":"Procedural styleObject oriented style The maxdb_errno() function will return the last error code for the most recent MaxDB function call that can succeed or fail with respect to the database link defined by the link parameter. If no errors have occured, this function will return zero.","ver":"PECL maxdb >= 1.0","ret_desc":"An error code value for the last call, if it failed. zero means no error occurred.","seealso":[],"url":"function.maxdb-errno","name":"maxdb_errno","params":[{"list":[],"ret_type":"int"}]},"maxdb_error":{"desc":"Returns a string description of the last error","long_desc":"Procedural styleObject oriented style The maxdb_error() function is identical to the corresponding maxdb_errno() function in every way, except instead of returning an integer error code the maxdb_error() function will return a string representation of the last error to occur for the database connection represented by the link parameter. If no error has occured, this function will return an empty string.","ver":"PECL maxdb >= 1.0","ret_desc":"A string that describes the error. An empty string if no error occurred.","seealso":[],"url":"function.maxdb-error","name":"maxdb_error","params":[{"list":[],"ret_type":"string"}]},"maxdb_escape_string":{"desc":"Alias of maxdb_real_escape_string()","long_desc":"This function is an alias of: maxdb_real_escape_string().","ver":"PECL maxdb 1.0","url":"function.maxdb-escape-string","name":"maxdb_escape_string","params":[]},"maxdb_execute":{"desc":"Alias of maxdb_stmt_execute()","long_desc":"This function is an alias of: maxdb_stmt_execute(). This function alias is deprecated and only exists for backwards compatibility reasons. The use of this function is not recommended, as it may be removed from PHP in the future.","ver":"PECL maxdb 1.0","url":"function.maxdb-execute","name":"maxdb_execute","params":[]},"maxdb_fetch":{"desc":"Alias of maxdb_stmt_fetch()","long_desc":"This function is an alias of: maxdb_stmt_fetch(). This function alias is deprecated and only exists for backwards compatibility reasons. The use of this function is not recommended, as it may be removed from PHP in the future.","ver":"PECL maxdb 1.0","url":"function.maxdb-fetch","name":"maxdb_fetch","params":[]},"maxdb_fetch_array":{"desc":"Fetch a result row as an associative, a numeric array, or both","long_desc":"Procedural styleObject oriented style Returns an array that corresponds to the fetched row or NULL if there are no more rows for the resultset represented by the result parameter. maxdb_fetch_array() is an extended version of the maxdb_fetch_row() function. In addition to storing the data in the numeric indices of the result array, the maxdb_fetch_array() function can also store the data in associative indices, using the field names of the result set as keys. If two or more columns of the result have the same field names, the last column will take precedence and overwrite the earlier data. In order to access multiple columns with the same name, the numerically indexed version of the row must be used. The optional second argument resulttype is a constant indicating what type of array should be produced from the current row data. The possible values for this parameter are the constants MAXDB_ASSOC, MAXDB_ASSOC_UPPER, MAXDB_ASSOC_LOWER, MAXDB_NUM, or MAXDB_BOTH. By default the maxdb_fetch_array() function will assume MAXDB_BOTH, which is a combination of MAXDB_NUM and MAXDB_ASSOC for this parameter. By using the MAXDB_ASSOC constant this function will behave identically to the maxdb_fetch_assoc(), while MAXDB_NUM will behave identically to the maxdb_fetch_row() function. The final option MAXDB_BOTH will create a single array with the attributes of both. By using the MAXDB_ASSOC_UPPER constant, the behaviour of this function is identical to the use of MAXDB_ASSOC except the array index of a column is the fieldname in upper case. By using the MAXDB_ASSOC_LOWER constant, the behaviour of this function is identical to the use of MAXDB_ASSOC except the array index of a column is the fieldname in lower case.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns an array that corresponds to the fetched row or NULL if there are no more rows in resultset.","seealso":[],"url":"function.maxdb-fetch-array","name":"maxdb_fetch_array","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":""},{"type":"int","var":"$resulttype","beh":1,"desc":""}],"ret_type":"mixed"},{"list":[],"ret_type":"mixed"}]},"maxdb_fetch_assoc":{"desc":"Fetch a result row as an associative array","long_desc":"Procedural styleObject oriented style Returns an associative array that corresponds to the fetched row or NULL if there are no more rows. The maxdb_fetch_assoc() function is used to return an associative array representing the next row in the result set for the result represented by the result parameter, where each key in the array represents the name of one of the result set's columns. If two or more columns of the result have the same field names, the last column will take precedence. To access the other column(s) of the same name, you either need to access the result with numeric indices by using maxdb_fetch_row() or add alias names.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns an array that corresponds to the fetched row or NULL if there are no more rows in resultset.","seealso":[],"url":"function.maxdb-fetch-assoc","name":"maxdb_fetch_assoc","params":[{"list":[],"ret_type":"array"},{"list":[],"ret_type":"array"}]},"maxdb_fetch_field":{"desc":"Returns the next field in the result set","long_desc":"Procedural styleObject oriented style The maxdb_fetch_field() returns the definition of one column of a result set as an resource. Call this function repeatedly to retrieve information about all columns in the result set. maxdb_fetch_field() returns FALSE when no more fields are left.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns an resource which contains field definition information or FALSE if no field information is available.","seealso":[],"url":"function.maxdb-fetch-field","name":"maxdb_fetch_field","params":[{"list":[],"ret_type":"mixed"},{"list":[],"ret_type":"mixed"}]},"maxdb_fetch_field_direct":{"desc":"Fetch meta-data for a single field","long_desc":"Procedural styleObject oriented style maxdb_fetch_field_direct() returns an resource which contains field definition information from specified resultset. The value of fieldnr must be in the range from 0 to number of fields - 1.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns an resource which contains field definition information or FALSE if no field information for specified fieldnr is available.","seealso":[],"url":"function.maxdb-fetch-field-direct","name":"maxdb_fetch_field_direct","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":""},{"type":"int","var":"$fieldnr","beh":0,"desc":""}],"ret_type":"mixed"},{"list":[],"ret_type":"mixed"}]},"maxdb_fetch_fields":{"desc":"Returns an array of resources representing the fields in a result set","long_desc":"Procedural styleObject oriented style This function serves an identical purpose to the maxdb_fetch_field() function with the single difference that, instead of returning one resource at a time for each field, the columns are returned as an array of resources.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns an array of resources which contains field definition information or FALSE if no field information is available.","seealso":[],"url":"function.maxdb-fetch-fields","name":"maxdb_fetch_fields","params":[{"list":[],"ret_type":"mixed"},{"list":[],"ret_type":"mixed"}]},"maxdb_fetch_lengths":{"desc":"Returns the lengths of the columns of the current row in the result set","long_desc":"Procedural styleObject oriented style The maxdb_fetch_lengths() function returns an array containing the lengths of every column of the current row within the result set represented by the result parameter. If successful, a numerically indexed array representing the lengths of each column is returned or FALSE on failure.","ver":"PECL maxdb >= 1.0","ret_desc":"An array of integers representing the size of each column (not including any terminating null characters). FALSE if an error occurred.","url":"function.maxdb-fetch-lengths","name":"maxdb_fetch_lengths","params":[{"list":[],"ret_type":"array"}]},"maxdb_fetch_object":{"desc":"Returns the current row of a result set as an object","long_desc":"Procedural styleObject oriented style The maxdb_fetch_object() will return the current row result set as an object where the attributes of the object represent the names of the fields found within the result set. If no more rows exist in the current result set, NULL is returned.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns an object that corresponds to the fetched row or NULL if there are no more rows in resultset.","seealso":[],"url":"function.maxdb-fetch-object","name":"maxdb_fetch_object","params":[{"list":[],"ret_type":"object"},{"list":[],"ret_type":"object"}]},"maxdb_fetch_row":{"desc":"Get a result row as an enumerated array","long_desc":"Procedural styleObject oriented style Returns an array that corresponds to the fetched row, or NULL if there are no more rows. maxdb_fetch_row() fetches one row of data from the result set represented by result and returns it as an enumerated array, where each column is stored in an array offset starting from 0 (zero). Each subsequent call to the maxdb_fetch_row() function will return the next row within the result set, or FALSE if there are no more rows.","ver":"PECL maxdb >= 1.0","ret_desc":"maxdb_fetch_row() returns an array that corresponds to the fetched row or NULL if there are no more rows in result set.","seealso":[],"url":"function.maxdb-fetch-row","name":"maxdb_fetch_row","params":[{"list":[],"ret_type":"mixed"},{"list":[],"ret_type":"mixed"}]},"maxdb_field_count":{"desc":"Returns the number of columns for the most recent query","long_desc":"Procedural styleObject oriented style Returns the number of columns for the most recent query on the connection represented by the link parameter. This function can be useful when using the maxdb_store_result() function to determine if the query should have produced a non-empty result set or not without knowing the nature of the query.","ver":"PECL maxdb >= 1.0","ret_desc":"An integer representing the number of fields in a result set.","url":"function.maxdb-field-count","name":"maxdb_field_count","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"maxdb_field_seek":{"desc":"Set result pointer to a specified field offset","long_desc":"Procedural styleObject oriented style Sets the field cursor to the given offset. The next call to maxdb_fetch_field() will retrieve the field definition of the column associated with that offset.","ver":"PECL maxdb >= 1.0","ret_desc":"maxdb_field_seek() returns previuos value of field cursor.","seealso":[],"url":"function.maxdb-field-seek","name":"maxdb_field_seek","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":""},{"type":"int","var":"$fieldnr","beh":0,"desc":""}],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_field_tell":{"desc":"Get current field offset of a result pointer","long_desc":"Procedural styleObject oriented style Returns the position of the field cursor used for the last maxdb_fetch_field() call. This value can be used as an argument to maxdb_field_seek().","ver":"PECL maxdb >= 1.0","ret_desc":"Returns current offset of field cursor.","seealso":[],"url":"function.maxdb-field-tell","name":"maxdb_field_tell","params":[{"list":[],"ret_type":"int"}]},"maxdb_free_result":{"desc":"Frees the memory associated with a result","long_desc":"Procedural styleObject oriented style The maxdb_free_result() function frees the memory associated with the result represented by the result parameter, which was allocated by maxdb_query(), maxdb_store_result() or maxdb_use_result().","ver":"PECL maxdb >= 1.0","ret_desc":"This function doesn't return any value.","seealso":[],"url":"function.maxdb-free-result","name":"maxdb_free_result","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"maxdb_get_client_info":{"desc":"Returns the MaxDB client version as a string","long_desc":"The maxdb_get_client_info() function is used to return a string representing the client version being used in the MaxDB extension.","ver":"PECL maxdb >= 1.0","ret_desc":"A string that represents the MaxDB client library version","seealso":[],"url":"function.maxdb-get-client-info","name":"maxdb_get_client_info","params":[{"list":[],"ret_type":"string"}]},"maxdb_get_client_version":{"desc":"Get MaxDB client info","long_desc":"Returns client version number as an integer.","ver":"PECL maxdb >= 1.0","ret_desc":"A number that represents the MaxDB client library version in format: main_version*10000 + minor_version *100 + sub_version. For example, 7.5.0 is returned as 70500.","seealso":[],"url":"function.maxdb-get-client-version","name":"maxdb_get_client_version","params":[{"list":[],"ret_type":"int"}]},"maxdb_get_host_info":{"desc":"Returns a string representing the type of connection used","long_desc":"Procedural styleObject oriented style The maxdb_get_host_info() function returns a string describing the connection represented by the link parameter is using.","ver":"PECL maxdb >= 1.0","ret_desc":"A character string representing the server hostname and the connection type.","seealso":[],"url":"function.maxdb-get-host-info","name":"maxdb_get_host_info","params":[{"list":[],"ret_type":"string"}]},"maxdb_get_metadata":{"desc":"Alias of maxdb_stmt_result_metadata()","long_desc":"This function is an alias of: maxdb_stmt_result_metadata(). This function alias is deprecated and only exists for backwards compatibility reasons. The use of this function is not recommended, as it may be removed from PHP in the future.","ver":"PECL maxdb 1.0","url":"function.maxdb-get-metadata","name":"maxdb_get_metadata","params":[]},"maxdb_get_proto_info":{"desc":"Returns the version of the MaxDB protocol used","long_desc":"Procedural styleObject oriented style Returns an integer representing the MaxDB protocol version used by the connection represented by the link parameter.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns an integer representing the protocol version (constant 10).","seealso":[],"url":"function.maxdb-get-proto-info","name":"maxdb_get_proto_info","params":[{"list":[],"ret_type":"int"}]},"maxdb_get_server_info":{"desc":"Returns the version of the MaxDB server","long_desc":"Procedural styleObject oriented style Returns a string representing the version of the MaxDB server that the MaxDB extension is connected to (represented by the link parameter).","ver":"PECL maxdb >= 1.0","ret_desc":"A character string representing the server version.","seealso":[],"url":"function.maxdb-get-server-info","name":"maxdb_get_server_info","params":[{"list":[],"ret_type":"string"}]},"maxdb_get_server_version":{"desc":"Returns the version of the MaxDB server as an integer","long_desc":"Procedural styleObject oriented style The maxdb_get_server_version() function returns the version of the server connected to (represented by the link parameter) as an integer. The form of this version number is main_version * 10000 + minor_version * 100 + sub_version (i.e. version 7.5.0 is 70500).","ver":"PECL maxdb >= 1.0","ret_desc":"An integer representing the server version.","seealso":[],"url":"function.maxdb-get-server-version","name":"maxdb_get_server_version","params":[{"list":[],"ret_type":"int"}]},"maxdb_info":{"desc":"Retrieves information about the most recently executed query","long_desc":"Procedural styleObject oriented style The maxdb_info() function returns a string providing information about the last query executed. The nature of this string is provided below:","ver":"PECL maxdb >= 1.0","ret_desc":"A character string representing additional information about the most recently executed query.","seealso":[],"url":"function.maxdb-info","name":"maxdb_info","params":[{"list":[],"ret_type":"string"}]},"maxdb_init":{"desc":"Initializes MaxDB and returns an resource for use with maxdb_real_connect","long_desc":"Allocates or initializes a MaxDB resource suitable for maxdb_options() and maxdb_real_connect().","ver":"PECL maxdb >= 1.0","ret_desc":"Returns an resource.","seealso":[],"url":"function.maxdb-init","name":"maxdb_init","params":[{"list":[],"ret_type":"resource"}]},"maxdb_insert_id":{"desc":"Returns the auto generated id used in the last query","long_desc":"Procedural styleObject oriented style The maxdb_insert_id() function returns the ID generated by a query on a table with a column having the DEFAULT SERIAL attribute. If the last query wasn't an INSERT or UPDATE statement or if the modified table does not have a column with the DEFAULT SERIAL attribute, this function will return zero.","ver":"PECL maxdb >= 1.0","ret_desc":"The value of the DEFAULT SERIAL field that was updated by the previous query. Returns zero if there was no previous query on the connection or if the query did not update an DEFAULT_SERIAL value.","url":"function.maxdb-insert-id","name":"maxdb_insert_id","params":[{"list":[],"ret_type":"mixed"}]},"maxdb_kill":{"desc":"Disconnects from a MaxDB server","long_desc":"Procedural styleObject oriented style This function is used to disconnect from a MaxDB server specified by the processid parameter.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-kill","name":"maxdb_kill","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"int","var":"$processid","beh":0,"desc":""}],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_master_query":{"desc":"Enforce execution of a query on the master in a master\/slave setup","ver":"PECL maxdb >= 1.0","url":"function.maxdb-master-query","name":"maxdb_master_query","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"string","var":"$query","beh":0,"desc":""}],"ret_type":"bool"}]},"maxdb_more_results":{"desc":"Check if there any more query results from a multi query","long_desc":"maxdb_more_results() indicates if one or more result sets are available from a previous call to maxdb_multi_query().","ver":"PECL maxdb >= 1.0","ret_desc":"Always FALSE.","seealso":[],"url":"function.maxdb-more-results","name":"maxdb_more_results","params":[{"list":[],"ret_type":"bool"}]},"maxdb_multi_query":{"desc":"Performs a query on the database","long_desc":"Procedural styleObject oriented style The maxdb_multi_query() works like the function maxdb_query(). Multiple queries are not yet supported.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-multi-query","name":"maxdb_multi_query","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"string","var":"$query","beh":0,"desc":""}],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_next_result":{"desc":"Prepare next result from multi_query","long_desc":"Since multiple queries are not yet supported, maxdb_next_result() returns always FALSE.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns FALSE.","seealso":[],"url":"function.maxdb-next-result","name":"maxdb_next_result","params":[{"list":[],"ret_type":"bool"}]},"maxdb_num_fields":{"desc":"Get the number of fields in a result","long_desc":"Procedural styleObject oriented style maxdb_num_fields() returns the number of fields from specified result set.","ver":"PECL maxdb >= 1.0","ret_desc":"The number of fields from a result set","seealso":[],"url":"function.maxdb-num-fields","name":"maxdb_num_fields","params":[{"list":[],"ret_type":"int"}]},"maxdb_num_rows":{"desc":"Gets the number of rows in a result","long_desc":"Procedural styleObject oriented style Returns the number of rows in the result set. The use of maxdb_num_rows() depends on whether you use buffered or unbuffered result sets. In case you use unbuffered resultsets maxdb_num_rows() will not correct the correct number of rows until all the rows in the result have been retrieved.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns number of rows in the result set.","seealso":[],"url":"function.maxdb-num-rows","name":"maxdb_num_rows","params":[{"list":[],"ret_type":"int"}]},"maxdb_options":{"desc":"Set options","long_desc":"Procedural styleObject oriented style maxdb_options() can be used to set extra connect options and affect behavior for a connection. This function may be called multiple times to set several options. maxdb_options() should be called after maxdb_init() and before maxdb_real_connect(). The parameter option is the option that you want to set, the value is the value for the option. For detailed description of the options see \u00bb\u00a0http:\/\/maxdb.sap.com\/documentation\/ The parameter option can be one of the following values:","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-options","name":"maxdb_options","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"int","var":"$option","beh":0,"desc":""},{"type":"mixed","var":"$value","beh":1,"desc":""}],"ret_type":"bool"},{"list":[{"type":"int","var":"$option","beh":0,"desc":""},{"type":"mixed","var":"$value","beh":0,"desc":""}],"ret_type":"bool"}]},"maxdb_param_count":{"desc":"Alias of maxdb_stmt_param_count()","long_desc":"This function is an alias of: maxdb_stmt_param_count(). This function alias is deprecated and only exists for backwards compatibility reasons. The use of this function is not recommended, as it may be removed from PHP in the future.","ver":"PECL maxdb 1.0","url":"function.maxdb-param-count","name":"maxdb_param_count","params":[]},"maxdb_ping":{"desc":"Pings a server connection, or tries to reconnect if the connection has gone down","long_desc":"Procedural styleObject oriented style Checks whether the connection to the server is working. If it has gone down, and global option maxdb.reconnect is enabled an automatic reconnection is attempted. This function can be used by clients that remain idle for a long while, to check whether the server has closed the connection and reconnect if necessary.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.maxdb-ping","name":"maxdb_ping","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_prepare":{"desc":"Prepare an SQL statement for execution","long_desc":"Procedural styleObject oriented style maxdb_prepare() prepares the SQL query pointed to by the null-terminated string query, and returns a statement handle to be used for further operations on the statement. The query must consist of a single SQL statement. The parameter query can include one or more parameter markers in the SQL statement by embedding question mark (?) characters at the appropriate positions. The parameter markers must be bound to application variables using maxdb_stmt_bind_param() and\/or maxdb_stmt_bind_result() before executing the statement or fetching rows.","ver":"PECL maxdb >= 1.0","ret_desc":"maxdb_prepare() returns a statement resource or FALSE if an error occured.","seealso":[],"url":"function.maxdb-prepare","name":"maxdb_prepare","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"string","var":"$query","beh":0,"desc":""}],"ret_type":"resource"},{"list":[],"ret_type":"maxdb_stmt"}]},"maxdb_query":{"desc":"Performs a query on the database","long_desc":"Procedural styleObject oriented style The maxdb_query() function is used to simplify the act of performing a query against the database represented by the link parameter.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure. For SELECT, SHOW, DESCRIBE or EXPLAIN maxdb_query() will return a result resource.","seealso":[],"url":"function.maxdb-query","name":"maxdb_query","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"string","var":"$query","beh":1,"desc":""},{"type":"int","var":"$resultmode","beh":1,"desc":""}],"ret_type":"mixed"},{"list":[],"ret_type":"mixed"}]},"maxdb_real_connect":{"desc":"Opens a connection to a MaxDB server","long_desc":"Procedural styleObject oriented style maxdb_real_connect() attempts to establish a connection to a MaxDB database engine running on hostname. This function differs from maxdb_connect():","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-real-connect","name":"maxdb_real_connect","params":[{"list":[{"type":"resource","var":"$link","beh":1,"desc":""},{"type":"string","var":"$hostname","beh":1,"desc":""},{"type":"string","var":"$username","beh":1,"desc":""},{"type":"string","var":"$passwd","beh":1,"desc":""},{"type":"string","var":"$dbname","beh":1,"desc":""},{"type":"int","var":"$port","beh":1,"desc":"","def":0},{"type":"string","var":"$socket","beh":1,"desc":""}],"ret_type":"bool"},{"list":[{"type":"string","var":"$hostname","beh":1,"desc":""},{"type":"string","var":"$username","beh":1,"desc":""},{"type":"string","var":"$passwd","beh":1,"desc":""},{"type":"string","var":"$dbname","beh":1,"desc":""},{"type":"int","var":"$port","beh":1,"desc":"","def":0},{"type":"string","var":"$socket","beh":1,"desc":""}],"ret_type":"bool"}]},"maxdb_real_escape_string":{"desc":"Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection","long_desc":"Procedural styleObject oriented style This function is used to create a legal SQL string that you can use in an SQL statement. The string escapestr is encoded to an escaped SQL string, taking into account the current character set of the connection. Characters encoded are ', \".","ver":"PECL maxdb >= 1.0","ret_desc":"Returns an escaped string.","seealso":[],"url":"function.maxdb-real-escape-string","name":"maxdb_real_escape_string","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"string","var":"$escapestr","beh":0,"desc":""}],"ret_type":"string"},{"list":[],"ret_type":"string"}]},"maxdb_real_query":{"desc":"Execute an SQL query","long_desc":"Procedural styleObject oriented style The maxdb_real_query() is functionally identical with the maxdb_query().","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-real-query","name":"maxdb_real_query","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"string","var":"$query","beh":0,"desc":""}],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_report":{"desc":"Enables or disables internal report functions","ver":"PECL maxdb 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.maxdb-report","name":"maxdb_report","params":[{"list":[],"ret_type":"bool"}]},"maxdb_rollback":{"desc":"Rolls back current transaction","long_desc":"Procedural styleObject oriented style Rollbacks the current transaction for the database specified by the link parameter.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-rollback","name":"maxdb_rollback","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_rpl_parse_enabled":{"desc":"Check if RPL parse is enabled","ver":"PECL maxdb >= 1.0","url":"function.maxdb-rpl-parse-enabled","name":"maxdb_rpl_parse_enabled","params":[{"list":[],"ret_type":"int"}]},"maxdb_rpl_probe":{"desc":"RPL probe","ver":"PECL maxdb >= 1.0","url":"function.maxdb-rpl-probe","name":"maxdb_rpl_probe","params":[{"list":[],"ret_type":"bool"}]},"maxdb_rpl_query_type":{"desc":"Returns RPL query type","long_desc":"Procedural styleObject oriented style","ver":"PECL maxdb >= 1.0","url":"function.maxdb-rpl-query-type","name":"maxdb_rpl_query_type","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"maxdb_select_db":{"desc":"Selects the default database for database queries","long_desc":"The maxdb_select_db() function selects the default database (specified by the dbname parameter) to be used when performing queries against the database connection represented by the link parameter.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-select-db","name":"maxdb_select_db","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"string","var":"$dbname","beh":0,"desc":""}],"ret_type":"bool"}]},"maxdb_send_long_data":{"desc":"Alias of maxdb_stmt_send_long_data()","long_desc":"This function is an alias of: maxdb_stmt_send_long_data(). This function alias is deprecated and only exists for backwards compatibility reasons. The use of this function is not recommended, as it may be removed from PHP in the future.","ver":"PECL maxdb >= 1.0","url":"function.maxdb-send-long-data","name":"maxdb_send_long_data","params":[]},"maxdb_send_query":{"desc":"Send the query and return","long_desc":"Procedural styleObject oriented style","ver":"PECL maxdb >= 1.0","url":"function.maxdb-send-query","name":"maxdb_send_query","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"string","var":"$query","beh":0,"desc":""}],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_server_end":{"desc":"Shut down the embedded server","ver":"PECL maxdb >= 1.0","url":"function.maxdb-server-end","name":"maxdb_server_end","params":[{"list":[],"ret_type":"void"}]},"maxdb_server_init":{"desc":"Initialize embedded server","ver":"PECL maxdb >= 1.0","url":"function.maxdb-server-init","name":"maxdb_server_init","params":[{"list":[{"type":"array","var":"$server","beh":1,"desc":""},{"type":"array","var":"$groups","beh":1,"desc":""}],"ret_type":"bool"}]},"maxdb_set_opt":{"desc":"Alias of maxdb_options()","long_desc":"This function is an alias of: maxdb_options().","ver":"PECL maxdb 1.0","url":"function.maxdb-set-opt","name":"maxdb_set_opt","params":[]},"maxdb_sqlstate":{"desc":"Returns the SQLSTATE error from previous MaxDB operation","long_desc":"Procedural styleObject oriented style Returns a string containing the SQLSTATE error code for the last error. The error code consists of five characters. '00000' means no error. The values are specified by ANSI SQL and ODBC.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns a string containing the SQLSTATE error code for the last error. The error code consists of five characters. '00000' means no error.","seealso":[],"url":"function.maxdb-sqlstate","name":"maxdb_sqlstate","params":[{"list":[],"ret_type":"string"}]},"maxdb_ssl_set":{"desc":"Used for establishing secure connections using SSL","long_desc":"Procedural styleObject oriented style","ver":"PECL maxdb >= 1.0","url":"function.maxdb-ssl-set","name":"maxdb_ssl_set","params":[{"list":[{"type":"resource","var":"$link","beh":0,"desc":""},{"type":"string","var":"$key","beh":0,"desc":""},{"type":"string","var":"$cert","beh":1,"desc":""},{"type":"string","var":"$ca","beh":1,"desc":""},{"type":"string","var":"$capath","beh":1,"desc":""},{"type":"string","var":"$cipher","beh":1,"desc":""}],"ret_type":"bool"},{"list":[{"type":"string","var":"$key","beh":0,"desc":""},{"type":"string","var":"$cert","beh":0,"desc":""},{"type":"string","var":"$ca","beh":1,"desc":""},{"type":"string","var":"$capath","beh":1,"desc":""},{"type":"string","var":"$cipher","beh":1,"desc":""}],"ret_type":"bool"}]},"maxdb_stat":{"desc":"Gets the current system status","long_desc":"Procedural styleObject oriented style maxdb_stat() returns a string containing several information about the MaxDB server running.","ver":"PECL maxdb >= 1.0","ret_desc":"A string describing the server status. FALSE if an error occurred.","seealso":[],"url":"function.maxdb-stat","name":"maxdb_stat","params":[{"list":[],"ret_type":"string"},{"list":[],"ret_type":"string"}]},"maxdb_stmt_affected_rows":{"desc":"Returns the total number of rows changed, deleted, or inserted by the last executed statement","long_desc":"Procedural styleObject oriented style maxdb_stmt_affected_rows() returns the number of rows affected by INSERT, UPDATE, or DELETE query. If the last query was invalid or the number of rows can not determined, this function will return -1.","ver":"PECL maxdb >= 1.0","ret_desc":"An integer greater than zero indicates the number of rows affected or retrieved. Zero indicates that no records where updated for an UPDATE\/DELETE statement, no rows matched the WHERE clause in the query or that no query has yet been executed. -1 indicates that the query has returned an error or the number of rows can not determined.","seealso":[],"url":"function.maxdb-stmt-affected-rows","name":"maxdb_stmt_affected_rows","params":[{"list":[],"ret_type":"int"}]},"maxdb_stmt_bind_param":{"desc":"Binds variables to a prepared statement as parameters","long_desc":"Procedural styleObject oriented styleProcedural style (extended syntax):Object oriented style (extended syntax): maxdb_stmt_bind_param() is used to bind variables for the parameter markers in the SQL statement that was passed to maxdb_prepare(). The string types contains one or more characters which specify the types for the corresponding bind variables. The extended syntax of maxdb_stmt_bind_param() allows to give the parameters as an array instead of a variable list of PHP variables to the function. If the array variable has not been used before calling maxdb_stmt_bind_param(), it has to be initialized as an emtpy array. See the examples how to use maxdb_stmt_bind_param() with extended syntax. Variables for SELECT INTO SQL statements can also be bound using maxdb_stmt_bind_param(). Parameters for database procedures can be bound using maxdb_stmt_bind_param(). See the examples how to use maxdb_stmt_bind_param() in this cases. If a variable bound as INTO variable to an SQL statement was used before, the content of this variable is overwritten by the data of the SELECT INTO statement. A reference to this variable will be invalid after a call to maxdb_stmt_bind_param(). For INOUT parameters of database procedures the content of the bound INOUT variable is overwritten by the output value of the database procedure. A reference to this variable will be invalid after a call to maxdb_stmt_bind_param().","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-stmt-bind-param","name":"maxdb_stmt_bind_param","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":""},{"type":"string","var":"$types","beh":1,"desc":""},{"type":"mixed","var":"&$var1","beh":1,"desc":""},{"type":"mixed","var":"&$...","beh":1,"desc":""}],"ret_type":"bool"},{"list":[{"type":"string","var":"$types","beh":0,"desc":""},{"type":"mixed","var":"&$var1","beh":1,"desc":""},{"type":"mixed","var":"&$...","beh":1,"desc":""}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":""},{"type":"string","var":"$types","beh":0,"desc":""},{"type":"array","var":"&$var","beh":1,"desc":""}],"ret_type":"bool"},{"list":[{"type":"string","var":"$types","beh":0,"desc":""},{"type":"array","var":"&$var","beh":0,"desc":""}],"ret_type":"bool"}]},"maxdb_stmt_bind_result":{"desc":"Binds variables to a prepared statement for result storage","long_desc":"Procedural styleObject oriented style maxdb_stmt_bind_result() is used to associate (bind) columns in the result set to variables. When maxdb_stmt_fetch() is called to fetch data, the MaxDB client\/server protocol places the data for the bound columns into the specified variables var1, ....","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-stmt-bind-result","name":"maxdb_stmt_bind_result","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":""},{"type":"mixed","var":"&$var1","beh":1,"desc":""},{"type":"mixed","var":"&$...","beh":1,"desc":""}],"ret_type":"bool"},{"list":[{"type":"mixed","var":"&$var1","beh":0,"desc":""},{"type":"mixed","var":"&$...","beh":1,"desc":""}],"ret_type":"bool"}]},"maxdb_stmt_close":{"desc":"Closes a prepared statement","long_desc":"Procedural styleObject oriented style Closes a prepared statement. maxdb_stmt_close() also deallocates the statement handle pointed to by stmt. If the current statement has pending or unread results, this function cancels them so that the next query can be executed.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-stmt-close","name":"maxdb_stmt_close","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_stmt_close_long_data":{"desc":"Ends a sequence of maxdb_stmt_send_long_data()","long_desc":"Procedural styleObject oriented style This function has to be called after a sequence of maxdb_stmt_send_long_data(), that was started after maxdb_execute(). param_nr indicates which parameter to associate the end of data with. Parameters are numbered beginning with 0.","ver":"PECL maxdb 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-stmt-close-long-data","name":"maxdb_stmt_close_long_data","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":""},{"type":"int","var":"$param_nr","beh":0,"desc":""}],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_stmt_data_seek":{"desc":"Seeks to an arbitray row in statement result set","long_desc":"Procedural styleObject oriented style The maxdb_stmt_data_seek() function seeks to an arbitrary result pointer specified by the offset in the statement result set represented by statement. The offset parameter must be between zero and the total number of rows minus one (0..maxdb_stmt_num_rows() - 1).","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-stmt-data-seek","name":"maxdb_stmt_data_seek","params":[{"list":[{"type":"resource","var":"$statement","beh":0,"desc":""},{"type":"int","var":"$offset","beh":0,"desc":""}],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_stmt_errno":{"desc":"Returns the error code for the most recent statement call","long_desc":"Procedural styleObject oriented style For the statement specified by stmt, maxdb_stmt_errno() returns the error code for the most recently invoked statement function that can succeed or fail.","ver":"PECL maxdb >= 1.0","ret_desc":"An error code value. Zero means no error occurred.","seealso":[],"url":"function.maxdb-stmt-errno","name":"maxdb_stmt_errno","params":[{"list":[],"ret_type":"int"}]},"maxdb_stmt_error":{"desc":"Returns a string description for last statement error","long_desc":"Procedural styleObject oriented style For the statement specified by stmt, maxdb_stmt_error() returns a containing the error message for the most recently invoked statement function that can succeed or fail.","ver":"PECL maxdb >= 1.0","ret_desc":"A string that describes the error. An empty string if no error occurred.","seealso":[],"url":"function.maxdb-stmt-error","name":"maxdb_stmt_error","params":[{"list":[],"ret_type":"string"}]},"maxdb_stmt_execute":{"desc":"Executes a prepared Query","long_desc":"Procedural styleObject oriented style The maxdb_stmt_execute() function executes a query that has been previously prepared using the maxdb_prepare() function represented by the stmt resource. When executed any parameter markers which exist will automatically be replaced with the appropiate data. If the statement is UPDATE, DELETE, or INSERT, the total number of affected rows can be determined by using the maxdb_stmt_affected_rows() function. Likewise, if the query yields a result set the maxdb_fetch() function is used.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-stmt-execute","name":"maxdb_stmt_execute","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_stmt_fetch":{"desc":"Fetch results from a prepared statement into the bound variables","long_desc":"Procedural styleObject oriented style maxdb_stmt_fetch() returns row data using the variables bound by maxdb_stmt_bind_result().","ver":"PECL maxdb >= 1.0","seealso":[],"url":"function.maxdb-stmt-fetch","name":"maxdb_stmt_fetch","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_stmt_free_result":{"desc":"Frees stored result memory for the given statement handle","long_desc":"Procedural styleObject oriented style The maxdb_stmt_free_result() function frees the result memory associated with the statement represented by the stmt parameter, which was allocated by maxdb_stmt_store_result().","ver":"PECL maxdb >= 1.0","ret_desc":"This function doesn't return any value.","seealso":[],"url":"function.maxdb-stmt-free-result","name":"maxdb_stmt_free_result","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"maxdb_stmt_init":{"desc":"Initializes a statement and returns an resource for use with maxdb_stmt_prepare","long_desc":"Procedural styleObject oriented style Allocates and initializes a statement resource suitable for maxdb_stmt_prepare().","ver":"PECL maxdb >= 1.0","ret_desc":"Returns an resource.","seealso":[],"url":"function.maxdb-stmt-init","name":"maxdb_stmt_init","params":[{"list":[],"ret_type":"resource"},{"list":[],"ret_type":"object"}]},"maxdb_stmt_num_rows":{"desc":"Return the number of rows in statements result set","long_desc":"Procedural styleObject oriented style Returns the number of rows in the result set.","ver":"PECL maxdb >= 1.0","ret_desc":"An integer representing the number of rows in result set.","seealso":[],"url":"function.maxdb-stmt-num-rows","name":"maxdb_stmt_num_rows","params":[{"list":[],"ret_type":"int"}]},"maxdb_stmt_param_count":{"desc":"Returns the number of parameter for the given statement","long_desc":"Procedural styleObject oriented style maxdb_stmt_param_count() returns the number of parameter markers present in the prepared statement.","ver":"PECL maxdb >= 1.0","ret_desc":"returns an integer representing the number of parameters.","seealso":[],"url":"function.maxdb-stmt-param-count","name":"maxdb_stmt_param_count","params":[{"list":[],"ret_type":"int"}]},"maxdb_stmt_prepare":{"desc":"Prepare an SQL statement for execution","long_desc":"Procedural styleObject oriented style maxdb_stmt_prepare() prepares the SQL query pointed to by the null-terminated string query. The statement resource has to be allocated by maxdb_stmt_init(). The query must consist of a single SQL statement. The parameter query can include one or more parameter markers in the SQL statement by embedding question mark (?) characters at the appropriate positions. The parameter markers must be bound to application variables using maxdb_stmt_bind_param() and\/or maxdb_stmt_bind_result() before executing the statement or fetching rows.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-stmt-prepare","name":"maxdb_stmt_prepare","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":""},{"type":"string","var":"$query","beh":0,"desc":""}],"ret_type":"bool"},{"list":[],"ret_type":"mixed"}]},"maxdb_stmt_reset":{"desc":"Resets a prepared statement","long_desc":"Procedural styleObject oriented style","ver":"PECL maxdb >= 1.0","url":"function.maxdb-stmt-reset","name":"maxdb_stmt_reset","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"maxdb_stmt_result_metadata":{"desc":"Returns result set metadata from a prepared statement","long_desc":"Procedural styleObject oriented style If a statement passed to maxdb_prepare() is one that produces a result set, maxdb_stmt_result_metadata() returns the result resource that can be used to process the meta information such as total number of fields and individual field information. The result set structure should be freed when you are done with it, which you can do by passing it to maxdb_free_result()","ver":"PECL maxdb >= 1.0","ret_desc":"maxdb_stmt_result_metadata() returns a result resource or FALSE if an error occured.","seealso":[],"url":"function.maxdb-stmt-result-metadata","name":"maxdb_stmt_result_metadata","params":[{"list":[],"ret_type":"resource"},{"list":[],"ret_type":"resource"}]},"maxdb_stmt_send_long_data":{"desc":"Send data in blocks","long_desc":"Procedural styleObject oriented style Allows to send parameter data to the server in pieces (or chunks). This function can be called multiple times to send the parts of a character or binary data value for a column, which must be one of the TEXT or BLOB datatypes. param_nr indicates which parameter to associate the data with. Parameters are numbered beginning with 0. data is a string containing data to be sent.","ver":"PECL maxdb 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-stmt-send-long-data","name":"maxdb_stmt_send_long_data","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":""},{"type":"int","var":"$param_nr","beh":0,"desc":""},{"type":"string","var":"$data","beh":1,"desc":""}],"ret_type":"bool"},{"list":[{"type":"int","var":"$param_nr","beh":0,"desc":""},{"type":"string","var":"$data","beh":0,"desc":""}],"ret_type":"bool"}]},"maxdb_stmt_sqlstate":{"desc":"Returns SQLSTATE error from previous statement operation","long_desc":"Returns a string containing the SQLSTATE error code for the most recently invoked prepared statement function that can succeed or fail. The error code consists of five characters. '00000' means no error. The values are specified by ANSI SQL and ODBC.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns a string containing the SQLSTATE error code for the last error. The error code consists of five characters. '00000' means no error.","seealso":[],"url":"function.maxdb-stmt-sqlstate","name":"maxdb_stmt_sqlstate","params":[{"list":[],"ret_type":"string"}]},"maxdb_stmt_store_result":{"desc":"Transfers a result set from a prepared statement","long_desc":"Procedural styleObject oriented style maxdb_stmt_store_result() has no functionally effect and should not be used for retrieving data from MaxDB server.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.maxdb-stmt-store-result","name":"maxdb_stmt_store_result","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"object"}]},"maxdb_store_result":{"desc":"Transfers a result set from the last query","long_desc":"Procedural styleObject oriented style This function has no functionally effect.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns a result resource or FALSE if an error occurred.","seealso":[],"url":"function.maxdb-store-result","name":"maxdb_store_result","params":[{"list":[],"ret_type":"resource"},{"list":[],"ret_type":"object"}]},"maxdb_thread_id":{"desc":"Returns the thread ID for the current connection","long_desc":"Procedural styleObject oriented style The maxdb_thread_id() function returns the thread ID for the current connection which can then be killed using the maxdb_kill() function. If the connection is lost and you reconnect with maxdb_ping(), the thread ID will be other. Therefore you should get the thread ID only when you need it.","ver":"PECL maxdb >= 1.0","ret_desc":"maxdb_thread_id() returns the Thread ID for the current connection.","seealso":[],"url":"function.maxdb-thread-id","name":"maxdb_thread_id","params":[{"list":[],"ret_type":"int"}]},"maxdb_thread_safe":{"desc":"Returns whether thread safety is given or not","long_desc":"maxdb_thread_safe() indicates whether the client library is compiled as thread-safe.","ver":"PECL maxdb >= 7.6.06.04","ret_desc":"TRUE if the client library is thread-safe, otherwise FALSE.","url":"function.maxdb-thread-safe","name":"maxdb_thread_safe","params":[{"list":[],"ret_type":"bool"}]},"maxdb_use_result":{"desc":"Initiate a result set retrieval","long_desc":"Procedural styleObject oriented style maxdb_use_result() has no effect.","ver":"PECL maxdb >= 1.0","ret_desc":"Returns result or FALSE on failure.","seealso":[],"url":"function.maxdb-use-result","name":"maxdb_use_result","params":[{"list":[],"ret_type":"resource"},{"list":[],"ret_type":"resource"}]},"maxdb_warning_count":{"desc":"Returns the number of warnings from the last query for the given link","long_desc":"Procedural styleObject oriented style maxdb_warning_count() returns the number of warnings from the last query in the connection represented by the link parameter.","ver":"PECL maxdb >= 1.0","ret_desc":"Number of warnings or zero if there are no warnings.","seealso":[],"url":"function.maxdb-warning-count","name":"maxdb_warning_count","params":[{"list":[],"ret_type":"int"}]},"mb_check_encoding":{"desc":"Check if the string is valid for the specified encoding","long_desc":"Checks if the specified byte stream is valid for the specified encoding. It is useful to prevent so-called \"Invalid Encoding Attack\".","ver":"PHP 4 >= 4.4.3, PHP 5 >= 5.1.3","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.mb-check-encoding","name":"mb_check_encoding","params":[{"list":[{"type":"string","var":"$var","beh":0,"desc":"The byte stream to check. If it is omitted, this function checks all the input from the beginning of the request.","def":"NULL"},{"type":"string","var":"$encoding","beh":1,"desc":"The expected encoding.","def":"mb_internal_encoding()"}],"ret_type":"bool"}]},"mb_convert_case":{"desc":"Perform case folding on a string","long_desc":"Performs case folding on a string, converted in the way specified by mode.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"A case folded version of string converted in the way specified by mode.","seealso":[],"url":"function.mb-convert-case","name":"mb_convert_case","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string being converted."},{"type":"int","var":"$mode","beh":0,"desc":"The mode of the conversion. It can be one of MB_CASE_UPPER, MB_CASE_LOWER, or MB_CASE_TITLE.","def":"MB_CASE_UPPER"},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding parameter is the character encoding. If it is omitted, the internal character encoding value will be used.","def":"mb_internal_encoding()"}],"ret_type":"string"}]},"mb_convert_encoding":{"desc":"Convert character encoding","long_desc":"Converts the character encoding of string str to to_encoding from optionally from_encoding.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"The encoded string.","seealso":[],"url":"function.mb-convert-encoding","name":"mb_convert_encoding","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string being encoded."},{"type":"string","var":"$to_encoding","beh":1,"desc":"The type of encoding that str is being converted to."},{"type":"mixed","var":"$from_encoding","beh":1,"desc":"Is specified by character code names before conversion. It is either an array, or a comma separated enumerated list. If from_encoding is not specified, the internal encoding will be used. See supported encodings."}],"ret_type":"string"}]},"mb_convert_kana":{"desc":"Convert \"kana\" one from another (\"zen-kaku\", \"han-kaku\" and more)","long_desc":"Performs a \"han-kaku\" - \"zen-kaku\" conversion for string str. This function is only useful for Japanese.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"The converted string.","url":"function.mb-convert-kana","name":"mb_convert_kana","params":[{"list":[{"type":"string","var":"$str","beh":1,"desc":"The string being converted."},{"type":"string","var":"$option","beh":1,"desc":"The conversion option. Specify with a combination of following options.","def":"\"KV\""},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding parameter is the character encoding. If it is omitted, the internal character encoding value will be used."}],"ret_type":"string"}]},"mb_convert_variables":{"desc":"Convert character code in variable(s)","long_desc":"Converts character encoding of variables vars in encoding from_encoding to encoding to_encoding. mb_convert_variables() join strings in Array or Object to detect encoding, since encoding detection tends to fail for short strings. Therefore, it is impossible to mix encoding in single array or object.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"The character encoding before conversion for success, or FALSE for failure.","url":"function.mb-convert-variables","name":"mb_convert_variables","params":[{"list":[{"type":"string","var":"$to_encoding","beh":0,"desc":"The encoding that the string is being converted to."},{"type":"mixed","var":"$from_encoding","beh":1,"desc":"from_encoding is specified as an array or comma separated string, it tries to detect encoding from from-coding. When from_encoding is omitted, detect_order is used."},{"type":"mixed","var":"&$vars","beh":1,"desc":"vars is the reference to the variable being converted. String, Array and Object are accepted. mb_convert_variables() assumes all parameters have the same encoding."},{"type":"mixed","var":"&$...","beh":1,"desc":"Additional vars."}],"ret_type":"string"}]},"mb_decode_mimeheader":{"desc":"Decode string in MIME header field","long_desc":"Decodes encoded-word string str in MIME header.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"The decoded string in internal character encoding.","seealso":[],"url":"function.mb-decode-mimeheader","name":"mb_decode_mimeheader","params":[{"list":[],"ret_type":"string"}]},"mb_decode_numericentity":{"desc":"Decode HTML numeric string reference to character","long_desc":"Convert numeric string reference of string str in a specified block to character.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"The converted string.","seealso":[],"url":"function.mb-decode-numericentity","name":"mb_decode_numericentity","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string being decoded."},{"type":"array","var":"$convmap","beh":0,"desc":"convmap is an array that specifies the code area to convert."},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding parameter is the character encoding. If it is omitted, the internal character encoding value will be used."}],"ret_type":"string"}]},"mb_detect_encoding":{"desc":"Detect character encoding","long_desc":"Detects character encoding in string str.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"The detected character encoding or FALSE if the encoding cannot be detected from the given string.","seealso":[],"url":"function.mb-detect-encoding","name":"mb_detect_encoding","params":[{"list":[{"type":"string","var":"$str","beh":1,"desc":"The string being detected."},{"type":"mixed","var":"$encoding_list","beh":1,"desc":"encoding_list is list of character encoding. Encoding order may be specified by array or comma separated list string. If encoding_list is omitted, detect_order is used.","def":"mb_detect_order()"},{"type":"bool","var":"$strict","beh":1,"desc":"strict specifies whether to use the strict encoding detection or not. Default is FALSE.","def":"false"}],"ret_type":"string"}]},"mb_detect_order":{"desc":"Set\/Get character encoding detection order","long_desc":"Sets the automatic character encoding detection order to encoding_list.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mb-detect-order","name":"mb_detect_order","params":[{"list":[],"ret_type":"mixed"}]},"mb_encode_mimeheader":{"desc":"Encode string for MIME header","long_desc":"Encodes a given string str by the MIME header encoding scheme.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"A converted version of the string represented in ASCII.","seealso":[],"url":"function.mb-encode-mimeheader","name":"mb_encode_mimeheader","params":[{"list":[{"type":"string","var":"$str","beh":1,"desc":"The string being encoded."},{"type":"string","var":"$charset","beh":1,"desc":"charset specifies the name of the character set in which str is represented in. The default value is determined by the current NLS setting (mbstring.language). mb_internal_encoding() should be set to same encoding."},{"type":"string","var":"$transfer_encoding","beh":1,"desc":"transfer_encoding specifies the scheme of MIME encoding. It should be either \"B\" (Base64) or \"Q\" (Quoted-Printable). Falls back to \"B\" if not given."},{"type":"string","var":"$linefeed","beh":1,"desc":"linefeed specifies the EOL (end-of-line) marker with which mb_encode_mimeheader() performs line-folding (a \u00bb\u00a0RFC term, the act of breaking a line longer than a certain length into multiple lines. The length is currently hard-coded to 74 characters). Falls back to \"\\r\\n\" (CRLF) if not given.","def":"\"\\r\\n\""},{"type":"int","var":"$indent","beh":1,"desc":"Indentation of the first line (number of characters in the header before str).","def":0}],"ret_type":"string"}]},"mb_encode_numericentity":{"desc":"Encode character to HTML numeric string reference","long_desc":"Converts specified character codes in string str from HTML numeric character reference to character code.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"The converted string.","seealso":[],"url":"function.mb-encode-numericentity","name":"mb_encode_numericentity","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string being encoded."},{"type":"array","var":"$convmap","beh":0,"desc":"convmap is array specifies code area to convert."},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding parameter is the character encoding. If it is omitted, the internal character encoding value will be used."}],"ret_type":"string"}]},"mb_encoding_aliases":{"desc":"Get aliases of a known encoding type","long_desc":"Returns an array of aliases for a known encoding type.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns a numerically indexed array of encoding aliases on success, or FALSE on failure","seealso":[],"url":"function.mb-encoding-aliases","name":"mb_encoding_aliases","params":[{"list":[],"ret_type":"array"}]},"mb_ereg":{"desc":"Regular expression match with multibyte support","long_desc":"Executes the regular expression match with multibyte support.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Executes the regular expression match with multibyte support, and returns 1 if matches are found. If the optional regs parameter was specified, the function returns the byte length of matched part, and the array regs will contain the substring of matched string. The function returns 1 if it matches with the empty string. If no matches are found or an error happens, FALSE will be returned.","seealso":[],"url":"function.mb-ereg","name":"mb_ereg","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"The search pattern."},{"type":"string","var":"$string","beh":1,"desc":"The search string."},{"type":"array","var":"$regs","beh":1,"desc":"Contains a substring of the matched string."}],"ret_type":"int"}]},"mb_ereg_match":{"desc":"Regular expression match for multibyte string","long_desc":"A regular expression match for a multibyte string","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE if string matches the regular expression pattern, FALSE if not.","seealso":[],"url":"function.mb-ereg-match","name":"mb_ereg_match","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"The regular expression pattern."},{"type":"string","var":"$string","beh":1,"desc":"The string being evaluated."},{"type":"string","var":"$option","beh":1,"desc":"","def":"\"msr\""}],"ret_type":"bool"}]},"mb_ereg_replace":{"desc":"Replace regular expression with multibyte support","long_desc":"Scans string for matches to pattern, then replaces the matched text with replacement","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The resultant string on success, or FALSE on error.","seealso":[],"url":"function.mb-ereg-replace","name":"mb_ereg_replace","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"The regular expression pattern. Multibyte characters may be used in pattern."},{"type":"string","var":"$replacement","beh":1,"desc":"The replacement text."},{"type":"string","var":"$string","beh":1,"desc":"The string being checked."},{"type":"string","var":"$option","beh":1,"desc":"","def":"\"msr\""}],"ret_type":"string"}]},"mb_ereg_search":{"desc":"Multibyte regular expression match for predefined multibyte string","long_desc":"Performs a multibyte regular expression match for a predefined multibyte string.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"mb_ereg_search() returns TRUE if the multibyte string matches with the regular expression, or FALSE otherwise. The string for matching is set by mb_ereg_search_init(). If pattern is not specified, the previous one is used.","seealso":[],"url":"function.mb-ereg-search","name":"mb_ereg_search","params":[{"list":[{"type":"string","var":"$pattern","beh":1,"desc":"The search pattern."},{"type":"string","var":"$option","beh":1,"desc":"The search option.","def":"\"ms\""}],"ret_type":"bool"}]},"mb_ereg_search_getpos":{"desc":"Returns start point for next regular expression match","long_desc":"Returns the start point for the next regular expression match.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"mb_ereg_search_getpos() returns the point to start regular expression match for mb_ereg_search(), mb_ereg_search_pos(), mb_ereg_search_regs(). The position is represented by bytes from the head of string.","seealso":[],"url":"function.mb-ereg-search-getpos","name":"mb_ereg_search_getpos","params":[{"list":[],"ret_type":"int"}]},"mb_ereg_search_getregs":{"desc":"Retrieve the result from the last multibyte regular expression match","long_desc":"Retrieve the result from the last multibyte regular expression match","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"An array including the sub-string of matched part by last mb_ereg_search(), mb_ereg_search_pos(), mb_ereg_search_regs(). If there are some matches, the first element will have the matched sub-string, the second element will have the first part grouped with brackets, the third element will have the second part grouped with brackets, and so on. It returns FALSE on error;","seealso":[],"url":"function.mb-ereg-search-getregs","name":"mb_ereg_search_getregs","params":[{"list":[],"ret_type":"array"}]},"mb_ereg_search_init":{"desc":"Setup string and regular expression for a multibyte regular expression match","long_desc":"mb_ereg_search_init() sets string and pattern for a multibyte regular expression. These values are used for mb_ereg_search(), mb_ereg_search_pos(), and mb_ereg_search_regs().","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mb-ereg-search-init","name":"mb_ereg_search_init","params":[{"list":[{"type":"string","var":"$string","beh":1,"desc":"The search string."},{"type":"string","var":"$pattern","beh":1,"desc":"The search pattern."},{"type":"string","var":"$option","beh":1,"desc":"The search option.","def":"\"msr\""}],"ret_type":"bool"}]},"mb_ereg_search_pos":{"desc":"Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string","long_desc":"Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string The string for match is specified by mb_ereg_search_init(). If it is not specified, the previous one will be used.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"An array including the position of a matched part for a multibyte regular expression. The first element of the array will be the beginning of matched part, the second element will be length (bytes) of matched part. It returns FALSE on error.","seealso":[],"url":"function.mb-ereg-search-pos","name":"mb_ereg_search_pos","params":[{"list":[{"type":"string","var":"$pattern","beh":1,"desc":"The search pattern."},{"type":"string","var":"$option","beh":1,"desc":"The search option.","def":"\"ms\""}],"ret_type":"array"}]},"mb_ereg_search_regs":{"desc":"Returns the matched part of a multibyte regular expression","long_desc":"Returns the matched part of a multibyte regular expression.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"mb_ereg_search_regs() executes the multibyte regular expression match, and if there are some matched part, it returns an array including substring of matched part as first element, the first grouped part with brackets as second element, the second grouped part as third element, and so on. It returns FALSE on error.","seealso":[],"url":"function.mb-ereg-search-regs","name":"mb_ereg_search_regs","params":[{"list":[{"type":"string","var":"$pattern","beh":1,"desc":"The search pattern."},{"type":"string","var":"$option","beh":1,"desc":"The search option.","def":"\"ms\""}],"ret_type":"array"}]},"mb_ereg_search_setpos":{"desc":"Set start point of next regular expression match","long_desc":"mb_ereg_search_setpos() sets the starting point of a match for mb_ereg_search().","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mb-ereg-search-setpos","name":"mb_ereg_search_setpos","params":[{"list":[],"ret_type":"bool"}]},"mb_eregi":{"desc":"Regular expression match ignoring case with multibyte support","long_desc":"Executes the case insensitive regular expression match with multibyte support.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Executes the regular expression match with multibyte support, and returns 1 if matches are found. If the optional regs parameter was specified, the function returns the byte length of matched part, and the array regs will contain the substring of matched string. The function returns 1 if it matches with the empty string. If no matches are found or an error happens, FALSE will be returned.","seealso":[],"url":"function.mb-eregi","name":"mb_eregi","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"The regular expression pattern."},{"type":"string","var":"$string","beh":1,"desc":"The string being searched."},{"type":"array","var":"$regs","beh":1,"desc":"Contains a substring of the matched string."}],"ret_type":"int"}]},"mb_eregi_replace":{"desc":"Replace regular expression with multibyte support ignoring case","long_desc":"Scans string for matches to pattern, then replaces the matched text with replacement.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The resultant string or FALSE on error.","seealso":[],"url":"function.mb-eregi-replace","name":"mb_eregi_replace","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"The regular expression pattern. Multibyte characters may be used. The case will be ignored."},{"type":"string","var":"$replace","beh":1,"desc":"The replacement text."},{"type":"string","var":"$string","beh":1,"desc":"The searched string."},{"type":"string","var":"$option","beh":1,"desc":"","def":"\"msri\""}],"ret_type":"string"}]},"mb_get_info":{"desc":"Get internal settings of mbstring","long_desc":"mb_get_info() returns the internal setting parameters of mbstring.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"An array of type information if type is not specified, otherwise a specific type.","seealso":[],"url":"function.mb-get-info","name":"mb_get_info","params":[{"list":[],"ret_type":"mixed"}]},"mb_http_input":{"desc":"Detect HTTP input character encoding","long_desc":"Detects the HTTP input character encoding.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"The character encoding name, as per the type. If mb_http_input() does not process specified HTTP input, it returns FALSE.","seealso":[],"url":"function.mb-http-input","name":"mb_http_input","params":[{"list":[],"ret_type":"mixed"}]},"mb_http_output":{"desc":"Set\/Get HTTP output character encoding","long_desc":"Set\/Get the HTTP output character encoding. Output after this function is converted to encoding.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"If encoding is omitted, mb_http_output() returns the current HTTP output character encoding. Otherwise, Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mb-http-output","name":"mb_http_output","params":[{"list":[],"ret_type":"mixed"}]},"mb_internal_encoding":{"desc":"Set\/Get internal character encoding","long_desc":"Set\/Get the internal character encoding","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"If encoding is set, then Returns TRUE on success or FALSE on failure. If encoding is omitted, then the current character encoding name is returned.","seealso":[],"url":"function.mb-internal-encoding","name":"mb_internal_encoding","params":[{"list":[],"ret_type":"mixed"}]},"mb_language":{"desc":"Set\/Get current language","long_desc":"Set\/Get the current language.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"If language is set and language is valid, it returns TRUE. Otherwise, it returns FALSE. When language is omitted, it returns the language name as a string. If no language is set previously, it then returns FALSE.","seealso":[],"url":"function.mb-language","name":"mb_language","params":[{"list":[],"ret_type":"mixed"}]},"mb_list_encodings":{"desc":"Returns an array of all supported encodings","long_desc":"Returns an array containing all supported encodings.","ver":"PHP 5","ret_desc":"Returns a numerically indexed array.","url":"function.mb-list-encodings","name":"mb_list_encodings","params":[{"list":[],"ret_type":"array"}]},"mb_output_handler":{"desc":"Callback function converts character encoding in output buffer","long_desc":"mb_output_handler() is ob_start() callback function. mb_output_handler() converts characters in the output buffer from internal character encoding to HTTP output character encoding.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"The converted string.","seealso":[],"url":"function.mb-output-handler","name":"mb_output_handler","params":[{"list":[{"type":"string","var":"$contents","beh":0,"desc":"The contents of the output buffer."},{"type":"int","var":"$status","beh":0,"desc":"The status of the output buffer."}],"ret_type":"string"}]},"mb_parse_str":{"desc":"Parse GET\/POST\/COOKIE data and set global variable","long_desc":"Parses GET\/POST\/COOKIE data and sets global variables. Since PHP does not provide raw POST\/COOKIE data, it can only be used for GET data for now. It parses URL encoded data, detects encoding, converts coding to internal encoding and set values to the result array or global variables.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mb-parse-str","name":"mb_parse_str","params":[{"list":[{"type":"string","var":"$encoded_string","beh":0,"desc":"The URL encoded data."},{"type":"array","var":"&$result","beh":1,"desc":"An array containing decoded and character encoded converted values."}],"ret_type":"bool"}]},"mb_preferred_mime_name":{"desc":"Get MIME charset string","long_desc":"Get a MIME charset string for a specific encoding.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"The MIME charset string for character encoding encoding.","url":"function.mb-preferred-mime-name","name":"mb_preferred_mime_name","params":[{"list":[],"ret_type":"string"}]},"mb_regex_encoding":{"desc":"Returns current encoding for multibyte regex as string","long_desc":"Returns the current encoding for a multibyte regex as a string.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns the character encoding used by multibyte regex functions.","seealso":[],"url":"function.mb-regex-encoding","name":"mb_regex_encoding","params":[{"list":[],"ret_type":"mixed"}]},"mb_regex_set_options":{"desc":"Set\/Get the default options for mbregex functions","long_desc":"Sets the default options described by options for multibyte regex functions.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"The previous options. If options is omitted, it returns the string that describes the current options.","seealso":[],"url":"function.mb-regex-set-options","name":"mb_regex_set_options","params":[{"list":[],"ret_type":"string"}]},"mb_send_mail":{"desc":"Send encoded mail","long_desc":"Sends email. Headers and messages are converted and encoded according to the mb_language() setting. It's a wrapper function for mail(), so see also mail() for details.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mb-send-mail","name":"mb_send_mail","params":[{"list":[{"type":"string","var":"$to","beh":1,"desc":"The mail addresses being sent to. Multiple recipients may be specified by putting a comma between each address in to. This parameter is not automatically encoded."},{"type":"string","var":"$subject","beh":1,"desc":"The subject of the mail."},{"type":"string","var":"$message","beh":1,"desc":"The message of the mail."},{"type":"string","var":"$additional_headers","beh":1,"desc":"additional_headers is inserted at the end of the header. This is typically used to add extra headers. Multiple extra headers are separated with a newline (\"\\n\").","def":"NULL"},{"type":"string","var":"$additional_parameter","beh":1,"desc":"additional_parameter is a MTA command line parameter. It is useful when setting the correct Return-Path header when using sendmail.","def":"NULL"}],"ret_type":"bool"}]},"mb_split":{"desc":"Split multibyte string using regular expression","long_desc":"Split a multibyte string using regular expression pattern and returns the result as an array.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The result as an array.","seealso":[],"url":"function.mb-split","name":"mb_split","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"The regular expression pattern."},{"type":"string","var":"$string","beh":1,"desc":"The string being split."},{"type":"int","var":"$limit","beh":1,"desc":"","def":-1}],"ret_type":"array"}]},"mb_strcut":{"desc":"Get part of string","long_desc":"mb_strcut() extracts a substring from a string similarly to mb_substr(), but operates on bytes instead of characters. If the cut position happens to be between two bytes of a multi-byte character, the cut is performed starting from the first byte of that character. This is also the difference to the substr() function, which would simply cut the string between the bytes and thus result in a malformed byte sequence.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"mb_strcut() returns the portion of str specified by the start and length parameters.","seealso":[],"url":"function.mb-strcut","name":"mb_strcut","params":[{"list":[{"type":"string","var":"$str","beh":1,"desc":"The string being cut."},{"type":"int","var":"$start","beh":1,"desc":"Starting position in bytes."},{"type":"int","var":"$length","beh":1,"desc":"Length in bytes."},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding parameter is the character encoding. If it is omitted, the internal character encoding value will be used."}],"ret_type":"string"}]},"mb_strimwidth":{"desc":"Get truncated string with specified width","long_desc":"Truncates string str to specified width.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"The truncated string. If trimmarker is set, trimmarker is appended to the return value.","seealso":[],"url":"function.mb-strimwidth","name":"mb_strimwidth","params":[{"list":[{"type":"string","var":"$str","beh":1,"desc":"The string being decoded."},{"type":"int","var":"$start","beh":1,"desc":"The start position offset. Number of characters from the beginning of string. (First character is 0)"},{"type":"int","var":"$width","beh":1,"desc":"The width of the desired trim."},{"type":"string","var":"$trimmarker","beh":1,"desc":"A string that is added to the end of string when string is truncated."},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding parameter is the character encoding. If it is omitted, the internal character encoding value will be used."}],"ret_type":"string"}]},"mb_stripos":{"desc":"Finds position of first occurrence of a string within another, case insensitive","long_desc":"mb_stripos() returns the numeric position of the first occurrence of needle in the haystack string. Unlike mb_strpos(), mb_stripos() is case-insensitive. If needle is not found, it returns FALSE.","ver":"PHP 5 >= 5.2.0","ret_desc":"Return the numeric position of the first occurrence of needle in the haystack string, or FALSE if needle is not found.","seealso":[],"url":"function.mb-stripos","name":"mb_stripos","params":[{"list":[{"type":"string","var":"$haystack","beh":1,"desc":"The string from which to get the position of the first occurrence of needle"},{"type":"string","var":"$needle","beh":1,"desc":"The string to find in haystack"},{"type":"int","var":"$offset","beh":1,"desc":"The position in haystack to start searching"},{"type":"string","var":"$encoding","beh":1,"desc":"Character encoding name to use. If it is omitted, internal character encoding is used."}],"ret_type":"int"}]},"mb_stristr":{"desc":"Finds first occurrence of a string within another, case insensitive","long_desc":"mb_stristr() finds the first occurrence of needle in haystack and returns the portion of haystack. Unlike mb_strstr(), mb_stristr() is case-insensitive. If needle is not found, it returns FALSE.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the portion of haystack, or FALSE if needle is not found.","seealso":[],"url":"function.mb-stristr","name":"mb_stristr","params":[{"list":[{"type":"string","var":"$haystack","beh":1,"desc":"The string from which to get the first occurrence of needle"},{"type":"string","var":"$needle","beh":1,"desc":"The string to find in haystack"},{"type":"bool","var":"$before_needle","beh":1,"desc":"Determines which portion of haystack this function returns. If set to TRUE, it returns all of haystack from the beginning to the first occurrence of needle (including needle). If set to FALSE, it returns all of haystack from the first occurrence of needle to the end (excluding needle).","def":"false"},{"type":"string","var":"$encoding","beh":1,"desc":"Character encoding name to use. If it is omitted, internal character encoding is used."}],"ret_type":"string"}]},"mb_strlen":{"desc":"Get string length","long_desc":"Gets the length of a string.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the number of characters in string str having character encoding encoding. A multi-byte character is counted as 1.","seealso":[],"url":"function.mb-strlen","name":"mb_strlen","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string being checked for length."},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding parameter is the character encoding. If it is omitted, the internal character encoding value will be used."}],"ret_type":"int"}]},"mb_strpos":{"desc":"Find position of first occurrence of string in a string","long_desc":"Finds position of the first occurrence of a string in a string. Performs a multi-byte safe strpos() operation based on number of characters. The first character's position is 0, the second character position is 1, and so on.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the numeric position of the first occurrence of needle in the haystack string. If needle is not found, it returns FALSE.","seealso":[],"url":"function.mb-strpos","name":"mb_strpos","params":[{"list":[{"type":"string","var":"$haystack","beh":1,"desc":"The string being checked."},{"type":"string","var":"$needle","beh":1,"desc":"The string to find in haystack. In contrast with strpos(), numeric values are not applied as the ordinal value of a character."},{"type":"int","var":"$offset","beh":1,"desc":"The search offset. If it is not specified, 0 is used.","def":0},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding parameter is the character encoding. If it is omitted, the internal character encoding value will be used."}],"ret_type":"int"}]},"mb_strrchr":{"desc":"Finds the last occurrence of a character in a string within another","long_desc":"mb_strrchr() finds the last occurrence of needle in haystack and returns the portion of haystack. If needle is not found, it returns FALSE.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the portion of haystack. or FALSE if needle is not found.","seealso":[],"url":"function.mb-strrchr","name":"mb_strrchr","params":[{"list":[{"type":"string","var":"$haystack","beh":1,"desc":"The string from which to get the last occurrence of needle"},{"type":"string","var":"$needle","beh":1,"desc":"The string to find in haystack"},{"type":"bool","var":"$part","beh":1,"desc":"Determines which portion of haystack this function returns. If set to TRUE, it returns all of haystack from the beginning to the last occurrence of needle. If set to FALSE, it returns all of haystack from the last occurrence of needle to the end,","def":"false"},{"type":"string","var":"$encoding","beh":1,"desc":"Character encoding name to use. If it is omitted, internal character encoding is used."}],"ret_type":"string"}]},"mb_strrichr":{"desc":"Finds the last occurrence of a character in a string within another, case insensitive","long_desc":"mb_strrichr() finds the last occurrence of needle in haystack and returns the portion of haystack. Unlike mb_strrchr(), mb_strrichr() is case-insensitive. If needle is not found, it returns FALSE.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the portion of haystack. or FALSE if needle is not found.","seealso":[],"url":"function.mb-strrichr","name":"mb_strrichr","params":[{"list":[{"type":"string","var":"$haystack","beh":1,"desc":"The string from which to get the last occurrence of needle"},{"type":"string","var":"$needle","beh":1,"desc":"The string to find in haystack"},{"type":"bool","var":"$part","beh":1,"desc":"Determines which portion of haystack this function returns. If set to TRUE, it returns all of haystack from the beginning to the last occurrence of needle. If set to FALSE, it returns all of haystack from the last occurrence of needle to the end,","def":"false"},{"type":"string","var":"$encoding","beh":1,"desc":"Character encoding name to use. If it is omitted, internal character encoding is used."}],"ret_type":"string"}]},"mb_strripos":{"desc":"Finds position of last occurrence of a string within another, case insensitive","long_desc":"mb_strripos() performs multi-byte safe strripos() operation based on number of characters. needle position is counted from the beginning of haystack. First character's position is 0. Second character position is 1. Unlike mb_strrpos(), mb_strripos() is case-insensitive.","ver":"PHP 5 >= 5.2.0","ret_desc":"Return the numeric position of the last occurrence of needle in the haystack string, or FALSE if needle is not found.","seealso":[],"url":"function.mb-strripos","name":"mb_strripos","params":[{"list":[{"type":"string","var":"$haystack","beh":1,"desc":"The string from which to get the position of the last occurrence of needle"},{"type":"string","var":"$needle","beh":1,"desc":"The string to find in haystack"},{"type":"int","var":"$offset","beh":1,"desc":"The position in haystack to start searching","def":0},{"type":"string","var":"$encoding","beh":1,"desc":"Character encoding name to use. If it is omitted, internal character encoding is used."}],"ret_type":"int"}]},"mb_strrpos":{"desc":"Find position of last occurrence of a string in a string","long_desc":"Performs a multibyte safe strrpos() operation based on the number of characters. needle position is counted from the beginning of haystack. First character's position is 0. Second character position is 1.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns the numeric position of the last occurrence of needle in the haystack string. If needle is not found, it returns FALSE.","seealso":[],"url":"function.mb-strrpos","name":"mb_strrpos","params":[{"list":[{"type":"string","var":"$haystack","beh":1,"desc":"The string being checked, for the last occurrence of needle"},{"type":"string","var":"$needle","beh":1,"desc":"The string to find in haystack."},{"type":"int","var":"$offset","beh":1,"desc":"","def":0},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding parameter is the character encoding. If it is omitted, the internal character encoding value will be used."}],"ret_type":"int"}]},"mb_strstr":{"desc":"Finds first occurrence of a string within another","long_desc":"mb_strstr() finds the first occurrence of needle in haystack and returns the portion of haystack. If needle is not found, it returns FALSE.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the portion of haystack, or FALSE if needle is not found.","seealso":[],"url":"function.mb-strstr","name":"mb_strstr","params":[{"list":[{"type":"string","var":"$haystack","beh":1,"desc":"The string from which to get the first occurrence of needle"},{"type":"string","var":"$needle","beh":1,"desc":"The string to find in haystack"},{"type":"bool","var":"$before_needle","beh":1,"desc":"Determines which portion of haystack this function returns. If set to TRUE, it returns all of haystack from the beginning to the first occurrence of needle (excluding needle). If set to FALSE, it returns all of haystack from the first occurrence of needle to the end (including needle).","def":"false"},{"type":"string","var":"$encoding","beh":1,"desc":"Character encoding name to use. If it is omitted, internal character encoding is used."}],"ret_type":"string"}]},"mb_strtolower":{"desc":"Make a string lowercase","long_desc":"Returns str with all alphabetic characters converted to lowercase.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"str with all alphabetic characters converted to lowercase.","seealso":[],"url":"function.mb-strtolower","name":"mb_strtolower","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string being lowercased."},{"type":"string","var":"$encoding","beh":0,"desc":"The encoding parameter is the character encoding. If it is omitted, the internal character encoding value will be used.","def":"mb_internal_encoding()"}],"ret_type":"string"}]},"mb_strtoupper":{"desc":"Make a string uppercase","long_desc":"Returns str with all alphabetic characters converted to uppercase.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"str with all alphabetic characters converted to uppercase.","seealso":[],"url":"function.mb-strtoupper","name":"mb_strtoupper","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string being uppercased."},{"type":"string","var":"$encoding","beh":0,"desc":"The encoding parameter is the character encoding. If it is omitted, the internal character encoding value will be used.","def":"mb_internal_encoding()"}],"ret_type":"string"}]},"mb_strwidth":{"desc":"Return width of string","long_desc":"Returns the width of string str. Multi-byte characters are usually twice the width of single byte characters.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"The width of string str.","seealso":[],"url":"function.mb-strwidth","name":"mb_strwidth","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string being decoded."},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding parameter is the character encoding. If it is omitted, the internal character encoding value will be used."}],"ret_type":"int"}]},"mb_substitute_character":{"desc":"Set\/Get substitution character","long_desc":"Specifies a substitution character when input character encoding is invalid or character code does not exist in output character encoding. Invalid characters may be substituted NULL (no output), string or integer value (Unicode character code value). This setting affects mb_convert_encoding(), mb_convert_variables(), mb_output_handler(), and mb_send_mail().","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"If substchar is set, it returns TRUE for success, otherwise returns FALSE. If substchar is not set, it returns the Unicode value, or \"none\" or \"long\".","url":"function.mb-substitute-character","name":"mb_substitute_character","params":[{"list":[],"ret_type":"mixed"}]},"mb_substr":{"desc":"Get part of string","long_desc":"Performs a multi-byte safe substr() operation based on number of characters. Position is counted from the beginning of str. First character's position is 0. Second character position is 1, and so on.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"mb_substr() returns the portion of str specified by the start and length parameters.","seealso":[],"url":"function.mb-substr","name":"mb_substr","params":[{"list":[{"type":"string","var":"$str","beh":1,"desc":"The string to extract the substring from."},{"type":"int","var":"$start","beh":1,"desc":"Position of first character to use from str."},{"type":"int","var":"$length","beh":1,"desc":"Maximum number of characters to use from str."},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding parameter is the character encoding. If it is omitted, the internal character encoding value will be used."}],"ret_type":"string"}]},"mb_substr_count":{"desc":"Count the number of substring occurrences","long_desc":"Counts the number of times the needle substring occurs in the haystack string.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"The number of times the needle substring occurs in the haystack string.","seealso":[],"url":"function.mb-substr-count","name":"mb_substr_count","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The string being checked."},{"type":"string","var":"$needle","beh":1,"desc":"The string being found."},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding parameter is the character encoding. If it is omitted, the internal character encoding value will be used."}],"ret_type":"int"}]},"mcrypt_cbc":{"desc":"Encrypts\/decrypts data in CBC mode","long_desc":"The first prototype is when linked against libmcrypt 2.2.x, the second when linked against libmcrypt 2.4.x or higher. The mode should be either MCRYPT_ENCRYPT or MCRYPT_DECRYPT. This function should not be used anymore, see mcrypt_generic() and mdecrypt_generic() for replacements.","ver":"PHP 4, PHP 5","url":"function.mcrypt-cbc","name":"mcrypt_cbc","params":[{"list":[{"type":"int","var":"$cipher","beh":0,"desc":""},{"type":"string","var":"$key","beh":1,"desc":""},{"type":"string","var":"$data","beh":1,"desc":""},{"type":"int","var":"$mode","beh":1,"desc":""},{"type":"string","var":"$iv","beh":1,"desc":""}],"ret_type":"string"},{"list":[{"type":"string","var":"$cipher","beh":0,"desc":""},{"type":"string","var":"$key","beh":1,"desc":""},{"type":"string","var":"$data","beh":1,"desc":""},{"type":"int","var":"$mode","beh":1,"desc":""},{"type":"string","var":"$iv","beh":1,"desc":""}],"ret_type":"string"}]},"mcrypt_cfb":{"desc":"Encrypts\/decrypts data in CFB mode","long_desc":"The first prototype is when linked against libmcrypt 2.2.x, the second when linked against libmcrypt 2.4.x or higher. The mode should be either MCRYPT_ENCRYPT or MCRYPT_DECRYPT. This function should not be used anymore, see mcrypt_generic() and mdecrypt_generic() for replacements.","ver":"PHP 4, PHP 5","url":"function.mcrypt-cfb","name":"mcrypt_cfb","params":[{"list":[{"type":"int","var":"$cipher","beh":0,"desc":""},{"type":"string","var":"$key","beh":0,"desc":""},{"type":"string","var":"$data","beh":1,"desc":""},{"type":"int","var":"$mode","beh":1,"desc":""},{"type":"string","var":"$iv","beh":1,"desc":""}],"ret_type":"string"},{"list":[{"type":"string","var":"$cipher","beh":0,"desc":""},{"type":"string","var":"$key","beh":1,"desc":""},{"type":"string","var":"$data","beh":1,"desc":""},{"type":"int","var":"$mode","beh":1,"desc":""},{"type":"string","var":"$iv","beh":1,"desc":""}],"ret_type":"string"}]},"mcrypt_create_iv":{"desc":"Creates an initialization vector (IV) from a random source","long_desc":"Creates an initialization vector (IV) from a random source. The IV is only meant to give an alternative seed to the encryption routines. This IV does not need to be secret at all, though it can be desirable. You even can send it along with your ciphertext without losing security.","ver":"PHP 4, PHP 5","ret_desc":"Returns the initialization vector, or FALSE on error.","seealso":[],"url":"function.mcrypt-create-iv","name":"mcrypt_create_iv","params":[{"list":[{"type":"int","var":"$size","beh":0,"desc":"The size of the IV."},{"type":"int","var":"$source","beh":0,"desc":"The source of the IV. The source can be MCRYPT_RAND (system random number generator), MCRYPT_DEV_RANDOM (read data from \/dev\/random) and MCRYPT_DEV_URANDOM (read data from \/dev\/urandom). Prior to 5.3.0, MCRYPT_RAND was the only one supported on Windows.","def":"MCRYPT_DEV_RANDOM"}],"ret_type":"string"}]},"mcrypt_decrypt":{"desc":"Decrypts crypttext with given parameters","long_desc":"Decrypts the data and returns the unencrypted data.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns the decrypted data as a string.","url":"function.mcrypt-decrypt","name":"mcrypt_decrypt","params":[{"list":[{"type":"string","var":"$cipher","beh":0,"desc":"One of the MCRYPT_ciphername constants, or the name of the algorithm as string."},{"type":"string","var":"$key","beh":1,"desc":"The key with which the data was encrypted. If it's smaller than the required keysize, it is padded with '\\0'."},{"type":"string","var":"$data","beh":1,"desc":"The data that will be decrypted with the given cipher and mode. If the size of the data is not n * blocksize, the data will be padded with '\\0'."},{"type":"string","var":"$mode","beh":1,"desc":"One of the MCRYPT_MODE_modename constants, or one of the following strings: \"ecb\", \"cbc\", \"cfb\", \"ofb\", \"nofb\" or \"stream\"."},{"type":"string","var":"$iv","beh":1,"desc":"The iv parameter is used for the initialization in CBC, CFB, OFB modes, and in some algorithms in STREAM mode. If you do not supply an IV, while it is needed for an algorithm, the function issues a warning and uses an IV with all its bytes set to '\\0'."}],"ret_type":"string"}]},"mcrypt_ecb":{"desc":"Deprecated: Encrypts\/decrypts data in ECB mode","long_desc":"The first prototype is when linked against libmcrypt 2.2.x, the second when linked against libmcrypt 2.4.x or higher. The mode should be either MCRYPT_ENCRYPT or MCRYPT_DECRYPT. This function is deprecated and should not be used anymore, see mcrypt_generic() and mdecrypt_generic() for replacements.","ver":"PHP 4, PHP 5","url":"function.mcrypt-ecb","name":"mcrypt_ecb","params":[{"list":[{"type":"int","var":"$cipher","beh":0,"desc":""},{"type":"string","var":"$key","beh":0,"desc":""},{"type":"string","var":"$data","beh":1,"desc":""},{"type":"int","var":"$mode","beh":1,"desc":""}],"ret_type":"string"},{"list":[{"type":"string","var":"$cipher","beh":0,"desc":""},{"type":"string","var":"$key","beh":1,"desc":""},{"type":"string","var":"$data","beh":1,"desc":""},{"type":"int","var":"$mode","beh":1,"desc":""},{"type":"string","var":"$iv","beh":1,"desc":""}],"ret_type":"string"}]},"mcrypt_enc_get_algorithms_name":{"desc":"Returns the name of the opened algorithm","long_desc":"This function returns the name of the algorithm.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns the name of the opened algorithm as a string.","url":"function.mcrypt-enc-get-algorithms-name","name":"mcrypt_enc_get_algorithms_name","params":[{"list":[],"ret_type":"string"}]},"mcrypt_enc_get_block_size":{"desc":"Returns the blocksize of the opened algorithm","long_desc":"Gets the blocksize of the opened algorithm.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns the block size of the specified algorithm in bytes.","url":"function.mcrypt-enc-get-block-size","name":"mcrypt_enc_get_block_size","params":[{"list":[],"ret_type":"int"}]},"mcrypt_enc_get_iv_size":{"desc":"Returns the size of the IV of the opened algorithm","long_desc":"This function returns the size of the IV of the algorithm specified by the encryption descriptor in bytes. An IV is used in cbc, cfb and ofb modes, and in some algorithms in stream mode.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns the size of the IV, or 0 if the IV is ignored by the algorithm.","url":"function.mcrypt-enc-get-iv-size","name":"mcrypt_enc_get_iv_size","params":[{"list":[],"ret_type":"int"}]},"mcrypt_enc_get_key_size":{"desc":"Returns the maximum supported keysize of the opened mode","long_desc":"Gets the maximum supported key size of the algorithm in bytes.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns the maximum supported key size of the algorithm in bytes.","url":"function.mcrypt-enc-get-key-size","name":"mcrypt_enc_get_key_size","params":[{"list":[],"ret_type":"int"}]},"mcrypt_enc_get_modes_name":{"desc":"Returns the name of the opened mode","long_desc":"This function returns the name of the mode.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns the name as a string.","url":"function.mcrypt-enc-get-modes-name","name":"mcrypt_enc_get_modes_name","params":[{"list":[],"ret_type":"string"}]},"mcrypt_enc_get_supported_key_sizes":{"desc":"Returns an array with the supported keysizes of the opened algorithm","long_desc":"Gets the supported key sizes of the opened algorithm.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns an array with the key sizes supported by the algorithm specified by the encryption descriptor. If it returns an empty array then all key sizes between 1 and mcrypt_enc_get_key_size() are supported by the algorithm.","url":"function.mcrypt-enc-get-supported-key-sizes","name":"mcrypt_enc_get_supported_key_sizes","params":[{"list":[],"ret_type":"array"}]},"mcrypt_enc_is_block_algorithm":{"desc":"Checks whether the algorithm of the opened mode is a block algorithm","long_desc":"Tells whether the algorithm of the opened mode is a block algorithm.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE if the algorithm is a block algorithm or FALSE if it is a stream one.","url":"function.mcrypt-enc-is-block-algorithm","name":"mcrypt_enc_is_block_algorithm","params":[{"list":[],"ret_type":"bool"}]},"mcrypt_enc_is_block_algorithm_mode":{"desc":"Checks whether the encryption of the opened mode works on blocks","long_desc":"Tells whether the algorithm of the opened mode works on blocks (e.g. FALSE for stream, and TRUE for cbc, cfb, ofb)..","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE if the mode is for use with block algorithms, otherwise it returns FALSE.","url":"function.mcrypt-enc-is-block-algorithm-mode","name":"mcrypt_enc_is_block_algorithm_mode","params":[{"list":[],"ret_type":"bool"}]},"mcrypt_enc_is_block_mode":{"desc":"Checks whether the opened mode outputs blocks","long_desc":"Tells whether the opened mode outputs blocks (e.g. TRUE for cbc and ecb, and FALSE for cfb and stream).","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE if the mode outputs blocks of bytes, or FALSE if it outputs just bytes.","url":"function.mcrypt-enc-is-block-mode","name":"mcrypt_enc_is_block_mode","params":[{"list":[],"ret_type":"bool"}]},"mcrypt_enc_self_test":{"desc":"Runs a self test on the opened module","long_desc":"This function runs the self test on the algorithm specified by the descriptor td.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"If the self test succeeds it returns FALSE. In case of an error, it returns TRUE.","url":"function.mcrypt-enc-self-test","name":"mcrypt_enc_self_test","params":[{"list":[],"ret_type":"int"}]},"mcrypt_encrypt":{"desc":"Encrypts plaintext with given parameters","long_desc":"Encrypts the data and returns it.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns the encrypted data, as a string.","url":"function.mcrypt-encrypt","name":"mcrypt_encrypt","params":[{"list":[{"type":"string","var":"$cipher","beh":0,"desc":"One of the MCRYPT_ciphername constants, or the name of the algorithm as string."},{"type":"string","var":"$key","beh":1,"desc":"The key with which the data will be encrypted. If it's smaller than the required keysize, it is padded with '\\0'. It is better not to use ASCII strings for keys. It is recommended to use the mhash functions to create a key from a string."},{"type":"string","var":"$data","beh":1,"desc":"The data that will be encrypted with the given cipher and mode. If the size of the data is not n * blocksize, the data will be padded with '\\0'. The returned crypttext can be larger than the size of the data that was given by data."},{"type":"string","var":"$mode","beh":1,"desc":"One of the MCRYPT_MODE_modename constants, or one of the following strings: \"ecb\", \"cbc\", \"cfb\", \"ofb\", \"nofb\" or \"stream\"."},{"type":"string","var":"$iv","beh":1,"desc":"Used for the initialization in CBC, CFB, OFB modes, and in some algorithms in STREAM mode. If you do not supply an IV, while it is needed for an algorithm, the function issues a warning and uses an IV with all its bytes set to '\\0'."}],"ret_type":"string"}]},"mcrypt_generic":{"desc":"This function encrypts data","long_desc":"This function encrypts data. The data is padded with \"\\0\" to make sure the length of the data is n * blocksize. This function returns the encrypted data. Note that the length of the returned string can in fact be longer than the input, due to the padding of the data. If you want to store the encrypted data in a database make sure to store the entire string as returned by mcrypt_generic, or the string will not entirely decrypt properly. If your original string is 10 characters long and the block size is 8 (use mcrypt_enc_get_block_size() to determine the blocksize), you would need at least 16 characters in your database field. Note the string returned by mdecrypt_generic() will be 16 characters as well...use rtrim($str, \"\\0\") to remove the padding. If you are for example storing the data in a MySQL database remember that varchar fields automatically have trailing spaces removed during insertion. As encrypted data can end in a space (ASCII 32), the data will be damaged by this removal. Store data in a tinyblob\/tinytext (or larger) field instead.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns the encrypted data.","seealso":[],"url":"function.mcrypt-generic","name":"mcrypt_generic","params":[{"list":[{"type":"resource","var":"$td","beh":0,"desc":"The encryption descriptor. The encryption handle should always be initialized with mcrypt_generic_init() with a key and an IV before calling this function. Where the encryption is done, you should free the encryption buffers by calling mcrypt_generic_deinit(). See mcrypt_module_open() for an example."},{"type":"string","var":"$data","beh":0,"desc":"The data to encrypt."}],"ret_type":"string"}]},"mcrypt_generic_deinit":{"desc":"This function deinitializes an encryption module","long_desc":"This function terminates encryption specified by the encryption descriptor (td). It clears all buffers, but does not close the module. You need to call mcrypt_module_close() yourself. (But PHP does this for you at the end of the script.)","ver":"PHP 4 >= 4.0.7, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mcrypt-generic-deinit","name":"mcrypt_generic_deinit","params":[{"list":[],"ret_type":"bool"}]},"mcrypt_generic_end":{"desc":"This function terminates encryption","long_desc":"This function terminates encryption specified by the encryption descriptor (td). Actually it clears all buffers, and closes all the modules used. Returns FALSE on error, or TRUE on success.","ver":"PHP 4 >= 4.0.2, PHP 5 <= 5.1.6","url":"function.mcrypt-generic-end","name":"mcrypt_generic_end","params":[{"list":[],"ret_type":"bool"}]},"mcrypt_generic_init":{"desc":"This function initializes all buffers needed for encryption","long_desc":"You need to call this function before every call to mcrypt_generic() or mdecrypt_generic().","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"The function returns a negative value on error: -3 when the key length was incorrect, -4 when there was a memory allocation problem and any other return value is an unknown error. If an error occurs a warning will be displayed accordingly. FALSE is returned if incorrect parameters were passed.","seealso":[],"url":"function.mcrypt-generic-init","name":"mcrypt_generic_init","params":[{"list":[{"type":"resource","var":"$td","beh":0,"desc":"The encryption descriptor."},{"type":"string","var":"$key","beh":0,"desc":"The maximum length of the key should be the one obtained by calling mcrypt_enc_get_key_size() and every value smaller than this is legal."},{"type":"string","var":"$iv","beh":1,"desc":"The IV should normally have the size of the algorithms block size, but you must obtain the size by calling mcrypt_enc_get_iv_size(). IV is ignored in ECB. IV MUST exist in CFB, CBC, STREAM, nOFB and OFB modes. It needs to be random and unique (but not secret). The same IV must be used for encryption\/decryption. If you do not want to use it you should set it to zeros, but this is not recommended."}],"ret_type":"int"}]},"mcrypt_get_block_size":{"desc":"Gets the block size of the specified cipher","long_desc":"The first prototype is when linked against libmcrypt 2.2.x, the second when linked against libmcrypt 2.4.x or 2.5.x. mcrypt_get_block_size() is used to get the size of a block of the specified cipher (in combination with an encryption mode). It is more useful to use the mcrypt_enc_get_block_size() function as this uses the resource returned by mcrypt_module_open().","ver":"PHP 4, PHP 5","ret_desc":"Gets the block size, as an integer.","seealso":[],"url":"function.mcrypt-get-block-size","name":"mcrypt_get_block_size","params":[{"list":[],"ret_type":"int"},{"list":[{"type":"string","var":"$cipher","beh":0,"desc":"One of the MCRYPT_ciphername constants or the name of the algorithm as string."},{"type":"string","var":"$module","beh":0,"desc":"The module."}],"ret_type":"int"}]},"mcrypt_get_cipher_name":{"desc":"Gets the name of the specified cipher","long_desc":"mcrypt_get_cipher_name() is used to get the name of the specified cipher. mcrypt_get_cipher_name() takes the cipher number as an argument (libmcrypt 2.2.x) or takes the cipher name as an argument (libmcrypt 2.4.x or higher) and returns the name of the cipher or FALSE, if the cipher does not exist.","ver":"PHP 4, PHP 5","ret_desc":"This function returns the name of the cipher or FALSE, if the cipher does not exist.","url":"function.mcrypt-get-cipher-name","name":"mcrypt_get_cipher_name","params":[{"list":[],"ret_type":"string"},{"list":[],"ret_type":"string"}]},"mcrypt_get_iv_size":{"desc":"Returns the size of the IV belonging to a specific cipher\/mode combination","long_desc":"Gets the size of the IV belonging to a specific cipher\/mode combination. It is more useful to use the mcrypt_enc_get_iv_size() function as this uses the resource returned by mcrypt_module_open().","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns the size of the Initialization Vector (IV) in bytes. On error the function returns FALSE. If the IV is ignored in the specified cipher\/mode combination zero is returned.","seealso":[],"url":"function.mcrypt-get-iv-size","name":"mcrypt_get_iv_size","params":[{"list":[{"type":"string","var":"$cipher","beh":0,"desc":"One of the MCRYPT_ciphername constants, or the name of the algorithm as string."},{"type":"string","var":"$mode","beh":0,"desc":"One of the MCRYPT_MODE_modename constants, or one of the following strings: \"ecb\", \"cbc\", \"cfb\", \"ofb\", \"nofb\" or \"stream\". The IV is ignored in ECB mode as this mode does not require it. You will need to have the same IV (think: starting point) both at encryption and decryption stages, otherwise your encryption will fail."}],"ret_type":"int"}]},"mcrypt_get_key_size":{"desc":"Gets the key size of the specified cipher","long_desc":"The first prototype is when linked against libmcrypt 2.2.x, the second when linked against libmcrypt 2.4.x or 2.5.x. mcrypt_get_key_size() is used to get the size of a key of the specified cipher (in combination with an encryption mode). It is more useful to use the mcrypt_enc_get_key_size() function as this uses the resource returned by mcrypt_module_open().","ver":"PHP 4, PHP 5","seealso":[],"url":"function.mcrypt-get-key-size","name":"mcrypt_get_key_size","params":[{"list":[],"ret_type":"int"},{"list":[{"type":"string","var":"$cipher","beh":0,"desc":""},{"type":"string","var":"$module","beh":0,"desc":""}],"ret_type":"int"}]},"mcrypt_list_algorithms":{"desc":"Gets an array of all supported ciphers","long_desc":"Gets the list of all supported algorithms in the lib_dir parameter.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns an array with all the supported algorithms.","url":"function.mcrypt-list-algorithms","name":"mcrypt_list_algorithms","params":[{"list":[],"ret_type":"array"}]},"mcrypt_list_modes":{"desc":"Gets an array of all supported modes","long_desc":"Gets the list of all supported modes in the lib_dir parameter.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns an array with all the supported modes.","url":"function.mcrypt-list-modes","name":"mcrypt_list_modes","params":[{"list":[],"ret_type":"array"}]},"mcrypt_module_close":{"desc":"Closes the mcrypt module","long_desc":"Closes the specified encryption handle.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mcrypt-module-close","name":"mcrypt_module_close","params":[{"list":[],"ret_type":"bool"}]},"mcrypt_module_get_algo_block_size":{"desc":"Returns the blocksize of the specified algorithm","long_desc":"Gets the blocksize of the specified algorithm.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns the block size of the algorithm specified in bytes.","url":"function.mcrypt-module-get-algo-block-size","name":"mcrypt_module_get_algo_block_size","params":[{"list":[{"type":"string","var":"$algorithm","beh":0,"desc":"The algorithm name."},{"type":"string","var":"$lib_dir","beh":1,"desc":"This optional parameter can contain the location where the mode module is on the system."}],"ret_type":"int"}]},"mcrypt_module_get_algo_key_size":{"desc":"Returns the maximum supported keysize of the opened mode","long_desc":"Gets the maximum supported keysize of the opened mode.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"This function returns the maximum supported key size of the algorithm specified in bytes.","url":"function.mcrypt-module-get-algo-key-size","name":"mcrypt_module_get_algo_key_size","params":[{"list":[{"type":"string","var":"$algorithm","beh":0,"desc":"The algorithm name."},{"type":"string","var":"$lib_dir","beh":1,"desc":"This optional parameter can contain the location where the mode module is on the system."}],"ret_type":"int"}]},"mcrypt_module_get_supported_key_sizes":{"desc":"Returns an array with the supported keysizes of the opened algorithm","long_desc":"Returns an array with the key sizes supported by the specified algorithm. If it returns an empty array then all key sizes between 1 and mcrypt_module_get_algo_key_size() are supported by the algorithm.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns an array with the key sizes supported by the specified algorithm. If it returns an empty array then all key sizes between 1 and mcrypt_module_get_algo_key_size() are supported by the algorithm.","seealso":[],"url":"function.mcrypt-module-get-supported-key-sizes","name":"mcrypt_module_get_supported_key_sizes","params":[{"list":[{"type":"string","var":"$algorithm","beh":0,"desc":"The algorithm to be used."},{"type":"string","var":"$lib_dir","beh":1,"desc":"The optional lib_dir parameter can contain the location where the algorithm module is on the system."}],"ret_type":"array"}]},"mcrypt_module_is_block_algorithm":{"desc":"This function checks whether the specified algorithm is a block algorithm","long_desc":"This function returns TRUE if the specified algorithm is a block algorithm, or FALSE if it is a stream one.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"This function returns TRUE if the specified algorithm is a block algorithm, or FALSE if it is a stream one.","url":"function.mcrypt-module-is-block-algorithm","name":"mcrypt_module_is_block_algorithm","params":[{"list":[{"type":"string","var":"$algorithm","beh":0,"desc":"The algorithm to check."},{"type":"string","var":"$lib_dir","beh":1,"desc":"The optional lib_dir parameter can contain the location where the algorithm module is on the system."}],"ret_type":"bool"}]},"mcrypt_module_is_block_algorithm_mode":{"desc":"Returns if the specified module is a block algorithm or not","long_desc":"This function returns TRUE if the mode is for use with block algorithms, otherwise it returns FALSE. (e.g. FALSE for stream, and TRUE for cbc, cfb, ofb).","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"This function returns TRUE if the mode is for use with block algorithms, otherwise it returns FALSE. (e.g. FALSE for stream, and TRUE for cbc, cfb, ofb).","url":"function.mcrypt-module-is-block-algorithm-mode","name":"mcrypt_module_is_block_algorithm_mode","params":[{"list":[{"type":"string","var":"$mode","beh":0,"desc":"The mode to check."},{"type":"string","var":"$lib_dir","beh":1,"desc":"The optional lib_dir parameter can contain the location where the algorithm module is on the system."}],"ret_type":"bool"}]},"mcrypt_module_is_block_mode":{"desc":"Returns if the specified mode outputs blocks or not","long_desc":"This function returns TRUE if the mode outputs blocks of bytes or FALSE if it outputs just bytes. (e.g. TRUE for cbc and ecb, and FALSE for cfb and stream).","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"This function returns TRUE if the mode outputs blocks of bytes or FALSE if it outputs just bytes. (e.g. TRUE for cbc and ecb, and FALSE for cfb and stream).","url":"function.mcrypt-module-is-block-mode","name":"mcrypt_module_is_block_mode","params":[{"list":[{"type":"string","var":"$mode","beh":0,"desc":"The mode to check."},{"type":"string","var":"$lib_dir","beh":1,"desc":"The optional lib_dir parameter can contain the location where the algorithm module is on the system."}],"ret_type":"bool"}]},"mcrypt_module_open":{"desc":"Opens the module of the algorithm and the mode to be used","long_desc":"This function opens the module of the algorithm and the mode to be used. The name of the algorithm is specified in algorithm, e.g. \"twofish\" or is one of the MCRYPT_ciphername constants. The module is closed by calling mcrypt_module_close().","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Normally it returns an encryption descriptor, or FALSE on error.","seealso":[],"url":"function.mcrypt-module-open","name":"mcrypt_module_open","params":[{"list":[{"type":"string","var":"$algorithm","beh":0,"desc":"The algorithm to be used."},{"type":"string","var":"$algorithm_directory","beh":0,"desc":"The algorithm_directory parameter is used to locate the encryption module. When you supply a directory name, it is used. When you set it to an empty string (\"\"), the value set by the mcrypt.algorithms_dir php.ini directive is used. When it is not set, the default directory that is used is the one that was compiled into libmcrypt (usually \/usr\/local\/lib\/libmcrypt)."},{"type":"string","var":"$mode","beh":1,"desc":"The mode to be used."},{"type":"string","var":"$mode_directory","beh":1,"desc":"The mode_directory parameter is used to locate the encryption module. When you supply a directory name, it is used. When you set it to an empty string (\"\"), the value set by the mcrypt.modes_dir php.ini directive is used. When it is not set, the default directory that is used is the one that was compiled-in into libmcrypt (usually \/usr\/local\/lib\/libmcrypt)."}],"ret_type":"resource"}]},"mcrypt_module_self_test":{"desc":"This function runs a self test on the specified module","long_desc":"This function runs the self test on the algorithm specified.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"The function returns TRUE if the self test succeeds, or FALSE when it fails.","url":"function.mcrypt-module-self-test","name":"mcrypt_module_self_test","params":[{"list":[{"type":"string","var":"$algorithm","beh":0,"desc":"The algorithm to test."},{"type":"string","var":"$lib_dir","beh":1,"desc":"The optional lib_dir parameter can contain the location where the algorithm module is on the system."}],"ret_type":"bool"}]},"mcrypt_ofb":{"desc":"Encrypts\/decrypts data in OFB mode","long_desc":"The first prototype is when linked against libmcrypt 2.2.x, the second when linked against libmcrypt 2.4.x or higher. The mode should be either MCRYPT_ENCRYPT or MCRYPT_DECRYPT. This function should not be used anymore, see mcrypt_generic() and mdecrypt_generic() for replacements.","ver":"PHP 4, PHP 5","url":"function.mcrypt-ofb","name":"mcrypt_ofb","params":[{"list":[{"type":"int","var":"$cipher","beh":0,"desc":""},{"type":"string","var":"$key","beh":0,"desc":""},{"type":"string","var":"$data","beh":1,"desc":""},{"type":"int","var":"$mode","beh":1,"desc":""},{"type":"string","var":"$iv","beh":1,"desc":""}],"ret_type":"string"},{"list":[{"type":"string","var":"$cipher","beh":0,"desc":""},{"type":"string","var":"$key","beh":1,"desc":""},{"type":"string","var":"$data","beh":1,"desc":""},{"type":"int","var":"$mode","beh":1,"desc":""},{"type":"string","var":"$iv","beh":1,"desc":""}],"ret_type":"string"}]},"md5":{"desc":"Calculate the md5 hash of a string","long_desc":"Calculates the MD5 hash of str using the \u00bb\u00a0RSA Data Security, Inc. MD5 Message-Digest Algorithm, and returns that hash.","ver":"PHP 4, PHP 5","ret_desc":"Returns the hash as a 32-character hexadecimal number.","seealso":[],"url":"function.md5","name":"md5","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string."},{"type":"bool","var":"$raw_output","beh":0,"desc":"If the optional raw_output is set to TRUE, then the md5 digest is instead returned in raw binary format with a length of 16.","def":"false"}],"ret_type":"string"}]},"md5_file":{"desc":"Calculates the md5 hash of a given file","long_desc":"Calculates the MD5 hash of the file specified by the filename parameter using the \u00bb\u00a0RSA Data Security, Inc. MD5 Message-Digest Algorithm, and returns that hash. The hash is a 32-character hexadecimal number.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns a string on success, FALSE otherwise.","seealso":[],"url":"function.md5-file","name":"md5_file","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The filename"},{"type":"bool","var":"$raw_output","beh":0,"desc":"When TRUE, returns the digest in raw binary format with a length of 16.","def":"false"}],"ret_type":"string"}]},"mdecrypt_generic":{"desc":"Decrypts data","long_desc":"This function decrypts data. Note that the length of the returned string can in fact be longer than the unencrypted string, due to the padding of the data.","ver":"PHP 4 >= 4.0.2, PHP 5","seealso":[],"url":"function.mdecrypt-generic","name":"mdecrypt_generic","params":[{"list":[{"type":"resource","var":"$td","beh":0,"desc":"An encryption descriptor returned by mcrypt_module_open()"},{"type":"string","var":"$data","beh":0,"desc":"Encrypted data."}],"ret_type":"string"}]},"memcache_debug":{"desc":"Turn debug output on\/off","long_desc":"memcache_debug() turns on debug output if parameter on_off is equal to TRUE and turns off if it's FALSE.","ver":"PECL memcache >= 0.2.0","ret_desc":"Returns TRUE if PHP was built with --enable-debug option, otherwise returns FALSE.","url":"function.memcache-debug","name":"memcache_debug","params":[{"list":[],"ret_type":"bool"}]},"memory_get_peak_usage":{"desc":"Returns the peak of memory allocated by PHP","long_desc":"Returns the peak of memory, in bytes, that's been allocated to your PHP script.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns the memory peak in bytes.","seealso":[],"url":"function.memory-get-peak-usage","name":"memory_get_peak_usage","params":[{"list":[],"ret_type":"int"}]},"memory_get_usage":{"desc":"Returns the amount of memory allocated to PHP","long_desc":"Returns the amount of memory, in bytes, that's currently being allocated to your PHP script.","ver":"PHP 4 >= 4.3.2, PHP 5","ret_desc":"Returns the memory amount in bytes.","seealso":[],"url":"function.memory-get-usage","name":"memory_get_usage","params":[{"list":[],"ret_type":"int"}]},"metaphone":{"desc":"Calculate the metaphone key of a string","long_desc":"Calculates the metaphone key of str. Similar to soundex() metaphone creates the same key for similar sounding words. It's more accurate than soundex() as it knows the basic rules of English pronunciation. The metaphone generated keys are of variable length. Metaphone was developed by Lawrence Philips <lphilips at verity dot com>. It is described in [\"Practical Algorithms for Programmers\", Binstock & Rex, Addison Wesley, 1995].","ver":"PHP 4, PHP 5","ret_desc":"Returns the metaphone key as a string, or FALSE on failure.","url":"function.metaphone","name":"metaphone","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The input string."},{"type":"int","var":"$phonemes","beh":0,"desc":"This parameter restricts the returned metaphone key to phonemes characters in length. The default value of 0 means no restriction.","def":0}],"ret_type":"string"}]},"method_exists":{"desc":"Checks if the class method exists","long_desc":"Checks if the class method exists in the given object.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if the method given by method_name has been defined for the given object, FALSE otherwise.","seealso":[],"url":"function.method-exists","name":"method_exists","params":[{"list":[{"type":"mixed","var":"$object","beh":0,"desc":"An object instance or a class name"},{"type":"string","var":"$method_name","beh":0,"desc":"The method name"}],"ret_type":"bool"}]},"mhash":{"desc":"Computes hash","long_desc":"mhash() applies a hash function specified by hash to the data.","ver":"PHP 4, PHP 5","ret_desc":"Returns the resulting hash (also called digest) or HMAC as a string, or FALSE on error.","url":"function.mhash","name":"mhash","params":[{"list":[{"type":"int","var":"$hash","beh":0,"desc":"The hash ID. One of the MHASH_hashname constants."},{"type":"string","var":"$data","beh":1,"desc":"The user input, as a string."},{"type":"string","var":"$key","beh":1,"desc":"If specified, the function will return the resulting HMAC instead. HMAC is keyed hashing for message authentication, or simply a message digest that depends on the specified key. Not all algorithms supported in mhash can be used in HMAC mode."}],"ret_type":"string"}]},"mhash_count":{"desc":"Gets the highest available hash ID","long_desc":"Gets the highest available hash ID.","ver":"PHP 4, PHP 5","ret_desc":"Returns the highest available hash ID. Hashes are numbered from 0 to this hash ID.","url":"function.mhash-count","name":"mhash_count","params":[{"list":[],"ret_type":"int"}]},"mhash_get_block_size":{"desc":"Gets the block size of the specified hash","long_desc":"Gets the size of a block of the specified hash.","ver":"PHP 4, PHP 5","ret_desc":"Returns the size in bytes or FALSE, if the hash does not exist.","url":"function.mhash-get-block-size","name":"mhash_get_block_size","params":[{"list":[],"ret_type":"int"}]},"mhash_get_hash_name":{"desc":"Gets the name of the specified hash","long_desc":"Gets the name of the specified hash.","ver":"PHP 4, PHP 5","ret_desc":"Returns the name of the hash or FALSE, if the hash does not exist.","url":"function.mhash-get-hash-name","name":"mhash_get_hash_name","params":[{"list":[],"ret_type":"string"}]},"mhash_keygen_s2k":{"desc":"Generates a key","long_desc":"Generates a key according to the given hash, using an user provided password. This is the Salted S2K algorithm as specified in the OpenPGP document (\u00bb\u00a0RFC 2440). Keep in mind that user supplied passwords are not really suitable to be used as keys in cryptographic algorithms, since users normally choose keys they can write on keyboard. These passwords use only 6 to 7 bits per character (or less). It is highly recommended to use some kind of transformation (like this function) to the user supplied key.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns the generated key as a string, or FALSE on error.","url":"function.mhash-keygen-s2k","name":"mhash_keygen_s2k","params":[{"list":[{"type":"int","var":"$hash","beh":0,"desc":"The hash ID used to create the key. One of the MHASH_hashname constants."},{"type":"string","var":"$password","beh":0,"desc":"An user supplied password."},{"type":"string","var":"$salt","beh":1,"desc":"Must be different and random enough for every key you generate in order to create different keys. Because salt must be known when you check the keys, it is a good idea to append the key to it. Salt has a fixed length of 8 bytes and will be padded with zeros if you supply less bytes."},{"type":"int","var":"$bytes","beh":1,"desc":"The key length, in bytes."}],"ret_type":"string"}]},"microtime":{"desc":"Return current Unix timestamp with microseconds","long_desc":"microtime() returns the current Unix timestamp with microseconds. This function is only available on operating systems that support the gettimeofday() system call.","ver":"PHP 4, PHP 5","ret_desc":"By default, microtime() returns a string in the form \"msec sec\", where sec is the current time measured in the number of seconds since the Unix epoch (0:00:00 January 1, 1970 GMT), and msec is the number of microseconds that have elapsed since sec expressed in seconds.","seealso":[],"url":"function.microtime","name":"microtime","params":[{"list":[],"ret_type":"mixed"}]},"mime_content_type":{"desc":"Detect MIME Content-type for a file (deprecated)","long_desc":"Returns the MIME content type for a file as determined by using information from the magic.mime file.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the content type in MIME format, like text\/plain or application\/octet-stream.","seealso":[],"url":"function.mime-content-type","name":"mime_content_type","params":[{"list":[],"ret_type":"string"}]},"min":{"desc":"Find lowest value","long_desc":"If the first and only parameter is an array, min() returns the lowest value in that array. If at least two parameters are provided, min() returns the smallest of these values.","ver":"PHP 4, PHP 5","ret_desc":"min() returns the numerically lowest of the parameter values.","seealso":[],"url":"function.min","name":"min","params":[{"list":[],"ret_type":"mixed"},{"list":[{"type":"mixed","var":"$value1","beh":0,"desc":"An array containing the values."},{"type":"mixed","var":"$value2","beh":1,"desc":""},{"type":"mixed","var":"$value3...","beh":1,"desc":""}],"ret_type":"mixed"}]},"ming_keypress":{"desc":"Returns the action flag for keyPress(char)","ver":"PHP 5 <= 5.3.0, PECL ming SVN","url":"function.ming-keypress","name":"ming_keypress","params":[{"list":[],"ret_type":"int"}]},"ming_setcubicthreshold":{"desc":"Set cubic threshold","long_desc":"Sets the threshold error for drawing cubic beziers.","ver":"PHP 4 >= 4.0.5, PHP 5, PECL ming SVN","ret_desc":"No value is returned.","url":"function.ming-setcubicthreshold","name":"ming_setcubicthreshold","params":[{"list":[],"ret_type":"void"}]},"ming_setscale":{"desc":"Set the global scaling factor.","long_desc":"Sets the scale of the output SWF. Inside the SWF file, coordinates are measured in TWIPS, rather than PIXELS. There are 20 TWIPS in 1 pixel.","ver":"PHP 4 >= 4.0.5, PHP 5, PECL ming SVN","ret_desc":"No value is returned.","url":"function.ming-setscale","name":"ming_setscale","params":[{"list":[],"ret_type":"void"}]},"ming_setswfcompression":{"desc":"Sets the SWF output compression","long_desc":"Sets the SWF output compression level.","ver":"PHP 5.2.1-5.3.0, PECL ming SVN","ret_desc":"No value is returned.","url":"function.ming-setswfcompression","name":"ming_setswfcompression","params":[{"list":[],"ret_type":"void"}]},"ming_useconstants":{"desc":"Use constant pool","ver":"PHP 5 <= 5.3.0, PECL ming SVN","ret_desc":"No value is returned.","url":"function.ming-useconstants","name":"ming_useconstants","params":[{"list":[],"ret_type":"void"}]},"ming_useswfversion":{"desc":"Sets the SWF version","long_desc":"Sets the SWF version to be used in the movie. This affect the bahaviour of Action Script.","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.3.0, PECL ming SVN","ret_desc":"No value is returned.","url":"function.ming-useswfversion","name":"ming_useswfversion","params":[{"list":[],"ret_type":"void"}]},"mkdir":{"desc":"Makes directory","long_desc":"Attempts to create the directory specified by pathname.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mkdir","name":"mkdir","params":[{"list":[{"type":"string","var":"$pathname","beh":1,"desc":"The directory path."},{"type":"int","var":"$mode","beh":1,"desc":"The mode is 0777 by default, which means the widest possible access. For more information on modes, read the details on the chmod() page. Note that you probably want to specify the mode as an octal number, which means it should have a leading zero. The mode is also modified by the current umask, which you can change using umask().","def":777},{"type":"bool","var":"$recursive","beh":1,"desc":"Allows the creation of nested directories specified in the pathname. Defaults to FALSE.","def":"false"},{"type":"resource","var":"$context","beh":1,"desc":""}],"ret_type":"bool"}]},"mktime":{"desc":"Get Unix timestamp for a date","long_desc":"Returns the Unix timestamp corresponding to the arguments given. This timestamp is a long integer containing the number of seconds between the Unix Epoch (January 1 1970 00:00:00 GMT) and the time specified. Arguments may be left out in order from right to left; any arguments thus omitted will be set to the current value according to the local date and time.","ver":"PHP 4, PHP 5","ret_desc":"mktime() returns the Unix timestamp of the arguments given. If the arguments are invalid, the function returns FALSE (before PHP 5.1 it returned -1).","seealso":[],"url":"function.mktime","name":"mktime","params":[{"list":[{"type":"int","var":"$hour","beh":1,"desc":"The number of the hour relative to the start of the day determined by month, day and year. Negative values reference the hour before midnight of the day in question. Values greater than 23 reference the appropriate hour in the following day(s).","def":"date(\"H\")"},{"type":"int","var":"$minute","beh":1,"desc":"The number of the minute relative to the start of the hour. Negative values reference the minute in the previous hour. Values greater than 59 reference the appropriate minute in the following hour(s).","def":"date(\"i\")"},{"type":"int","var":"$second","beh":1,"desc":"The number of seconds relative to the start of the minute. Negative values reference the second in the previous minute. Values greater than 59 reference the appropriate second in the following minute(s).","def":"date(\"s\")"},{"type":"int","var":"$month","beh":1,"desc":"The number of the month relative to the end of the previous year. Values 1 to 12 reference the normal calendar months of the year in question. Values less than 1 (including negative values) reference the months in the previous year in reverse order, so 0 is December, -1 is November, etc. Values greater than 12 reference the appropriate month in the following year(s).","def":"date(\"n\")"},{"type":"int","var":"$day","beh":1,"desc":"The number of the day relative to the end of the previous month. Values 1 to 28, 29, 30 or 31 (depending upon the month) reference the normal days in the relevant month. Values less than 1 (including negative values) reference the days in the previous month, so 0 is the last day of the previous month, -1 is the day before that, etc. Values greater than the number of days in the relevant month reference the appropriate day in the following month(s).","def":"date(\"j\")"},{"type":"int","var":"$year","beh":1,"desc":"The number of the year, may be a two or four digit value, with values between 0-69 mapping to 2000-2069 and 70-100 to 1970-2000. On systems where time_t is a 32bit signed integer, as most common today, the valid range for year is somewhere between 1901 and 2038. However, before PHP 5.1.0 this range was limited from 1970 to 2038 on some systems (e.g. Windows).","def":"date(\"Y\")"},{"type":"int","var":"$is_dst","beh":1,"desc":"This parameter can be set to 1 if the time is during daylight savings time (DST), 0 if it is not, or -1 (the default) if it is unknown whether the time is within daylight savings time or not. If it's unknown, PHP tries to figure it out itself. This can cause unexpected (but not incorrect) results. Some times are invalid if DST is enabled on the system PHP is running on or is_dst is set to 1. If DST is enabled in e.g. 2:00, all times between 2:00 and 3:00 are invalid and mktime() returns an undefined (usually negative) value. Some systems (e.g. Solaris 8) enable DST at midnight so time 0:30 of the day when DST is enabled is evaluated as 23:30 of the previous day.","def":-1}],"ret_type":"int"}]},"money_format":{"desc":"Formats a number as a currency string","long_desc":"money_format() returns a formatted version of number. This function wraps the C library function strfmon(), with the difference that this implementation converts only one number at a time.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the formatted string. Characters before and after the formatting string will be returned unchanged. Non-numeric number causes returning NULL and emitting E_WARNING.","seealso":[],"url":"function.money-format","name":"money_format","params":[{"list":[{"type":"string","var":"$format","beh":0,"desc":"The format specification consists of the following sequence: One or more of the optional flags below can be used:"},{"type":"float","var":"$number","beh":0,"desc":"The character = followed by a (single byte) character f to be used as the numeric fill character. The default fill character is space."}],"ret_type":"string"}]},"move_uploaded_file":{"desc":"Moves an uploaded file to a new location","long_desc":"This function checks to ensure that the file designated by filename is a valid upload file (meaning that it was uploaded via PHP's HTTP POST upload mechanism). If the file is valid, it will be moved to the filename given by destination. This sort of check is especially important if there is any chance that anything done with uploaded files could reveal their contents to the user, or even to other users on the same system.","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"Returns TRUE on success.","seealso":[],"url":"function.move-uploaded-file","name":"move_uploaded_file","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The filename of the uploaded file."},{"type":"string","var":"$destination","beh":0,"desc":"The destination of the moved file."}],"ret_type":"bool"}]},"mqseries_back":{"desc":"MQSeries MQBACK","long_desc":"The mqseries_back() (MQBACK) call indicates to the queue manager that all the message gets and puts that have occurred since the last syncpoint are to be backed out. Messages put as part of a unit of work are deleted; messages retrieved as part of a unit of work are reinstated on the queue. Using mqseries_back() only works in conjunction with mqseries_begin() and only function when connecting directly to a Queueu manager. Not via the mqclient interface.","ver":"PECL mqseries >= 0.10.0","ret_desc":"No value is returned.","seealso":[],"url":"function.mqseries-back","name":"mqseries_back","params":[{"list":[{"type":"resource","var":"$hconn","beh":0,"desc":"Connection handle. This handle represents the connection to the queue manager."},{"type":"resource","var":"&$compCode","beh":0,"desc":"Completion code."},{"type":"resource","var":"&$reason","beh":1,"desc":"Reason code qualifying the compCode."}],"ret_type":"void"}]},"mqseries_begin":{"desc":"MQseries MQBEGIN","long_desc":"The mqseries_begin() (MQBEGIN) call begins a unit of work that is coordinated by the queue manager, and that may involve external resource managers. Using mqseries_begin() starts the unit of work. Either mqseries_back() or mqseries_cmit() ends the unit of work.","ver":"PECL mqseries >= 0.10.0","ret_desc":"No value is returned.","seealso":[],"url":"function.mqseries-begin","name":"mqseries_begin","params":[{"list":[{"type":"resource","var":"$hconn","beh":0,"desc":"Connection handle. This handle represents the connection to the queue manager."},{"type":"array","var":"$beginOptions","beh":0,"desc":"Completion code."},{"type":"resource","var":"&$compCode","beh":1,"desc":"Reason code qualifying the compCode."},{"type":"resource","var":"&$reason","beh":1,"desc":""}],"ret_type":"void"}]},"mqseries_close":{"desc":"MQSeries MQCLOSE","long_desc":"The mqseries_close() (MQCLOSE) call relinquishes access to an object, and is the inverse of the mqseries_open() (MQOPEN) call.","ver":"PECL mqseries >= 0.10.0","ret_desc":"No value is returned.","seealso":[],"url":"function.mqseries-close","name":"mqseries_close","params":[{"list":[{"type":"resource","var":"$hconn","beh":0,"desc":"Connection handle. This handle represents the connection to the queue manager."},{"type":"resource","var":"$hobj","beh":0,"desc":"Object handle. This handle represents the object to be used."},{"type":"int","var":"$options","beh":1,"desc":""},{"type":"resource","var":"&$compCode","beh":1,"desc":"Completion code."},{"type":"resource","var":"&$reason","beh":1,"desc":"Reason code qualifying the compCode."}],"ret_type":"void"}]},"mqseries_cmit":{"desc":"MQSeries MQCMIT","long_desc":"The mqseries_cmit() (MQCMIT) call indicates to the queue manager that the application has reached a syncpoint, and that all of the message gets and puts that have occurred since the last syncpoint are to be made permanent. Messages put as part of a unit of work are made available to other applications; messages retrieved as part of a unit of work are deleted.","ver":"PECL mqseries >= 0.10.0","ret_desc":"No value is returned.","seealso":[],"url":"function.mqseries-cmit","name":"mqseries_cmit","params":[{"list":[{"type":"resource","var":"$hconn","beh":0,"desc":"Connection handle. This handle represents the connection to the queue manager."},{"type":"resource","var":"&$compCode","beh":0,"desc":"Completion code."},{"type":"resource","var":"&$reason","beh":1,"desc":"Reason code qualifying the compCode."}],"ret_type":"void"}]},"mqseries_conn":{"desc":"MQSeries MQCONN","long_desc":"The mqseries_conn() (MQCONN) call connects an application program to a queue manager. It provides a queue manager connection handle, which is used by the application on subsequent message queuing calls.","ver":"PECL mqseries >= 0.10.0","ret_desc":"No value is returned.","seealso":[],"url":"function.mqseries-conn","name":"mqseries_conn","params":[{"list":[{"type":"string","var":"$qManagerName","beh":0,"desc":"Name of queue manager. Name of the queue manager the application wishes to connect."},{"type":"resource","var":"&$hconn","beh":0,"desc":"Connection handle. This handle represents the connection to the queue manager."},{"type":"resource","var":"&$compCode","beh":1,"desc":"Completion code."},{"type":"resource","var":"&$reason","beh":1,"desc":"Reason code qualifying the compCode."}],"ret_type":"void"}]},"mqseries_connx":{"desc":"MQSeries MQCONNX","long_desc":"The mqseries_connx() (MQCONNX) call connects an application program to a queue manager. It provides a queue manager connection handle, which is used by the application on subsequent MQ calls.","ver":"PECL mqseries >= 0.10.0","ret_desc":"No value is returned.","seealso":[],"url":"function.mqseries-connx","name":"mqseries_connx","params":[{"list":[{"type":"string","var":"$qManagerName","beh":0,"desc":"Name of queue manager. Name of the queue manager the application wishes to connect."},{"type":"array","var":"&$connOptions","beh":0,"desc":"Options that control the action of function See also the MQCNO structure."},{"type":"resource","var":"&$hconn","beh":1,"desc":"Connection handle. This handle represents the connection to the queue manager."},{"type":"resource","var":"&$compCode","beh":1,"desc":"Completion code."},{"type":"resource","var":"&$reason","beh":1,"desc":"Reason code qualifying the compCode."}],"ret_type":"void"}]},"mqseries_disc":{"desc":"MQSeries MQDISC","long_desc":"The mqseries_disc() (MQDISC) call breaks the connection between the queue manager and the application program, and is the inverse of the mqseries_conn() (MQCONN) or mqseries_connx() (MQCONNX) call.","ver":"PECL mqseries >= 0.10.0","ret_desc":"No value is returned.","seealso":[],"url":"function.mqseries-disc","name":"mqseries_disc","params":[{"list":[{"type":"resource","var":"$hconn","beh":0,"desc":"Connection handle. This handle represents the connection to the queue manager."},{"type":"resource","var":"&$compCode","beh":0,"desc":"Completion code."},{"type":"resource","var":"&$reason","beh":1,"desc":"Reason code qualifying the compCode."}],"ret_type":"void"}]},"mqseries_get":{"desc":"MQSeries MQGET","long_desc":"The mqseries_get() (MQGET) call retrieves a message from a local queue that has been opened using the mqseries_open() (MQOPEN) call","ver":"PECL mqseries >= 0.10.0","ret_desc":"No value is returned.","seealso":[],"url":"function.mqseries-get","name":"mqseries_get","params":[{"list":[{"type":"resource","var":"$hConn","beh":0,"desc":"Connection handle. This handle represents the connection to the queue manager."},{"type":"resource","var":"$hObj","beh":0,"desc":"Object handle. This handle represents the object to be used."},{"type":"array","var":"&$md","beh":1,"desc":"Message descriptor (MQMD)."},{"type":"array","var":"&$gmo","beh":1,"desc":"Get message options (MQGMO)."},{"type":"int","var":"&$bufferLength","beh":1,"desc":"Expected length of the result buffer"},{"type":"string","var":"&$msg","beh":1,"desc":"Buffer holding the message that was retrieved from the object."},{"type":"int","var":"&$data_length","beh":1,"desc":"Actual buffer length"},{"type":"resource","var":"&$compCode","beh":1,"desc":"Completion code."},{"type":"resource","var":"&$reason","beh":1,"desc":"Reason code qualifying the compCode."}],"ret_type":"void"}]},"mqseries_inq":{"desc":"MQSeries MQINQ","long_desc":"The mqseries_inq() (MQINQ) call returns an array of integers and a set of character strings containing the attributes of an object.","ver":"PECL mqseries >= 0.10.0","ret_desc":"No value is returned.","seealso":[],"url":"function.mqseries-inq","name":"mqseries_inq","params":[{"list":[{"type":"resource","var":"$hconn","beh":0,"desc":"Connection handle. This handle represents the connection to the queue manager."},{"type":"resource","var":"$hobj","beh":0,"desc":"Object handle. This handle represents the object to be used."},{"type":"int","var":"$selectorCount","beh":1,"desc":"Count of selectors."},{"type":"array","var":"$selectors","beh":1,"desc":"Array of attribute selectors."},{"type":"int","var":"$intAttrCount","beh":1,"desc":"Count of integer attributes."},{"type":"resource","var":"&$intAttr","beh":1,"desc":"Array of integer attributes."},{"type":"int","var":"$charAttrLength","beh":1,"desc":"Length of character attributes buffer."},{"type":"resource","var":"&$charAttr","beh":1,"desc":"Character attributes."},{"type":"resource","var":"&$compCode","beh":1,"desc":"Completion code."},{"type":"resource","var":"&$reason","beh":1,"desc":"Reason code qualifying the compCode."}],"ret_type":"void"}]},"mqseries_open":{"desc":"MQSeries MQOPEN","long_desc":"The mqseries_open() (MQOPEN) call establishes access to an object.","ver":"PECL mqseries >= 0.10.0","ret_desc":"No value is returned.","seealso":[],"url":"function.mqseries-open","name":"mqseries_open","params":[{"list":[{"type":"resource","var":"$hconn","beh":0,"desc":"Connection handle. This handle represents the connection to the queue manager."},{"type":"array","var":"&$objDesc","beh":0,"desc":"Object descriptor. (MQOD)"},{"type":"int","var":"$option","beh":1,"desc":"Options that control the action of the function."},{"type":"resource","var":"&$hobj","beh":1,"desc":"Object handle. This handle represents the object to be used."},{"type":"resource","var":"&$compCode","beh":1,"desc":"Completion code."},{"type":"resource","var":"&$reason","beh":1,"desc":"Reason code qualifying the compCode."}],"ret_type":"void"}]},"mqseries_put":{"desc":"MQSeries MQPUT","long_desc":"The mqseries_put() (MQPUT) call puts a message on a queue or distribution list. The queue or distribution list must already be open.","ver":"PECL mqseries >= 0.10.0","ret_desc":"No value is returned.","seealso":[],"url":"function.mqseries-put","name":"mqseries_put","params":[{"list":[{"type":"resource","var":"$hConn","beh":0,"desc":"Connection handle. This handle represents the connection to the queue manager."},{"type":"resource","var":"$hObj","beh":0,"desc":"Object handle. This handle represents the object to be used."},{"type":"array","var":"&$md","beh":1,"desc":"Message descriptor (MQMD)."},{"type":"array","var":"&$pmo","beh":1,"desc":"Put message options (MQPMO)."},{"type":"string","var":"$message","beh":1,"desc":"The actual message to put onto the queue."},{"type":"resource","var":"&$compCode","beh":1,"desc":"Completion code."},{"type":"resource","var":"&$reason","beh":1,"desc":"Reason code qualifying the compCode."}],"ret_type":"void"}]},"mqseries_put1":{"desc":"MQSeries MQPUT1","long_desc":"The mqseries_put1() (MQPUT1) call puts one message on a queue. The queue need not be open.","ver":"PECL mqseries >= 0.10.0","ret_desc":"No value is returned.","seealso":[],"url":"function.mqseries-put1","name":"mqseries_put1","params":[{"list":[{"type":"resource","var":"$hconn","beh":0,"desc":"Connection handle. This handle represents the connection to the queue manager."},{"type":"resource","var":"&$objDesc","beh":0,"desc":"Object descriptor. (MQOD) This is a structure which identifies the queue to which the message is added."},{"type":"resource","var":"&$msgDesc","beh":1,"desc":"Message descriptor (MQMD)."},{"type":"resource","var":"&$pmo","beh":1,"desc":"Put message options (MQPMO)."},{"type":"string","var":"$buffer","beh":1,"desc":"Completion code."},{"type":"resource","var":"&$compCode","beh":1,"desc":"Reason code qualifying the compCode."},{"type":"resource","var":"&$reason","beh":1,"desc":""}],"ret_type":"void"}]},"mqseries_set":{"desc":"MQSeries MQSET","long_desc":"The mqseries_set() (MQSET) call is used to change the attributes of an object represented by a handle. The object must be a queue.","ver":"PECL mqseries >= 0.10.0","ret_desc":"No value is returned.","seealso":[],"url":"function.mqseries-set","name":"mqseries_set","params":[{"list":[{"type":"resource","var":"$hconn","beh":0,"desc":"Connection handle. This handle represents the connection to the queue manager."},{"type":"resource","var":"$hobj","beh":0,"desc":"Completion code."},{"type":"int","var":"$selectorcount","beh":1,"desc":"Reason code qualifying the compCode."},{"type":"array","var":"$selectors","beh":1,"desc":""},{"type":"int","var":"$intattrcount","beh":1,"desc":""},{"type":"array","var":"$intattrs","beh":1,"desc":""},{"type":"int","var":"$charattrlength","beh":1,"desc":""},{"type":"array","var":"$charattrs","beh":1,"desc":""},{"type":"resource","var":"&$compCode","beh":1,"desc":""},{"type":"resource","var":"&$reason","beh":1,"desc":""}],"ret_type":"void"}]},"mqseries_strerror":{"desc":"Returns the error message corresponding to a result code (MQRC).","long_desc":"mqseries_strerror() returns the message that correspond to the reason result code.","ver":"PECL mqseries >= 0.10.0","ret_desc":"string representation of the reason code message.","url":"function.mqseries-strerror","name":"mqseries_strerror","params":[{"list":[],"ret_type":"string"}]},"msession_connect":{"desc":"Connect to msession server","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-connect","name":"msession_connect","params":[{"list":[{"type":"string","var":"$host","beh":0,"desc":""},{"type":"string","var":"$port","beh":0,"desc":""}],"ret_type":"bool"}]},"msession_count":{"desc":"Get session count","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-count","name":"msession_count","params":[{"list":[],"ret_type":"int"}]},"msession_create":{"desc":"Create a session","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-create","name":"msession_create","params":[{"list":[{"type":"string","var":"$session","beh":1,"desc":""},{"type":"string","var":"$classname","beh":1,"desc":""},{"type":"string","var":"$data","beh":1,"desc":""}],"ret_type":"bool"}]},"msession_destroy":{"desc":"Destroy a session","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-destroy","name":"msession_destroy","params":[{"list":[],"ret_type":"bool"}]},"msession_disconnect":{"desc":"Close connection to msession server","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-disconnect","name":"msession_disconnect","params":[{"list":[],"ret_type":"void"}]},"msession_find":{"desc":"Find all sessions with name and value","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-find","name":"msession_find","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":""},{"type":"string","var":"$value","beh":0,"desc":""}],"ret_type":"array"}]},"msession_get":{"desc":"Get value from session","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-get","name":"msession_get","params":[{"list":[{"type":"string","var":"$session","beh":0,"desc":""},{"type":"string","var":"$name","beh":0,"desc":""},{"type":"string","var":"$value","beh":1,"desc":""}],"ret_type":"string"}]},"msession_get_array":{"desc":"Get array of msession variables","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-get-array","name":"msession_get_array","params":[{"list":[],"ret_type":"array"}]},"msession_get_data":{"desc":"Get data session unstructured data","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-get-data","name":"msession_get_data","params":[{"list":[],"ret_type":"string"}]},"msession_inc":{"desc":"Increment value in session","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-inc","name":"msession_inc","params":[{"list":[{"type":"string","var":"$session","beh":0,"desc":""},{"type":"string","var":"$name","beh":0,"desc":""}],"ret_type":"string"}]},"msession_list":{"desc":"List all sessions","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-list","name":"msession_list","params":[{"list":[],"ret_type":"array"}]},"msession_listvar":{"desc":"List sessions with variable","long_desc":"Used for searching sessions with common attributes.","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","ret_desc":"Returns an associative array of value\/session for all sessions with a variable named name.","url":"function.msession-listvar","name":"msession_listvar","params":[{"list":[],"ret_type":"array"}]},"msession_lock":{"desc":"Lock a session","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-lock","name":"msession_lock","params":[{"list":[],"ret_type":"int"}]},"msession_plugin":{"desc":"Call an escape function within the msession personality plugin","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-plugin","name":"msession_plugin","params":[{"list":[{"type":"string","var":"$session","beh":0,"desc":""},{"type":"string","var":"$val","beh":1,"desc":""},{"type":"string","var":"$param","beh":1,"desc":""}],"ret_type":"string"}]},"msession_randstr":{"desc":"Get random string","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-randstr","name":"msession_randstr","params":[{"list":[],"ret_type":"string"}]},"msession_set":{"desc":"Set value in session","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-set","name":"msession_set","params":[{"list":[{"type":"string","var":"$session","beh":0,"desc":""},{"type":"string","var":"$name","beh":0,"desc":""},{"type":"string","var":"$value","beh":1,"desc":""}],"ret_type":"bool"}]},"msession_set_array":{"desc":"Set msession variables from an array","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-set-array","name":"msession_set_array","params":[{"list":[{"type":"string","var":"$session","beh":0,"desc":""},{"type":"array","var":"$tuples","beh":0,"desc":""}],"ret_type":"void"}]},"msession_set_data":{"desc":"Set data session unstructured data","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-set-data","name":"msession_set_data","params":[{"list":[{"type":"string","var":"$session","beh":0,"desc":""},{"type":"string","var":"$value","beh":0,"desc":""}],"ret_type":"bool"}]},"msession_timeout":{"desc":"Set\/get session timeout","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-timeout","name":"msession_timeout","params":[{"list":[{"type":"string","var":"$session","beh":0,"desc":""},{"type":"int","var":"$param","beh":1,"desc":""}],"ret_type":"int"}]},"msession_uniq":{"desc":"Get unique id","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-uniq","name":"msession_uniq","params":[{"list":[{"type":"int","var":"$param","beh":1,"desc":""},{"type":"string","var":"$classname","beh":1,"desc":""},{"type":"string","var":"$data","beh":1,"desc":""}],"ret_type":"string"}]},"msession_unlock":{"desc":"Unlock a session","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2","url":"function.msession-unlock","name":"msession_unlock","params":[{"list":[{"type":"string","var":"$session","beh":0,"desc":""},{"type":"int","var":"$key","beh":0,"desc":""}],"ret_type":"int"}]},"msg_get_queue":{"desc":"Create or attach to a message queue","long_desc":"msg_get_queue() returns an id that can be used to access the System V message queue with the given key. The first call creates the message queue with the optional perms. A second call to msg_get_queue() for the same key will return a different message queue identifier, but both identifiers access the same underlying message queue.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns a resource handle that can be used to access the System V message queue.","seealso":[],"url":"function.msg-get-queue","name":"msg_get_queue","params":[{"list":[{"type":"int","var":"$key","beh":0,"desc":"Message queue numeric ID"},{"type":"int","var":"$perms","beh":0,"desc":"Queue permissions. Default to 0666. If the message queue already exists, the perms will be ignored.","def":666}],"ret_type":"resource"}]},"msg_queue_exists":{"desc":"Check whether a message queue exists","long_desc":"Checks whether the message queue key exists.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.msg-queue-exists","name":"msg_queue_exists","params":[{"list":[],"ret_type":"bool"}]},"msg_receive":{"desc":"Receive a message from a message queue","long_desc":"msg_receive() will receive the first message from the specified queue of the type specified by desiredmsgtype.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.msg-receive","name":"msg_receive","params":[{"list":[{"type":"resource","var":"$queue","beh":1,"desc":""},{"type":"int","var":"$desiredmsgtype","beh":1,"desc":"If desiredmsgtype is 0, the message from the front of the queue is returned. If desiredmsgtype is greater than 0, then the first message of that type is returned. If desiredmsgtype is less than 0, the first message on the queue with the lowest type less than or equal to the absolute value of desiredmsgtype will be read. If no messages match the criteria, your script will wait until a suitable message arrives on the queue. You can prevent the script from blocking by specifying MSG_IPC_NOWAIT in the flags parameter."},{"type":"int","var":"&$msgtype","beh":1,"desc":"The type of the message that was received will be stored in this parameter."},{"type":"int","var":"$maxsize","beh":1,"desc":"The maximum size of message to be accepted is specified by the maxsize; if the message in the queue is larger than this size the function will fail (unless you set flags as described below)."},{"type":"mixed","var":"&$message","beh":1,"desc":"The received message will be stored in message, unless there were errors receiving the message."},{"type":"bool","var":"$unserialize","beh":1,"desc":"If set to TRUE, the message is treated as though it was serialized using the same mechanism as the session module. The message will be unserialized and then returned to your script. This allows you to easily receive arrays or complex object structures from other PHP scripts, or if you are using the WDDX serializer, from any WDDX compatible source. If unserialize is FALSE, the message will be returned as a binary-safe string.","def":"true"},{"type":"int","var":"$flags","beh":1,"desc":"The optional flags allows you to pass flags to the low-level msgrcv system call. It defaults to 0, but you may specify one or more of the following values (by adding or ORing them together).","def":0},{"type":"int","var":"&$errorcode","beh":1,"desc":"If the function fails, the optional errorcode will be set to the value of the system errno variable."}],"ret_type":"bool"}]},"msg_remove_queue":{"desc":"Destroy a message queue","long_desc":"msg_remove_queue() destroys the message queue specified by the queue. Only use this function when all processes have finished working with the message queue and you need to release the system resources held by it.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.msg-remove-queue","name":"msg_remove_queue","params":[{"list":[],"ret_type":"bool"}]},"msg_send":{"desc":"Send a message to a message queue","long_desc":"msg_send() sends a message of type msgtype (which MUST be greater than 0) to the message queue specified by queue.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.msg-send","name":"msg_send","params":[{"list":[{"type":"resource","var":"$queue","beh":1,"desc":""},{"type":"int","var":"$msgtype","beh":1,"desc":""},{"type":"mixed","var":"$message","beh":1,"desc":""},{"type":"bool","var":"$serialize","beh":1,"desc":"The optional serialize controls how the message is sent. serialize defaults to TRUE which means that the message is serialized using the same mechanism as the session module before being sent to the queue. This allows complex arrays and objects to be sent to other PHP scripts, or if you are using the WDDX serializer, to any WDDX compatible client.","def":"true"},{"type":"bool","var":"$blocking","beh":1,"desc":"If the message is too large to fit in the queue, your script will wait until another process reads messages from the queue and frees enough space for your message to be sent. This is called blocking; you can prevent blocking by setting the optional blocking parameter to FALSE, in which case msg_send() will immediately return FALSE if the message is too big for the queue, and set the optional errorcode to MSG_EAGAIN, indicating that you should try to send your message again a little later on.","def":"true"},{"type":"int","var":"&$errorcode","beh":1,"desc":""}],"ret_type":"bool"}]},"msg_set_queue":{"desc":"Set information in the message queue data structure","long_desc":"msg_set_queue() allows you to change the values of the msg_perm.uid, msg_perm.gid, msg_perm.mode and msg_qbytes fields of the underlying message queue data structure. Changing the data structure will require that PHP be running as the same user that created the queue, owns the queue (as determined by the existing msg_perm.xxx fields), or be running with root privileges. root privileges are required to raise the msg_qbytes values above the system defined limit.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.msg-set-queue","name":"msg_set_queue","params":[{"list":[{"type":"resource","var":"$queue","beh":0,"desc":"Message queue resource handle"},{"type":"array","var":"$data","beh":0,"desc":"You specify the values you require by setting the value of the keys that you require in the data array."}],"ret_type":"bool"}]},"msg_stat_queue":{"desc":"Returns information from the message queue data structure","long_desc":"msg_stat_queue() returns the message queue meta data for the message queue specified by the queue. This is useful, for example, to determine which process sent the message that was just received.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"The return value is an array whose keys and values have the following meanings:","seealso":[],"url":"function.msg-stat-queue","name":"msg_stat_queue","params":[{"list":[],"ret_type":"array"}]},"msql":{"desc":"Alias of msql_db_query()","long_desc":"This function is an alias of msql_db_query().","ver":"PHP 4, PHP 5","url":"function.msql","name":"msql","params":[]},"msql_affected_rows":{"desc":"Returns number of affected rows","long_desc":"Returns number of affected rows by the last SELECT, UPDATE or DELETE query associated with result.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of affected rows on success, or FALSE on error.","seealso":[],"url":"function.msql-affected-rows","name":"msql_affected_rows","params":[{"list":[],"ret_type":"int"}]},"msql_close":{"desc":"Close mSQL connection","long_desc":"msql_close() closes the non-persistent connection to the mSQL server that's associated with the specified link identifier. Using msql_close() isn't usually necessary, as non-persistent open links are automatically closed at the end of the script's execution. See also freeing resources.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.msql-close","name":"msql_close","params":[{"list":[],"ret_type":"bool"}]},"msql_connect":{"desc":"Open mSQL connection","long_desc":"msql_connect() establishes a connection to a mSQL server. If a second call is made to msql_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned. The link to the server will be closed as soon as the execution of the script ends, unless it's closed earlier by explicitly calling msql_close().","ver":"PHP 4, PHP 5","ret_desc":"Returns a positive mSQL link identifier on success, or FALSE on error.","seealso":[],"url":"function.msql-connect","name":"msql_connect","params":[{"list":[],"ret_type":"resource"}]},"msql_create_db":{"desc":"Create mSQL database","long_desc":"msql_create_db() attempts to create a new database on the mSQL server.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.msql-create-db","name":"msql_create_db","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":"The name of the mSQL database."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"The mSQL connection. If not specified, the last link opened by msql_connect() is assumed. If no such link is found, the function will try to establish a link as if msql_connect() was called, and use it."}],"ret_type":"bool"}]},"msql_createdb":{"desc":"Alias of msql_create_db()","long_desc":"This function is an alias of: msql_create_db().","ver":"PHP 4, PHP 5","url":"function.msql-createdb","name":"msql_createdb","params":[]},"msql_data_seek":{"desc":"Move internal row pointer","long_desc":"msql_data_seek() moves the internal row pointer of the mSQL result associated with the specified query identifier to point to the specified row number. The next call to msql_fetch_row() would return that row.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.msql-data-seek","name":"msql_data_seek","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to msql_query()."},{"type":"int","var":"$row_number","beh":0,"desc":"The seeked row number."}],"ret_type":"bool"}]},"msql_db_query":{"desc":"Send mSQL query","long_desc":"msql_db_query() selects a database and executes a query on it.","ver":"PHP 4, PHP 5","ret_desc":"Returns a positive mSQL query identifier to the query result, or FALSE on error.","seealso":[],"url":"function.msql-db-query","name":"msql_db_query","params":[{"list":[{"type":"string","var":"$database","beh":0,"desc":"The name of the mSQL database."},{"type":"string","var":"$query","beh":1,"desc":"The SQL query."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"The mSQL connection. If not specified, the last link opened by msql_connect() is assumed. If no such link is found, the function will try to establish a link as if msql_connect() was called, and use it."}],"ret_type":"resource"}]},"msql_dbname":{"desc":"Alias of msql_result()","long_desc":"This function is an alias of: msql_result().","ver":"PHP 4, PHP 5","url":"function.msql-dbname","name":"msql_dbname","params":[]},"msql_drop_db":{"desc":"Drop (delete) mSQL database","long_desc":"msql_drop_db() attempts to drop (remove) a database from the mSQL server.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.msql-drop-db","name":"msql_drop_db","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":"The name of the database."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"The mSQL connection. If not specified, the last link opened by msql_connect() is assumed. If no such link is found, the function will try to establish a link as if msql_connect() was called, and use it."}],"ret_type":"bool"}]},"msql_error":{"desc":"Returns error message of last msql call","long_desc":"msql_error() returns the last issued error by the mSQL server. Note that only the last error message is accessible with msql_error().","ver":"PHP 4, PHP 5","ret_desc":"The last error message or an empty string if no error was issued.","url":"function.msql-error","name":"msql_error","params":[{"list":[],"ret_type":"string"}]},"msql_fetch_array":{"desc":"Fetch row as array","long_desc":"msql_fetch_array() is an extended version of msql_fetch_row(). In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys. An important thing to note is that using msql_fetch_array() is NOT significantly slower than using msql_fetch_row(), while it provides a significant added value.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array that corresponds to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.msql-fetch-array","name":"msql_fetch_array","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to msql_query()."},{"type":"int","var":"$result_type","beh":1,"desc":"A constant that can take the following values: MSQL_ASSOC, MSQL_NUM, and MSQL_BOTH with MSQL_BOTH being the default."}],"ret_type":"array"}]},"msql_fetch_field":{"desc":"Get field information","long_desc":"msql_fetch_field() can be used in order to obtain information about fields in a certain query result.","ver":"PHP 4, PHP 5","ret_desc":"Returns an object containing field information. The properties of the object are:","seealso":[],"url":"function.msql-fetch-field","name":"msql_fetch_field","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to msql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The field offset. If not specified, the next field that wasn't yet retrieved by msql_fetch_field() is retrieved.","def":0}],"ret_type":"object"}]},"msql_fetch_object":{"desc":"Fetch row as object","long_desc":"msql_fetch_object() is similar to msql_fetch_array(), with one difference - an object is returned, instead of an array. Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names). Speed-wise, the function is identical to msql_fetch_array(), and almost as quick as msql_fetch_row() (the difference is insignificant).","ver":"PHP 4, PHP 5","ret_desc":"Returns an object with properties that correspond to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.msql-fetch-object","name":"msql_fetch_object","params":[{"list":[],"ret_type":"object"}]},"msql_fetch_row":{"desc":"Get row as enumerated array","long_desc":"msql_fetch_row() fetches one row of data from the result associated with the specified query identifier. The row is returned as an array. Each result column is stored in an array offset, starting at offset 0. Subsequent call to msql_fetch_row() would return the next row in the result set, or FALSE if there are no more rows.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array that corresponds to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.msql-fetch-row","name":"msql_fetch_row","params":[{"list":[],"ret_type":"array"}]},"msql_field_flags":{"desc":"Get field flags","long_desc":"msql_field_flags() returns the field flags of the specified field.","ver":"PHP 4, PHP 5","ret_desc":"Returns a string containing the field flags of the specified key. This can be: primary key not null, not null, primary key, unique not null or unique.","url":"function.msql-field-flags","name":"msql_field_flags","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to msql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 1."}],"ret_type":"string"}]},"msql_field_len":{"desc":"Get field length","long_desc":"msql_field_len() returns the length of the specified field.","ver":"PHP 4, PHP 5","ret_desc":"Returns the length of the specified field or FALSE on error.","url":"function.msql-field-len","name":"msql_field_len","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to msql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 1."}],"ret_type":"int"}]},"msql_field_name":{"desc":"Get the name of the specified field in a result","long_desc":"msql_field_name() gets the name of the specified field index.","ver":"PHP 4, PHP 5","ret_desc":"The name of the field or FALSE on failure.","seealso":[],"url":"function.msql-field-name","name":"msql_field_name","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to msql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 1."}],"ret_type":"string"}]},"msql_field_seek":{"desc":"Set field offset","long_desc":"Seeks to the specified field offset. If the next call to msql_fetch_field() won't include a field offset, this field would be returned.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.msql-field-seek","name":"msql_field_seek","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to msql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 1."}],"ret_type":"bool"}]},"msql_field_table":{"desc":"Get table name for field","long_desc":"Returns the name of the table that the specified field is in.","ver":"PHP 4, PHP 5","ret_desc":"The name of the table on success or FALSE on failure.","url":"function.msql-field-table","name":"msql_field_table","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to msql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 1."}],"ret_type":"int"}]},"msql_field_type":{"desc":"Get field type","long_desc":"msql_field_type() gets the type of the specified field index.","ver":"PHP 4, PHP 5","ret_desc":"The type of the field. One of int, char, real, ident, null or unknown. This functions will return FALSE on failure.","url":"function.msql-field-type","name":"msql_field_type","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to msql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 1."}],"ret_type":"string"}]},"msql_fieldflags":{"desc":"Alias of msql_field_flags()","long_desc":"This function is an alias of msql_field_flags().","ver":"PHP 4, PHP 5","url":"function.msql-fieldflags","name":"msql_fieldflags","params":[]},"msql_fieldlen":{"desc":"Alias of msql_field_len()","long_desc":"This function is an alias of msql_field_len().","ver":"PHP 4, PHP 5","url":"function.msql-fieldlen","name":"msql_fieldlen","params":[]},"msql_fieldname":{"desc":"Alias of msql_field_name()","long_desc":"This function is an alias of msql_field_name().","ver":"PHP 4, PHP 5","url":"function.msql-fieldname","name":"msql_fieldname","params":[]},"msql_fieldtable":{"desc":"Alias of msql_field_table()","long_desc":"This function is an alias of msql_field_table().","ver":"PHP 4, PHP 5","url":"function.msql-fieldtable","name":"msql_fieldtable","params":[]},"msql_fieldtype":{"desc":"Alias of msql_field_type()","long_desc":"This function is an alias of msql_field_type().","ver":"PHP 4, PHP 5","url":"function.msql-fieldtype","name":"msql_fieldtype","params":[]},"msql_free_result":{"desc":"Free result memory","long_desc":"msql_free_result() frees the memory associated with query_identifier. When PHP completes a request, this memory is freed automatically, so you only need to call this function when you want to make sure you don't use too much memory while the script is running.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.msql-free-result","name":"msql_free_result","params":[{"list":[],"ret_type":"bool"}]},"msql_list_dbs":{"desc":"List mSQL databases on server","long_desc":"msql_list_tables() lists the databases available on the specified link_identifier.","ver":"PHP 4, PHP 5","ret_desc":"Returns a result set which may be traversed with any function that fetches result sets, such as msql_fetch_array(). On failure, this function will return FALSE.","seealso":[],"url":"function.msql-list-dbs","name":"msql_list_dbs","params":[{"list":[],"ret_type":"resource"}]},"msql_list_fields":{"desc":"List result fields","long_desc":"msql_list_fields() returns information about the given table.","ver":"PHP 4, PHP 5","ret_desc":"Returns a result set which may be traversed with any function that fetches result sets, such as msql_fetch_array(). On failure, this function will return FALSE.","seealso":[],"url":"function.msql-list-fields","name":"msql_list_fields","params":[{"list":[{"type":"string","var":"$database","beh":0,"desc":"The name of the database."},{"type":"string","var":"$tablename","beh":1,"desc":"The name of the table."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"The mSQL connection. If not specified, the last link opened by msql_connect() is assumed. If no such link is found, the function will try to establish a link as if msql_connect() was called, and use it."}],"ret_type":"resource"}]},"msql_list_tables":{"desc":"List tables in an mSQL database","long_desc":"msql_list_tables() lists the tables on the specified database.","ver":"PHP 4, PHP 5","ret_desc":"Returns a result set which may be traversed with any function that fetches result sets, such as msql_fetch_array(). On failure, this function will return FALSE.","seealso":[],"url":"function.msql-list-tables","name":"msql_list_tables","params":[{"list":[{"type":"string","var":"$database","beh":0,"desc":"The name of the database."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"The mSQL connection. If not specified, the last link opened by msql_connect() is assumed. If no such link is found, the function will try to establish a link as if msql_connect() was called, and use it."}],"ret_type":"resource"}]},"msql_num_fields":{"desc":"Get number of fields in result","long_desc":"msql_num_fields() returns the number of fields in a result set.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of fields in the result set.","seealso":[],"url":"function.msql-num-fields","name":"msql_num_fields","params":[{"list":[],"ret_type":"int"}]},"msql_num_rows":{"desc":"Get number of rows in result","long_desc":"msql_num_rows() returns the number of rows in a result set.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of rows in the result set.","seealso":[],"url":"function.msql-num-rows","name":"msql_num_rows","params":[{"list":[],"ret_type":"int"}]},"msql_numfields":{"desc":"Alias of msql_num_fields()","long_desc":"This function is an alias of msql_num_fields().","ver":"PHP 4, PHP 5","url":"function.msql-numfields","name":"msql_numfields","params":[]},"msql_numrows":{"desc":"Alias of msql_num_rows()","long_desc":"This function is an alias of msql_num_rows().","ver":"PHP 4, PHP 5","url":"function.msql-numrows","name":"msql_numrows","params":[]},"msql_pconnect":{"desc":"Open persistent mSQL connection","long_desc":"msql_pconnect() acts very much like msql_connect() with two major differences. First, when connecting, the function would first try to find a (persistent) link that's already open with the same host. If one is found, an identifier for it will be returned instead of opening a new connection. Second, the connection to the SQL server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (msql_close() will not close links established by this function).","ver":"PHP 4, PHP 5","ret_desc":"Returns a positive mSQL link identifier on success, or FALSE on error.","seealso":[],"url":"function.msql-pconnect","name":"msql_pconnect","params":[{"list":[],"ret_type":"resource"}]},"msql_query":{"desc":"Send mSQL query","long_desc":"msql_query() sends a query to the currently active database on the server that's associated with the specified link identifier.","ver":"PHP 4, PHP 5","ret_desc":"Returns a positive mSQL query identifier on success, or FALSE on error.","seealso":[],"url":"function.msql-query","name":"msql_query","params":[{"list":[{"type":"string","var":"$query","beh":0,"desc":"The SQL query."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"The mSQL connection. If not specified, the last link opened by msql_connect() is assumed. If no such link is found, the function will try to establish a link as if msql_connect() was called, and use it."}],"ret_type":"resource"}]},"msql_regcase":{"desc":"Alias of sql_regcase()","long_desc":"This function is an alias of sql_regcase().","ver":"PHP 4, PHP 5","url":"function.msql-regcase","name":"msql_regcase","params":[]},"msql_result":{"desc":"Get result data","long_desc":"msql_result() returns the contents of one cell from a mSQL result set. When working on large result sets, you should consider using one of the functions that fetch an entire row (specified below). As these functions return the contents of multiple cells in one function call, they are often much quicker than msql_result(). Recommended high-performance alternatives: msql_fetch_row(), msql_fetch_array(), and msql_fetch_object().","ver":"PHP 4, PHP 5","ret_desc":"Returns the contents of the cell at the row and offset in the specified mSQL result set.","url":"function.msql-result","name":"msql_result","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to msql_query()."},{"type":"int","var":"$row","beh":1,"desc":"The row offset."},{"type":"mixed","var":"$field","beh":1,"desc":"Can be the field's offset, or the field's name, or the field's table dot field's name (tablename.fieldname.). If the column name has been aliased ('select foo as bar from ...'), use the alias instead of the column name."}],"ret_type":"string"}]},"msql_select_db":{"desc":"Select mSQL database","long_desc":"msql_select_db() sets the current active database on the server that's associated with the specified link_identifier. Subsequent calls to msql_query() will be made on the active database.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.msql-select-db","name":"msql_select_db","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":"The database name."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"The mSQL connection. If not specified, the last link opened by msql_connect() is assumed. If no such link is found, the function will try to establish a link as if msql_connect() was called, and use it."}],"ret_type":"bool"}]},"msql_tablename":{"desc":"Alias of msql_result()","long_desc":"This function is an alias of msql_result().","ver":"PHP 4, PHP 5","url":"function.msql-tablename","name":"msql_tablename","params":[]},"mssql_bind":{"desc":"Adds a parameter to a stored procedure or a remote stored procedure","long_desc":"Binds a parameter to a stored procedure or a remote stored procedure.","ver":"PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mssql-bind","name":"mssql_bind","params":[{"list":[{"type":"resource","var":"$stmt","beh":1,"desc":"Statement resource, obtained with mssql_init()."},{"type":"string","var":"$param_name","beh":1,"desc":"The parameter name, as a string."},{"type":"mixed","var":"&$var","beh":1,"desc":"The PHP variable you'll bind the MSSQL parameter to. It is passed by reference, to retrieve OUTPUT and RETVAL values after the procedure execution."},{"type":"int","var":"$type","beh":1,"desc":"One of: SQLTEXT, SQLVARCHAR, SQLCHAR, SQLINT1, SQLINT2, SQLINT4, SQLBIT, SQLFLT4, SQLFLT8, SQLFLTN."},{"type":"bool","var":"$is_output","beh":1,"desc":"Whether the value is an OUTPUT parameter or not. If it's an OUTPUT parameter and you don't mention it, it will be treated as a normal input parameter and no error will be thrown.","def":"false"},{"type":"bool","var":"$is_null","beh":1,"desc":"Whether the parameter is NULL or not. Passing the NULL value as var will not do the job.","def":"false"},{"type":"int","var":"$maxlen","beh":1,"desc":"Used with char\/varchar values. You have to indicate the length of the data so if the parameter is a varchar(50), the type must be SQLVARCHAR and this value 50.","def":-1}],"ret_type":"bool"}]},"mssql_close":{"desc":"Close MS SQL Server connection","long_desc":"Closes the link to a MS SQL Server database that's associated with the specified link identifier. If the link identifier isn't specified, the last opened link is assumed. Note that this isn't usually necessary, as non-persistent open links are automatically closed at the end of the script's execution.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mssql-close","name":"mssql_close","params":[{"list":[],"ret_type":"bool"}]},"mssql_connect":{"desc":"Open MS SQL server connection","long_desc":"mssql_connect() establishes a connection to a MS SQL server. The link to the server will be closed as soon as the execution of the script ends, unless it's closed earlier by explicitly calling mssql_close().","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns a MS SQL link identifier on success, or FALSE on error.","seealso":[],"url":"function.mssql-connect","name":"mssql_connect","params":[{"list":[{"type":"string","var":"$servername","beh":1,"desc":"The MS SQL server. It can also include a port number, e.g. hostname:port (Linux), or hostname,port (Windows)."},{"type":"string","var":"$username","beh":1,"desc":"The username."},{"type":"string","var":"$password","beh":1,"desc":"The password."},{"type":"bool","var":"$new_link","beh":1,"desc":"If a second call is made to mssql_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned. This parameter modifies this behavior and makes mssql_connect() always open a new link, even if mssql_connect() was called before with the same parameters.","def":"false"}],"ret_type":"resource"}]},"mssql_data_seek":{"desc":"Moves internal row pointer","long_desc":"mssql_data_seek() moves the internal row pointer of the MS SQL result associated with the specified result identifier to point to the specified row number, first row being number 0. The next call to mssql_fetch_row() would return that row.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.mssql-data-seek","name":"mssql_data_seek","params":[{"list":[{"type":"resource","var":"$result_identifier","beh":0,"desc":"The result resource that is being evaluated."},{"type":"int","var":"$row_number","beh":0,"desc":"The desired row number of the new result pointer."}],"ret_type":"bool"}]},"mssql_execute":{"desc":"Executes a stored procedure on a MS SQL server database","long_desc":"Executes a stored procedure on a MS SQL server database","ver":"PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1","seealso":[],"url":"function.mssql-execute","name":"mssql_execute","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"Statement handle obtained with mssql_init()."},{"type":"bool","var":"$skip_results","beh":0,"desc":"Whenever to skip the results or not.","def":"false"}],"ret_type":"mixed"}]},"mssql_fetch_array":{"desc":"Fetch a result row as an associative array, a numeric array, or both","long_desc":"mssql_fetch_array() is an extended version of mssql_fetch_row(). In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys. An important thing to note is that using mssql_fetch_array() is NOT significantly slower than using mssql_fetch_row(), while it provides a significant added value.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns an array that corresponds to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.mssql-fetch-array","name":"mssql_fetch_array","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mssql_query()."},{"type":"int","var":"$result_type","beh":0,"desc":"The type of array that is to be fetched. It's a constant and can take the following values: MSSQL_ASSOC, MSSQL_NUM, and MSSQL_BOTH.","def":"MSSQL_BOTH"}],"ret_type":"array"}]},"mssql_fetch_assoc":{"desc":"Returns an associative array of the current row in the result","long_desc":"Returns an associative array that corresponds to the fetched row and moves the internal data pointer ahead. mssql_fetch_assoc() is equivalent to calling mssql_fetch_array() with MSSQL_ASSOC for the optional second parameter.","ver":"PHP 4 >= 4.2.0, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns an associative array that corresponds to the fetched row, or FALSE if there are no more rows.","url":"function.mssql-fetch-assoc","name":"mssql_fetch_assoc","params":[{"list":[],"ret_type":"array"}]},"mssql_fetch_batch":{"desc":"Returns the next batch of records","long_desc":"Returns the next batch of records","ver":"PHP 4 >= 4.0.4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns the batch number as an integer.","url":"function.mssql-fetch-batch","name":"mssql_fetch_batch","params":[{"list":[],"ret_type":"int"}]},"mssql_fetch_field":{"desc":"Get field information","long_desc":"mssql_fetch_field() can be used in order to obtain information about fields in a certain query result.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns an object containing field information.","seealso":[],"url":"function.mssql-fetch-field","name":"mssql_fetch_field","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mssql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. If the field offset is not specified, the next field that was not yet retrieved by this function is retrieved. The field_offset starts at 0.","def":-1}],"ret_type":"object"}]},"mssql_fetch_object":{"desc":"Fetch row as object","long_desc":"mssql_fetch_object() is similar to mssql_fetch_array(), with one difference - an object is returned, instead of an array. Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names). Speed-wise, the function is identical to mssql_fetch_array(), and almost as quick as mssql_fetch_row() (the difference is insignificant).","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns an object with properties that correspond to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.mssql-fetch-object","name":"mssql_fetch_object","params":[{"list":[],"ret_type":"object"}]},"mssql_fetch_row":{"desc":"Get row as enumerated array","long_desc":"mssql_fetch_row() fetches one row of data from the result associated with the specified result identifier. The row is returned as an array. Each result column is stored in an array offset, starting at offset 0. Subsequent call to mssql_fetch_row() would return the next row in the result set, or FALSE if there are no more rows.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns an array that corresponds to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.mssql-fetch-row","name":"mssql_fetch_row","params":[{"list":[],"ret_type":"array"}]},"mssql_field_length":{"desc":"Get the length of a field","long_desc":"Returns the length of field no. offset in result.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"The length of the specified field index on success or FALSE on failure.","seealso":[],"url":"function.mssql-field-length","name":"mssql_field_length","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mssql_query()."},{"type":"int","var":"$offset","beh":0,"desc":"The field offset, starts at 0. If omitted, the current field is used.","def":-1}],"ret_type":"int"}]},"mssql_field_name":{"desc":"Get the name of a field","long_desc":"Returns the name of field no. offset in result.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"The name of the specified field index on success or FALSE on failure.","seealso":[],"url":"function.mssql-field-name","name":"mssql_field_name","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mssql_query()."},{"type":"int","var":"$offset","beh":0,"desc":"The field offset, starts at 0. If omitted, the current field is used.","def":-1}],"ret_type":"string"}]},"mssql_field_seek":{"desc":"Seeks to the specified field offset","long_desc":"Seeks to the specified field offset. If the next call to mssql_fetch_field() won't include a field offset, this field would be returned.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mssql-field-seek","name":"mssql_field_seek","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mssql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The field offset, starts at 0."}],"ret_type":"bool"}]},"mssql_field_type":{"desc":"Gets the type of a field","long_desc":"Returns the type of field no. offset in result.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"The type of the specified field index on success or FALSE on failure.","seealso":[],"url":"function.mssql-field-type","name":"mssql_field_type","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mssql_query()."},{"type":"int","var":"$offset","beh":0,"desc":"The field offset, starts at 0. If omitted, the current field is used.","def":-1}],"ret_type":"string"}]},"mssql_free_result":{"desc":"Free result memory","long_desc":"mssql_free_result() only needs to be called if you are worried about using too much memory while your script is running. All result memory will automatically be freed when the script ends. You may call mssql_free_result() with the result identifier as an argument and the associated result memory will be freed.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mssql-free-result","name":"mssql_free_result","params":[{"list":[],"ret_type":"bool"}]},"mssql_free_statement":{"desc":"Free statement memory","long_desc":"mssql_free_statement() only needs to be called if you are worried about using too much memory while your script is running. All statement memory will automatically be freed when the script ends. You may call mssql_free_statement() with the statement identifier as an argument and the associated statement memory will be freed.","ver":"PHP 4 >= 4.3.2, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mssql-free-statement","name":"mssql_free_statement","params":[{"list":[],"ret_type":"bool"}]},"mssql_get_last_message":{"desc":"Returns the last message from the server","long_desc":"Gets the last message from the MS-SQL server","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns last error message from server, or an empty string if no error messages are returned from MSSQL.","seealso":[],"url":"function.mssql-get-last-message","name":"mssql_get_last_message","params":[{"list":[],"ret_type":"string"}]},"mssql_guid_string":{"desc":"Converts a 16 byte binary GUID to a string","long_desc":"Converts a 16 byte binary GUID to a string.","ver":"PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns the converted string on success.","url":"function.mssql-guid-string","name":"mssql_guid_string","params":[{"list":[{"type":"string","var":"$binary","beh":0,"desc":"A 16 byte binary GUID."},{"type":"bool","var":"$short_format","beh":0,"desc":"Whenever to use short format.","def":"false"}],"ret_type":"string"}]},"mssql_init":{"desc":"Initializes a stored procedure or a remote stored procedure","long_desc":"Initializes a stored procedure or a remote stored procedure.","ver":"PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns a resource identifier \"statement\", used in subsequent calls to mssql_bind() and mssql_execute(), or FALSE on errors.","seealso":[],"url":"function.mssql-init","name":"mssql_init","params":[{"list":[{"type":"string","var":"$sp_name","beh":0,"desc":"Stored procedure name, like ownew.sp_name or otherdb.owner.sp_name."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A MS SQL link identifier, returned by mssql_connect()."}],"ret_type":"resource"}]},"mssql_min_error_severity":{"desc":"Sets the minimum error severity","long_desc":"Sets the minimum error severity.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"No value is returned.","url":"function.mssql-min-error-severity","name":"mssql_min_error_severity","params":[{"list":[],"ret_type":"void"}]},"mssql_min_message_severity":{"desc":"Sets the minimum message severity","long_desc":"Sets the minimum message severity.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"No value is returned.","url":"function.mssql-min-message-severity","name":"mssql_min_message_severity","params":[{"list":[],"ret_type":"void"}]},"mssql_next_result":{"desc":"Move the internal result pointer to the next result","long_desc":"When sending more than one SQL statement to the server or executing a stored procedure with multiple results, it will cause the server to return multiple result sets. This function will test for additional results available form the server. If an additional result set exists it will free the existing result set and prepare to fetch the rows from the new result set.","ver":"PHP 4 >= 4.0.5, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns TRUE if an additional result set was available or FALSE otherwise.","url":"function.mssql-next-result","name":"mssql_next_result","params":[{"list":[],"ret_type":"bool"}]},"mssql_num_fields":{"desc":"Gets the number of fields in result","long_desc":"mssql_num_fields() returns the number of fields in a result set.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns the number of fields, as an integer.","seealso":[],"url":"function.mssql-num-fields","name":"mssql_num_fields","params":[{"list":[],"ret_type":"int"}]},"mssql_num_rows":{"desc":"Gets the number of rows in result","long_desc":"mssql_num_rows() returns the number of rows in a result set.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns the number of rows, as an integer.","seealso":[],"url":"function.mssql-num-rows","name":"mssql_num_rows","params":[{"list":[],"ret_type":"int"}]},"mssql_pconnect":{"desc":"Open persistent MS SQL connection","long_desc":"mssql_pconnect() acts very much like mssql_connect() with two major differences. First, when connecting, the function would first try to find a (persistent) link that's already open with the same host, username and password. If one is found, an identifier for it will be returned instead of opening a new connection. Second, the connection to the SQL server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (mssql_close() will not close links established by mssql_pconnect()). This type of links is therefore called 'persistent'.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns a positive MS SQL persistent link identifier on success, or FALSE on error.","url":"function.mssql-pconnect","name":"mssql_pconnect","params":[{"list":[{"type":"string","var":"$servername","beh":1,"desc":"The MS SQL server. It can also include a port number. e.g. hostname:port."},{"type":"string","var":"$username","beh":1,"desc":"The username."},{"type":"string","var":"$password","beh":1,"desc":"The password."},{"type":"bool","var":"$new_link","beh":1,"desc":"If a second call is made to mssql_pconnect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned. This parameter modifies this behavior and makes mssql_pconnect() always open a new link, even if mssql_pconnect() was called before with the same parameters.","def":"false"}],"ret_type":"resource"}]},"mssql_query":{"desc":"Send MS SQL query","long_desc":"mssql_query() sends a query to the currently active database on the server that's associated with the specified link identifier.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns a MS SQL result resource on success, TRUE if no rows were returned, or FALSE on error.","seealso":[],"url":"function.mssql-query","name":"mssql_query","params":[{"list":[{"type":"string","var":"$query","beh":1,"desc":"An SQL query."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A MS SQL link identifier, returned by mssql_connect() or mssql_pconnect(). If the link identifier isn't specified, the last opened link is assumed. If no link is open, the function tries to establish a link as if mssql_connect() was called, and use it."},{"type":"int","var":"$batch_size","beh":1,"desc":"The number of records to batch in the buffer.","def":0}],"ret_type":"mixed"}]},"mssql_result":{"desc":"Get result data","long_desc":"mssql_result() returns the contents of one cell from a MS SQL result set.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns the contents of the specified cell.","seealso":[],"url":"function.mssql-result","name":"mssql_result","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mssql_query()."},{"type":"int","var":"$row","beh":0,"desc":"The row number."},{"type":"mixed","var":"$field","beh":1,"desc":"Can be the field's offset, the field's name or the field's table dot field's name (tablename.fieldname). If the column name has been aliased ('select foo as bar from...'), it uses the alias instead of the column name."}],"ret_type":"string"}]},"mssql_rows_affected":{"desc":"Returns the number of records affected by the query","long_desc":"Returns the number of records affected by the last write query.","ver":"PHP 4 >= 4.0.4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns the number of records affected by last operation.","url":"function.mssql-rows-affected","name":"mssql_rows_affected","params":[{"list":[],"ret_type":"int"}]},"mssql_select_db":{"desc":"Select MS SQL database","long_desc":"mssql_select_db() sets the current active database on the server that's associated with the specified link identifier. Every subsequent call to mssql_query() will be made on the active database.","ver":"PHP 4, PHP 5, PECL odbtp >= 1.1.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mssql-select-db","name":"mssql_select_db","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":"The database name. To escape the name of a database that contains spaces, hyphens (\"-\"), or any other exceptional characters, the database name must be enclosed in brackets, as is shown in the example, below. This technique must also be applied when selecting a database name that is also a reserved word (such as primary)."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"A MS SQL link identifier, returned by mssql_connect() or mssql_pconnect(). If no link identifier is specified, the last opened link is assumed. If no link is open, the function will try to establish a link as if mssql_connect() was called, and use it."}],"ret_type":"bool"}]},"mt_getrandmax":{"desc":"Show largest possible random value","long_desc":"Returns the maximum value that can be returned by a call to mt_rand().","ver":"PHP 4, PHP 5","ret_desc":"Returns the maximum random value returned by mt_rand()","seealso":[],"url":"function.mt-getrandmax","name":"mt_getrandmax","params":[{"list":[],"ret_type":"int"}]},"mt_rand":{"desc":"Generate a better random value","long_desc":"Many random number generators of older libcs have dubious or unknown characteristics and are slow. By default, PHP uses the libc random number generator with the rand() function. The mt_rand() function is a drop-in replacement for this. It uses a random number generator with known characteristics using the \u00bb\u00a0 Mersenne Twister, which will produce random numbers four times faster than what the average libc rand() provides. If called without the optional min, max arguments mt_rand() returns a pseudo-random value between 0 and mt_getrandmax(). If you want a random number between 5 and 15 (inclusive), for example, use mt_rand(5, 15).","ver":"PHP 4, PHP 5","ret_desc":"A random integer value between min (or 0) and max (or mt_getrandmax(), inclusive)","seealso":[],"url":"function.mt-rand","name":"mt_rand","params":[{"list":[],"ret_type":"int"},{"list":[{"type":"int","var":"$min","beh":0,"desc":"Optional lowest value to be returned (default: 0)"},{"type":"int","var":"$max","beh":0,"desc":"Optional highest value to be returned (default: mt_getrandmax())"}],"ret_type":"int"}]},"mt_srand":{"desc":"Seed the better random number generator","long_desc":"Seeds the random number generator with seed or with a random value if no seed is given.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.mt-srand","name":"mt_srand","params":[{"list":[],"ret_type":"void"}]},"mysql_affected_rows":{"desc":"Get number of affected rows in previous MySQL operation","long_desc":"Get the number of affected rows by the last INSERT, UPDATE, REPLACE or DELETE query associated with link_identifier.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of affected rows on success, and -1 if the last query failed.","seealso":[],"url":"function.mysql-affected-rows","name":"mysql_affected_rows","params":[{"list":[],"ret_type":"int"}]},"mysql_client_encoding":{"desc":"Returns the name of the character set","long_desc":"Retrieves the character_set variable from MySQL.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the default character set name for the current connection.","seealso":[],"url":"function.mysql-client-encoding","name":"mysql_client_encoding","params":[{"list":[],"ret_type":"string"}]},"mysql_close":{"desc":"Close MySQL connection","long_desc":"mysql_close() closes the non-persistent connection to the MySQL server that's associated with the specified link identifier. If link_identifier isn't specified, the last opened link is used. Using mysql_close() isn't usually necessary, as non-persistent open links are automatically closed at the end of the script's execution. See also freeing resources.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mysql-close","name":"mysql_close","params":[{"list":[],"ret_type":"bool"}]},"mysql_connect":{"desc":"Open a connection to a MySQL Server","long_desc":"Opens or reuses a connection to a MySQL server.","ver":"PHP 4, PHP 5","ret_desc":"Returns a MySQL link identifier on success or FALSE on failure.","seealso":[],"url":"function.mysql-connect","name":"mysql_connect","params":[{"list":[{"type":"string","var":"$server","beh":1,"desc":"The MySQL server. It can also include a port number. e.g. \"hostname:port\" or a path to a local socket e.g. \":\/path\/to\/socket\" for the localhost. If the PHP directive mysql.default_host is undefined (default), then the default value is 'localhost:3306'. In SQL safe mode, this parameter is ignored and value 'localhost:3306' is always used.","def":"ini_get(\"mysql.default_host\")"},{"type":"string","var":"$username","beh":1,"desc":"The username. Default value is defined by mysql.default_user. In SQL safe mode, this parameter is ignored and the name of the user that owns the server process is used.","def":"ini_get(\"mysql.default_user\")"},{"type":"string","var":"$password","beh":1,"desc":"The password. Default value is defined by mysql.default_password. In SQL safe mode, this parameter is ignored and empty password is used.","def":"ini_get(\"mysql.default_password\")"},{"type":"bool","var":"$new_link","beh":1,"desc":"If a second call is made to mysql_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned. The new_link parameter modifies this behavior and makes mysql_connect() always open a new link, even if mysql_connect() was called before with the same parameters. In SQL safe mode, this parameter is ignored.","def":"false"},{"type":"int","var":"$client_flags","beh":1,"desc":"The client_flags parameter can be a combination of the following constants: 128 (enable LOAD DATA LOCAL handling), MYSQL_CLIENT_SSL, MYSQL_CLIENT_COMPRESS, MYSQL_CLIENT_IGNORE_SPACE or MYSQL_CLIENT_INTERACTIVE. Read the section about MySQL client constants for further information. In SQL safe mode, this parameter is ignored.","def":0}],"ret_type":"resource"}]},"mysql_create_db":{"desc":"Create a MySQL database","long_desc":"mysql_create_db() attempts to create a new database on the server associated with the specified link identifier.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mysql-create-db","name":"mysql_create_db","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":"The name of the database being created."},{"type":"resource","var":"$link_identifier","beh":0,"desc":"The MySQL connection. If the link identifier is not specified, the last link opened by mysql_connect() is assumed. If no such link is found, it will try to create one as if mysql_connect() was called with no arguments. If no connection is found or established, an E_WARNING level error is generated.","def":"NULL"}],"ret_type":"bool"}]},"mysql_data_seek":{"desc":"Move internal result pointer","long_desc":"mysql_data_seek() moves the internal row pointer of the MySQL result associated with the specified result identifier to point to the specified row number. The next call to a MySQL fetch function, such as mysql_fetch_assoc(), would return that row. row_number starts at 0. The row_number should be a value in the range from 0 to mysql_num_rows() - 1. However if the result set is empty (mysql_num_rows() == 0), a seek to 0 will fail with a E_WARNING and mysql_data_seek() will return FALSE.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mysql-data-seek","name":"mysql_data_seek","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mysql_query()."},{"type":"int","var":"$row_number","beh":0,"desc":"The desired row number of the new result pointer."}],"ret_type":"bool"}]},"mysql_db_name":{"desc":"Retrieves database name from the call to mysql_list_dbs()","long_desc":"Retrieve the database name from a call to mysql_list_dbs().","ver":"PHP 4, PHP 5","ret_desc":"Returns the database name on success, and FALSE on failure. If FALSE is returned, use mysql_error() to determine the nature of the error.","seealso":[],"url":"function.mysql-db-name","name":"mysql_db_name","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result pointer from a call to mysql_list_dbs()."},{"type":"int","var":"$row","beh":1,"desc":"The index into the result set."},{"type":"mixed","var":"$field","beh":1,"desc":"The field name.","def":"NULL"}],"ret_type":"string"}]},"mysql_db_query":{"desc":"Selects a database and executes a query on it","long_desc":"mysql_db_query() selects a database, and executes a query on it.","ver":"PHP 4, PHP 5","ret_desc":"Returns a positive MySQL result resource to the query result, or FALSE on error. The function also returns TRUE\/FALSE for INSERT\/UPDATE\/DELETE queries to indicate success\/failure.","seealso":[],"url":"function.mysql-db-query","name":"mysql_db_query","params":[{"list":[{"type":"string","var":"$database","beh":0,"desc":"The name of the database that will be selected."},{"type":"string","var":"$query","beh":1,"desc":"The MySQL query. Data inside the query should be properly escaped."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"The MySQL connection. If the link identifier is not specified, the last link opened by mysql_connect() is assumed. If no such link is found, it will try to create one as if mysql_connect() was called with no arguments. If no connection is found or established, an E_WARNING level error is generated.","def":"NULL"}],"ret_type":"resource"}]},"mysql_drop_db":{"desc":"Drop (delete) a MySQL database","long_desc":"mysql_drop_db() attempts to drop (remove) an entire database from the server associated with the specified link identifier. This function is deprecated, it is preferable to use mysql_query() to issue an sql DROP DATABASE statement instead.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mysql-drop-db","name":"mysql_drop_db","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":"The name of the database that will be deleted."},{"type":"resource","var":"$link_identifier","beh":0,"desc":"The MySQL connection. If the link identifier is not specified, the last link opened by mysql_connect() is assumed. If no such link is found, it will try to create one as if mysql_connect() was called with no arguments. If no connection is found or established, an E_WARNING level error is generated.","def":"NULL"}],"ret_type":"bool"}]},"mysql_errno":{"desc":"Returns the numerical value of the error message from previous MySQL operation","long_desc":"Returns the error number from the last MySQL function. Errors coming back from the MySQL database backend no longer issue warnings. Instead, use mysql_errno() to retrieve the error code. Note that this function only returns the error code from the most recently executed MySQL function (not including mysql_error() and mysql_errno()), so if you want to use it, make sure you check the value before calling another MySQL function.","ver":"PHP 4, PHP 5","ret_desc":"Returns the error number from the last MySQL function, or 0 (zero) if no error occurred.","seealso":[],"url":"function.mysql-errno","name":"mysql_errno","params":[{"list":[],"ret_type":"int"}]},"mysql_error":{"desc":"Returns the text of the error message from previous MySQL operation","long_desc":"Returns the error text from the last MySQL function. Errors coming back from the MySQL database backend no longer issue warnings. Instead, use mysql_error() to retrieve the error text. Note that this function only returns the error text from the most recently executed MySQL function (not including mysql_error() and mysql_errno()), so if you want to use it, make sure you check the value before calling another MySQL function.","ver":"PHP 4, PHP 5","ret_desc":"Returns the error text from the last MySQL function, or '' (empty string) if no error occurred.","seealso":[],"url":"function.mysql-error","name":"mysql_error","params":[{"list":[],"ret_type":"string"}]},"mysql_escape_string":{"desc":"Escapes a string for use in a mysql_query","long_desc":"This function will escape the unescaped_string, so that it is safe to place it in a mysql_query(). This function is deprecated. This function is identical to mysql_real_escape_string() except that mysql_real_escape_string() takes a connection handler and escapes the string according to the current character set. mysql_escape_string() does not take a connection argument and does not respect the current charset setting.","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"Returns the escaped string.","seealso":[],"url":"function.mysql-escape-string","name":"mysql_escape_string","params":[{"list":[],"ret_type":"string"}]},"mysql_fetch_array":{"desc":"Fetch a result row as an associative array, a numeric array, or both","long_desc":"Returns an array that corresponds to the fetched row and moves the internal data pointer ahead.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of strings that corresponds to the fetched row, or FALSE if there are no more rows. The type of returned array depends on how result_type is defined. By using MYSQL_BOTH (default), you'll get an array with both associative and number indices. Using MYSQL_ASSOC, you only get associative indices (as mysql_fetch_assoc() works), using MYSQL_NUM, you only get number indices (as mysql_fetch_row() works).","seealso":[],"url":"function.mysql-fetch-array","name":"mysql_fetch_array","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mysql_query()."},{"type":"int","var":"$result_type","beh":0,"desc":"The type of array that is to be fetched. It's a constant and can take the following values: MYSQL_ASSOC, MYSQL_NUM, and MYSQL_BOTH.","def":"MYSQL_BOTH"}],"ret_type":"array"}]},"mysql_fetch_assoc":{"desc":"Fetch a result row as an associative array","long_desc":"Returns an associative array that corresponds to the fetched row and moves the internal data pointer ahead. mysql_fetch_assoc() is equivalent to calling mysql_fetch_array() with MYSQL_ASSOC for the optional second parameter. It only returns an associative array.","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"Returns an associative array of strings that corresponds to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.mysql-fetch-assoc","name":"mysql_fetch_assoc","params":[{"list":[],"ret_type":"array"}]},"mysql_fetch_field":{"desc":"Get column information from a result and return as an object","long_desc":"Returns an object containing field information. This function can be used to obtain information about fields in the provided query result.","ver":"PHP 4, PHP 5","ret_desc":"Returns an object containing field information. The properties of the object are:","seealso":[],"url":"function.mysql-fetch-field","name":"mysql_fetch_field","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mysql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. If the field offset is not specified, the next field that was not yet retrieved by this function is retrieved. The field_offset starts at 0.","def":0}],"ret_type":"object"}]},"mysql_fetch_lengths":{"desc":"Get the length of each output in a result","long_desc":"Returns an array that corresponds to the lengths of each field in the last row fetched by MySQL. mysql_fetch_lengths() stores the lengths of each result column in the last row returned by mysql_fetch_row(), mysql_fetch_assoc(), mysql_fetch_array(), and mysql_fetch_object() in an array, starting at offset 0.","ver":"PHP 4, PHP 5","ret_desc":"An array of lengths on success or FALSE on failure.","seealso":[],"url":"function.mysql-fetch-lengths","name":"mysql_fetch_lengths","params":[{"list":[],"ret_type":"array"}]},"mysql_fetch_object":{"desc":"Fetch a result row as an object","long_desc":"Returns an object with properties that correspond to the fetched row and moves the internal data pointer ahead.","ver":"PHP 4, PHP 5","ret_desc":"Returns an object with string properties that correspond to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.mysql-fetch-object","name":"mysql_fetch_object","params":[{"list":[{"type":"resource","var":"$result","beh":1,"desc":"The result resource that is being evaluated. This result comes from a call to mysql_query()."},{"type":"string","var":"$class_name","beh":1,"desc":"The name of the class to instantiate, set the properties of and return. If not specified, a stdClass object is returned."},{"type":"array","var":"$params","beh":1,"desc":"An optional array of parameters to pass to the constructor for class_name objects."}],"ret_type":"object"}]},"mysql_fetch_row":{"desc":"Get a result row as an enumerated array","long_desc":"Returns a numerical array that corresponds to the fetched row and moves the internal data pointer ahead.","ver":"PHP 4, PHP 5","ret_desc":"Returns an numerical array of strings that corresponds to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.mysql-fetch-row","name":"mysql_fetch_row","params":[{"list":[],"ret_type":"array"}]},"mysql_field_flags":{"desc":"Get the flags associated with the specified field in a result","long_desc":"mysql_field_flags() returns the field flags of the specified field. The flags are reported as a single word per flag separated by a single space, so that you can split the returned value using explode().","ver":"PHP 4, PHP 5","ret_desc":"Returns a string of flags associated with the result or FALSE on failure.","seealso":[],"url":"function.mysql-field-flags","name":"mysql_field_flags","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mysql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 0. If field_offset does not exist, an error of level E_WARNING is also issued."}],"ret_type":"string"}]},"mysql_field_len":{"desc":"Returns the length of the specified field","long_desc":"mysql_field_len() returns the length of the specified field.","ver":"PHP 4, PHP 5","ret_desc":"The length of the specified field index on success or FALSE on failure.","seealso":[],"url":"function.mysql-field-len","name":"mysql_field_len","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mysql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 0. If field_offset does not exist, an error of level E_WARNING is also issued."}],"ret_type":"int"}]},"mysql_field_name":{"desc":"Get the name of the specified field in a result","long_desc":"mysql_field_name() returns the name of the specified field index.","ver":"PHP 4, PHP 5","ret_desc":"The name of the specified field index on success or FALSE on failure.","seealso":[],"url":"function.mysql-field-name","name":"mysql_field_name","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mysql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 0. If field_offset does not exist, an error of level E_WARNING is also issued."}],"ret_type":"string"}]},"mysql_field_seek":{"desc":"Set result pointer to a specified field offset","long_desc":"Seeks to the specified field offset. If the next call to mysql_fetch_field() doesn't include a field offset, the field offset specified in mysql_field_seek() will be returned.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mysql-field-seek","name":"mysql_field_seek","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mysql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 0. If field_offset does not exist, an error of level E_WARNING is also issued."}],"ret_type":"bool"}]},"mysql_field_table":{"desc":"Get name of the table the specified field is in","long_desc":"Returns the name of the table that the specified field is in.","ver":"PHP 4, PHP 5","ret_desc":"The name of the table on success.","seealso":[],"url":"function.mysql-field-table","name":"mysql_field_table","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mysql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 0. If field_offset does not exist, an error of level E_WARNING is also issued."}],"ret_type":"string"}]},"mysql_field_type":{"desc":"Get the type of the specified field in a result","long_desc":"mysql_field_type() is similar to the mysql_field_name() function. The arguments are identical, but the field type is returned instead.","ver":"PHP 4, PHP 5","ret_desc":"The returned field type will be one of \"int\", \"real\", \"string\", \"blob\", and others as detailed in the \u00bb\u00a0MySQL documentation.","seealso":[],"url":"function.mysql-field-type","name":"mysql_field_type","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mysql_query()."},{"type":"int","var":"$field_offset","beh":0,"desc":"The numerical field offset. The field_offset starts at 0. If field_offset does not exist, an error of level E_WARNING is also issued."}],"ret_type":"string"}]},"mysql_free_result":{"desc":"Free result memory","long_desc":"mysql_free_result() will free all memory associated with the result identifier result. mysql_free_result() only needs to be called if you are concerned about how much memory is being used for queries that return large result sets. All associated result memory is automatically freed at the end of the script's execution.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mysql-free-result","name":"mysql_free_result","params":[{"list":[],"ret_type":"bool"}]},"mysql_get_client_info":{"desc":"Get MySQL client info","long_desc":"mysql_get_client_info() returns a string that represents the client library version.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"The MySQL client version.","seealso":[],"url":"function.mysql-get-client-info","name":"mysql_get_client_info","params":[{"list":[],"ret_type":"string"}]},"mysql_get_host_info":{"desc":"Get MySQL host info","long_desc":"Describes the type of connection in use for the connection, including the server host name.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns a string describing the type of MySQL connection in use for the connection or FALSE on failure.","seealso":[],"url":"function.mysql-get-host-info","name":"mysql_get_host_info","params":[{"list":[],"ret_type":"string"}]},"mysql_get_proto_info":{"desc":"Get MySQL protocol info","long_desc":"Retrieves the MySQL protocol.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns the MySQL protocol on success or FALSE on failure.","seealso":[],"url":"function.mysql-get-proto-info","name":"mysql_get_proto_info","params":[{"list":[],"ret_type":"int"}]},"mysql_get_server_info":{"desc":"Get MySQL server info","long_desc":"Retrieves the MySQL server version.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns the MySQL server version on success or FALSE on failure.","seealso":[],"url":"function.mysql-get-server-info","name":"mysql_get_server_info","params":[{"list":[],"ret_type":"string"}]},"mysql_info":{"desc":"Get information about the most recent query","long_desc":"Returns detailed information about the last query.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns information about the statement on success, or FALSE on failure. See the example below for which statements provide information, and what the returned value may look like. Statements that are not listed will return FALSE.","seealso":[],"url":"function.mysql-info","name":"mysql_info","params":[{"list":[],"ret_type":"string"}]},"mysql_insert_id":{"desc":"Get the ID generated in the last query","long_desc":"Retrieves the ID generated for an AUTO_INCREMENT column by the previous query (usually INSERT).","ver":"PHP 4, PHP 5","ret_desc":"The ID generated for an AUTO_INCREMENT column by the previous query on success, 0 if the previous query does not generate an AUTO_INCREMENT value, or FALSE if no MySQL connection was established.","seealso":[],"url":"function.mysql-insert-id","name":"mysql_insert_id","params":[{"list":[],"ret_type":"int"}]},"mysql_list_dbs":{"desc":"List databases available on a MySQL server","long_desc":"Returns a result pointer containing the databases available from the current mysql daemon.","ver":"PHP 4, PHP 5","ret_desc":"Returns a result pointer resource on success, or FALSE on failure. Use the mysql_tablename() function to traverse this result pointer, or any function for result tables, such as mysql_fetch_array().","seealso":[],"url":"function.mysql-list-dbs","name":"mysql_list_dbs","params":[{"list":[],"ret_type":"resource"}]},"mysql_list_fields":{"desc":"List MySQL table fields","long_desc":"Retrieves information about the given table name. This function is deprecated. It is preferable to use mysql_query() to issue an SQL SHOW COLUMNS FROM table [LIKE 'name'] statement instead.","ver":"PHP 4, PHP 5","ret_desc":"A result pointer resource on success, or FALSE on failure.","seealso":[],"url":"function.mysql-list-fields","name":"mysql_list_fields","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":"The name of the database that's being queried."},{"type":"string","var":"$table_name","beh":1,"desc":"The name of the table that's being queried."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"The MySQL connection. If the link identifier is not specified, the last link opened by mysql_connect() is assumed. If no such link is found, it will try to create one as if mysql_connect() was called with no arguments. If no connection is found or established, an E_WARNING level error is generated.","def":"NULL"}],"ret_type":"resource"}]},"mysql_list_processes":{"desc":"List MySQL processes","long_desc":"Retrieves the current MySQL server threads.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"A result pointer resource on success or FALSE on failure.","seealso":[],"url":"function.mysql-list-processes","name":"mysql_list_processes","params":[{"list":[],"ret_type":"resource"}]},"mysql_list_tables":{"desc":"List tables in a MySQL database","long_desc":"Retrieves a list of table names from a MySQL database. This function is deprecated. It is preferable to use mysql_query() to issue an SQL SHOW TABLES [FROM db_name] [LIKE 'pattern'] statement instead.","ver":"PHP 4, PHP 5","ret_desc":"A result pointer resource on success or FALSE on failure.","seealso":[],"url":"function.mysql-list-tables","name":"mysql_list_tables","params":[{"list":[{"type":"string","var":"$database","beh":0,"desc":"The name of the database"},{"type":"resource","var":"$link_identifier","beh":0,"desc":"The MySQL connection. If the link identifier is not specified, the last link opened by mysql_connect() is assumed. If no such link is found, it will try to create one as if mysql_connect() was called with no arguments. If no connection is found or established, an E_WARNING level error is generated.","def":"NULL"}],"ret_type":"resource"}]},"mysql_num_fields":{"desc":"Get number of fields in result","long_desc":"Retrieves the number of fields from a query.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of fields in the result set resource on success or FALSE on failure.","seealso":[],"url":"function.mysql-num-fields","name":"mysql_num_fields","params":[{"list":[],"ret_type":"int"}]},"mysql_num_rows":{"desc":"Get number of rows in result","long_desc":"Retrieves the number of rows from a result set. This command is only valid for statements like SELECT or SHOW that return an actual result set. To retrieve the number of rows affected by a INSERT, UPDATE, REPLACE or DELETE query, use mysql_affected_rows().","ver":"PHP 4, PHP 5","ret_desc":"The number of rows in a result set on success or FALSE on failure.","seealso":[],"url":"function.mysql-num-rows","name":"mysql_num_rows","params":[{"list":[],"ret_type":"int"}]},"mysql_pconnect":{"desc":"Open a persistent connection to a MySQL server","long_desc":"Establishes a persistent connection to a MySQL server. mysql_pconnect() acts very much like mysql_connect() with two major differences. First, when connecting, the function would first try to find a (persistent) link that's already open with the same host, username and password. If one is found, an identifier for it will be returned instead of opening a new connection. Second, the connection to the SQL server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (mysql_close() will not close links established by mysql_pconnect()). This type of link is therefore called 'persistent'.","ver":"PHP 4, PHP 5","ret_desc":"Returns a MySQL persistent link identifier on success, or FALSE on failure.","seealso":[],"url":"function.mysql-pconnect","name":"mysql_pconnect","params":[{"list":[{"type":"string","var":"$server","beh":1,"desc":"The MySQL server. It can also include a port number. e.g. \"hostname:port\" or a path to a local socket e.g. \":\/path\/to\/socket\" for the localhost. If the PHP directive mysql.default_host is undefined (default), then the default value is 'localhost:3306'","def":"ini_get(\"mysql.default_host\")"},{"type":"string","var":"$username","beh":1,"desc":"The username. Default value is the name of the user that owns the server process.","def":"ini_get(\"mysql.default_user\")"},{"type":"string","var":"$password","beh":1,"desc":"The password. Default value is an empty password.","def":"ini_get(\"mysql.default_password\")"},{"type":"int","var":"$client_flags","beh":1,"desc":"The client_flags parameter can be a combination of the following constants: 128 (enable LOAD DATA LOCAL handling), MYSQL_CLIENT_SSL, MYSQL_CLIENT_COMPRESS, MYSQL_CLIENT_IGNORE_SPACE or MYSQL_CLIENT_INTERACTIVE.","def":0}],"ret_type":"resource"}]},"mysql_ping":{"desc":"Ping a server connection or reconnect if there is no connection","long_desc":"Checks whether or not the connection to the server is working. If it has gone down, an automatic reconnection is attempted. This function can be used by scripts that remain idle for a long while, to check whether or not the server has closed the connection and reconnect if necessary.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE if the connection to the server MySQL server is working, otherwise FALSE.","seealso":[],"url":"function.mysql-ping","name":"mysql_ping","params":[{"list":[],"ret_type":"bool"}]},"mysql_query":{"desc":"Send a MySQL query","long_desc":"mysql_query() sends a unique query (multiple queries are not supported) to the currently active database on the server that's associated with the specified link_identifier.","ver":"PHP 4, PHP 5","ret_desc":"For SELECT, SHOW, DESCRIBE, EXPLAIN and other statements returning resultset, mysql_query() returns a resource on success, or FALSE on error.","seealso":[],"url":"function.mysql-query","name":"mysql_query","params":[{"list":[{"type":"string","var":"$query","beh":0,"desc":"An SQL query The query string should not end with a semicolon. Data inside the query should be properly escaped."},{"type":"resource","var":"$link_identifier","beh":0,"desc":"The MySQL connection. If the link identifier is not specified, the last link opened by mysql_connect() is assumed. If no such link is found, it will try to create one as if mysql_connect() was called with no arguments. If no connection is found or established, an E_WARNING level error is generated.","def":"NULL"}],"ret_type":"resource"}]},"mysql_real_escape_string":{"desc":"Escapes special characters in a string for use in an SQL statement","long_desc":"Escapes special characters in the unescaped_string, taking into account the current character set of the connection so that it is safe to place it in a mysql_query(). If binary data is to be inserted, this function must be used. mysql_real_escape_string() calls MySQL's library function mysql_real_escape_string, which prepends backslashes to the following characters: \\x00, \\n, \\r, \\, ', \" and \\x1a. This function must always (with few exceptions) be used to make data safe before sending a query to MySQL.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the escaped string, or FALSE on error.","seealso":[],"url":"function.mysql-real-escape-string","name":"mysql_real_escape_string","params":[{"list":[{"type":"string","var":"$unescaped_string","beh":0,"desc":"The string that is to be escaped."},{"type":"resource","var":"$link_identifier","beh":0,"desc":"The MySQL connection. If the link identifier is not specified, the last link opened by mysql_connect() is assumed. If no such link is found, it will try to create one as if mysql_connect() was called with no arguments. If no connection is found or established, an E_WARNING level error is generated.","def":"NULL"}],"ret_type":"string"}]},"mysql_result":{"desc":"Get result data","long_desc":"Retrieves the contents of one cell from a MySQL result set. When working on large result sets, you should consider using one of the functions that fetch an entire row (specified below). As these functions return the contents of multiple cells in one function call, they're MUCH quicker than mysql_result(). Also, note that specifying a numeric offset for the field argument is much quicker than specifying a fieldname or tablename.fieldname argument.","ver":"PHP 4, PHP 5","ret_desc":"The contents of one cell from a MySQL result set on success, or FALSE on failure.","seealso":[],"url":"function.mysql-result","name":"mysql_result","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource that is being evaluated. This result comes from a call to mysql_query()."},{"type":"int","var":"$row","beh":1,"desc":"The row number from the result that's being retrieved. Row numbers start at 0."},{"type":"mixed","var":"$field","beh":1,"desc":"The name or offset of the field being retrieved. It can be the field's offset, the field's name, or the field's table dot field name (tablename.fieldname). If the column name has been aliased ('select foo as bar from...'), use the alias instead of the column name. If undefined, the first field is retrieved.","def":0}],"ret_type":"string"}]},"mysql_select_db":{"desc":"Select a MySQL database","long_desc":"Sets the current active database on the server that's associated with the specified link identifier. Every subsequent call to mysql_query() will be made on the active database.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mysql-select-db","name":"mysql_select_db","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":"The name of the database that is to be selected."},{"type":"resource","var":"$link_identifier","beh":0,"desc":"The MySQL connection. If the link identifier is not specified, the last link opened by mysql_connect() is assumed. If no such link is found, it will try to create one as if mysql_connect() was called with no arguments. If no connection is found or established, an E_WARNING level error is generated.","def":"NULL"}],"ret_type":"bool"}]},"mysql_set_charset":{"desc":"Sets the client character set","long_desc":"Sets the default character set for the current connection.","ver":"PHP 5 >= 5.2.3","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mysql-set-charset","name":"mysql_set_charset","params":[{"list":[{"type":"string","var":"$charset","beh":0,"desc":"A valid character set name."},{"type":"resource","var":"$link_identifier","beh":0,"desc":"The MySQL connection. If the link identifier is not specified, the last link opened by mysql_connect() is assumed. If no such link is found, it will try to create one as if mysql_connect() was called with no arguments. If no connection is found or established, an E_WARNING level error is generated.","def":"NULL"}],"ret_type":"bool"}]},"mysql_stat":{"desc":"Get current system status","long_desc":"mysql_stat() returns the current server status.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns a string with the status for uptime, threads, queries, open tables, flush tables and queries per second. For a complete list of other status variables, you have to use the SHOW STATUS SQL command. If link_identifier is invalid, NULL is returned.","seealso":[],"url":"function.mysql-stat","name":"mysql_stat","params":[{"list":[],"ret_type":"string"}]},"mysql_tablename":{"desc":"Get table name of field","long_desc":"Retrieves the table name from a result. This function is deprecated. It is preferable to use mysql_query() to issue an SQL SHOW TABLES [FROM db_name] [LIKE 'pattern'] statement instead.","ver":"PHP 4, PHP 5","ret_desc":"The name of the table on success or FALSE on failure.","seealso":[],"url":"function.mysql-tablename","name":"mysql_tablename","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"A result pointer resource that's returned from mysql_list_tables()."},{"type":"int","var":"$i","beh":0,"desc":"The integer index (row\/table number)"}],"ret_type":"string"}]},"mysql_thread_id":{"desc":"Return the current thread ID","long_desc":"Retrieves the current thread ID. If the connection is lost, and a reconnect with mysql_ping() is executed, the thread ID will change. This means only retrieve the thread ID when needed.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"The thread ID on success or FALSE on failure.","seealso":[],"url":"function.mysql-thread-id","name":"mysql_thread_id","params":[{"list":[],"ret_type":"int"}]},"mysql_unbuffered_query":{"desc":"Send an SQL query to MySQL without fetching and buffering the result rows.","long_desc":"mysql_unbuffered_query() sends the SQL query query to MySQL without automatically fetching and buffering the result rows as mysql_query() does. This saves a considerable amount of memory with SQL queries that produce large result sets, and you can start working on the result set immediately after the first row has been retrieved as you don't have to wait until the complete SQL query has been performed. To use mysql_unbuffered_query() while multiple database connections are open, you must specify the optional parameter link_identifier to identify which connection you want to use.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"For SELECT, SHOW, DESCRIBE or EXPLAIN statements, mysql_unbuffered_query() returns a resource on success, or FALSE on error.","seealso":[],"url":"function.mysql-unbuffered-query","name":"mysql_unbuffered_query","params":[{"list":[{"type":"string","var":"$query","beh":0,"desc":"The SQL query to execute. Data inside the query should be properly escaped."},{"type":"resource","var":"$link_identifier","beh":0,"desc":"The MySQL connection. If the link identifier is not specified, the last link opened by mysql_connect() is assumed. If no such link is found, it will try to create one as if mysql_connect() was called with no arguments. If no connection is found or established, an E_WARNING level error is generated.","def":"NULL"}],"ret_type":"resource"}]},"mysqli":{"name":"mysqli","class":"mysqli"},"mysqli::$affected_rows":{"desc":"Gets the number of affected rows in a previous MySQL operation","long_desc":"Object oriented styleProcedural style Returns the number of rows affected by the last INSERT, UPDATE, REPLACE or DELETE query. For SELECT statements mysqli_affected_rows() works like mysqli_num_rows().","ver":"PHP 5","ret_desc":"An integer greater than zero indicates the number of rows affected or retrieved. Zero indicates that no records where updated for an UPDATE statement, no rows matched the WHERE clause in the query or that no query has yet been executed. -1 indicates that the query returned an error.","seealso":[],"url":"mysqli.affected-rows","name":"$affected_rows","class":"mysqli","params":[{"list":[],"ret_type":"int"}]},"mysqli::$client_info":{"desc":"Returns the MySQL client version as a string","long_desc":"Object oriented styleProcedural style Returns a string that represents the MySQL client library version.","ver":"PHP 5","ret_desc":"A string that represents the MySQL client library version","seealso":[],"url":"mysqli.client-info","name":"$client_info","class":"mysqli","params":[{"list":[],"ret_type":"string"}]},"mysqli::$client_version":{"desc":"Get MySQL client info","long_desc":"Object oriented styleProcedural style Returns client version number as an integer.","ver":"PHP 5","ret_desc":"A number that represents the MySQL client library version in format: main_version*10000 + minor_version *100 + sub_version. For example, 4.1.0 is returned as 40100.","seealso":[],"url":"mysqli.get-client-version","name":"$client_version","class":"mysqli","params":[{"list":[],"ret_type":"int"}]},"mysqli::$connect_errno":{"desc":"Returns the error code from last connect call","long_desc":"Object oriented styleProcedural style Returns the last error code number from the last call to mysqli_connect().","ver":"PHP 5","ret_desc":"An error code value for the last call to mysqli_connect(), if it failed. zero means no error occurred.","seealso":[],"url":"mysqli.connect-errno","name":"$connect_errno","class":"mysqli","params":[{"list":[],"ret_type":"int"}]},"mysqli::$connect_error":{"desc":"Returns a string description of the last connect error","long_desc":"Object oriented styleProcedural style Returns the last error message string from the last call to mysqli_connect().","ver":"PHP 5","ret_desc":"A string that describes the error. NULL is returned if no error occurred.","seealso":[],"url":"mysqli.connect-error","name":"$connect_error","class":"mysqli","params":[{"list":[],"ret_type":"string"}]},"mysqli::$errno":{"desc":"Returns the error code for the most recent function call","long_desc":"Object oriented styleProcedural style Returns the last error code for the most recent MySQLi function call that can succeed or fail. Client error message numbers are listed in the MySQL errmsg.h header file, server error message numbers are listed in mysqld_error.h. In the MySQL source distribution you can find a complete list of error messages and error numbers in the file Docs\/mysqld_error.txt.","ver":"PHP 5","ret_desc":"An error code value for the last call, if it failed. zero means no error occurred.","seealso":[],"url":"mysqli.errno","name":"$errno","class":"mysqli","params":[{"list":[],"ret_type":"int"}]},"mysqli::$error":{"desc":"Returns a string description of the last error","long_desc":"Object oriented styleProcedural style Returns the last error message for the most recent MySQLi function call that can succeed or fail.","ver":"PHP 5","ret_desc":"A string that describes the error. An empty string if no error occurred.","seealso":[],"url":"mysqli.error","name":"$error","class":"mysqli","params":[{"list":[],"ret_type":"string"}]},"mysqli::$error_list":{"desc":"Returns a list of errors from the last command executed","long_desc":"Object oriented styleProcedural style Returns a array of errors for the most recent MySQLi function call that can succeed or fail.","ver":"PHP 5 >= 5.4.0","ret_desc":"A list of errors, each as an associative array containing the errno, error, and sqlstate.","seealso":[],"url":"mysqli.error-list","name":"$error_list","class":"mysqli","params":[{"list":[],"ret_type":"array"}]},"mysqli::$field_count":{"desc":"Returns the number of columns for the most recent query","long_desc":"Object oriented styleProcedural style Returns the number of columns for the most recent query on the connection represented by the link parameter. This function can be useful when using the mysqli_store_result() function to determine if the query should have produced a non-empty result set or not without knowing the nature of the query.","ver":"PHP 5","ret_desc":"An integer representing the number of fields in a result set.","url":"mysqli.field-count","name":"$field_count","class":"mysqli","params":[{"list":[],"ret_type":"int"}]},"mysqli::$host_info":{"desc":"Returns a string representing the type of connection used","long_desc":"Object oriented styleProcedural style Returns a string describing the connection represented by the link parameter (including the server host name).","ver":"PHP 5","ret_desc":"A character string representing the server hostname and the connection type.","seealso":[],"url":"mysqli.get-host-info","name":"$host_info","class":"mysqli","params":[{"list":[],"ret_type":"string"}]},"mysqli::$info":{"desc":"Retrieves information about the most recently executed query","long_desc":"Object oriented styleProcedural style The mysqli_info() function returns a string providing information about the last query executed. The nature of this string is provided below:","ver":"PHP 5","ret_desc":"A character string representing additional information about the most recently executed query.","seealso":[],"url":"mysqli.info","name":"$info","class":"mysqli","params":[{"list":[],"ret_type":"string"}]},"mysqli::$insert_id":{"desc":"Returns the auto generated id used in the last query","long_desc":"Object oriented styleProcedural style The mysqli_insert_id() function returns the ID generated by a query on a table with a column having the AUTO_INCREMENT attribute. If the last query wasn't an INSERT or UPDATE statement or if the modified table does not have a column with the AUTO_INCREMENT attribute, this function will return zero.","ver":"PHP 5","ret_desc":"The value of the AUTO_INCREMENT field that was updated by the previous query. Returns zero if there was no previous query on the connection or if the query did not update an AUTO_INCREMENT value.","url":"mysqli.insert-id","name":"$insert_id","class":"mysqli","params":[{"list":[],"ret_type":"mixed"}]},"mysqli::$protocol_version":{"desc":"Returns the version of the MySQL protocol used","long_desc":"Object oriented styleProcedural style Returns an integer representing the MySQL protocol version used by the connection represented by the link parameter.","ver":"PHP 5","ret_desc":"Returns an integer representing the protocol version.","seealso":[],"url":"mysqli.get-proto-info","name":"$protocol_version","class":"mysqli","params":[{"list":[],"ret_type":"int"}]},"mysqli::$server_info":{"desc":"Returns the version of the MySQL server","long_desc":"Object oriented styleProcedural style Returns a string representing the version of the MySQL server that the MySQLi extension is connected to.","ver":"PHP 5","ret_desc":"A character string representing the server version.","seealso":[],"url":"mysqli.get-server-info","name":"$server_info","class":"mysqli","params":[{"list":[],"ret_type":"string"}]},"mysqli::$server_version":{"desc":"Returns the version of the MySQL server as an integer","long_desc":"Object oriented styleProcedural style The mysqli_get_server_version() function returns the version of the server connected to (represented by the link parameter) as an integer.","ver":"PHP 5","ret_desc":"An integer representing the server version.","seealso":[],"url":"mysqli.get-server-version","name":"$server_version","class":"mysqli","params":[{"list":[],"ret_type":"int"}]},"mysqli::$sqlstate":{"desc":"Returns the SQLSTATE error from previous MySQL operation","long_desc":"Object oriented styleProcedural style Returns a string containing the SQLSTATE error code for the last error. The error code consists of five characters. '00000' means no error. The values are specified by ANSI SQL and ODBC. For a list of possible values, see \u00bb\u00a0http:\/\/dev.mysql.com\/doc\/mysql\/en\/error-handling.html.","ver":"PHP 5","ret_desc":"Returns a string containing the SQLSTATE error code for the last error. The error code consists of five characters. '00000' means no error.","seealso":[],"url":"mysqli.sqlstate","name":"$sqlstate","class":"mysqli","params":[{"list":[],"ret_type":"string"}]},"mysqli::$thread_id":{"desc":"Returns the thread ID for the current connection","long_desc":"Object oriented styleProcedural style The mysqli_thread_id() function returns the thread ID for the current connection which can then be killed using the mysqli_kill() function. If the connection is lost and you reconnect with mysqli_ping(), the thread ID will be other. Therefore you should get the thread ID only when you need it.","ver":"PHP 5","ret_desc":"Returns the Thread ID for the current connection.","seealso":[],"url":"mysqli.thread-id","name":"$thread_id","class":"mysqli","params":[{"list":[],"ret_type":"int"}]},"mysqli::$warning_count":{"desc":"Returns the number of warnings from the last query for the given link","long_desc":"Object oriented styleProcedural style Returns the number of warnings from the last query in the connection.","ver":"PHP 5","ret_desc":"Number of warnings or zero if there are no warnings.","seealso":[],"url":"mysqli.warning-count","name":"$warning_count","class":"mysqli","params":[{"list":[],"ret_type":"int"}]},"mysqli::__construct":{"desc":"Open a new connection to the MySQL server","long_desc":"Object oriented styleProcedural style Opens a connection to the MySQL Server running on.","ver":"PHP 5","ret_desc":"Returns an object which represents the connection to a MySQL Server.","seealso":[],"url":"mysqli.construct","name":"__construct","class":"mysqli","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"Can be either a host name or an IP address. Passing the NULL value or the string \"localhost\" to this parameter, the local host is assumed. When possible, pipes will be used instead of the TCP\/IP protocol. Prepending host by p: opens a persistent connection. mysqli_change_user() is automatically called on connections opened from the connection pool.","def":"ini_get(\"mysqli.default_host\")"},{"type":"string","var":"$username","beh":1,"desc":"The MySQL user name.","def":"ini_get(\"mysqli.default_user\")"},{"type":"string","var":"$passwd","beh":1,"desc":"If not provided or NULL, the MySQL server will attempt to authenticate the user against those user records which have no password only. This allows one username to be used with different permissions (depending on if a password as provided or not).","def":"ini_get(\"mysqli.default_pw\")"},{"type":"string","var":"$dbname","beh":1,"desc":"If provided will specify the default database to be used when performing queries.","def":"\"\""},{"type":"int","var":"$port","beh":1,"desc":"Specifies the port number to attempt to connect to the MySQL server.","def":"ini_get(\"mysqli.default_port\")"},{"type":"string","var":"$socket","beh":1,"desc":"Specifies the socket or named pipe that should be used.","def":"ini_get(\"mysqli.default_socket\")"}],"ret_type":"mysqli"}]},"mysqli::autocommit":{"desc":"Turns on or off auto-commiting database modifications","long_desc":"Object oriented styleProcedural style Turns on or off auto-commit mode on queries for the database connection. To determine the current state of autocommit use the SQL command SELECT @@autocommit.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli.autocommit","name":"autocommit","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"bool","var":"$mode","beh":0,"desc":"Whether to turn on auto-commit or not."}],"ret_type":"bool"}]},"mysqli::change_user":{"desc":"Changes the user of the specified database connection","long_desc":"Object oriented styleProcedural style Changes the user of the specified database connection and sets the current database. In order to successfully change users a valid username and password parameters must be provided and that user must have sufficient permissions to access the desired database. If for any reason authorization fails, the current user authentication will remain.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli.change-user","name":"change_user","class":"mysqli","params":[{"list":[{"type":"string","var":"$user","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"string","var":"$password","beh":0,"desc":"The MySQL user name."},{"type":"string","var":"$database","beh":1,"desc":"The MySQL password."}],"ret_type":"bool"},{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"string","var":"$user","beh":0,"desc":"The MySQL user name."},{"type":"string","var":"$password","beh":1,"desc":"The MySQL password."},{"type":"string","var":"$database","beh":1,"desc":"The database to change to. If desired, the NULL value may be passed resulting in only changing the user and not selecting a database. To select a database in this case use the mysqli_select_db() function."}],"ret_type":"bool"}]},"mysqli::character_set_name":{"desc":"Returns the default character set for the database connection","long_desc":"Object oriented styleProcedural style Returns the current character set for the database connection.","ver":"PHP 5","ret_desc":"The default character set for the current connection","seealso":[],"url":"mysqli.character-set-name","name":"character_set_name","class":"mysqli","params":[{"list":[],"ret_type":"string"},{"list":[],"ret_type":"string"}]},"mysqli::close":{"desc":"Closes a previously opened database connection","long_desc":"Object oriented styleProcedural style Closes a previously opened database connection.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli.close","name":"close","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"mysqli::commit":{"desc":"Commits the current transaction","long_desc":"Object oriented styleProcedural style Commits the current transaction for the database connection.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli.commit","name":"commit","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"mysqli::debug":{"desc":"Performs debugging operations","long_desc":"Object oriented styleProcedural style Performs debugging operations using the Fred Fish debugging library.","ver":"PHP 5","ret_desc":"Returns TRUE.","seealso":[],"url":"mysqli.debug","name":"debug","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"mysqli::disable_reads_from_master":{"desc":"Disable reads from master","long_desc":"Object oriented styleProcedural style","ver":"PHP 5","url":"mysqli.disable-reads-from-master","name":"disable_reads_from_master","class":"mysqli","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"bool"}]},"mysqli::dump_debug_info":{"desc":"Dump debugging information into the log","long_desc":"Object oriented styleProcedural style This function is designed to be executed by an user with the SUPER privilege and is used to dump debugging information into the log for the MySQL Server relating to the connection.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli.dump-debug-info","name":"dump_debug_info","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"mysqli::get_charset":{"desc":"Returns a character set object","long_desc":"Object oriented styleProcedural style Returns a character set object providing several properties of the current active character set.","ver":"PHP 5 >= 5.1.0","ret_desc":"The function returns a character set object with the following properties:","seealso":[],"url":"mysqli.get-charset","name":"get_charset","class":"mysqli","params":[{"list":[],"ret_type":"object"},{"list":[],"ret_type":"object"}]},"mysqli::get_client_info":{"desc":"Returns the MySQL client version as a string","long_desc":"Object oriented styleProcedural style Returns a string that represents the MySQL client library version.","ver":"PHP 5","ret_desc":"A string that represents the MySQL client library version","seealso":[],"url":"mysqli.get-client-info","name":"get_client_info","class":"mysqli","params":[{"list":[],"ret_type":"string"},{"list":[],"ret_type":"string"}]},"mysqli::get_connection_stats":{"desc":"Returns statistics about the client connection","long_desc":"Object oriented styleProcedural style Returns statistics about the client connection. Available only with mysqlnd.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an array with connection stats if success, FALSE otherwise.","seealso":[],"url":"mysqli.get-connection-stats","name":"get_connection_stats","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"array"}]},"mysqli::get_warnings":{"desc":"Get result of SHOW WARNINGS","long_desc":"Object oriented styleProcedural style","ver":"PHP 5 >= 5.1.0","url":"mysqli.get-warnings","name":"get_warnings","class":"mysqli","params":[{"list":[],"ret_type":"mysqli_warning"},{"list":[],"ret_type":"mysqli_warning"}]},"mysqli::init":{"desc":"Initializes MySQLi and returns a resource for use with mysqli_real_connect()","long_desc":"Object oriented styleProcedural style Allocates or initializes a MYSQL object suitable for mysqli_options() and mysqli_real_connect().","ver":"PHP 5","ret_desc":"Returns an object.","seealso":[],"url":"mysqli.init","name":"init","class":"mysqli","params":[{"list":[],"ret_type":"mysqli"},{"list":[],"ret_type":"mysqli"}]},"mysqli::kill":{"desc":"Asks the server to kill a MySQL thread","long_desc":"Object oriented styleProcedural style This function is used to ask the server to kill a MySQL thread specified by the processid parameter. This value must be retrieved by calling the mysqli_thread_id() function. To stop a running query you should use the SQL command KILL QUERY processid.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli.kill","name":"kill","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"int","var":"$processid","beh":0,"desc":""}],"ret_type":"bool"}]},"mysqli::more_results":{"desc":"Check if there are any more query results from a multi query","long_desc":"Object oriented styleProcedural style Indicates if one or more result sets are available from a previous call to mysqli_multi_query().","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli.more-results","name":"more_results","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"mysqli::multi_query":{"desc":"Performs a query on the database","long_desc":"Object oriented styleProcedural style Executes one or multiple queries which are concatenated by a semicolon. To retrieve the resultset from the first query you can use mysqli_use_result() or mysqli_store_result(). All subsequent query results can be processed using mysqli_more_results() and mysqli_next_result().","ver":"PHP 5","ret_desc":"Returns FALSE if the first statement failed. To retrieve subsequent errors from other statements you have to call mysqli_next_result() first.","seealso":[],"url":"mysqli.multi-query","name":"multi_query","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"string","var":"$query","beh":0,"desc":"The query, as a string. Data inside the query should be properly escaped."}],"ret_type":"bool"}]},"mysqli::next_result":{"desc":"Prepare next result from multi_query","long_desc":"Object oriented styleProcedural style Prepares next result set from a previous call to mysqli_multi_query() which can be retrieved by mysqli_store_result() or mysqli_use_result().","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli.next-result","name":"next_result","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"mysqli::options":{"desc":"Set options","long_desc":"Object oriented styleProcedural style Used to set extra connect options and affect behavior for a connection. This function may be called multiple times to set several options. mysqli_options() should be called after mysqli_init() and before mysqli_real_connect().","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli.options","name":"options","class":"mysqli","params":[{"list":[{"type":"int","var":"$option","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"mixed","var":"$value","beh":0,"desc":"The option that you want to set. It can be one of the following values:"}],"ret_type":"bool"},{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"int","var":"$option","beh":0,"desc":"The option that you want to set. It can be one of the following values:"},{"type":"mixed","var":"$value","beh":1,"desc":"The value for the option."}],"ret_type":"bool"}]},"mysqli::ping":{"desc":"Pings a server connection, or tries to reconnect if the connection has gone down","long_desc":"Object oriented styleProcedural style Checks whether the connection to the server is working. If it has gone down, and global option mysqli.reconnect is enabled an automatic reconnection is attempted. This function can be used by clients that remain idle for a long while, to check whether the server has closed the connection and reconnect if necessary.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"mysqli.ping","name":"ping","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"mysqli::poll":{"desc":"Poll connections","long_desc":"Object oriented styleProcedural style Poll connections. Available only with mysqlnd.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns number of ready connections in success, FALSE otherwise.","seealso":[],"url":"mysqli.poll","name":"poll","class":"mysqli","params":[{"list":[{"type":"array","var":"&$read","beh":0,"desc":""},{"type":"array","var":"&$error","beh":1,"desc":""},{"type":"array","var":"&$reject","beh":1,"desc":""},{"type":"int","var":"$sec","beh":1,"desc":"Number of seconds to wait, must be non-negative."},{"type":"int","var":"$usec","beh":1,"desc":"Number of microseconds to wait, must be non-negative."}],"ret_type":"int"},{"list":[{"type":"array","var":"&$read","beh":0,"desc":""},{"type":"array","var":"&$error","beh":1,"desc":""},{"type":"array","var":"&$reject","beh":1,"desc":""},{"type":"int","var":"$sec","beh":1,"desc":"Number of seconds to wait, must be non-negative."},{"type":"int","var":"$usec","beh":1,"desc":"Number of microseconds to wait, must be non-negative."}],"ret_type":"int"}]},"mysqli::prepare":{"desc":"Prepare an SQL statement for execution","long_desc":"Object oriented styleProcedural style Prepares the SQL query, and returns a statement handle to be used for further operations on the statement. The query must consist of a single SQL statement. The parameter markers must be bound to application variables using mysqli_stmt_bind_param() and\/or mysqli_stmt_bind_result() before executing the statement or fetching rows.","ver":"PHP 5","ret_desc":"mysqli_prepare() returns a statement object or FALSE if an error occurred.","seealso":[],"url":"mysqli.prepare","name":"prepare","class":"mysqli","params":[{"list":[],"ret_type":"mysqli_stmt"},{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"string","var":"$query","beh":0,"desc":"The query, as a string. This parameter can include one or more parameter markers in the SQL statement by embedding question mark (?) characters at the appropriate positions."}],"ret_type":"mysqli_stmt"}]},"mysqli::query":{"desc":"Performs a query on the database","long_desc":"Object oriented styleProcedural style Performs a query against the database. Functionally, using this function is identical to calling mysqli_real_query() followed either by mysqli_use_result() or mysqli_store_result().","ver":"PHP 5","ret_desc":"Returns FALSE on failure. For successful SELECT, SHOW, DESCRIBE or EXPLAIN queries mysqli_query() will return a mysqli_result object. For other successful queries mysqli_query() will return TRUE.","seealso":[],"url":"mysqli.query","name":"query","class":"mysqli","params":[{"list":[{"type":"string","var":"$query","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"int","var":"$resultmode","beh":0,"desc":"The query string. Data inside the query should be properly escaped.","def":"MYSQLI_STORE_RESULT"}],"ret_type":"mixed"},{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"string","var":"$query","beh":1,"desc":"The query string. Data inside the query should be properly escaped."},{"type":"int","var":"$resultmode","beh":1,"desc":"Either the constant MYSQLI_USE_RESULT or MYSQLI_STORE_RESULT depending on the desired behavior. By default, MYSQLI_STORE_RESULT is used. If you use MYSQLI_USE_RESULT all subsequent calls will return error Commands out of sync unless you call mysqli_free_result() With MYSQLI_ASYNC (available with mysqlnd), it is possible to perform query asynchronously. mysqli_poll() is then used to get results from such queries.","def":"MYSQLI_STORE_RESULT"}],"ret_type":"mixed"}]},"mysqli::real_connect":{"desc":"Opens a connection to a mysql server","long_desc":"Object oriented styleProcedural style Establish a connection to a MySQL database engine. This function differs from mysqli_connect():","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli.real-connect","name":"real_connect","class":"mysqli","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"string","var":"$username","beh":1,"desc":"Can be either a host name or an IP address. Passing the NULL value or the string \"localhost\" to this parameter, the local host is assumed. When possible, pipes will be used instead of the TCP\/IP protocol."},{"type":"string","var":"$passwd","beh":1,"desc":"The MySQL user name."},{"type":"string","var":"$dbname","beh":1,"desc":"If provided or NULL, the MySQL server will attempt to authenticate the user against those user records which have no password only. This allows one username to be used with different permissions (depending on if a password as provided or not)."},{"type":"int","var":"$port","beh":1,"desc":"If provided will specify the default database to be used when performing queries."},{"type":"string","var":"$socket","beh":1,"desc":"Specifies the port number to attempt to connect to the MySQL server."},{"type":"int","var":"$flags","beh":1,"desc":"Specifies the socket or named pipe that should be used."}],"ret_type":"bool"},{"list":[{"type":"mysqli","var":"$link","beh":1,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"string","var":"$host","beh":1,"desc":"Can be either a host name or an IP address. Passing the NULL value or the string \"localhost\" to this parameter, the local host is assumed. When possible, pipes will be used instead of the TCP\/IP protocol."},{"type":"string","var":"$username","beh":1,"desc":"The MySQL user name."},{"type":"string","var":"$passwd","beh":1,"desc":"If provided or NULL, the MySQL server will attempt to authenticate the user against those user records which have no password only. This allows one username to be used with different permissions (depending on if a password as provided or not)."},{"type":"string","var":"$dbname","beh":1,"desc":"If provided will specify the default database to be used when performing queries."},{"type":"int","var":"$port","beh":1,"desc":"Specifies the port number to attempt to connect to the MySQL server."},{"type":"string","var":"$socket","beh":1,"desc":"Specifies the socket or named pipe that should be used."},{"type":"int","var":"$flags","beh":1,"desc":"With the parameter flags you can set different connection options:"}],"ret_type":"bool"}]},"mysqli::real_escape_string":{"desc":"Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection","long_desc":"Object oriented styleProcedural style This function is used to create a legal SQL string that you can use in an SQL statement. The given string is encoded to an escaped SQL string, taking into account the current character set of the connection.","ver":"PHP 5","ret_desc":"Returns an escaped string.","seealso":[],"url":"mysqli.real-escape-string","name":"real_escape_string","class":"mysqli","params":[{"list":[],"ret_type":"string"},{"list":[],"ret_type":"string"},{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"string","var":"$escapestr","beh":0,"desc":"The string to be escaped. Characters encoded are NUL (ASCII 0), \\n, \\r, \\, ', \", and Control-Z."}],"ret_type":"string"}]},"mysqli::real_query":{"desc":"Execute an SQL query","long_desc":"Object oriented styleProcedural style Executes a single query against the database whose result can then be retrieved or stored using the mysqli_store_result() or mysqli_use_result() functions. In order to determine if a given query should return a result set or not, see mysqli_field_count().","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli.real-query","name":"real_query","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"string","var":"$query","beh":0,"desc":"The query, as a string. Data inside the query should be properly escaped."}],"ret_type":"bool"}]},"mysqli::reap_async_query":{"desc":"Get result from async query","long_desc":"Object oriented styleProcedural style Get result from async query. Available only with mysqlnd.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns mysqli_result in success, FALSE otherwise.","seealso":[],"url":"mysqli.reap-async-query","name":"reap_async_query","class":"mysqli","params":[{"list":[],"ret_type":"mysqli_result"},{"list":[],"ret_type":"mysqli_result"}]},"mysqli::refresh":{"desc":"Refreshes","long_desc":"Object oriented styleProcedural style Flushes tables or caches, or resets the replication server information.","ver":"PHP 5 <= 5.3.0","ret_desc":"TRUE if the refresh was a success, otherwise FALSE","seealso":[],"url":"mysqli.refresh","name":"refresh","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"resource","var":"$link","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"int","var":"$options","beh":0,"desc":"The options to refresh, using the MYSQLI_REFRESH_* constants as documented within the MySQLi constants documentation. See also the official \u00bb\u00a0MySQL Refresh documentation."}],"ret_type":"int"}]},"mysqli::rollback":{"desc":"Rolls back current transaction","long_desc":"Object oriented styleProcedural style Rollbacks the current transaction for the database.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli.rollback","name":"rollback","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"mysqli::rpl_query_type":{"desc":"Returns RPL query type","long_desc":"Object oriented styleProcedural style Returns MYSQLI_RPL_MASTER, MYSQLI_RPL_SLAVE or MYSQLI_RPL_ADMIN depending on a query type. INSERT, UPDATE and similar are master queries, SELECT is slave, and FLUSH, REPAIR and similar are admin.","ver":"PHP 5","url":"mysqli.rpl-query-type","name":"rpl_query_type","class":"mysqli","params":[{"list":[],"ret_type":"int"},{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":""},{"type":"string","var":"$query","beh":0,"desc":""}],"ret_type":"int"}]},"mysqli::select_db":{"desc":"Selects the default database for database queries","long_desc":"Object oriented styleProcedural style Selects the default database to be used when performing queries against the database connection.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli.select-db","name":"select_db","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"string","var":"$dbname","beh":0,"desc":"The database name."}],"ret_type":"bool"}]},"mysqli::send_query":{"desc":"Send the query and return","long_desc":"Object oriented styleProcedural style","ver":"PHP 5","url":"mysqli.send-query","name":"send_query","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":""},{"type":"string","var":"$query","beh":0,"desc":""}],"ret_type":"bool"}]},"mysqli::set_charset":{"desc":"Sets the default client character set","long_desc":"Object oriented styleProcedural style Sets the default character set to be used when sending data from and to the database server.","ver":"PHP 5 >= 5.0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli.set-charset","name":"set_charset","class":"mysqli","params":[{"list":[],"ret_type":"bool"},{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"string","var":"$charset","beh":0,"desc":"The charset to be set as default."}],"ret_type":"bool"}]},"mysqli::set_local_infile_default":{"desc":"Unsets user defined handler for load local infile command","long_desc":"Deactivates a LOAD DATA INFILE LOCAL handler previously set with mysqli_set_local_infile_handler().","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"mysqli.set-local-infile-default","name":"set_local_infile_default","class":"mysqli","params":[{"list":[],"ret_type":"void"}]},"mysqli::set_local_infile_handler":{"desc":"Set callback function for LOAD DATA LOCAL INFILE command","long_desc":"Object oriented styleProcedural styleSet callback function for LOAD DATA LOCAL INFILE command The callbacks task is to read input from the file specified in the LOAD DATA LOCAL INFILE and to reformat it into the format understood by LOAD DATA INFILE. The returned data needs to match the format specified in the LOAD DATA","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli.set-local-infile-handler","name":"set_local_infile_handler","class":"mysqli","params":[{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"callable","var":"$read_func","beh":0,"desc":"A callback function or object method taking the following parameters:"}],"ret_type":"bool"},{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"callable","var":"$read_func","beh":0,"desc":"A callback function or object method taking the following parameters:"}],"ret_type":"bool"}]},"mysqli::ssl_set":{"desc":"Used for establishing secure connections using SSL","long_desc":"Object oriented styleProcedural style Used for establishing secure connections using SSL. It must be called before mysqli_real_connect(). This function does nothing unless OpenSSL support is enabled. Note that MySQL Native Driver does not support SSL before PHP 5.3.3, so calling this function when using MySQL Native Driver will result in an error. MySQL Native Driver is enabled by default on Microsoft Windows from PHP version 5.3 onwards.","ver":"PHP 5","ret_desc":"This function always returns TRUE value. If SSL setup is incorrect mysqli_real_connect() will return an error when you attempt to connect.","seealso":[],"url":"mysqli.ssl-set","name":"ssl_set","class":"mysqli","params":[{"list":[{"type":"string","var":"$key","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"string","var":"$cert","beh":0,"desc":"The path name to the key file."},{"type":"string","var":"$ca","beh":1,"desc":"The path name to the certificate file."},{"type":"string","var":"$capath","beh":1,"desc":"The path name to the certificate authority file."},{"type":"string","var":"$cipher","beh":1,"desc":"The pathname to a directory that contains trusted SSL CA certificates in PEM format."}],"ret_type":"bool"},{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":"Procedural style only: A link identifier returned by mysqli_connect() or mysqli_init()"},{"type":"string","var":"$key","beh":0,"desc":"The path name to the key file."},{"type":"string","var":"$cert","beh":1,"desc":"The path name to the certificate file."},{"type":"string","var":"$ca","beh":1,"desc":"The path name to the certificate authority file."},{"type":"string","var":"$capath","beh":1,"desc":"The pathname to a directory that contains trusted SSL CA certificates in PEM format."},{"type":"string","var":"$cipher","beh":1,"desc":"A list of allowable ciphers to use for SSL encryption."}],"ret_type":"bool"}]},"mysqli::stat":{"desc":"Gets the current system status","long_desc":"Object oriented styleProcedural style mysqli_stat() returns a string containing information similar to that provided by the 'mysqladmin status' command. This includes uptime in seconds and the number of running threads, questions, reloads, and open tables.","ver":"PHP 5","ret_desc":"A string describing the server status. FALSE if an error occurred.","seealso":[],"url":"mysqli.stat","name":"stat","class":"mysqli","params":[{"list":[],"ret_type":"string"},{"list":[],"ret_type":"string"}]},"mysqli::stmt_init":{"desc":"Initializes a statement and returns an object for use with mysqli_stmt_prepare","long_desc":"Object oriented styleProcedural style Allocates and initializes a statement object suitable for mysqli_stmt_prepare().","ver":"PHP 5","ret_desc":"Returns an object.","seealso":[],"url":"mysqli.stmt-init","name":"stmt_init","class":"mysqli","params":[{"list":[],"ret_type":"mysqli_stmt"},{"list":[],"ret_type":"mysqli_stmt"}]},"mysqli::store_result":{"desc":"Transfers a result set from the last query","long_desc":"Object oriented styleProcedural style Transfers the result set from the last query on the database connection represented by the link parameter to be used with the mysqli_data_seek() function.","ver":"PHP 5","ret_desc":"Returns a buffered result object or FALSE if an error occurred.","seealso":[],"url":"mysqli.store-result","name":"store_result","class":"mysqli","params":[{"list":[],"ret_type":"mysqli_result"},{"list":[],"ret_type":"mysqli_result"}]},"mysqli::thread_safe":{"desc":"Returns whether thread safety is given or not","long_desc":"Procedural style Tells whether the client library is compiled as thread-safe.","ver":"PHP 5","ret_desc":"TRUE if the client library is thread-safe, otherwise FALSE.","url":"mysqli.thread-safe","name":"thread_safe","class":"mysqli","params":[{"list":[],"ret_type":"bool"}]},"mysqli::use_result":{"desc":"Initiate a result set retrieval","long_desc":"Object oriented styleProcedural style Used to initiate the retrieval of a result set from the last query executed using the mysqli_real_query() function on the database connection. Either this or the mysqli_store_result() function must be called before the results of a query can be retrieved, and one or the other must be called to prevent the next query on that database connection from failing.","ver":"PHP 5","ret_desc":"Returns an unbuffered result object or FALSE if an error occurred.","seealso":[],"url":"mysqli.use-result","name":"use_result","class":"mysqli","params":[{"list":[],"ret_type":"mysqli_result"},{"list":[],"ret_type":"mysqli_result"}]},"mysqli_bind_param":{"desc":"Alias for mysqli_stmt_bind_param()","long_desc":"This function is an alias of mysqli_stmt_bind_param().","ver":"PHP 5 < 5.4.0","seealso":[],"url":"function.mysqli-bind-param","name":"mysqli_bind_param","params":[]},"mysqli_bind_result":{"desc":"Alias for mysqli_stmt_bind_result()","long_desc":"This function is an alias of mysqli_stmt_bind_result().","ver":"PHP 5 < 5.4.0","seealso":[],"url":"function.mysqli-bind-result","name":"mysqli_bind_result","params":[]},"mysqli_client_encoding":{"desc":"Alias of mysqli_character_set_name()","long_desc":"This function is an alias of mysqli_character_set_name().","ver":"PHP 5 < 5.4.0","seealso":[],"url":"function.mysqli-client-encoding","name":"mysqli_client_encoding","params":[]},"mysqli_connect":{"desc":"Alias of mysqli::__construct()","long_desc":"This function is an alias of: mysqli::__construct()","ver":"PHP 5","url":"function.mysqli-connect","name":"mysqli_connect","params":[]},"mysqli_disable_rpl_parse":{"desc":"Disable RPL parse","ver":"PHP 5","url":"function.mysqli-disable-rpl-parse","name":"mysqli_disable_rpl_parse","params":[{"list":[],"ret_type":"bool"}]},"mysqli_enable_reads_from_master":{"desc":"Enable reads from master","ver":"PHP 5","url":"function.mysqli-enable-reads-from-master","name":"mysqli_enable_reads_from_master","params":[{"list":[],"ret_type":"bool"}]},"mysqli_enable_rpl_parse":{"desc":"Enable RPL parse","ver":"PHP 5","url":"function.mysqli-enable-rpl-parse","name":"mysqli_enable_rpl_parse","params":[{"list":[],"ret_type":"bool"}]},"mysqli_escape_string":{"desc":"Alias of mysqli_real_escape_string()","long_desc":"This function is an alias of: mysqli_real_escape_string().","ver":"PHP 5","url":"function.mysqli-escape-string","name":"mysqli_escape_string","params":[]},"mysqli_execute":{"desc":"Alias for mysqli_stmt_execute()","long_desc":"This function is an alias of mysqli_stmt_execute().","ver":"PHP 5","seealso":[],"url":"function.mysqli-execute","name":"mysqli_execute","params":[]},"mysqli_fetch":{"desc":"Alias for mysqli_stmt_fetch()","long_desc":"This function is an alias of mysqli_stmt_fetch().","ver":"PHP 5 < 5.4.0","seealso":[],"url":"function.mysqli-fetch","name":"mysqli_fetch","params":[]},"mysqli_get_cache_stats":{"desc":"Returns client Zval cache statistics","long_desc":"Returns client Zval cache statistics. Available only with mysqlnd.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an array with client Zval cache stats if success, FALSE otherwise.","seealso":[],"url":"function.mysqli-get-cache-stats","name":"mysqli_get_cache_stats","params":[{"list":[],"ret_type":"array"}]},"mysqli_get_client_stats":{"desc":"Returns client per-process statistics","long_desc":"Returns client per-process statistics. Available only with mysqlnd.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an array with client stats if success, FALSE otherwise.","seealso":[],"url":"mysqli.get-client-stats","name":"mysqli_get_client_stats","params":[{"list":[],"ret_type":"array"}]},"mysqli_get_metadata":{"desc":"Alias for mysqli_stmt_result_metadata()","long_desc":"This function is an alias of mysqli_stmt_result_metadata().","ver":"PHP 5 < 5.4.0","seealso":[],"url":"function.mysqli-get-metadata","name":"mysqli_get_metadata","params":[]},"mysqli_master_query":{"desc":"Enforce execution of a query on the master in a master\/slave setup","ver":"PHP 5","url":"function.mysqli-master-query","name":"mysqli_master_query","params":[{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":""},{"type":"string","var":"$query","beh":0,"desc":""}],"ret_type":"bool"}]},"mysqli_param_count":{"desc":"Alias for mysqli_stmt_param_count()","long_desc":"This function is an alias of mysqli_stmt_param_count().","ver":"PHP 5 < 5.4.0","seealso":[],"url":"function.mysqli-param-count","name":"mysqli_param_count","params":[]},"mysqli_report":{"desc":"Enables or disables internal report functions","long_desc":"mysqli_report() is a powerful function to improve your queries and code during development and testing phase. Depending on the flags it reports errors from mysqli function calls or queries which don't use an index (or use a bad index).","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mysqli-report","name":"mysqli_report","params":[{"list":[],"ret_type":"bool"}]},"mysqli_rpl_parse_enabled":{"desc":"Check if RPL parse is enabled","ver":"PHP 5","url":"function.mysqli-rpl-parse-enabled","name":"mysqli_rpl_parse_enabled","params":[{"list":[],"ret_type":"int"}]},"mysqli_rpl_probe":{"desc":"RPL probe","ver":"PHP 5","url":"function.mysqli-rpl-probe","name":"mysqli_rpl_probe","params":[{"list":[],"ret_type":"bool"}]},"mysqli_send_long_data":{"desc":"Alias for mysqli_stmt_send_long_data()","long_desc":"This function is an alias of mysqli_stmt_send_long_data().","ver":"PHP 5 < 5.4.0","seealso":[],"url":"function.mysqli-send-long-data","name":"mysqli_send_long_data","params":[]},"mysqli_set_opt":{"desc":"Alias of mysqli_options()","long_desc":"This function is an alias of mysqli_options().","ver":"PHP 5","url":"function.mysqli-set-opt","name":"mysqli_set_opt","params":[]},"mysqli_slave_query":{"desc":"Force execution of a query on a slave in a master\/slave setup","ver":"PHP 5","url":"function.mysqli-slave-query","name":"mysqli_slave_query","params":[{"list":[{"type":"mysqli","var":"$link","beh":0,"desc":""},{"type":"string","var":"$query","beh":0,"desc":""}],"ret_type":"bool"}]},"mysqli_stmt":{"name":"mysqli_stmt","class":"mysqli_stmt"},"mysqli_stmt::$affected_rows":{"desc":"Returns the total number of rows changed, deleted, or inserted by the last executed statement","long_desc":"Object oriented styleProcedural style Returns the number of rows affected by INSERT, UPDATE, or DELETE query. This function only works with queries which update a table. In order to get the number of rows from a SELECT query, use mysqli_stmt_num_rows() instead.","ver":"PHP 5","ret_desc":"An integer greater than zero indicates the number of rows affected or retrieved. Zero indicates that no records where updated for an UPDATE\/DELETE statement, no rows matched the WHERE clause in the query or that no query has yet been executed. -1 indicates that the query has returned an error. NULL indicates an invalid argument was supplied to the function.","seealso":[],"url":"mysqli-stmt.affected-rows","name":"$affected_rows","class":"mysqli_stmt","params":[{"list":[],"ret_type":"int"}]},"mysqli_stmt::$errno":{"desc":"Returns the error code for the most recent statement call","long_desc":"Object oriented styleProcedural style Returns the error code for the most recently invoked statement function that can succeed or fail. Client error message numbers are listed in the MySQL errmsg.h header file, server error message numbers are listed in mysqld_error.h. In the MySQL source distribution you can find a complete list of error messages and error numbers in the file Docs\/mysqld_error.txt.","ver":"PHP 5","ret_desc":"An error code value. Zero means no error occurred.","seealso":[],"url":"mysqli-stmt.errno","name":"$errno","class":"mysqli_stmt","params":[{"list":[],"ret_type":"int"}]},"mysqli_stmt::$error":{"desc":"Returns a string description for last statement error","long_desc":"Object oriented styleProcedural style Returns a containing the error message for the most recently invoked statement function that can succeed or fail.","ver":"PHP 5","ret_desc":"A string that describes the error. An empty string if no error occurred.","seealso":[],"url":"mysqli-stmt.error","name":"$error","class":"mysqli_stmt","params":[{"list":[],"ret_type":"string"}]},"mysqli_stmt::$error_list":{"desc":"Returns a list of errors from the last statement executed","long_desc":"Object oriented styleProcedural style Returns an array of errors for the most recently invoked statement function that can succeed or fail.","ver":"PHP 5 >= 5.4.0","ret_desc":"A list of errors, each as an associative array containing the errno, error, and sqlstate.","seealso":[],"url":"mysqli-stmt.error-list","name":"$error_list","class":"mysqli_stmt","params":[{"list":[],"ret_type":"string"}]},"mysqli_stmt::$field_count":{"desc":"Returns the number of field in the given statement","long_desc":"Object oriented styleProcedural style","ver":"PHP 5","url":"mysqli-stmt.field-count","name":"$field_count","class":"mysqli_stmt","params":[{"list":[],"ret_type":"int"}]},"mysqli_stmt::$insert_id":{"desc":"Get the ID generated from the previous INSERT operation","long_desc":"Object oriented styleProcedural style","ver":"PHP 5","url":"mysqli-stmt.insert-id","name":"$insert_id","class":"mysqli_stmt","params":[{"list":[],"ret_type":"mixed"}]},"mysqli_stmt::$num_rows":{"desc":"Return the number of rows in statements result set","long_desc":"Object oriented styleProcedural style Returns the number of rows in the result set. The use of mysqli_stmt_num_rows() depends on whether or not you used mysqli_stmt_store_result() to buffer the entire result set in the statement handle. If you use mysqli_stmt_store_result(), mysqli_stmt_num_rows() may be called immediately.","ver":"PHP 5","ret_desc":"An integer representing the number of rows in result set.","seealso":[],"url":"mysqli-stmt.num-rows","name":"$num_rows","class":"mysqli_stmt","params":[{"list":[],"ret_type":"int"}]},"mysqli_stmt::$param_count":{"desc":"Returns the number of parameter for the given statement","long_desc":"Object oriented styleProcedural style Returns the number of parameter markers present in the prepared statement.","ver":"PHP 5","ret_desc":"Returns an integer representing the number of parameters.","seealso":[],"url":"mysqli-stmt.param-count","name":"$param_count","class":"mysqli_stmt","params":[{"list":[],"ret_type":"int"}]},"mysqli_stmt::$sqlstate":{"desc":"Returns SQLSTATE error from previous statement operation","long_desc":"Object oriented styleProcedural style Returns a string containing the SQLSTATE error code for the most recently invoked prepared statement function that can succeed or fail. The error code consists of five characters. '00000' means no error. The values are specified by ANSI SQL and ODBC. For a list of possible values, see \u00bb\u00a0http:\/\/dev.mysql.com\/doc\/mysql\/en\/error-handling.html.","ver":"PHP 5","ret_desc":"Returns a string containing the SQLSTATE error code for the last error. The error code consists of five characters. '00000' means no error.","seealso":[],"url":"mysqli-stmt.sqlstate","name":"$sqlstate","class":"mysqli_stmt","params":[{"list":[],"ret_type":"string"}]},"mysqli_stmt::attr_get":{"desc":"Used to get the current value of a statement attribute","long_desc":"Object oriented styleProcedural style Gets the current value of a statement attribute.","ver":"PHP 5","ret_desc":"Returns FALSE if the attribute is not found, otherwise returns the value of the attribute.","url":"mysqli-stmt.attr-get","name":"attr_get","class":"mysqli_stmt","params":[{"list":[],"ret_type":"int"},{"list":[{"type":"mysqli_stmt","var":"$stmt","beh":0,"desc":"Procedural style only: A statement identifier returned by mysqli_stmt_init()."},{"type":"int","var":"$attr","beh":0,"desc":"The attribute that you want to get."}],"ret_type":"int"}]},"mysqli_stmt::attr_set":{"desc":"Used to modify the behavior of a prepared statement","long_desc":"Object oriented styleProcedural style Used to modify the behavior of a prepared statement. This function may be called multiple times to set several attributes.","ver":"PHP 5","url":"mysqli-stmt.attr-set","name":"attr_set","class":"mysqli_stmt","params":[{"list":[{"type":"int","var":"$attr","beh":0,"desc":"Procedural style only: A statement identifier returned by mysqli_stmt_init()."},{"type":"int","var":"$mode","beh":0,"desc":"The attribute that you want to set. It can have one of the following values: If you use the MYSQLI_STMT_ATTR_CURSOR_TYPE option with MYSQLI_CURSOR_TYPE_READ_ONLY, a cursor is opened for the statement when you invoke mysqli_stmt_execute(). If there is already an open cursor from a previous mysqli_stmt_execute() call, it closes the cursor before opening a new one. mysqli_stmt_reset() also closes any open cursor before preparing the statement for re-execution. mysqli_stmt_free_result() closes any open cursor. If you open a cursor for a prepared statement, mysqli_stmt_store_result() is unnecessary."}],"ret_type":"bool"},{"list":[{"type":"mysqli_stmt","var":"$stmt","beh":0,"desc":"Procedural style only: A statement identifier returned by mysqli_stmt_init()."},{"type":"int","var":"$attr","beh":0,"desc":"The attribute that you want to set. It can have one of the following values: If you use the MYSQLI_STMT_ATTR_CURSOR_TYPE option with MYSQLI_CURSOR_TYPE_READ_ONLY, a cursor is opened for the statement when you invoke mysqli_stmt_execute(). If there is already an open cursor from a previous mysqli_stmt_execute() call, it closes the cursor before opening a new one. mysqli_stmt_reset() also closes any open cursor before preparing the statement for re-execution. mysqli_stmt_free_result() closes any open cursor. If you open a cursor for a prepared statement, mysqli_stmt_store_result() is unnecessary."},{"type":"int","var":"$mode","beh":1,"desc":"The value to assign to the attribute."}],"ret_type":"bool"}]},"mysqli_stmt::bind_param":{"desc":"Binds variables to a prepared statement as parameters","long_desc":"Object oriented styleProcedural style Bind variables for the parameter markers in the SQL statement that was passed to mysqli_prepare().","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli-stmt.bind-param","name":"bind_param","class":"mysqli_stmt","params":[{"list":[{"type":"string","var":"$types","beh":0,"desc":"Procedural style only: A statement identifier returned by mysqli_stmt_init()."},{"type":"mixed","var":"&$var1","beh":1,"desc":"A string that contains one or more characters which specify the types for the corresponding bind variables:"},{"type":"mixed","var":"&$...","beh":1,"desc":"The number of variables and length of string types must match the parameters in the statement."}],"ret_type":"bool"},{"list":[{"type":"mysqli_stmt","var":"$stmt","beh":0,"desc":"Procedural style only: A statement identifier returned by mysqli_stmt_init()."},{"type":"string","var":"$types","beh":1,"desc":"A string that contains one or more characters which specify the types for the corresponding bind variables:"},{"type":"mixed","var":"&$var1","beh":1,"desc":"The number of variables and length of string types must match the parameters in the statement."},{"type":"mixed","var":"&$...","beh":1,"desc":""}],"ret_type":"bool"}]},"mysqli_stmt::bind_result":{"desc":"Binds variables to a prepared statement for result storage","long_desc":"Object oriented styleProcedural style Binds columns in the result set to variables. When mysqli_stmt_fetch() is called to fetch data, the MySQL client\/server protocol places the data for the bound columns into the specified variables var1, ....","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli-stmt.bind-result","name":"bind_result","class":"mysqli_stmt","params":[{"list":[{"type":"mixed","var":"&$var1","beh":0,"desc":"Procedural style only: A statement identifier returned by mysqli_stmt_init()."},{"type":"mixed","var":"&$...","beh":1,"desc":"The variable to be bound."}],"ret_type":"bool"},{"list":[{"type":"mysqli_stmt","var":"$stmt","beh":0,"desc":"Procedural style only: A statement identifier returned by mysqli_stmt_init()."},{"type":"mixed","var":"&$var1","beh":1,"desc":"The variable to be bound."},{"type":"mixed","var":"&$...","beh":1,"desc":""}],"ret_type":"bool"}]},"mysqli_stmt::close":{"desc":"Closes a prepared statement","long_desc":"Object oriented styleProcedural style Closes a prepared statement. mysqli_stmt_close() also deallocates the statement handle. If the current statement has pending or unread results, this function cancels them so that the next query can be executed.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli-stmt.close","name":"close","class":"mysqli_stmt","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"mysqli_stmt::data_seek":{"desc":"Seeks to an arbitrary row in statement result set","long_desc":"Object oriented styleProcedural style Seeks to an arbitrary result pointer in the statement result set. mysqli_stmt_store_result() must be called prior to mysqli_stmt_data_seek().","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"mysqli-stmt.data-seek","name":"data_seek","class":"mysqli_stmt","params":[{"list":[],"ret_type":"void"},{"list":[{"type":"mysqli_stmt","var":"$stmt","beh":0,"desc":"Procedural style only: A statement identifier returned by mysqli_stmt_init()."},{"type":"int","var":"$offset","beh":0,"desc":"Must be between zero and the total number of rows minus one (0.. mysqli_stmt_num_rows() - 1)."}],"ret_type":"void"}]},"mysqli_stmt::execute":{"desc":"Executes a prepared Query","long_desc":"Object oriented styleProcedural style Executes a query that has been previously prepared using the mysqli_prepare() function. When executed any parameter markers which exist will automatically be replaced with the appropriate data. If the statement is UPDATE, DELETE, or INSERT, the total number of affected rows can be determined by using the mysqli_stmt_affected_rows() function. Likewise, if the query yields a result set the mysqli_stmt_fetch() function is used.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli-stmt.execute","name":"execute","class":"mysqli_stmt","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"mysqli_stmt::fetch":{"desc":"Fetch results from a prepared statement into the bound variables","long_desc":"Object oriented styleProcedural style Fetch the result from a prepared statement into the variables bound by mysqli_stmt_bind_result().","ver":"PHP 5","seealso":[],"url":"mysqli-stmt.fetch","name":"fetch","class":"mysqli_stmt","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"mysqli_stmt::free_result":{"desc":"Frees stored result memory for the given statement handle","long_desc":"Object oriented styleProcedural style Frees the result memory associated with the statement, which was allocated by mysqli_stmt_store_result().","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"mysqli-stmt.free-result","name":"free_result","class":"mysqli_stmt","params":[{"list":[],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"mysqli_stmt::get_result":{"desc":"Gets a result set from a prepared statement","long_desc":"Object oriented styleProcedural style Call to return a result set from a prepared statement query.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns a resultset or FALSE on failure.","seealso":[],"url":"mysqli-stmt.get-result","name":"get_result","class":"mysqli_stmt","params":[{"list":[],"ret_type":"mysqli_result"},{"list":[],"ret_type":"mysqli_result"}]},"mysqli_stmt::get_warnings":{"desc":"Get result of SHOW WARNINGS","long_desc":"Object oriented styleProcedural style","ver":"PHP 5 >= 5.1.0","url":"mysqli-stmt.get-warnings","name":"get_warnings","class":"mysqli_stmt","params":[{"list":[],"ret_type":"object"},{"list":[],"ret_type":"object"}]},"mysqli_stmt::more_results":{"desc":"Check if there are more query results from a multiple query","long_desc":"Object oriented style (method):Procedural style: Checks if there are more query results from a multiple query.","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE if more results exist, otherwise FALSE.","seealso":[],"url":"mysqli-stmt.more-results","name":"more_results","class":"mysqli_stmt","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"mysqli_stmt::next_result":{"desc":"Reads the next result from a multiple query","long_desc":"Object oriented style (method):Procedural style: Reads the next result from a multiple query.","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli-stmt.next-result","name":"next_result","class":"mysqli_stmt","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"mysqli_stmt::prepare":{"desc":"Prepare an SQL statement for execution","long_desc":"Object oriented styleProcedural style Prepares the SQL query pointed to by the null-terminated string query. The parameter markers must be bound to application variables using mysqli_stmt_bind_param() and\/or mysqli_stmt_bind_result() before executing the statement or fetching rows.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli-stmt.prepare","name":"prepare","class":"mysqli_stmt","params":[{"list":[],"ret_type":"mixed"},{"list":[{"type":"mysqli_stmt","var":"$stmt","beh":0,"desc":"Procedural style only: A statement identifier returned by mysqli_stmt_init()."},{"type":"string","var":"$query","beh":0,"desc":"The query, as a string. It must consist of a single SQL statement. You can include one or more parameter markers in the SQL statement by embedding question mark (?) characters at the appropriate positions."}],"ret_type":"bool"}]},"mysqli_stmt::reset":{"desc":"Resets a prepared statement","long_desc":"Object oriented styleProcedural style Resets a prepared statement on client and server to state after prepare. It resets the statement on the server, data sent using mysqli_stmt_send_long_data(), unbuffered result sets and current errors. It does not clear bindings or stored result sets. Stored result sets will be cleared when executing the prepared statement (or closing it). To prepare a statement with another query use function mysqli_stmt_prepare().","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli-stmt.reset","name":"reset","class":"mysqli_stmt","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"mysqli_stmt::result_metadata":{"desc":"Returns result set metadata from a prepared statement","long_desc":"Object oriented styleProcedural style If a statement passed to mysqli_prepare() is one that produces a result set, mysqli_stmt_result_metadata() returns the result object that can be used to process the meta information such as total number of fields and individual field information. The result set structure should be freed when you are done with it, which you can do by passing it to mysqli_free_result()","ver":"PHP 5","ret_desc":"Returns a result object or FALSE if an error occurred.","seealso":[],"url":"mysqli-stmt.result-metadata","name":"result_metadata","class":"mysqli_stmt","params":[{"list":[],"ret_type":"mysqli_result"},{"list":[],"ret_type":"mysqli_result"}]},"mysqli_stmt::send_long_data":{"desc":"Send data in blocks","long_desc":"Object oriented styleProcedural style Allows to send parameter data to the server in pieces (or chunks), e.g. if the size of a blob exceeds the size of max_allowed_packet. This function can be called multiple times to send the parts of a character or binary data value for a column, which must be one of the TEXT or BLOB datatypes.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli-stmt.send-long-data","name":"send_long_data","class":"mysqli_stmt","params":[{"list":[{"type":"int","var":"$param_nr","beh":0,"desc":"Procedural style only: A statement identifier returned by mysqli_stmt_init()."},{"type":"string","var":"$data","beh":0,"desc":"Indicates which parameter to associate the data with. Parameters are numbered beginning with 0."}],"ret_type":"bool"},{"list":[{"type":"mysqli_stmt","var":"$stmt","beh":0,"desc":"Procedural style only: A statement identifier returned by mysqli_stmt_init()."},{"type":"int","var":"$param_nr","beh":0,"desc":"Indicates which parameter to associate the data with. Parameters are numbered beginning with 0."},{"type":"string","var":"$data","beh":1,"desc":"A string containing data to be sent."}],"ret_type":"bool"}]},"mysqli_stmt::store_result":{"desc":"Transfers a result set from a prepared statement","long_desc":"Object oriented styleProcedural style You must call mysqli_stmt_store_result() for every query that successfully produces a result set (SELECT, SHOW, DESCRIBE, EXPLAIN), and only if you want to buffer the complete result set by the client, so that the subsequent mysqli_stmt_fetch() call returns buffered data.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"mysqli-stmt.store-result","name":"store_result","class":"mysqli_stmt","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"mysqlnd_ms_get_last_gtid":{"desc":"Returns the latest global transaction ID","long_desc":"Returns a global transaction identifier which belongs to a write operation no older than the last write performed by the client. It is not guaranteed that the global transaction identifier is identical to that one created for the last write transaction performed by the client.","ver":"PECL mysqlnd_ms >= 1.2.0","ret_desc":"Returns a global transaction ID (GTID) on success. Otherwise, returns FALSE.","seealso":[],"url":"function.mysqlnd-ms-get-last-gtid","name":"mysqlnd_ms_get_last_gtid","params":[{"list":[],"ret_type":"string"}]},"mysqlnd_ms_get_last_used_connection":{"desc":"Returns an array which describes the last used connection","long_desc":"Returns an array which describes the last used connection from the plugins connection pool currently pointed to by the user connection handle. If using the plugin, a user connection handle represents a pool of database connections. It is not possible to tell from the user connection handles properties to which database server from the pool the user connection handle points. The function can be used to debug or monitor PECL mysqlnd_ms.","ver":"PECL mysqlnd_ms >= 1.1.0","ret_desc":"FALSE on error. Otherwise, an array which describes the connection used to execute the last statement on.","url":"function.mysqlnd-ms-get-last-used-connection","name":"mysqlnd_ms_get_last_used_connection","params":[{"list":[],"ret_type":"array"}]},"mysqlnd_ms_get_stats":{"desc":"Returns query distribution and connection statistics","long_desc":"Returns an array of statistics collected by the replication and load balancing plugin. The PHP configuration setting mysqlnd_ms.collect_statistics controls the collection of statistics. The collection of statistics is disabled by default for performance reasons. The scope of the statistics is the PHP process. Depending on your deployment model a PHP process may handle one or multiple requests. Statistics are aggregated for all connections and all storage handler. It is not possible to tell how much queries originating from mysqli, PDO_MySQL or mysql API calls have contributed to the aggregated data values.","ver":"PECL mysqlnd_ms >= 1.0.0","ret_desc":"Returns NULL if the PHP configuration directive mysqlnd_ms.enable has disabled the plugin. Otherwise, returns array of statistics.","seealso":[],"url":"function.mysqlnd-ms-get-stats","name":"mysqlnd_ms_get_stats","params":[{"list":[],"ret_type":"array"}]},"mysqlnd_ms_match_wild":{"desc":"Finds whether a table name matches a wildcard pattern or not","long_desc":"Finds whether a table name matches a wildcard pattern or not. This function is not of much practical relevance with PECL mysqlnd_ms 1.1.0 because the plugin does not support MySQL replication table filtering yet.","ver":"PECL mysqlnd_ms >= 1.1.0","ret_desc":"Returns TRUE table_name is matched by wildcard. Otherwise, returns FALSE","url":"function.mysqlnd-ms-match-wild","name":"mysqlnd_ms_match_wild","params":[{"list":[{"type":"string","var":"$table_name","beh":0,"desc":"The table name to check if it is matched by the wildcard."},{"type":"string","var":"$wildcard","beh":0,"desc":"The wildcard pattern to check against the table name. The wildcard pattern supports the same placeholders as MySQL replication filters do. MySQL replication filters can be configured by using the MySQL Server configuration options --replicate-wild-do-table and --replicate-wild-do-db. Please, consult the MySQL Reference Manual to learn more about this MySQL Server feature. The supported placeholders are: Placeholders can be escaped using \\."}],"ret_type":"bool"}]},"mysqlnd_ms_query_is_select":{"desc":"Find whether to send the query to the master, the slave or the last used MySQL server","long_desc":"Finds whether to send the query to the master, the slave or the last used MySQL server. The plugins built-in read\/write split mechanism will be used to analyze the query string to make a recommendation where to send the query. The built-in read\/write split mechanism is very basic and simple. The plugin will recommend sending all queries to the MySQL replication master server but those which begin with SELECT, or begin with a SQL hint which enforces sending the query to a slave server. Due to the basic but fast algorithm the plugin may propose to run some read-only statements such as SHOW TABLES on the replication master.","ver":"PECL mysqlnd_ms >= 1.0.0","ret_desc":"A return value of MYSQLND_MS_QUERY_USE_MASTER indicates that the query should be send to the MySQL replication master server. The function returns a value of MYSQLND_MS_QUERY_USE_SLAVE if the query can be run on a slave because it is considered read-only. A value of MYSQLND_MS_QUERY_USE_LAST_USED is returned to recommend running the query on the last used server. This can either be a MySQL replication master server or a MySQL replication slave server.","seealso":[],"url":"function.mysqlnd-ms-query-is-select","name":"mysqlnd_ms_query_is_select","params":[{"list":[],"ret_type":"int"}]},"mysqlnd_ms_set_qos":{"desc":"Sets the quality of service needed from the cluster","long_desc":"Sets the quality of service needed from the cluster. A database cluster delivers a certain quality of service to the user depending on its architecture. A major aspect of the quality of service is the consistency level the cluster can offer. An asynchronous MySQL replication cluster defaults to eventual consistency for slave reads: a slave may serve stale data, current data, or it may have not the requested data at all, because it is not synchronous to the master. In a MySQL replication cluster, only master accesses can give strong consistency, which promises that all clients see each others changes. PECL\/mysqlnd_ms hides the complexity of choosing appropriate nodes to achieve a certain level of service from the cluster. The \"Quality of Service\" filter implements the necessary logic. The filter can either be configured in the plugins configuration file, or at runtime using mysqlnd_ms_set_qos(). Similar results can be achieved with PECL mysqlnd_ms < 1.2.0, if using SQL hints to force the use of a certain type of node or using the master_on_write plugin configuration option. The first requires more code and causes more work on the application side. The latter is less refined than using the quality of service filter. Settings made through the function call can be reversed, as shown in the example below. The example temporarily switches to a higher service level (session consistency, read your writes) and returns back to the clusters default after it has performed all operations that require the better service. This way, read load on the master can be minimized compared to using master_on_write, which would continue using the master after the first write.","ver":"PECL mysqlnd_ms < 1.2.0","ret_desc":"Returns TRUE if the connections service level has been switched to the requested. Otherwise, returns FALSE","seealso":[],"url":"function.mysqlnd-ms-set-qos","name":"mysqlnd_ms_set_qos","params":[{"list":[{"type":"mixed","var":"$connection","beh":1,"desc":"A PECL\/mysqlnd_ms connection handle to a MySQL server of the type PDO_MYSQL, mysqli> or ext\/mysql for which a service level is to be set. The connection handle is obtained when opening a connection with a host name that matches a mysqlnd_ms configuration file entry using any of the above three MySQL driver extensions."},{"type":"int","var":"$service_level","beh":1,"desc":"The requested service level: MYSQLND_MS_QOS_CONSISTENCY_EVENTUAL, MYSQLND_MS_QOS_CONSISTENCY_SESSION or MYSQLND_MS_QOS_CONSISTENCY_STRONG."},{"type":"int","var":"$service_level_option","beh":1,"desc":"An option to parameterize the requested service level. The option can either be MYSQLND_MS_QOS_OPTION_GTID or MYSQLND_MS_QOS_OPTION_AGE. The option MYSQLND_MS_QOS_OPTION_GTID can be used to refine the service level MYSQLND_MS_QOS_CONSISTENCY_SESSION. It must be combined with a fourth function parameter, the option_value. The option_value shall be a global transaction ID obtained from mysqlnd_ms_get_last_gtid(). If set, the plugin considers both master servers and asynchronous slaves for session consistency (read your writes). Otherwise, only masters are used to achieve session consistency. A slave is considered up-to-date and checked if it has already replicated the global transaction ID from option_value. Please note, searching appropriate slaves is an expensive and slow operation. Use the feature sparsely, if the master cannot handle the read load alone. The MYSQLND_MS_QOS_OPTION_AGE option can be combined with the MYSQLND_MS_QOS_CONSISTENCY_EVENTUAL service level, to filter out asynchronous slaves that lag more seconds behind the master than option_value. If set, the plugin will only consider slaves for reading if SHOW SLAVE STATUS reports Slave_IO_Running=Yes, Slave_SQL_Running=Yes and Seconds_Behind_Master <= option_value. Please note, searching appropriate slaves is an expensive and slow operation. Use the feature sparsely in version 1.2.0. Future versions may improve the algorithm used to identify candidates. Please, see the MySQL reference manual about the precision, accuracy and limitations of the MySQL administrative command SHOW SLAVE STATUS."},{"type":"mixed","var":"$option_value","beh":1,"desc":"Parameter value for the service level option. See also the service_level_option parameter."}],"ret_type":"bool"}]},"mysqlnd_ms_set_user_pick_server":{"desc":"Sets a callback for user-defined read\/write splitting","long_desc":"Sets a callback for user-defined read\/write splitting. The plugin will call the callback only if pick[]=user is the default rule for server picking in the relevant section of the plugins configuration file. The plugins built-in read\/write query split mechanism decisions can be overwritten in two ways. The easiest way is to prepend the query string with the SQL hints MYSQLND_MS_MASTER_SWITCH, MYSQLND_MS_SLAVE_SWITCH or MYSQLND_MS_LAST_USED_SWITCH. Using SQL hints one can control, for example, whether a query shall be send to the MySQL replication master server or one of the slave servers. By help of SQL hints it is not possible to pick a certain slave server for query execution. Full control on server selection can be gained using a callback function. Use of a callback is recommended to expert users only because the callback has to cover all cases otherwise handled by the plugin. The plugin will invoke the callback function for selecting a server from the lists of configured master and slave servers. The callback function inspects the query to run and picks a server for query execution by returning the hosts URI, as found in the master and slave list. If the lazy connections are enabled and the callback choses a slave server for which no connection has been established so far and establishing the connection to the slave fails, the plugin will return an error upon the next action on the failed connection, for example, when running a query. It is the responsibility of the application developer to handle the error. For example, the application can re-run the query to trigger a new server selection and callback invocation. If so, the callback must make sure to select a different slave, or check slave availability, before returning to the plugin to prevent an endless loop.","ver":"PECL mysqlnd_ms < 1.1.0","ret_desc":"Host to run the query on. The host URI is to be taken from the master and slave connection lists passed to the callback function. If callback returns a value neither found in the master nor in the slave connection lists the plugin will fallback to the second pick method configured via the pick[] setting in the plugin configuration file. If not second pick method is given, the plugin falls back to the build-in default pick method for server selection.","seealso":[],"url":"function.mysqlnd-ms-set-user-pick-server","name":"mysqlnd_ms_set_user_pick_server","params":[{"list":[],"ret_type":"bool"}]},"mysqlnd_qc_clear_cache":{"desc":"Flush all cache contents","long_desc":"Flush all cache contents. Flushing the cache is a storage handler responsibility. All built-in storage handler but the memcache storage handler support flushing the cache. The memcache storage handler cannot flush its cache contents. User-defined storage handler may or may not support the operation.","ver":"PECL mysqlnd_qc >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.mysqlnd-qc-clear-cache","name":"mysqlnd_qc_clear_cache","params":[{"list":[],"ret_type":"bool"}]},"mysqlnd_qc_get_available_handlers":{"desc":"Returns a list of available storage handler","long_desc":"Which storage are available depends on the compile time configuration of the query cache plugin. The default storage handler is always available. All other storage handler must be enabled explicitly when building the extension.","ver":"PECL mysqlnd_qc >= 1.0.0","ret_desc":"Returns an array of available built-in storage handler. For each storage handler the version number and version string is given.","seealso":[],"url":"function.mysqlnd-qc-get-available-handlers","name":"mysqlnd_qc_get_available_handlers","params":[{"list":[],"ret_type":"array"}]},"mysqlnd_qc_get_cache_info":{"desc":"Returns information on the current handler, the number of cache entries and cache entries, if available","long_desc":"","ver":"PECL mysqlnd_qc >= 1.0.0","ret_desc":"Returns information on the current handler, the number of cache entries and cache entries, if available. If and what data will be returned for the cache entries is subject to the active storage handler. Storage handler are free to return any data. Storage handler are recommended to return at least the data provided by the default handler, if technically possible.","seealso":[],"url":"function.mysqlnd-qc-get-cache-info","name":"mysqlnd_qc_get_cache_info","params":[{"list":[],"ret_type":"array"}]},"mysqlnd_qc_get_core_stats":{"desc":"Statistics collected by the core of the query cache","long_desc":"Returns an array of statistics collected by the core of the cache plugin. The same data fields will be reported for any storage handler because the data is collected by the core. The PHP configuration setting mysqlnd_qc.collect_statistics controls the collection of statistics. The collection of statistics is disabled by default for performance reasons. Disabling the collection of statistics will also disable the collection of time related statistics. The PHP configuration setting mysqlnd_qc.collect_time_statistics controls the collection of time related statistics. The scope of the core statistics is the PHP process. Depending on your deployment model a PHP process may handle one or multiple requests. Statistics are aggregated for all cache entries and all storage handler. It is not possible to tell how much queries originating from mysqli, PDO_MySQL or mysql API calls have contributed to the aggregated data values.","ver":"PECL mysqlnd_qc >= 1.0.0","ret_desc":"Array of core statistics","seealso":[],"url":"function.mysqlnd-qc-get-core-stats","name":"mysqlnd_qc_get_core_stats","params":[{"list":[],"ret_type":"array"}]},"mysqlnd_qc_get_normalized_query_trace_log":{"desc":"Returns a normalized query trace log for each query inspected by the query cache","long_desc":"Returns a normalized query trace log for each query inspected by the query cache. The collection of the trace log is disabled by default. To collect the trace log you have to set the PHP configuration directive mysqlnd_qc.collect_normalized_query_trace to 1 Entries in the trace log are grouped by the normalized query statement. The normalized query statement is the query statement with all statement parameter values being replaced with a question mark. For example, the two statements SELECT id FROM test WHERE id = 1 and SELECT id FROM test WHERE id = 2 are normalized as SELECT id FROM test WHERE id = ?. Whenever a statement is inspected by the query cache which matches the normalized statement pattern, its statistics are grouped by the normalized statement string.","ver":"PECL mysqlnd_qc >= 1.0.0","ret_desc":"An array of query log. Every list entry contains the normalized query stringand further detail information.","seealso":[],"url":"function.mysqlnd-qc-get-normalized-query-trace-log","name":"mysqlnd_qc_get_normalized_query_trace_log","params":[{"list":[],"ret_type":"array"}]},"mysqlnd_qc_get_query_trace_log":{"desc":"Returns a backtrace for each query inspected by the query cache","long_desc":"Returns a backtrace for each query inspected by the query cache. The collection of the backtrace is disabled by default. To collect the backtrace you have to set the PHP configuration directive mysqlnd_qc.collect_query_trace to 1 The maximum depth of the backtrace is limited to the depth set with the PHP configuration directive mysqlnd_qc.query_trace_bt_depth.","ver":"PECL mysqlnd_qc >= 1.0.0","ret_desc":"An array of query backtrace. Every list entry contains the query string, a backtrace and further detail information.","seealso":[],"url":"function.mysqlnd-qc-get-query-trace-log","name":"mysqlnd_qc_get_query_trace_log","params":[{"list":[],"ret_type":"array"}]},"mysqlnd_qc_set_cache_condition":{"desc":"Set conditions for automatic caching","long_desc":"Sets a condition for automatic caching of statements which do not contain the necessary SQL hints to enable caching of them.","ver":"PECL mysqlnd_qc >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on FAILURE.","seealso":[],"url":"function.mysqlnd-qc-set-cache-condition","name":"mysqlnd_qc_set_cache_condition","params":[{"list":[{"type":"int","var":"$condition_type","beh":0,"desc":"Type of the condition. The only allowed value is MYSQLND_QC_CONDITION_META_SCHEMA_PATTERN."},{"type":"mixed","var":"$condition","beh":0,"desc":"Parameter for the condition set with condition_type. Parameter type and structure depend on condition_type If condition_type equals MYSQLND_QC_CONDITION_META_SCHEMA_PATTERN condition must be a string. The string sets a pattern. Statements are cached if table and database meta data entry of their result sets match the pattern. The pattern is checked for a match with the db and org_table meta data entries provided by the underlying MySQL client server library. Please, check the MySQL Reference manual for details about the two entries. The db and org_table values are concatenated with a dot (.) before matched against condition. Pattern matching supports the wildcards % and _. The wildcard % will match one or many arbitrary characters. _ will match one arbitrary character. The escape symbol is backslash."},{"type":"mixed","var":"$condition_option","beh":1,"desc":"Option for condition. Type and structure depend on condition_type. If condition_type equals MYSQLND_QC_CONDITION_META_SCHEMA_PATTERN condition_options is the TTL to be used."}],"ret_type":"bool"}]},"mysqlnd_qc_set_is_select":{"desc":"Installs a callback which decides whether a statement is cached","long_desc":"Installs a callback which decides whether a statement is cached. There are several ways of hinting PELC\/mysqlnd_qc to cache a query. By default, PECL\/mysqlnd_qc attempts to cache a if caching of all statements is enabled or the query string begins with a certain SQL hint. The plugin internally calls a function named is_select() to find out. This internal function can be replaced with a user-defined callback. Then, the user-defined callback is responsible to decide whether the plugin attempts to cache a statement. Because the internal function is replaced with the callback, the callback gains full control. The callback is free to ignore the configuration setting mysqlnd_qc.cache_by_default and SQL hints. The callback is invoked for every statement inspected by the plugin. It is given the statements string as a parameter. The callback returns FALSE if the statement shall not be cached. It returns TRUE to make the plugin attempt to cache the statements result set, if any. A so-created cache entry is given the default TTL set with the PHP configuration directive mysqlnd_qc.ttl. If a different TTL shall be used, the callback returns a numeric value to be used as the TTL. The internal is_select function is part of the internal cache storage handler interface. Thus, a user-defined storage handler offers the same capabilities.","ver":"PECL mysqlnd_qc >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mysqlnd-qc-set-is-select","name":"mysqlnd_qc_set_is_select","params":[{"list":[],"ret_type":"mixed"}]},"mysqlnd_qc_set_storage_handler":{"desc":"Change current storage handler","long_desc":"Sets the storage handler used by the query cache. A list of available storage handler can be obtained from mysqlnd_qc_get_available_handlers(). Which storage are available depends on the compile time configuration of the query cache plugin. The default storage handler is always available. All other storage handler must be enabled explicitly when building the extension.","ver":"PECL mysqlnd_qc >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.mysqlnd-qc-set-storage-handler","name":"mysqlnd_qc_set_storage_handler","params":[{"list":[],"ret_type":"bool"}]},"mysqlnd_qc_set_user_handlers":{"desc":"Sets the callback functions for a user-defined procedural storage handler","long_desc":"Sets the callback functions for a user-defined procedural storage handler.","ver":"PECL mysqlnd_qc >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on FAILURE.","seealso":[],"url":"function.mysqlnd-qc-set-user-handlers","name":"mysqlnd_qc_set_user_handlers","params":[{"list":[{"type":"string","var":"$get_hash","beh":0,"desc":"Name of the user function implementing the storage handler get_hash functionality."},{"type":"string","var":"$find_query_in_cache","beh":0,"desc":"Name of the user function implementing the storage handler find_in_cache functionality."},{"type":"string","var":"$return_to_cache","beh":1,"desc":"Name of the user function implementing the storage handler return_to_cache functionality."},{"type":"string","var":"$add_query_to_cache_if_not_exists","beh":1,"desc":"Name of the user function implementing the storage handler add_query_to_cache_if_not_exists functionality."},{"type":"string","var":"$query_is_select","beh":1,"desc":"Name of the user function implementing the storage handler query_is_select functionality."},{"type":"string","var":"$update_query_run_time_stats","beh":1,"desc":"Name of the user function implementing the storage handler update_query_run_time_stats functionality."},{"type":"string","var":"$get_stats","beh":1,"desc":"Name of the user function implementing the storage handler get_stats functionality."},{"type":"string","var":"$clear_cache","beh":1,"desc":"Name of the user function implementing the storage handler clear_cache functionality."}],"ret_type":"bool"}]},"mysqlnd_uh_convert_to_mysqlnd":{"desc":"Converts a MySQL connection handle into a mysqlnd connection handle","long_desc":"Converts a MySQL connection handle into a mysqlnd connection handle. After conversion you can execute mysqlnd library calls on the connection handle. This can be used to access mysqlnd functionality not made available through user space API calls. The function can be disabled with mysqlnd_uh.enable. If mysqlnd_uh.enable is set to FALSE the function will not install the proxy and always return TRUE. Additionally, an error of the type E_WARNING may be emitted. The error message may read like PHP Warning: mysqlnd_uh_convert_to_mysqlnd(): (Mysqlnd User Handler) The plugin has been disabled by setting the configuration parameter mysqlnd_uh.enable = false. You are not allowed to call this function [...].","ver":"PECL mysqlnd-uh >= 1.0.0-alpha","ret_desc":"A mysqlnd connection handle.","seealso":[],"url":"function.mysqlnd-uh-convert-to-mysqlnd","name":"mysqlnd_uh_convert_to_mysqlnd","params":[{"list":[],"ret_type":"resource"}]},"mysqlnd_uh_set_connection_proxy":{"desc":"Installs a proxy for mysqlnd connections","long_desc":"Installs a proxy object to hook mysqlnd's connection objects methods. Once installed, the proxy will be used for all MySQL connections opened with mysqli, mysql or PDO_MYSQL, assuming that the listed extensions are compiled to use the mysqlnd library. The function can be disabled with mysqlnd_uh.enable. If mysqlnd_uh.enable is set to FALSE the function will not install the proxy and always return TRUE. Additionally, an error of the type E_WARNING may be emitted. The error message may read like PHP Warning: mysqlnd_uh_set_connection_proxy(): (Mysqlnd User Handler) The plugin has been disabled by setting the configuration parameter mysqlnd_uh.enable = false. The proxy has not been installed [...].","ver":"PECL mysqlnd-uh >= 1.0.0-alpha","ret_desc":"Returns TRUE on success. Otherwise, returns FALSE","seealso":[],"url":"function.mysqlnd-uh-set-connection-proxy","name":"mysqlnd_uh_set_connection_proxy","params":[{"list":[{"type":"MysqlndUhConnection","var":"&$connection_proxy","beh":0,"desc":"A proxy object of type MysqlndUhConnection."},{"type":"mysqli","var":"&$mysqli_connection","beh":1,"desc":"Object of type mysqli. If given, the proxy will be set for this particular connection only."}],"ret_type":"bool"}]},"mysqlnd_uh_set_statement_proxy":{"desc":"Installs a proxy for mysqlnd statements","long_desc":"Installs a proxy for mysqlnd statements. The proxy object will be used for all mysqlnd prepared statement objects, regardless which PHP MySQL extension (mysqli, mysql, PDO_MYSQL) has created them as long as the extension is compiled to use the mysqlnd library. The function can be disabled with mysqlnd_uh.enable. If mysqlnd_uh.enable is set to FALSE the function will not install the proxy and always return TRUE. Additionally, an error of the type E_WARNING may be emitted. The error message may read like PHP Warning: mysqlnd_uh_set_statement_proxy(): (Mysqlnd User Handler) The plugin has been disabled by setting the configuration parameter mysqlnd_uh.enable = false. The proxy has not been installed [...].","ver":"PECL mysqlnd-uh >= 1.0.0-alpha","ret_desc":"Returns TRUE on success. Otherwise, returns FALSE","seealso":[],"url":"function.mysqlnd-uh-set-statement-proxy","name":"mysqlnd_uh_set_statement_proxy","params":[{"list":[],"ret_type":"bool"}]},"natcasesort":{"desc":"Sort an array using a case insensitive \"natural order\" algorithm","long_desc":"natcasesort() is a case insensitive version of natsort(). This function implements a sort algorithm that orders alphanumeric strings in the way a human being would while maintaining key\/value associations. This is described as a \"natural ordering\".","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.natcasesort","name":"natcasesort","params":[{"list":[],"ret_type":"bool"}]},"natsort":{"desc":"Sort an array using a \"natural order\" algorithm","long_desc":"This function implements a sort algorithm that orders alphanumeric strings in the way a human being would while maintaining key\/value associations. This is described as a \"natural ordering\". An example of the difference between this algorithm and the regular computer string sorting algorithms (used in sort()) can be seen in the example below.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.natsort","name":"natsort","params":[{"list":[],"ret_type":"bool"}]},"ncurses_addch":{"desc":"Add character at current position and advance cursor","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-addch","name":"ncurses_addch","params":[{"list":[],"ret_type":"int"}]},"ncurses_addchnstr":{"desc":"Add attributed string with specified length at current position","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-addchnstr","name":"ncurses_addchnstr","params":[{"list":[{"type":"string","var":"$s","beh":0,"desc":""},{"type":"int","var":"$n","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_addchstr":{"desc":"Add attributed string at current position","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-addchstr","name":"ncurses_addchstr","params":[{"list":[],"ret_type":"int"}]},"ncurses_addnstr":{"desc":"Add string with specified length at current position","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-addnstr","name":"ncurses_addnstr","params":[{"list":[{"type":"string","var":"$s","beh":0,"desc":""},{"type":"int","var":"$n","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_addstr":{"desc":"Output text at current position","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-addstr","name":"ncurses_addstr","params":[{"list":[],"ret_type":"int"}]},"ncurses_assume_default_colors":{"desc":"Define default colors for color 0","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-assume-default-colors","name":"ncurses_assume_default_colors","params":[{"list":[{"type":"int","var":"$fg","beh":0,"desc":""},{"type":"int","var":"$bg","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_attroff":{"desc":"Turn off the given attributes","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-attroff","name":"ncurses_attroff","params":[{"list":[],"ret_type":"int"}]},"ncurses_attron":{"desc":"Turn on the given attributes","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-attron","name":"ncurses_attron","params":[{"list":[],"ret_type":"int"}]},"ncurses_attrset":{"desc":"Set given attributes","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-attrset","name":"ncurses_attrset","params":[{"list":[],"ret_type":"int"}]},"ncurses_baudrate":{"desc":"Returns baudrate of terminal","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-baudrate","name":"ncurses_baudrate","params":[{"list":[],"ret_type":"int"}]},"ncurses_beep":{"desc":"Let the terminal beep","long_desc":"ncurses_beep() sends an audible alert (bell) and if its not possible flashes the screen.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","seealso":[],"url":"function.ncurses-beep","name":"ncurses_beep","params":[{"list":[],"ret_type":"int"}]},"ncurses_bkgd":{"desc":"Set background property for terminal screen","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-bkgd","name":"ncurses_bkgd","params":[{"list":[],"ret_type":"int"}]},"ncurses_bkgdset":{"desc":"Control screen background","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-bkgdset","name":"ncurses_bkgdset","params":[{"list":[],"ret_type":"void"}]},"ncurses_border":{"desc":"Draw a border around the screen using attributed characters","long_desc":"Draws the specified lines and corners around the main window. Use ncurses_wborder() for borders around subwindows!","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","seealso":[],"url":"function.ncurses-border","name":"ncurses_border","params":[{"list":[{"type":"int","var":"$left","beh":0,"desc":""},{"type":"int","var":"$right","beh":0,"desc":""},{"type":"int","var":"$top","beh":1,"desc":""},{"type":"int","var":"$bottom","beh":1,"desc":""},{"type":"int","var":"$tl_corner","beh":1,"desc":"Top left corner"},{"type":"int","var":"$tr_corner","beh":1,"desc":"Top right corner"},{"type":"int","var":"$bl_corner","beh":1,"desc":"Bottom left corner"},{"type":"int","var":"$br_corner","beh":1,"desc":"Bottom right corner"}],"ret_type":"int"}]},"ncurses_bottom_panel":{"desc":"Moves a visible panel to the bottom of the stack","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-bottom-panel","name":"ncurses_bottom_panel","params":[{"list":[],"ret_type":"int"}]},"ncurses_can_change_color":{"desc":"Checks if terminal color definitions can be changed","long_desc":"Checks whether the terminal has color capabilities and whether the programmer can change color definitions using ncurses_init_color(). ncurses must be initialized using ncurses_init() before calling this function.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Return TRUE if the programmer can change color definitions, FALSE otherwise.","seealso":[],"url":"function.ncurses-can-change-color","name":"ncurses_can_change_color","params":[{"list":[],"ret_type":"bool"}]},"ncurses_cbreak":{"desc":"Switch of input buffering","long_desc":"Disables line buffering and character processing (interrupt and flow control characters are unaffected), making characters typed by the user immediately available to the program.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns TRUE or NCURSES_ERR if any error occurred.","seealso":[],"url":"function.ncurses-cbreak","name":"ncurses_cbreak","params":[{"list":[],"ret_type":"bool"}]},"ncurses_clear":{"desc":"Clear screen","long_desc":"Clears the screen completely without setting blanks. Note: ncurses_clear() clears the screen without setting blanks, which have the current background rendition. To clear screen with blanks, use ncurses_erase().","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ncurses-clear","name":"ncurses_clear","params":[{"list":[],"ret_type":"bool"}]},"ncurses_clrtobot":{"desc":"Clear screen from current position to bottom","long_desc":"Erases all lines from cursor to end of screen and creates blanks. Blanks created by ncurses_clrtobot() have the current background rendition.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ncurses-clrtobot","name":"ncurses_clrtobot","params":[{"list":[],"ret_type":"bool"}]},"ncurses_clrtoeol":{"desc":"Clear screen from current position to end of line","long_desc":"Erases the current line from cursor position to the end. Blanks created by ncurses_clrtoeol() have the current background rendition.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ncurses-clrtoeol","name":"ncurses_clrtoeol","params":[{"list":[],"ret_type":"bool"}]},"ncurses_color_content":{"desc":"Retrieves RGB components of a color","long_desc":"Retrieves the red, green, and blue components for the given color definition. Terminal color capabilities must be initialized with ncurses_start_color() prior to calling this function.","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns -1 if the function was successful, and 0 if ncurses or terminal color capabilities have not been initialized.","seealso":[],"url":"function.ncurses-color-content","name":"ncurses_color_content","params":[{"list":[{"type":"int","var":"$color","beh":0,"desc":"The number of the color to retrieve information for. May be one of the pre-defined color constants."},{"type":"int","var":"&$r","beh":0,"desc":"A reference to which to return the red component of the color. The value returned to the reference will be between 0 and 1000."},{"type":"int","var":"&$g","beh":1,"desc":"A reference to which to return the green component of the color. The value returned to the reference will be between 0 and 1000."},{"type":"int","var":"&$b","beh":1,"desc":"A reference to which to return the blue component of the color. The value returned to the reference will be between 0 and 1000."}],"ret_type":"int"}]},"ncurses_color_set":{"desc":"Set active foreground and background colors","long_desc":"Sets the active foreground and background colors. Any characters written after this function is invoked will have these colors. This function requires terminal colors to be supported and initialized using ncurses_start_color() beforehand. ncurses uses color pairs to specify both foreground and background colors. Use ncurses_init_pair() to define a color pair.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns -1 on success, and 0 on failure.","seealso":[],"url":"function.ncurses-color-set","name":"ncurses_color_set","params":[{"list":[],"ret_type":"int"}]},"ncurses_curs_set":{"desc":"Set cursor state","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-curs-set","name":"ncurses_curs_set","params":[{"list":[],"ret_type":"int"}]},"ncurses_def_prog_mode":{"desc":"Saves terminals (program) mode","long_desc":"Saves the current terminal modes for program (in curses) for use by ncurses_reset_prog_mode().","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns FALSE on success, otherwise TRUE.","seealso":[],"url":"function.ncurses-def-prog-mode","name":"ncurses_def_prog_mode","params":[{"list":[],"ret_type":"bool"}]},"ncurses_def_shell_mode":{"desc":"Saves terminals (shell) mode","long_desc":"Saves the current terminal modes for shell (not in curses) for use by ncurses_reset_shell_mode().","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns FALSE on success, TRUE otherwise.","seealso":[],"url":"function.ncurses-def-shell-mode","name":"ncurses_def_shell_mode","params":[{"list":[],"ret_type":"bool"}]},"ncurses_define_key":{"desc":"Define a keycode","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-define-key","name":"ncurses_define_key","params":[{"list":[{"type":"string","var":"$definition","beh":0,"desc":""},{"type":"int","var":"$keycode","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_del_panel":{"desc":"Remove panel from the stack and delete it (but not the associated window)","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-del-panel","name":"ncurses_del_panel","params":[{"list":[],"ret_type":"bool"}]},"ncurses_delay_output":{"desc":"Delay output on terminal using padding characters","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-delay-output","name":"ncurses_delay_output","params":[{"list":[],"ret_type":"int"}]},"ncurses_delch":{"desc":"Delete character at current position, move rest of line left","long_desc":"Deletes the character under the cursor. All characters to the right of the cursor on the same line are moved to the left one position and the last character on the line is filled with a blank. The cursor position does not change.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns FALSE on success, TRUE otherwise.","seealso":[],"url":"function.ncurses-delch","name":"ncurses_delch","params":[{"list":[],"ret_type":"bool"}]},"ncurses_deleteln":{"desc":"Delete line at current position, move rest of screen up","long_desc":"Deletes the current line under cursorposition. All lines below the current line are moved up one line. The bottom line of window is cleared. Cursor position does not change.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns FALSE on success, otherwise TRUE.","seealso":[],"url":"function.ncurses-deleteln","name":"ncurses_deleteln","params":[{"list":[],"ret_type":"bool"}]},"ncurses_delwin":{"desc":"Delete a ncurses window","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-delwin","name":"ncurses_delwin","params":[{"list":[],"ret_type":"bool"}]},"ncurses_doupdate":{"desc":"Write all prepared refreshes to terminal","long_desc":"Compares the virtual screen to the physical screen and updates the physical screen. This way is more effective than using multiple refresh calls.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ncurses-doupdate","name":"ncurses_doupdate","params":[{"list":[],"ret_type":"bool"}]},"ncurses_echo":{"desc":"Activate keyboard input echo","long_desc":"Enables echo mode. All characters typed by user are echoed by ncurses_getch().","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns FALSE on success, TRUE if any error occurred.","seealso":[],"url":"function.ncurses-echo","name":"ncurses_echo","params":[{"list":[],"ret_type":"bool"}]},"ncurses_echochar":{"desc":"Single character output including refresh","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-echochar","name":"ncurses_echochar","params":[{"list":[],"ret_type":"int"}]},"ncurses_end":{"desc":"Stop using ncurses, clean up the screen","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-end","name":"ncurses_end","params":[{"list":[],"ret_type":"int"}]},"ncurses_erase":{"desc":"Erase terminal screen","long_desc":"Fills the terminal screen with blanks. Created blanks have the current background rendition, set by ncurses_bkgd().","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ncurses-erase","name":"ncurses_erase","params":[{"list":[],"ret_type":"bool"}]},"ncurses_erasechar":{"desc":"Returns current erase character","long_desc":"Returns the current erase character.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"The current erase char, as a string.","seealso":[],"url":"function.ncurses-erasechar","name":"ncurses_erasechar","params":[{"list":[],"ret_type":"string"}]},"ncurses_filter":{"desc":"Set LINES for iniscr() and newterm() to 1","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-filter","name":"ncurses_filter","params":[{"list":[],"ret_type":"void"}]},"ncurses_flash":{"desc":"Flash terminal screen (visual bell)","long_desc":"Flashes the screen, and if its not possible, sends an audible alert (bell).","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns FALSE on success, otherwise TRUE.","seealso":[],"url":"function.ncurses-flash","name":"ncurses_flash","params":[{"list":[],"ret_type":"bool"}]},"ncurses_flushinp":{"desc":"Flush keyboard input buffer","long_desc":"Throws away any typeahead that has been typed and has not yet been read by your program.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns FALSE on success, otherwise TRUE.","url":"function.ncurses-flushinp","name":"ncurses_flushinp","params":[{"list":[],"ret_type":"bool"}]},"ncurses_getch":{"desc":"Read a character from keyboard","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-getch","name":"ncurses_getch","params":[{"list":[],"ret_type":"int"}]},"ncurses_getmaxyx":{"desc":"Returns the size of a window","long_desc":"Gets the horizontal and vertical size of the given window into the given variables. Variables must be passed as reference, so they are updated when the user changes the terminal size.","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"No value is returned.","url":"function.ncurses-getmaxyx","name":"ncurses_getmaxyx","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":"The measured window"},{"type":"int","var":"&$y","beh":0,"desc":"This will be set to the window height"},{"type":"int","var":"&$x","beh":1,"desc":"This will be set to the window width"}],"ret_type":"void"}]},"ncurses_getmouse":{"desc":"Reads mouse event","long_desc":"ncurses_getmouse() reads mouse event out of queue.","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns FALSE if a mouse event is actually visible in the given window, otherwise returns TRUE.","seealso":[],"url":"function.ncurses-getmouse","name":"ncurses_getmouse","params":[{"list":[],"ret_type":"bool"}]},"ncurses_getyx":{"desc":"Returns the current cursor position for a window","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-getyx","name":"ncurses_getyx","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":""},{"type":"int","var":"&$y","beh":0,"desc":""},{"type":"int","var":"&$x","beh":1,"desc":""}],"ret_type":"void"}]},"ncurses_halfdelay":{"desc":"Put terminal into halfdelay mode","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-halfdelay","name":"ncurses_halfdelay","params":[{"list":[],"ret_type":"int"}]},"ncurses_has_colors":{"desc":"Checks if terminal has color capabilities","long_desc":"Checks whether the terminal has color capabilities. This function can be used to write terminal-independent programs. ncurses must be initialized using ncurses_init() before calling this function.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Return TRUE if the terminal has color capabilities, FALSE otherwise.","seealso":[],"url":"function.ncurses-has-colors","name":"ncurses_has_colors","params":[{"list":[],"ret_type":"bool"}]},"ncurses_has_ic":{"desc":"Check for insert- and delete-capabilities","long_desc":"Checks whether the terminal has insert and delete capabilities.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns TRUE if the terminal has insert\/delete-capabilities, FALSE otherwise.","seealso":[],"url":"function.ncurses-has-ic","name":"ncurses_has_ic","params":[{"list":[],"ret_type":"bool"}]},"ncurses_has_il":{"desc":"Check for line insert- and delete-capabilities","long_desc":"Checks whether the terminal has insert- and delete-line-capabilities.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns TRUE if the terminal has insert\/delete-line capabilities, FALSE otherwise.","seealso":[],"url":"function.ncurses-has-il","name":"ncurses_has_il","params":[{"list":[],"ret_type":"bool"}]},"ncurses_has_key":{"desc":"Check for presence of a function key on terminal keyboard","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-has-key","name":"ncurses_has_key","params":[{"list":[],"ret_type":"int"}]},"ncurses_hide_panel":{"desc":"Remove panel from the stack, making it invisible","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-hide-panel","name":"ncurses_hide_panel","params":[{"list":[],"ret_type":"int"}]},"ncurses_hline":{"desc":"Draw a horizontal line at current position using an attributed character and max. n characters long","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-hline","name":"ncurses_hline","params":[{"list":[{"type":"int","var":"$charattr","beh":0,"desc":""},{"type":"int","var":"$n","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_inch":{"desc":"Get character and attribute at current position","long_desc":"Returns the character from the current position.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns the character, as a string.","url":"function.ncurses-inch","name":"ncurses_inch","params":[{"list":[],"ret_type":"string"}]},"ncurses_init":{"desc":"Initialize ncurses","long_desc":"Initializes the ncurses interface. This function must be used before any other ncurses function call. Note that ncurses_end() must be called before exiting from the program, or the terminal will not be restored to its proper non-visual mode.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"No value is returned.","seealso":[],"url":"function.ncurses-init","name":"ncurses_init","params":[{"list":[],"ret_type":"void"}]},"ncurses_init_color":{"desc":"Define a terminal color","long_desc":"Defines or redefines the given color. When this function is called, all occurrences of the given color on the screen, if any, immediately change to the new definition. Color capabilities must be supported by the terminal and initialized using ncurses_start_color() prior to calling this function. In addition, the terminal must have color changing capabilities; use ncurses_can_change_color() to check for this.","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns -1 if the function was successful, and 0 if ncurses or terminal color capabilities have not been initialized or the terminal does not have color changing capabilities.","seealso":[],"url":"function.ncurses-init-color","name":"ncurses_init_color","params":[{"list":[{"type":"int","var":"$color","beh":0,"desc":"The identification number of the color to redefine. It may be one of the default color constants."},{"type":"int","var":"$r","beh":0,"desc":"A color value, between 0 and 1000, for the red component."},{"type":"int","var":"$g","beh":1,"desc":"A color value, between 0 and 1000, for the green component."},{"type":"int","var":"$b","beh":1,"desc":"A color value, between 0 and 1000, for the blue component."}],"ret_type":"int"}]},"ncurses_init_pair":{"desc":"Define a color pair","long_desc":"Defines or redefines the given color pair to have the given foreground and background colors. If the color pair was previously initialized, the screen is refreshed and all occurrences of it are changed to reflect the new definition. Color capabilities must be initialized using ncurses_start_color() before calling this function. The first color pair (color pair 0) is assumed to be white on black by default, but can be changed using ncurses_assume_default_colors().","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns -1 if the function was successful, and 0 if ncurses or color support were not initialized.","seealso":[],"url":"function.ncurses-init-pair","name":"ncurses_init_pair","params":[{"list":[{"type":"int","var":"$pair","beh":0,"desc":"The number of the color pair to define."},{"type":"int","var":"$fg","beh":0,"desc":"The foreground color for the color pair. May be one of the pre-defined colors or one defined by ncurses_init_color() if the terminal has color changing capabilities."},{"type":"int","var":"$bg","beh":1,"desc":"The background color for the color pair. May be one of the pre-defined colors or one defined by ncurses_init_color() if the terminal has color changing capabilities."}],"ret_type":"int"}]},"ncurses_insch":{"desc":"Insert character moving rest of line including character at current position","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-insch","name":"ncurses_insch","params":[{"list":[],"ret_type":"int"}]},"ncurses_insdelln":{"desc":"Insert lines before current line scrolling down (negative numbers delete and scroll up)","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-insdelln","name":"ncurses_insdelln","params":[{"list":[],"ret_type":"int"}]},"ncurses_insertln":{"desc":"Insert a line, move rest of screen down","long_desc":"Inserts a new line above the current line. The bottom line will be lost.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-insertln","name":"ncurses_insertln","params":[{"list":[],"ret_type":"int"}]},"ncurses_insstr":{"desc":"Insert string at current position, moving rest of line right","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-insstr","name":"ncurses_insstr","params":[{"list":[],"ret_type":"int"}]},"ncurses_instr":{"desc":"Reads string from terminal screen","long_desc":"Reads a string from the terminal screen and returns the number of characters read from the current character position until end of line.","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns the number of characters.","url":"function.ncurses-instr","name":"ncurses_instr","params":[{"list":[],"ret_type":"int"}]},"ncurses_isendwin":{"desc":"Ncurses is in endwin mode, normal screen output may be performed","long_desc":"Checks if ncurses is in endwin mode.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns TRUE, if ncurses_end() has been called without any subsequent calls to ncurses_wrefresh(), FALSE otherwise.","seealso":[],"url":"function.ncurses-isendwin","name":"ncurses_isendwin","params":[{"list":[],"ret_type":"bool"}]},"ncurses_keyok":{"desc":"Enable or disable a keycode","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-keyok","name":"ncurses_keyok","params":[{"list":[{"type":"int","var":"$keycode","beh":0,"desc":""},{"type":"bool","var":"$enable","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_keypad":{"desc":"Turns keypad on or off","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-keypad","name":"ncurses_keypad","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":""},{"type":"bool","var":"$bf","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_killchar":{"desc":"Returns current line kill character","long_desc":"Returns the current line kill character.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns the kill character, as a string.","seealso":[],"url":"function.ncurses-killchar","name":"ncurses_killchar","params":[{"list":[],"ret_type":"string"}]},"ncurses_longname":{"desc":"Returns terminals description","long_desc":"Returns a verbose description of the terminal.","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns the description, as a string truncated to 128 characters. On errors, returns NULL.","seealso":[],"url":"function.ncurses-longname","name":"ncurses_longname","params":[{"list":[],"ret_type":"string"}]},"ncurses_meta":{"desc":"Enables\/Disable 8-bit meta key information","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-meta","name":"ncurses_meta","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":""},{"type":"bool","var":"$8bit","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_mouse_trafo":{"desc":"Transforms coordinates","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-mouse-trafo","name":"ncurses_mouse_trafo","params":[{"list":[{"type":"int","var":"&$y","beh":0,"desc":""},{"type":"int","var":"&$x","beh":0,"desc":""},{"type":"bool","var":"$toscreen","beh":1,"desc":""}],"ret_type":"bool"}]},"ncurses_mouseinterval":{"desc":"Set timeout for mouse button clicks","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-mouseinterval","name":"ncurses_mouseinterval","params":[{"list":[],"ret_type":"int"}]},"ncurses_mousemask":{"desc":"Sets mouse options","long_desc":"Sets mouse events to be reported. By default no mouse events will be reported. Mouse events are represented by NCURSES_KEY_MOUSE in the ncurses_wgetch() input stream. To read the event data and pop the event of queue, call ncurses_getmouse().","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns a mask to indicated which of the in parameter newmask specified mouse events can be reported. On complete failure, it returns 0.","seealso":[],"url":"function.ncurses-mousemask","name":"ncurses_mousemask","params":[{"list":[{"type":"int","var":"$newmask","beh":0,"desc":"Mouse mask options can be set with the following predefined constants: As a side effect, setting a zero mousemask in newmask turns off the mouse pointer. Setting a non zero value turns mouse pointer on."},{"type":"int","var":"&$oldmask","beh":0,"desc":"This will be set to the previous value of the mouse event mask."}],"ret_type":"int"}]},"ncurses_move":{"desc":"Move output position","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-move","name":"ncurses_move","params":[{"list":[{"type":"int","var":"$y","beh":0,"desc":""},{"type":"int","var":"$x","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_move_panel":{"desc":"Moves a panel so that its upper-left corner is at [startx, starty]","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-move-panel","name":"ncurses_move_panel","params":[{"list":[{"type":"resource","var":"$panel","beh":0,"desc":""},{"type":"int","var":"$startx","beh":0,"desc":""},{"type":"int","var":"$starty","beh":1,"desc":""}],"ret_type":"int"}]},"ncurses_mvaddch":{"desc":"Move current position and add character","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-mvaddch","name":"ncurses_mvaddch","params":[{"list":[{"type":"int","var":"$y","beh":0,"desc":""},{"type":"int","var":"$x","beh":0,"desc":""},{"type":"int","var":"$c","beh":1,"desc":""}],"ret_type":"int"}]},"ncurses_mvaddchnstr":{"desc":"Move position and add attributed string with specified length","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-mvaddchnstr","name":"ncurses_mvaddchnstr","params":[{"list":[{"type":"int","var":"$y","beh":0,"desc":""},{"type":"int","var":"$x","beh":0,"desc":""},{"type":"string","var":"$s","beh":1,"desc":""},{"type":"int","var":"$n","beh":1,"desc":""}],"ret_type":"int"}]},"ncurses_mvaddchstr":{"desc":"Move position and add attributed string","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-mvaddchstr","name":"ncurses_mvaddchstr","params":[{"list":[{"type":"int","var":"$y","beh":0,"desc":""},{"type":"int","var":"$x","beh":0,"desc":""},{"type":"string","var":"$s","beh":1,"desc":""}],"ret_type":"int"}]},"ncurses_mvaddnstr":{"desc":"Move position and add string with specified length","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-mvaddnstr","name":"ncurses_mvaddnstr","params":[{"list":[{"type":"int","var":"$y","beh":0,"desc":""},{"type":"int","var":"$x","beh":0,"desc":""},{"type":"string","var":"$s","beh":1,"desc":""},{"type":"int","var":"$n","beh":1,"desc":""}],"ret_type":"int"}]},"ncurses_mvaddstr":{"desc":"Move position and add string","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-mvaddstr","name":"ncurses_mvaddstr","params":[{"list":[{"type":"int","var":"$y","beh":0,"desc":""},{"type":"int","var":"$x","beh":0,"desc":""},{"type":"string","var":"$s","beh":1,"desc":""}],"ret_type":"int"}]},"ncurses_mvcur":{"desc":"Move cursor immediately","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-mvcur","name":"ncurses_mvcur","params":[{"list":[{"type":"int","var":"$old_y","beh":0,"desc":""},{"type":"int","var":"$old_x","beh":0,"desc":""},{"type":"int","var":"$new_y","beh":1,"desc":""},{"type":"int","var":"$new_x","beh":1,"desc":""}],"ret_type":"int"}]},"ncurses_mvdelch":{"desc":"Move position and delete character, shift rest of line left","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-mvdelch","name":"ncurses_mvdelch","params":[{"list":[{"type":"int","var":"$y","beh":0,"desc":""},{"type":"int","var":"$x","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_mvgetch":{"desc":"Move position and get character at new position","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-mvgetch","name":"ncurses_mvgetch","params":[{"list":[{"type":"int","var":"$y","beh":0,"desc":""},{"type":"int","var":"$x","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_mvhline":{"desc":"Set new position and draw a horizontal line using an attributed character and max. n characters long","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-mvhline","name":"ncurses_mvhline","params":[{"list":[{"type":"int","var":"$y","beh":0,"desc":""},{"type":"int","var":"$x","beh":0,"desc":""},{"type":"int","var":"$attrchar","beh":1,"desc":""},{"type":"int","var":"$n","beh":1,"desc":""}],"ret_type":"int"}]},"ncurses_mvinch":{"desc":"Move position and get attributed character at new position","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-mvinch","name":"ncurses_mvinch","params":[{"list":[{"type":"int","var":"$y","beh":0,"desc":""},{"type":"int","var":"$x","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_mvvline":{"desc":"Set new position and draw a vertical line using an attributed character and max. n characters long","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-mvvline","name":"ncurses_mvvline","params":[{"list":[{"type":"int","var":"$y","beh":0,"desc":""},{"type":"int","var":"$x","beh":0,"desc":""},{"type":"int","var":"$attrchar","beh":1,"desc":""},{"type":"int","var":"$n","beh":1,"desc":""}],"ret_type":"int"}]},"ncurses_mvwaddstr":{"desc":"Add string at new position in window","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-mvwaddstr","name":"ncurses_mvwaddstr","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":""},{"type":"int","var":"$y","beh":0,"desc":""},{"type":"int","var":"$x","beh":1,"desc":""},{"type":"string","var":"$text","beh":1,"desc":""}],"ret_type":"int"}]},"ncurses_napms":{"desc":"Sleep","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-napms","name":"ncurses_napms","params":[{"list":[],"ret_type":"int"}]},"ncurses_new_panel":{"desc":"Create a new panel and associate it with window","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-new-panel","name":"ncurses_new_panel","params":[{"list":[],"ret_type":"resource"}]},"ncurses_newpad":{"desc":"Creates a new pad (window)","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-newpad","name":"ncurses_newpad","params":[{"list":[{"type":"int","var":"$rows","beh":0,"desc":""},{"type":"int","var":"$cols","beh":0,"desc":""}],"ret_type":"resource"}]},"ncurses_newwin":{"desc":"Create a new window","long_desc":"Creates a new window to draw elements in. When creating additional windows, remember to use ncurses_getmaxyx() to check for available space, as terminal size is individual and may vary.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns a resource ID for the new window.","url":"function.ncurses-newwin","name":"ncurses_newwin","params":[{"list":[{"type":"int","var":"$rows","beh":0,"desc":"Number of rows"},{"type":"int","var":"$cols","beh":0,"desc":"Number of columns"},{"type":"int","var":"$y","beh":1,"desc":"y-coordinate of the origin"},{"type":"int","var":"$x","beh":1,"desc":"x-coordinate of the origin"}],"ret_type":"resource"}]},"ncurses_nl":{"desc":"Translate newline and carriage return \/ line feed","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-nl","name":"ncurses_nl","params":[{"list":[],"ret_type":"bool"}]},"ncurses_nocbreak":{"desc":"Switch terminal to cooked mode","long_desc":"Returns terminal to normal (cooked) mode. Initially the terminal may or may not in cbreak mode as the mode is inherited. Therefore a program should call ncurses_cbreak() and ncurses_nocbreak() explicitly.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns TRUE if any error occurred, otherwise FALSE.","seealso":[],"url":"function.ncurses-nocbreak","name":"ncurses_nocbreak","params":[{"list":[],"ret_type":"bool"}]},"ncurses_noecho":{"desc":"Switch off keyboard input echo","long_desc":"Prevents echoing of user typed characters.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns TRUE if any error occurred, FALSE otherwise.","seealso":[],"url":"function.ncurses-noecho","name":"ncurses_noecho","params":[{"list":[],"ret_type":"bool"}]},"ncurses_nonl":{"desc":"Do not translate newline and carriage return \/ line feed","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-nonl","name":"ncurses_nonl","params":[{"list":[],"ret_type":"bool"}]},"ncurses_noqiflush":{"desc":"Do not flush on signal characters","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-noqiflush","name":"ncurses_noqiflush","params":[{"list":[],"ret_type":"void"}]},"ncurses_noraw":{"desc":"Switch terminal out of raw mode","long_desc":"Switches the terminal out of raw mode. Raw mode is similar to cbreak mode, in that characters typed are immediately passed through to the user program. The differences that are that in raw mode, the interrupt, quit, suspend and flow control characters are all passed through uninterpreted, instead of generating a signal.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns TRUE if any error occurred, otherwise FALSE.","seealso":[],"url":"function.ncurses-noraw","name":"ncurses_noraw","params":[{"list":[],"ret_type":"bool"}]},"ncurses_pair_content":{"desc":"Retrieves foreground and background colors of a color pair","long_desc":"Retrieves the foreground and background colors that constitute the given color pair. Terminal color capabilities must be initialized with ncurses_start_color() prior to calling this function.","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns -1 if the function was successful, and 0 if ncurses or terminal color capabilities have not been initialized.","seealso":[],"url":"function.ncurses-pair-content","name":"ncurses_pair_content","params":[{"list":[{"type":"int","var":"$pair","beh":0,"desc":"The number of the color pair to retrieve information for."},{"type":"int","var":"&$f","beh":0,"desc":"A reference to which to return the foreground color of the color pair. The information returned will be a color number referring to one of the pre-defined colors or a color defined previously by ncurses_init_color() if the terminal supports color changing."},{"type":"int","var":"&$b","beh":1,"desc":"A reference to which to return the background color of the color pair. The information returned will be a color number referring to one of the pre-defined colors or a color defined previously by ncurses_init_color() if the terminal supports color changing."}],"ret_type":"int"}]},"ncurses_panel_above":{"desc":"Returns the panel above panel","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"If panel is null, returns the bottom panel in the stack.","url":"function.ncurses-panel-above","name":"ncurses_panel_above","params":[{"list":[],"ret_type":"resource"}]},"ncurses_panel_below":{"desc":"Returns the panel below panel","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-panel-below","name":"ncurses_panel_below","params":[{"list":[],"ret_type":"resource"}]},"ncurses_panel_window":{"desc":"Returns the window associated with panel","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-panel-window","name":"ncurses_panel_window","params":[{"list":[],"ret_type":"resource"}]},"ncurses_pnoutrefresh":{"desc":"Copies a region from a pad into the virtual screen","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-pnoutrefresh","name":"ncurses_pnoutrefresh","params":[{"list":[{"type":"resource","var":"$pad","beh":0,"desc":""},{"type":"int","var":"$pminrow","beh":0,"desc":""},{"type":"int","var":"$pmincol","beh":1,"desc":""},{"type":"int","var":"$sminrow","beh":1,"desc":""},{"type":"int","var":"$smincol","beh":1,"desc":""},{"type":"int","var":"$smaxrow","beh":1,"desc":""},{"type":"int","var":"$smaxcol","beh":1,"desc":""}],"ret_type":"int"}]},"ncurses_prefresh":{"desc":"Copies a region from a pad into the virtual screen","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-prefresh","name":"ncurses_prefresh","params":[{"list":[{"type":"resource","var":"$pad","beh":0,"desc":""},{"type":"int","var":"$pminrow","beh":0,"desc":""},{"type":"int","var":"$pmincol","beh":1,"desc":""},{"type":"int","var":"$sminrow","beh":1,"desc":""},{"type":"int","var":"$smincol","beh":1,"desc":""},{"type":"int","var":"$smaxrow","beh":1,"desc":""},{"type":"int","var":"$smaxcol","beh":1,"desc":""}],"ret_type":"int"}]},"ncurses_putp":{"desc":"Apply padding information to the string and output it","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-putp","name":"ncurses_putp","params":[{"list":[],"ret_type":"int"}]},"ncurses_qiflush":{"desc":"Flush on signal characters","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-qiflush","name":"ncurses_qiflush","params":[{"list":[],"ret_type":"void"}]},"ncurses_raw":{"desc":"Switch terminal into raw mode","long_desc":"Places the terminal in raw mode. Raw mode is similar to cbreak mode, in that characters typed are immediately passed through to the user program. The differences that are that in raw mode, the interrupt, quit, suspend and flow control characters are all passed through uninterpreted, instead of generating a signal.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns TRUE if any error occurred, otherwise FALSE.","seealso":[],"url":"function.ncurses-raw","name":"ncurses_raw","params":[{"list":[],"ret_type":"bool"}]},"ncurses_refresh":{"desc":"Refresh screen","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-refresh","name":"ncurses_refresh","params":[{"list":[],"ret_type":"int"}]},"ncurses_replace_panel":{"desc":"Replaces the window associated with panel","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-replace-panel","name":"ncurses_replace_panel","params":[{"list":[{"type":"resource","var":"$panel","beh":0,"desc":""},{"type":"resource","var":"$window","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_reset_prog_mode":{"desc":"Resets the prog mode saved by def_prog_mode","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-reset-prog-mode","name":"ncurses_reset_prog_mode","params":[{"list":[],"ret_type":"int"}]},"ncurses_reset_shell_mode":{"desc":"Resets the shell mode saved by def_shell_mode","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-reset-shell-mode","name":"ncurses_reset_shell_mode","params":[{"list":[],"ret_type":"int"}]},"ncurses_resetty":{"desc":"Restores saved terminal state","long_desc":"Restores the terminal state, which was previously saved by calling ncurses_savetty().","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Always returns FALSE.","seealso":[],"url":"function.ncurses-resetty","name":"ncurses_resetty","params":[{"list":[],"ret_type":"bool"}]},"ncurses_savetty":{"desc":"Saves terminal state","long_desc":"Saves the current terminal state. The saved terminal state can be restored with ncurses_resetty().","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Always returns FALSE.","seealso":[],"url":"function.ncurses-savetty","name":"ncurses_savetty","params":[{"list":[],"ret_type":"bool"}]},"ncurses_scr_dump":{"desc":"Dump screen content to file","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-scr-dump","name":"ncurses_scr_dump","params":[{"list":[],"ret_type":"int"}]},"ncurses_scr_init":{"desc":"Initialize screen from file dump","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-scr-init","name":"ncurses_scr_init","params":[{"list":[],"ret_type":"int"}]},"ncurses_scr_restore":{"desc":"Restore screen from file dump","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-scr-restore","name":"ncurses_scr_restore","params":[{"list":[],"ret_type":"int"}]},"ncurses_scr_set":{"desc":"Inherit screen from file dump","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-scr-set","name":"ncurses_scr_set","params":[{"list":[],"ret_type":"int"}]},"ncurses_scrl":{"desc":"Scroll window content up or down without changing current position","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-scrl","name":"ncurses_scrl","params":[{"list":[],"ret_type":"int"}]},"ncurses_show_panel":{"desc":"Places an invisible panel on top of the stack, making it visible","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-show-panel","name":"ncurses_show_panel","params":[{"list":[],"ret_type":"int"}]},"ncurses_slk_attr":{"desc":"Returns current soft label key attribute","long_desc":"Returns the current soft label key attribute.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"The attribute, as an integer.","url":"function.ncurses-slk-attr","name":"ncurses_slk_attr","params":[{"list":[],"ret_type":"int"}]},"ncurses_slk_attroff":{"desc":"Turn off the given attributes for soft function-key labels","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-slk-attroff","name":"ncurses_slk_attroff","params":[{"list":[],"ret_type":"int"}]},"ncurses_slk_attron":{"desc":"Turn on the given attributes for soft function-key labels","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-slk-attron","name":"ncurses_slk_attron","params":[{"list":[],"ret_type":"int"}]},"ncurses_slk_attrset":{"desc":"Set given attributes for soft function-key labels","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-slk-attrset","name":"ncurses_slk_attrset","params":[{"list":[],"ret_type":"int"}]},"ncurses_slk_clear":{"desc":"Clears soft labels from screen","long_desc":"The function ncurses_slk_clear() clears soft label keys from screen.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns TRUE on errors, FALSE otherwise.","url":"function.ncurses-slk-clear","name":"ncurses_slk_clear","params":[{"list":[],"ret_type":"bool"}]},"ncurses_slk_color":{"desc":"Sets color for soft label keys","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-slk-color","name":"ncurses_slk_color","params":[{"list":[],"ret_type":"int"}]},"ncurses_slk_init":{"desc":"Initializes soft label key functions","long_desc":"Initializes soft label key functions This function must be called before ncurses_init() or ncurses_newwin() is called.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ncurses-slk-init","name":"ncurses_slk_init","params":[{"list":[],"ret_type":"bool"}]},"ncurses_slk_noutrefresh":{"desc":"Copies soft label keys to virtual screen","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-slk-noutrefresh","name":"ncurses_slk_noutrefresh","params":[{"list":[],"ret_type":"bool"}]},"ncurses_slk_refresh":{"desc":"Copies soft label keys to screen","long_desc":"Copies soft label keys from virtual screen to physical screen.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-slk-refresh","name":"ncurses_slk_refresh","params":[{"list":[],"ret_type":"int"}]},"ncurses_slk_restore":{"desc":"Restores soft label keys","long_desc":"Restores the soft label keys after ncurses_slk_clear() has been performed.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-slk-restore","name":"ncurses_slk_restore","params":[{"list":[],"ret_type":"int"}]},"ncurses_slk_set":{"desc":"Sets function key labels","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-slk-set","name":"ncurses_slk_set","params":[{"list":[{"type":"int","var":"$labelnr","beh":0,"desc":""},{"type":"string","var":"$label","beh":0,"desc":""},{"type":"int","var":"$format","beh":1,"desc":""}],"ret_type":"bool"}]},"ncurses_slk_touch":{"desc":"Forces output when ncurses_slk_noutrefresh is performed","long_desc":"Forces all the soft labels to be output the next time a ncurses_slk_noutrefresh() is performed.","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-slk-touch","name":"ncurses_slk_touch","params":[{"list":[],"ret_type":"int"}]},"ncurses_standend":{"desc":"Stop using 'standout' attribute","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-standend","name":"ncurses_standend","params":[{"list":[],"ret_type":"int"}]},"ncurses_standout":{"desc":"Start using 'standout' attribute","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-standout","name":"ncurses_standout","params":[{"list":[],"ret_type":"int"}]},"ncurses_start_color":{"desc":"Initializes color functionality","long_desc":"Initializes color functionality in ncurses. This function must be called before any color manipulation functions are called and after ncurses_init() is called. It is good practice to call this function right after ncurses_init().","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns 0 on success, or -1 if the color table could not be allocated or ncurses was not initialized.","seealso":[],"url":"function.ncurses-start-color","name":"ncurses_start_color","params":[{"list":[],"ret_type":"int"}]},"ncurses_termattrs":{"desc":"Returns a logical OR of all attribute flags supported by terminal","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-termattrs","name":"ncurses_termattrs","params":[{"list":[],"ret_type":"bool"}]},"ncurses_termname":{"desc":"Returns terminals (short)-name","long_desc":"Returns terminals shortname.","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns the shortname of the terminal, truncated to 14 characters. On errors, returns NULL.","seealso":[],"url":"function.ncurses-termname","name":"ncurses_termname","params":[{"list":[],"ret_type":"string"}]},"ncurses_timeout":{"desc":"Set timeout for special key sequences","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-timeout","name":"ncurses_timeout","params":[{"list":[],"ret_type":"void"}]},"ncurses_top_panel":{"desc":"Moves a visible panel to the top of the stack","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-top-panel","name":"ncurses_top_panel","params":[{"list":[],"ret_type":"int"}]},"ncurses_typeahead":{"desc":"Specify different filedescriptor for typeahead checking","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-typeahead","name":"ncurses_typeahead","params":[{"list":[],"ret_type":"int"}]},"ncurses_ungetch":{"desc":"Put a character back into the input stream","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-ungetch","name":"ncurses_ungetch","params":[{"list":[],"ret_type":"int"}]},"ncurses_ungetmouse":{"desc":"Pushes mouse event to queue","long_desc":"Pushes a KEY_MOUSE event onto the unput queue and associates with this event the given state sata and screen-relative character cell coordinates, specified in mevent.","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","ret_desc":"Returns FALSE on success, TRUE otherwise.","seealso":[],"url":"function.ncurses-ungetmouse","name":"ncurses_ungetmouse","params":[{"list":[],"ret_type":"bool"}]},"ncurses_update_panels":{"desc":"Refreshes the virtual screen to reflect the relations between panels in the stack","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-update-panels","name":"ncurses_update_panels","params":[{"list":[],"ret_type":"void"}]},"ncurses_use_default_colors":{"desc":"Assign terminal default colors to color id -1","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-use-default-colors","name":"ncurses_use_default_colors","params":[{"list":[],"ret_type":"bool"}]},"ncurses_use_env":{"desc":"Control use of environment information about terminal size","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-use-env","name":"ncurses_use_env","params":[{"list":[],"ret_type":"void"}]},"ncurses_use_extended_names":{"desc":"Control use of extended names in terminfo descriptions","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-use-extended-names","name":"ncurses_use_extended_names","params":[{"list":[],"ret_type":"int"}]},"ncurses_vidattr":{"desc":"Display the string on the terminal in the video attribute mode","ver":"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-vidattr","name":"ncurses_vidattr","params":[{"list":[],"ret_type":"int"}]},"ncurses_vline":{"desc":"Draw a vertical line at current position using an attributed character and max. n characters long","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-vline","name":"ncurses_vline","params":[{"list":[{"type":"int","var":"$charattr","beh":0,"desc":""},{"type":"int","var":"$n","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_waddch":{"desc":"Adds character at current position in a window and advance cursor","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-waddch","name":"ncurses_waddch","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":""},{"type":"int","var":"$ch","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_waddstr":{"desc":"Outputs text at current postion in window","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-waddstr","name":"ncurses_waddstr","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":""},{"type":"string","var":"$str","beh":1,"desc":""},{"type":"int","var":"$n","beh":1,"desc":""}],"ret_type":"int"}]},"ncurses_wattroff":{"desc":"Turns off attributes for a window","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-wattroff","name":"ncurses_wattroff","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":""},{"type":"int","var":"$attrs","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_wattron":{"desc":"Turns on attributes for a window","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-wattron","name":"ncurses_wattron","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":""},{"type":"int","var":"$attrs","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_wattrset":{"desc":"Set the attributes for a window","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-wattrset","name":"ncurses_wattrset","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":""},{"type":"int","var":"$attrs","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_wborder":{"desc":"Draws a border around the window using attributed characters","long_desc":"Draws the specified lines and corners around the passed window. Use ncurses_border() for borders around the main window.","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","seealso":[],"url":"function.ncurses-wborder","name":"ncurses_wborder","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":"The window on which we operate"},{"type":"int","var":"$left","beh":0,"desc":""},{"type":"int","var":"$right","beh":1,"desc":""},{"type":"int","var":"$top","beh":1,"desc":""},{"type":"int","var":"$bottom","beh":1,"desc":""},{"type":"int","var":"$tl_corner","beh":1,"desc":"Top left corner"},{"type":"int","var":"$tr_corner","beh":1,"desc":"Top right corner"},{"type":"int","var":"$bl_corner","beh":1,"desc":"Bottom left corner"},{"type":"int","var":"$br_corner","beh":1,"desc":"Bottom right corner"}],"ret_type":"int"}]},"ncurses_wclear":{"desc":"Clears window","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-wclear","name":"ncurses_wclear","params":[{"list":[],"ret_type":"int"}]},"ncurses_wcolor_set":{"desc":"Sets windows color pairings","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-wcolor-set","name":"ncurses_wcolor_set","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":""},{"type":"int","var":"$color_pair","beh":0,"desc":""}],"ret_type":"int"}]},"ncurses_werase":{"desc":"Erase window contents","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-werase","name":"ncurses_werase","params":[{"list":[],"ret_type":"int"}]},"ncurses_wgetch":{"desc":"Reads a character from keyboard (window)","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-wgetch","name":"ncurses_wgetch","params":[{"list":[],"ret_type":"int"}]},"ncurses_whline":{"desc":"Draws a horizontal line in a window at current position using an attributed character and max. n characters long","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-whline","name":"ncurses_whline","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":""},{"type":"int","var":"$charattr","beh":0,"desc":""},{"type":"int","var":"$n","beh":1,"desc":""}],"ret_type":"int"}]},"ncurses_wmouse_trafo":{"desc":"Transforms window\/stdscr coordinates","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-wmouse-trafo","name":"ncurses_wmouse_trafo","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":""},{"type":"int","var":"&$y","beh":0,"desc":""},{"type":"int","var":"&$x","beh":1,"desc":""},{"type":"bool","var":"$toscreen","beh":1,"desc":""}],"ret_type":"bool"}]},"ncurses_wmove":{"desc":"Moves windows output position","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-wmove","name":"ncurses_wmove","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":""},{"type":"int","var":"$y","beh":0,"desc":""},{"type":"int","var":"$x","beh":1,"desc":""}],"ret_type":"int"}]},"ncurses_wnoutrefresh":{"desc":"Copies window to virtual screen","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-wnoutrefresh","name":"ncurses_wnoutrefresh","params":[{"list":[],"ret_type":"int"}]},"ncurses_wrefresh":{"desc":"Refresh window on terminal screen","ver":"PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-wrefresh","name":"ncurses_wrefresh","params":[{"list":[],"ret_type":"int"}]},"ncurses_wstandend":{"desc":"End standout mode for a window","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-wstandend","name":"ncurses_wstandend","params":[{"list":[],"ret_type":"int"}]},"ncurses_wstandout":{"desc":"Enter standout mode for a window","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-wstandout","name":"ncurses_wstandout","params":[{"list":[],"ret_type":"int"}]},"ncurses_wvline":{"desc":"Draws a vertical line in a window at current position using an attributed character and max. n characters long","ver":"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0","url":"function.ncurses-wvline","name":"ncurses_wvline","params":[{"list":[{"type":"resource","var":"$window","beh":0,"desc":""},{"type":"int","var":"$charattr","beh":0,"desc":""},{"type":"int","var":"$n","beh":1,"desc":""}],"ret_type":"int"}]},"newt_bell":{"desc":"Send a beep to the terminal","long_desc":"This function sends a beep to the terminal.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-bell","name":"newt_bell","params":[{"list":[],"ret_type":"void"}]},"newt_button":{"desc":"Create a new button","long_desc":"Creates a new button.","ver":"PECL newt >= 0.1","ret_desc":"Returns a resource link to the created button component, or FALSE on error.","seealso":[],"url":"function.newt-button","name":"newt_button","params":[{"list":[{"type":"int","var":"$left","beh":0,"desc":"X-coordinate of the button."},{"type":"int","var":"$top","beh":0,"desc":"Y-coordinate of the button."},{"type":"string","var":"$text","beh":1,"desc":"The text which should be displayed in the button."}],"ret_type":"resource"}]},"newt_button_bar":{"desc":"This function returns a grid containing the buttons created.","long_desc":"This function returns a grid containing the buttons created.","ver":"PECL newt >= 0.1","ret_desc":"Returns grid containing the buttons created.","url":"function.newt-button-bar","name":"newt_button_bar","params":[{"list":[],"ret_type":"resource"}]},"newt_centered_window":{"desc":"Open a centered window of the specified size","long_desc":"Open a centered window of the specified size.","ver":"PECL newt >= 0.1","ret_desc":"Undefined value.","seealso":[],"url":"function.newt-centered-window","name":"newt_centered_window","params":[{"list":[{"type":"int","var":"$width","beh":0,"desc":"Window width"},{"type":"int","var":"$height","beh":1,"desc":"Window height"},{"type":"string","var":"$title","beh":1,"desc":"Window title"}],"ret_type":"int"}]},"newt_checkbox":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-checkbox","name":"newt_checkbox","params":[{"list":[{"type":"int","var":"$left","beh":0,"desc":""},{"type":"int","var":"$top","beh":1,"desc":""},{"type":"string","var":"$text","beh":1,"desc":""},{"type":"string","var":"$def_value","beh":1,"desc":""},{"type":"string","var":"$seq","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_checkbox_get_value":{"desc":"Retreives value of checkox resource","long_desc":"This function returns the character in the sequence which indicates the current value of the checkbox.","ver":"PECL newt >= 0.1","ret_desc":"Returns character indicating the value of the checkbox.","url":"function.newt-checkbox-get-value","name":"newt_checkbox_get_value","params":[{"list":[],"ret_type":"string"}]},"newt_checkbox_set_flags":{"desc":"Configures checkbox resource","long_desc":"This function allows to set various flags on checkbox resource.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-checkbox-set-flags","name":"newt_checkbox_set_flags","params":[{"list":[{"type":"resource","var":"$checkbox","beh":0,"desc":""},{"type":"int","var":"$flags","beh":0,"desc":""},{"type":"int","var":"$sense","beh":1,"desc":""}],"ret_type":"void"}]},"newt_checkbox_set_value":{"desc":"Sets the value of the checkbox","long_desc":"This function allows to set the current value of the checkbox resource.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-checkbox-set-value","name":"newt_checkbox_set_value","params":[{"list":[{"type":"resource","var":"$checkbox","beh":0,"desc":""},{"type":"string","var":"$value","beh":0,"desc":""}],"ret_type":"void"}]},"newt_checkbox_tree":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-checkbox-tree","name":"newt_checkbox_tree","params":[{"list":[{"type":"int","var":"$left","beh":0,"desc":""},{"type":"int","var":"$top","beh":1,"desc":""},{"type":"int","var":"$height","beh":1,"desc":""},{"type":"int","var":"$flags","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_checkbox_tree_add_item":{"desc":"Adds new item to the checkbox tree","long_desc":"This function allows to add new item to the checkbox tree.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-checkbox-tree-add-item","name":"newt_checkbox_tree_add_item","params":[{"list":[{"type":"resource","var":"$checkboxtree","beh":0,"desc":""},{"type":"string","var":"$text","beh":1,"desc":""},{"type":"mixed","var":"$data","beh":1,"desc":""},{"type":"int","var":"$flags","beh":1,"desc":""},{"type":"int","var":"$index","beh":1,"desc":""},{"type":"int","var":"$...","beh":1,"desc":""}],"ret_type":"void"}]},"newt_checkbox_tree_find_item":{"desc":"Finds an item in the checkbox tree","long_desc":"Finds an item in the checkbox tree by item's data.","ver":"PECL newt >= 0.1","ret_desc":"Returns checkbox tree item resource, or NULL if it wasn't found.","url":"function.newt-checkbox-tree-find-item","name":"newt_checkbox_tree_find_item","params":[{"list":[{"type":"resource","var":"$checkboxtree","beh":0,"desc":""},{"type":"mixed","var":"$data","beh":0,"desc":""}],"ret_type":"array"}]},"newt_checkbox_tree_get_current":{"desc":"Returns checkbox tree selected item","long_desc":"This method returns checkbox tree selected tem.","ver":"PECL newt >= 0.1","ret_desc":"Returns current (selected) checkbox tree item.","url":"function.newt-checkbox-tree-get-current","name":"newt_checkbox_tree_get_current","params":[{"list":[],"ret_type":"mixed"}]},"newt_checkbox_tree_get_entry_value":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-checkbox-tree-get-entry-value","name":"newt_checkbox_tree_get_entry_value","params":[{"list":[{"type":"resource","var":"$checkboxtree","beh":0,"desc":""},{"type":"mixed","var":"$data","beh":0,"desc":""}],"ret_type":"string"}]},"newt_checkbox_tree_get_multi_selection":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-checkbox-tree-get-multi-selection","name":"newt_checkbox_tree_get_multi_selection","params":[{"list":[{"type":"resource","var":"$checkboxtree","beh":0,"desc":""},{"type":"string","var":"$seqnum","beh":0,"desc":""}],"ret_type":"array"}]},"newt_checkbox_tree_get_selection":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-checkbox-tree-get-selection","name":"newt_checkbox_tree_get_selection","params":[{"list":[],"ret_type":"array"}]},"newt_checkbox_tree_multi":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-checkbox-tree-multi","name":"newt_checkbox_tree_multi","params":[{"list":[{"type":"int","var":"$left","beh":0,"desc":""},{"type":"int","var":"$top","beh":1,"desc":""},{"type":"int","var":"$height","beh":1,"desc":""},{"type":"string","var":"$seq","beh":1,"desc":""},{"type":"int","var":"$flags","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_checkbox_tree_set_current":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-checkbox-tree-set-current","name":"newt_checkbox_tree_set_current","params":[{"list":[{"type":"resource","var":"$checkboxtree","beh":0,"desc":""},{"type":"mixed","var":"$data","beh":0,"desc":""}],"ret_type":"void"}]},"newt_checkbox_tree_set_entry":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-checkbox-tree-set-entry","name":"newt_checkbox_tree_set_entry","params":[{"list":[{"type":"resource","var":"$checkboxtree","beh":0,"desc":""},{"type":"mixed","var":"$data","beh":0,"desc":""},{"type":"string","var":"$text","beh":1,"desc":""}],"ret_type":"void"}]},"newt_checkbox_tree_set_entry_value":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-checkbox-tree-set-entry-value","name":"newt_checkbox_tree_set_entry_value","params":[{"list":[{"type":"resource","var":"$checkboxtree","beh":0,"desc":""},{"type":"mixed","var":"$data","beh":0,"desc":""},{"type":"string","var":"$value","beh":1,"desc":""}],"ret_type":"void"}]},"newt_checkbox_tree_set_width":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-checkbox-tree-set-width","name":"newt_checkbox_tree_set_width","params":[{"list":[{"type":"resource","var":"$checkbox_tree","beh":0,"desc":""},{"type":"int","var":"$width","beh":0,"desc":""}],"ret_type":"void"}]},"newt_clear_key_buffer":{"desc":"Discards the contents of the terminal's input buffer without waiting for additional input","long_desc":"Discards the contents of the terminal's input buffer without waiting for additional input.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","seealso":[],"url":"function.newt-clear-key-buffer","name":"newt_clear_key_buffer","params":[{"list":[],"ret_type":"void"}]},"newt_cls":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-cls","name":"newt_cls","params":[{"list":[],"ret_type":"void"}]},"newt_compact_button":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-compact-button","name":"newt_compact_button","params":[{"list":[{"type":"int","var":"$left","beh":0,"desc":""},{"type":"int","var":"$top","beh":0,"desc":""},{"type":"string","var":"$text","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_component_add_callback":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-component-add-callback","name":"newt_component_add_callback","params":[{"list":[{"type":"resource","var":"$component","beh":0,"desc":""},{"type":"mixed","var":"$func_name","beh":0,"desc":""},{"type":"mixed","var":"$data","beh":1,"desc":""}],"ret_type":"void"}]},"newt_component_takes_focus":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-component-takes-focus","name":"newt_component_takes_focus","params":[{"list":[{"type":"resource","var":"$component","beh":0,"desc":""},{"type":"bool","var":"$takes_focus","beh":0,"desc":""}],"ret_type":"void"}]},"newt_create_grid":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-create-grid","name":"newt_create_grid","params":[{"list":[{"type":"int","var":"$cols","beh":0,"desc":""},{"type":"int","var":"$rows","beh":0,"desc":""}],"ret_type":"resource"}]},"newt_cursor_off":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-cursor-off","name":"newt_cursor_off","params":[{"list":[],"ret_type":"void"}]},"newt_cursor_on":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-cursor-on","name":"newt_cursor_on","params":[{"list":[],"ret_type":"void"}]},"newt_delay":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-delay","name":"newt_delay","params":[{"list":[],"ret_type":"void"}]},"newt_draw_form":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-draw-form","name":"newt_draw_form","params":[{"list":[],"ret_type":"void"}]},"newt_draw_root_text":{"desc":"Displays the string text at the position indicated","long_desc":"Displays the string text at the position indicated.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","seealso":[],"url":"function.newt-draw-root-text","name":"newt_draw_root_text","params":[{"list":[{"type":"int","var":"$left","beh":0,"desc":"Column number"},{"type":"int","var":"$top","beh":0,"desc":"Line number"},{"type":"string","var":"$text","beh":1,"desc":"Text to display."}],"ret_type":"void"}]},"newt_entry":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-entry","name":"newt_entry","params":[{"list":[{"type":"int","var":"$left","beh":1,"desc":""},{"type":"int","var":"$top","beh":1,"desc":""},{"type":"int","var":"$width","beh":1,"desc":""},{"type":"string","var":"$init_value","beh":1,"desc":""},{"type":"int","var":"$flags","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_entry_get_value":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-entry-get-value","name":"newt_entry_get_value","params":[{"list":[],"ret_type":"string"}]},"newt_entry_set":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-entry-set","name":"newt_entry_set","params":[{"list":[{"type":"resource","var":"$entry","beh":0,"desc":""},{"type":"string","var":"$value","beh":1,"desc":""},{"type":"bool","var":"$cursor_at_end","beh":1,"desc":""}],"ret_type":"void"}]},"newt_entry_set_filter":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-entry-set-filter","name":"newt_entry_set_filter","params":[{"list":[{"type":"resource","var":"$entry","beh":0,"desc":""},{"type":"callable","var":"$filter","beh":0,"desc":""},{"type":"mixed","var":"$data","beh":1,"desc":""}],"ret_type":"void"}]},"newt_entry_set_flags":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-entry-set-flags","name":"newt_entry_set_flags","params":[{"list":[{"type":"resource","var":"$entry","beh":0,"desc":""},{"type":"int","var":"$flags","beh":0,"desc":""},{"type":"int","var":"$sense","beh":1,"desc":""}],"ret_type":"void"}]},"newt_finished":{"desc":"Uninitializes newt interface","long_desc":"Uninitializes newt interface. This function be called, when program is ready to exit.","ver":"PECL newt >= 0.1","ret_desc":"Returns 1 on success, 0 on failure.","seealso":[],"url":"function.newt-finished","name":"newt_finished","params":[{"list":[],"ret_type":"int"}]},"newt_form":{"desc":"Create a form","long_desc":"Create a new form.","ver":"PECL newt >= 0.1","ret_desc":"Returns a resource link to the created form component, or FALSE on error.","seealso":[],"url":"function.newt-form","name":"newt_form","params":[{"list":[{"type":"resource","var":"$vert_bar","beh":1,"desc":"Vertical scrollbar which should be associated with the form"},{"type":"string","var":"$help","beh":1,"desc":"Help text string"},{"type":"int","var":"$flags","beh":1,"desc":"Various flags"}],"ret_type":"resource"}]},"newt_form_add_component":{"desc":"Adds a single component to the form","long_desc":"Adds a single component to the form.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","seealso":[],"url":"function.newt-form-add-component","name":"newt_form_add_component","params":[{"list":[{"type":"resource","var":"$form","beh":0,"desc":"Form to which component will be added"},{"type":"resource","var":"$component","beh":0,"desc":"Component to add to the form"}],"ret_type":"void"}]},"newt_form_add_components":{"desc":"Add several components to the form","long_desc":"Adds several components to the form.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","seealso":[],"url":"function.newt-form-add-components","name":"newt_form_add_components","params":[{"list":[{"type":"resource","var":"$form","beh":0,"desc":"Form to which components will be added"},{"type":"array","var":"$components","beh":0,"desc":"Array of components to add to the form"}],"ret_type":"void"}]},"newt_form_add_hot_key":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-form-add-hot-key","name":"newt_form_add_hot_key","params":[{"list":[{"type":"resource","var":"$form","beh":0,"desc":""},{"type":"int","var":"$key","beh":0,"desc":""}],"ret_type":"void"}]},"newt_form_destroy":{"desc":"Destroys a form","long_desc":"This function frees the memory resources used by the form and all of the components which have been added to the form (including those components which are on subforms). Once a form has been destroyed, none of the form's components can be used.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","seealso":[],"url":"function.newt-form-destroy","name":"newt_form_destroy","params":[{"list":[],"ret_type":"void"}]},"newt_form_get_current":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-form-get-current","name":"newt_form_get_current","params":[{"list":[],"ret_type":"resource"}]},"newt_form_run":{"desc":"Runs a form","long_desc":"This function runs the form passed to it.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","seealso":[],"url":"function.newt-form-run","name":"newt_form_run","params":[{"list":[{"type":"resource","var":"$form","beh":0,"desc":"Form component"},{"type":"array","var":"&$exit_struct","beh":0,"desc":"Array, used for returning information after running the form component. Keys and values are described in the following table:"}],"ret_type":"void"}]},"newt_form_set_background":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-form-set-background","name":"newt_form_set_background","params":[{"list":[{"type":"resource","var":"$from","beh":0,"desc":""},{"type":"int","var":"$background","beh":0,"desc":""}],"ret_type":"void"}]},"newt_form_set_height":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-form-set-height","name":"newt_form_set_height","params":[{"list":[{"type":"resource","var":"$form","beh":0,"desc":""},{"type":"int","var":"$height","beh":0,"desc":""}],"ret_type":"void"}]},"newt_form_set_size":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-form-set-size","name":"newt_form_set_size","params":[{"list":[],"ret_type":"void"}]},"newt_form_set_timer":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-form-set-timer","name":"newt_form_set_timer","params":[{"list":[{"type":"resource","var":"$form","beh":0,"desc":""},{"type":"int","var":"$milliseconds","beh":0,"desc":""}],"ret_type":"void"}]},"newt_form_set_width":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-form-set-width","name":"newt_form_set_width","params":[{"list":[{"type":"resource","var":"$form","beh":0,"desc":""},{"type":"int","var":"$width","beh":0,"desc":""}],"ret_type":"void"}]},"newt_form_watch_fd":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-form-watch-fd","name":"newt_form_watch_fd","params":[{"list":[{"type":"resource","var":"$form","beh":0,"desc":""},{"type":"resource","var":"$stream","beh":1,"desc":""},{"type":"int","var":"$flags","beh":1,"desc":""}],"ret_type":"void"}]},"newt_get_screen_size":{"desc":"Fills in the passed references with the current size of the terminal","long_desc":"Fills in the passed references with the current size of the terminal.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-get-screen-size","name":"newt_get_screen_size","params":[{"list":[{"type":"int","var":"&$cols","beh":0,"desc":"Number of columns in the terminal"},{"type":"int","var":"&$rows","beh":0,"desc":"Number of rows in the terminal"}],"ret_type":"void"}]},"newt_grid_add_components_to_form":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-grid-add-components-to-form","name":"newt_grid_add_components_to_form","params":[{"list":[{"type":"resource","var":"$grid","beh":0,"desc":""},{"type":"resource","var":"$form","beh":0,"desc":""},{"type":"bool","var":"$recurse","beh":1,"desc":""}],"ret_type":"void"}]},"newt_grid_basic_window":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-grid-basic-window","name":"newt_grid_basic_window","params":[{"list":[{"type":"resource","var":"$text","beh":0,"desc":""},{"type":"resource","var":"$middle","beh":0,"desc":""},{"type":"resource","var":"$buttons","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_grid_free":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-grid-free","name":"newt_grid_free","params":[{"list":[{"type":"resource","var":"$grid","beh":0,"desc":""},{"type":"bool","var":"$recurse","beh":0,"desc":""}],"ret_type":"void"}]},"newt_grid_get_size":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-grid-get-size","name":"newt_grid_get_size","params":[{"list":[{"type":"resouce","var":"$grid","beh":0,"desc":""},{"type":"int","var":"&$width","beh":0,"desc":""},{"type":"int","var":"&$height","beh":1,"desc":""}],"ret_type":"void"}]},"newt_grid_h_close_stacked":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-grid-h-close-stacked","name":"newt_grid_h_close_stacked","params":[{"list":[{"type":"int","var":"$element1_type","beh":1,"desc":""},{"type":"resource","var":"$element1","beh":1,"desc":""},{"type":"int","var":"$...","beh":1,"desc":""},{"type":"resource","var":"$...","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_grid_h_stacked":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-grid-h-stacked","name":"newt_grid_h_stacked","params":[{"list":[{"type":"int","var":"$element1_type","beh":1,"desc":""},{"type":"resource","var":"$element1","beh":1,"desc":""},{"type":"int","var":"$...","beh":1,"desc":""},{"type":"resource","var":"$...","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_grid_place":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-grid-place","name":"newt_grid_place","params":[{"list":[{"type":"resource","var":"$grid","beh":0,"desc":""},{"type":"int","var":"$left","beh":0,"desc":""},{"type":"int","var":"$top","beh":1,"desc":""}],"ret_type":"void"}]},"newt_grid_set_field":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-grid-set-field","name":"newt_grid_set_field","params":[{"list":[{"type":"resource","var":"$grid","beh":0,"desc":""},{"type":"int","var":"$col","beh":1,"desc":""},{"type":"int","var":"$row","beh":1,"desc":""},{"type":"int","var":"$type","beh":1,"desc":""},{"type":"resource","var":"$val","beh":1,"desc":""},{"type":"int","var":"$pad_left","beh":1,"desc":""},{"type":"int","var":"$pad_top","beh":1,"desc":""},{"type":"int","var":"$pad_right","beh":1,"desc":""},{"type":"int","var":"$pad_bottom","beh":1,"desc":""},{"type":"int","var":"$anchor","beh":1,"desc":""},{"type":"int","var":"$flags","beh":1,"desc":""}],"ret_type":"void"}]},"newt_grid_simple_window":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-grid-simple-window","name":"newt_grid_simple_window","params":[{"list":[{"type":"resource","var":"$text","beh":0,"desc":""},{"type":"resource","var":"$middle","beh":0,"desc":""},{"type":"resource","var":"$buttons","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_grid_v_close_stacked":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-grid-v-close-stacked","name":"newt_grid_v_close_stacked","params":[{"list":[{"type":"int","var":"$element1_type","beh":1,"desc":""},{"type":"resource","var":"$element1","beh":1,"desc":""},{"type":"int","var":"$...","beh":1,"desc":""},{"type":"resource","var":"$...","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_grid_v_stacked":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-grid-v-stacked","name":"newt_grid_v_stacked","params":[{"list":[{"type":"int","var":"$element1_type","beh":1,"desc":""},{"type":"resource","var":"$element1","beh":1,"desc":""},{"type":"int","var":"$...","beh":1,"desc":""},{"type":"resource","var":"$...","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_grid_wrapped_window":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-grid-wrapped-window","name":"newt_grid_wrapped_window","params":[{"list":[{"type":"resource","var":"$grid","beh":0,"desc":""},{"type":"string","var":"$title","beh":0,"desc":""}],"ret_type":"void"}]},"newt_grid_wrapped_window_at":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-grid-wrapped-window-at","name":"newt_grid_wrapped_window_at","params":[{"list":[{"type":"resource","var":"$grid","beh":0,"desc":""},{"type":"string","var":"$title","beh":0,"desc":""},{"type":"int","var":"$left","beh":1,"desc":""},{"type":"int","var":"$top","beh":1,"desc":""}],"ret_type":"void"}]},"newt_init":{"desc":"Initialize newt","long_desc":"Initializes the newt interface. This function must be called before any other newt function.","ver":"PECL newt >= 0.1","ret_desc":"Returns 1 on success, 0 on failure.","seealso":[],"url":"function.newt-init","name":"newt_init","params":[{"list":[],"ret_type":"int"}]},"newt_label":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-label","name":"newt_label","params":[{"list":[{"type":"int","var":"$left","beh":0,"desc":""},{"type":"int","var":"$top","beh":0,"desc":""},{"type":"string","var":"$text","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_label_set_text":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-label-set-text","name":"newt_label_set_text","params":[{"list":[{"type":"resource","var":"$label","beh":0,"desc":""},{"type":"string","var":"$text","beh":0,"desc":""}],"ret_type":"void"}]},"newt_listbox":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-listbox","name":"newt_listbox","params":[{"list":[{"type":"int","var":"$left","beh":0,"desc":""},{"type":"int","var":"$top","beh":1,"desc":""},{"type":"int","var":"$height","beh":1,"desc":""},{"type":"int","var":"$flags","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_listbox_append_entry":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-listbox-append-entry","name":"newt_listbox_append_entry","params":[{"list":[{"type":"resource","var":"$listbox","beh":0,"desc":""},{"type":"string","var":"$text","beh":0,"desc":""},{"type":"mixed","var":"$data","beh":1,"desc":""}],"ret_type":"void"}]},"newt_listbox_clear":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-listbox-clear","name":"newt_listbox_clear","params":[{"list":[],"ret_type":"void"}]},"newt_listbox_clear_selection":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-listbox-clear-selection","name":"newt_listbox_clear_selection","params":[{"list":[],"ret_type":"void"}]},"newt_listbox_delete_entry":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-listbox-delete-entry","name":"newt_listbox_delete_entry","params":[{"list":[{"type":"resource","var":"$listbox","beh":0,"desc":""},{"type":"mixed","var":"$key","beh":0,"desc":""}],"ret_type":"void"}]},"newt_listbox_get_current":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-listbox-get-current","name":"newt_listbox_get_current","params":[{"list":[],"ret_type":"string"}]},"newt_listbox_get_selection":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-listbox-get-selection","name":"newt_listbox_get_selection","params":[{"list":[],"ret_type":"array"}]},"newt_listbox_insert_entry":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-listbox-insert-entry","name":"newt_listbox_insert_entry","params":[{"list":[{"type":"resource","var":"$listbox","beh":0,"desc":""},{"type":"string","var":"$text","beh":0,"desc":""},{"type":"mixed","var":"$data","beh":1,"desc":""},{"type":"mixed","var":"$key","beh":1,"desc":""}],"ret_type":"void"}]},"newt_listbox_item_count":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-listbox-item-count","name":"newt_listbox_item_count","params":[{"list":[],"ret_type":"int"}]},"newt_listbox_select_item":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-listbox-select-item","name":"newt_listbox_select_item","params":[{"list":[{"type":"resource","var":"$listbox","beh":0,"desc":""},{"type":"mixed","var":"$key","beh":0,"desc":""},{"type":"int","var":"$sense","beh":1,"desc":""}],"ret_type":"void"}]},"newt_listbox_set_current":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-listbox-set-current","name":"newt_listbox_set_current","params":[{"list":[{"type":"resource","var":"$listbox","beh":0,"desc":""},{"type":"int","var":"$num","beh":0,"desc":""}],"ret_type":"void"}]},"newt_listbox_set_current_by_key":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-listbox-set-current-by-key","name":"newt_listbox_set_current_by_key","params":[{"list":[{"type":"resource","var":"$listbox","beh":0,"desc":""},{"type":"mixed","var":"$key","beh":0,"desc":""}],"ret_type":"void"}]},"newt_listbox_set_data":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-listbox-set-data","name":"newt_listbox_set_data","params":[{"list":[{"type":"resource","var":"$listbox","beh":0,"desc":""},{"type":"int","var":"$num","beh":0,"desc":""},{"type":"mixed","var":"$data","beh":1,"desc":""}],"ret_type":"void"}]},"newt_listbox_set_entry":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-listbox-set-entry","name":"newt_listbox_set_entry","params":[{"list":[{"type":"resource","var":"$listbox","beh":0,"desc":""},{"type":"int","var":"$num","beh":0,"desc":""},{"type":"string","var":"$text","beh":1,"desc":""}],"ret_type":"void"}]},"newt_listbox_set_width":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-listbox-set-width","name":"newt_listbox_set_width","params":[{"list":[{"type":"resource","var":"$listbox","beh":0,"desc":""},{"type":"int","var":"$width","beh":0,"desc":""}],"ret_type":"void"}]},"newt_listitem":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-listitem","name":"newt_listitem","params":[{"list":[{"type":"int","var":"$left","beh":0,"desc":""},{"type":"int","var":"$top","beh":1,"desc":""},{"type":"string","var":"$text","beh":1,"desc":""},{"type":"bool","var":"$is_default","beh":1,"desc":""},{"type":"resouce","var":"$prev_item","beh":1,"desc":""},{"type":"mixed","var":"$data","beh":1,"desc":""},{"type":"int","var":"$flags","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_listitem_get_data":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-listitem-get-data","name":"newt_listitem_get_data","params":[{"list":[],"ret_type":"mixed"}]},"newt_listitem_set":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-listitem-set","name":"newt_listitem_set","params":[{"list":[{"type":"resource","var":"$item","beh":0,"desc":""},{"type":"string","var":"$text","beh":0,"desc":""}],"ret_type":"void"}]},"newt_open_window":{"desc":"Open a window of the specified size and position","long_desc":"Open a window of the specified size and position.","ver":"PECL newt >= 0.1","ret_desc":"Returns 1 on success, 0 on failure.","seealso":[],"url":"function.newt-open-window","name":"newt_open_window","params":[{"list":[{"type":"int","var":"$left","beh":0,"desc":"Location of the upper left-hand corner of the window (column number)"},{"type":"int","var":"$top","beh":1,"desc":"Location of the upper left-hand corner of the window (row number)"},{"type":"int","var":"$width","beh":1,"desc":"Window width"},{"type":"int","var":"$height","beh":1,"desc":"Window height"},{"type":"string","var":"$title","beh":1,"desc":"Window title"}],"ret_type":"int"}]},"newt_pop_help_line":{"desc":"Replaces the current help line with the one from the stack","long_desc":"Replaces the current help line with the one from the stack.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","seealso":[],"url":"function.newt-pop-help-line","name":"newt_pop_help_line","params":[{"list":[],"ret_type":"void"}]},"newt_pop_window":{"desc":"Removes the top window from the display","long_desc":"Removes the top window from the display, and redraws the display areas which the window overwrote.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","seealso":[],"url":"function.newt-pop-window","name":"newt_pop_window","params":[{"list":[],"ret_type":"void"}]},"newt_push_help_line":{"desc":"Saves the current help line on a stack, and displays the new line","long_desc":"Saves the current help line on a stack, and displays the new line.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","seealso":[],"url":"function.newt-push-help-line","name":"newt_push_help_line","params":[{"list":[],"ret_type":"void"}]},"newt_radio_get_current":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-radio-get-current","name":"newt_radio_get_current","params":[{"list":[],"ret_type":"resource"}]},"newt_radiobutton":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-radiobutton","name":"newt_radiobutton","params":[{"list":[{"type":"int","var":"$left","beh":0,"desc":""},{"type":"int","var":"$top","beh":1,"desc":""},{"type":"string","var":"$text","beh":1,"desc":""},{"type":"bool","var":"$is_default","beh":1,"desc":""},{"type":"resource","var":"$prev_button","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_redraw_help_line":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-redraw-help-line","name":"newt_redraw_help_line","params":[{"list":[],"ret_type":"void"}]},"newt_reflow_text":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-reflow-text","name":"newt_reflow_text","params":[{"list":[{"type":"string","var":"$text","beh":0,"desc":""},{"type":"int","var":"$width","beh":0,"desc":""},{"type":"int","var":"$flex_down","beh":1,"desc":""},{"type":"int","var":"$flex_up","beh":1,"desc":""},{"type":"int","var":"&$actual_width","beh":1,"desc":""},{"type":"int","var":"&$actual_height","beh":1,"desc":""}],"ret_type":"string"}]},"newt_refresh":{"desc":"Updates modified portions of the screen","long_desc":"To increase performance, newt only updates the display when it needs to, not when the program tells it to write to the terminal. Applications can force newt to immediately update modified portions of the screen by calling this function.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-refresh","name":"newt_refresh","params":[{"list":[],"ret_type":"void"}]},"newt_resize_screen":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-resize-screen","name":"newt_resize_screen","params":[{"list":[],"ret_type":"void"}]},"newt_resume":{"desc":"Resume using the newt interface after calling newt_suspend()","long_desc":"Resume using the newt interface after calling newt_suspend().","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","seealso":[],"url":"function.newt-resume","name":"newt_resume","params":[{"list":[],"ret_type":"void"}]},"newt_run_form":{"desc":"Runs a form","long_desc":"This function runs the form passed to it.","ver":"PECL newt >= 0.1","ret_desc":"The component which caused the form to stop running.","seealso":[],"url":"function.newt-run-form","name":"newt_run_form","params":[{"list":[],"ret_type":"resource"}]},"newt_scale":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-scale","name":"newt_scale","params":[{"list":[{"type":"int","var":"$left","beh":0,"desc":""},{"type":"int","var":"$top","beh":0,"desc":""},{"type":"int","var":"$width","beh":1,"desc":""},{"type":"int","var":"$full_value","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_scale_set":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-scale-set","name":"newt_scale_set","params":[{"list":[{"type":"resource","var":"$scale","beh":0,"desc":""},{"type":"int","var":"$amount","beh":0,"desc":""}],"ret_type":"void"}]},"newt_scrollbar_set":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-scrollbar-set","name":"newt_scrollbar_set","params":[{"list":[{"type":"resource","var":"$scrollbar","beh":0,"desc":""},{"type":"int","var":"$where","beh":0,"desc":""},{"type":"int","var":"$total","beh":1,"desc":""}],"ret_type":"void"}]},"newt_set_help_callback":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-set-help-callback","name":"newt_set_help_callback","params":[{"list":[],"ret_type":"void"}]},"newt_set_suspend_callback":{"desc":"Set a callback function which gets invoked when user presses the suspend key","long_desc":"Set a callback function which gets invoked when user presses the suspend key (normally ^Z). If no suspend callback is registered, the suspend keystroke is ignored.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","seealso":[],"url":"function.newt-set-suspend-callback","name":"newt_set_suspend_callback","params":[{"list":[{"type":"callable","var":"$function","beh":0,"desc":"A callback function, which accepts one argument: data"},{"type":"mixed","var":"$data","beh":0,"desc":"This data is been passed to the callback function"}],"ret_type":"void"}]},"newt_suspend":{"desc":"Tells newt to return the terminal to its initial state","long_desc":"Tells newt to return the terminal to its initial state. Once this is done, the application can suspend itself (by sending itself a SIGTSTP, fork a child program, or do whatever else it likes).","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","seealso":[],"url":"function.newt-suspend","name":"newt_suspend","params":[{"list":[],"ret_type":"void"}]},"newt_textbox":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-textbox","name":"newt_textbox","params":[{"list":[{"type":"int","var":"$left","beh":0,"desc":""},{"type":"int","var":"$top","beh":1,"desc":""},{"type":"int","var":"$width","beh":1,"desc":""},{"type":"int","var":"$height","beh":1,"desc":""},{"type":"int","var":"$flags","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_textbox_get_num_lines":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-textbox-get-num-lines","name":"newt_textbox_get_num_lines","params":[{"list":[],"ret_type":"int"}]},"newt_textbox_reflowed":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-textbox-reflowed","name":"newt_textbox_reflowed","params":[{"list":[{"type":"int","var":"$left","beh":0,"desc":""},{"type":"int","var":"$top","beh":1,"desc":""},{"type":"char","var":"$*text","beh":1,"desc":""},{"type":"int","var":"$width","beh":1,"desc":""},{"type":"int","var":"$flex_down","beh":1,"desc":""},{"type":"int","var":"$flex_up","beh":1,"desc":""},{"type":"int","var":"$flags","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_textbox_set_height":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-textbox-set-height","name":"newt_textbox_set_height","params":[{"list":[{"type":"resource","var":"$textbox","beh":0,"desc":""},{"type":"int","var":"$height","beh":0,"desc":""}],"ret_type":"void"}]},"newt_textbox_set_text":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-textbox-set-text","name":"newt_textbox_set_text","params":[{"list":[{"type":"resource","var":"$textbox","beh":0,"desc":""},{"type":"string","var":"$text","beh":0,"desc":""}],"ret_type":"void"}]},"newt_vertical_scrollbar":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-vertical-scrollbar","name":"newt_vertical_scrollbar","params":[{"list":[{"type":"int","var":"$left","beh":1,"desc":""},{"type":"int","var":"$top","beh":1,"desc":""},{"type":"int","var":"$height","beh":1,"desc":""},{"type":"int","var":"$normal_colorset","beh":1,"desc":""},{"type":"int","var":"$thumb_colorset","beh":1,"desc":""}],"ret_type":"resource"}]},"newt_wait_for_key":{"desc":"Doesn't return until a key has been pressed","long_desc":"This function doesn't return until a key has been pressed. The keystroke is then ignored. If a key is already in the terminal's buffer, this function discards a keystroke and returns immediately.","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","seealso":[],"url":"function.newt-wait-for-key","name":"newt_wait_for_key","params":[{"list":[],"ret_type":"void"}]},"newt_win_choice":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-win-choice","name":"newt_win_choice","params":[{"list":[{"type":"string","var":"$title","beh":1,"desc":""},{"type":"string","var":"$button1_text","beh":1,"desc":""},{"type":"string","var":"$button2_text","beh":1,"desc":""},{"type":"string","var":"$format","beh":1,"desc":""},{"type":"mixed","var":"$args","beh":1,"desc":""},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"int"}]},"newt_win_entries":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"","url":"function.newt-win-entries","name":"newt_win_entries","params":[{"list":[{"type":"string","var":"$title","beh":0,"desc":""},{"type":"string","var":"$text","beh":1,"desc":""},{"type":"int","var":"$suggested_width","beh":1,"desc":""},{"type":"int","var":"$flex_down","beh":1,"desc":""},{"type":"int","var":"$flex_up","beh":1,"desc":""},{"type":"int","var":"$data_width","beh":1,"desc":""},{"type":"array","var":"&$items","beh":1,"desc":""},{"type":"string","var":"$button1","beh":1,"desc":""},{"type":"string","var":"$...","beh":1,"desc":""}],"ret_type":"int"}]},"newt_win_menu":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-win-menu","name":"newt_win_menu","params":[{"list":[{"type":"string","var":"$title","beh":1,"desc":""},{"type":"string","var":"$text","beh":1,"desc":""},{"type":"int","var":"$suggestedWidth","beh":1,"desc":""},{"type":"int","var":"$flexDown","beh":1,"desc":""},{"type":"int","var":"$flexUp","beh":1,"desc":""},{"type":"int","var":"$maxListHeight","beh":1,"desc":""},{"type":"array","var":"$items","beh":1,"desc":""},{"type":"int","var":"&$listItem","beh":1,"desc":""},{"type":"string","var":"$button1","beh":1,"desc":""},{"type":"string","var":"$...","beh":1,"desc":""}],"ret_type":"int"}]},"newt_win_message":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-win-message","name":"newt_win_message","params":[{"list":[{"type":"string","var":"$title","beh":1,"desc":""},{"type":"string","var":"$button_text","beh":1,"desc":""},{"type":"string","var":"$format","beh":1,"desc":""},{"type":"mixed","var":"$args","beh":1,"desc":""},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"void"}]},"newt_win_messagev":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"No value is returned.","url":"function.newt-win-messagev","name":"newt_win_messagev","params":[{"list":[{"type":"string","var":"$title","beh":0,"desc":""},{"type":"string","var":"$button_text","beh":0,"desc":""},{"type":"string","var":"$format","beh":1,"desc":""},{"type":"array","var":"$args","beh":1,"desc":""}],"ret_type":"void"}]},"newt_win_ternary":{"desc":"","ver":"PECL newt >= 0.1","ret_desc":"What the function returns, first on success, then on failure. See also the &return.success; entity","url":"function.newt-win-ternary","name":"newt_win_ternary","params":[{"list":[{"type":"string","var":"$title","beh":1,"desc":"Its description"},{"type":"string","var":"$button1_text","beh":1,"desc":"Its description"},{"type":"string","var":"$button2_text","beh":1,"desc":"Its description"},{"type":"string","var":"$button3_text","beh":1,"desc":"Its description"},{"type":"string","var":"$format","beh":1,"desc":"Its description"},{"type":"mixed","var":"$args","beh":1,"desc":"Its description"},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"int"}]},"next":{"desc":"Advance the internal array pointer of an array","long_desc":"next() behaves like current(), with one difference. It advances the internal array pointer one place forward before returning the element value. That means it returns the next array value and advances the internal array pointer by one.","ver":"PHP 4, PHP 5","ret_desc":"Returns the array value in the next place that's pointed to by the internal array pointer, or FALSE if there are no more elements.","seealso":[],"url":"function.next","name":"next","params":[{"list":[],"ret_type":"mixed"}]},"ngettext":{"desc":"Plural version of gettext","long_desc":"The plural version of gettext(). Some languages have more than one form for plural messages dependent on the count.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns correct plural form of message identified by msgid1 and msgid2 for count n.","url":"function.ngettext","name":"ngettext","params":[{"list":[{"type":"string","var":"$msgid1","beh":0,"desc":""},{"type":"string","var":"$msgid2","beh":0,"desc":""},{"type":"int","var":"$n","beh":1,"desc":""}],"ret_type":"string"}]},"nl2br":{"desc":"Inserts HTML line breaks before all newlines in a string","long_desc":"Returns string with '<br \/>' or '<br>' inserted before all newlines (\\r\\n, \\n\\r, \\n and \\r).","ver":"PHP 4, PHP 5","ret_desc":"Returns the altered string.","seealso":[],"url":"function.nl2br","name":"nl2br","params":[{"list":[{"type":"string","var":"$string","beh":0,"desc":"The input string."},{"type":"bool","var":"$is_xhtml","beh":0,"desc":"Whenever to use XHTML compatible line breaks or not.","def":"true"}],"ret_type":"string"}]},"nl_langinfo":{"desc":"Query language and locale information","long_desc":"nl_langinfo() is used to access individual elements of the locale categories. Unlike localeconv(), which returns all of the elements, nl_langinfo() allows you to select any specific element.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns the element as a string, or FALSE if item is not valid.","seealso":[],"url":"function.nl-langinfo","name":"nl_langinfo","params":[{"list":[],"ret_type":"string"}]},"notes_body":{"desc":"Open the message msg_number in the specified mailbox on the specified server (leave serv","ver":"PHP 4 >= 4.0.5","url":"function.notes-body","name":"notes_body","params":[{"list":[{"type":"string","var":"$server","beh":0,"desc":""},{"type":"string","var":"$mailbox","beh":0,"desc":""},{"type":"int","var":"$msg_number","beh":1,"desc":""}],"ret_type":"array"}]},"notes_copy_db":{"desc":"Copy a Lotus Notes database","ver":"PHP 4 >= 4.0.5","url":"function.notes-copy-db","name":"notes_copy_db","params":[{"list":[{"type":"string","var":"$from_database_name","beh":0,"desc":""},{"type":"string","var":"$to_database_name","beh":0,"desc":""}],"ret_type":"bool"}]},"notes_create_db":{"desc":"Create a Lotus Notes database","ver":"PHP 4 >= 4.0.5","url":"function.notes-create-db","name":"notes_create_db","params":[{"list":[],"ret_type":"bool"}]},"notes_create_note":{"desc":"Create a note using form form_name","ver":"PHP 4 >= 4.0.5","url":"function.notes-create-note","name":"notes_create_note","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":""},{"type":"string","var":"$form_name","beh":0,"desc":""}],"ret_type":"bool"}]},"notes_drop_db":{"desc":"Drop a Lotus Notes database","ver":"PHP 4 >= 4.0.5","url":"function.notes-drop-db","name":"notes_drop_db","params":[{"list":[],"ret_type":"bool"}]},"notes_find_note":{"desc":"Returns a note id found in database_name","ver":"PHP 4 >= 4.0.5","url":"function.notes-find-note","name":"notes_find_note","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":""},{"type":"string","var":"$name","beh":1,"desc":""},{"type":"string","var":"$type","beh":1,"desc":""}],"ret_type":"int"}]},"notes_header_info":{"desc":"Open the message msg_number in the specified mailbox on the specified server (leave serv","ver":"PHP 4 >= 4.0.5","url":"function.notes-header-info","name":"notes_header_info","params":[{"list":[{"type":"string","var":"$server","beh":0,"desc":""},{"type":"string","var":"$mailbox","beh":0,"desc":""},{"type":"int","var":"$msg_number","beh":1,"desc":""}],"ret_type":"object"}]},"notes_list_msgs":{"desc":"Returns the notes from a selected database_name","ver":"PHP 4 >= 4.0.5","url":"function.notes-list-msgs","name":"notes_list_msgs","params":[{"list":[],"ret_type":"bool"}]},"notes_mark_read":{"desc":"Mark a note_id as read for the User user_name","ver":"PHP 4 >= 4.0.5","url":"function.notes-mark-read","name":"notes_mark_read","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":""},{"type":"string","var":"$user_name","beh":0,"desc":""},{"type":"string","var":"$note_id","beh":1,"desc":""}],"ret_type":"bool"}]},"notes_mark_unread":{"desc":"Mark a note_id as unread for the User user_name","ver":"PHP 4 >= 4.0.5","url":"function.notes-mark-unread","name":"notes_mark_unread","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":""},{"type":"string","var":"$user_name","beh":0,"desc":""},{"type":"string","var":"$note_id","beh":1,"desc":""}],"ret_type":"bool"}]},"notes_nav_create":{"desc":"Create a navigator name, in database_name","ver":"PHP 4 >= 4.0.5","url":"function.notes-nav-create","name":"notes_nav_create","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":""},{"type":"string","var":"$name","beh":0,"desc":""}],"ret_type":"bool"}]},"notes_search":{"desc":"Find notes that match keywords in database_name","ver":"PHP 4 >= 4.0.5","url":"function.notes-search","name":"notes_search","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":""},{"type":"string","var":"$keywords","beh":0,"desc":""}],"ret_type":"array"}]},"notes_unread":{"desc":"Returns the unread note id's for the current User user_name","ver":"PHP 4 >= 4.0.5","url":"function.notes-unread","name":"notes_unread","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":""},{"type":"string","var":"$user_name","beh":0,"desc":""}],"ret_type":"array"}]},"notes_version":{"desc":"Get the version Lotus Notes","ver":"PHP 4 >= 4.0.5","url":"function.notes-version","name":"notes_version","params":[{"list":[],"ret_type":"float"}]},"nsapi_request_headers":{"desc":"Fetch all HTTP request headers","long_desc":"nsapi_request_headers() gets all the HTTP headers in the current request. This is only supported when PHP runs as a NSAPI module.","ver":"PHP 4 >= 4.3.3, PHP 5","ret_desc":"Returns an associative array with all the HTTP headers.","url":"function.nsapi-request-headers","name":"nsapi_request_headers","params":[{"list":[],"ret_type":"array"}]},"nsapi_response_headers":{"desc":"Fetch all HTTP response headers","long_desc":"Gets all the NSAPI response headers.","ver":"PHP 4 >= 4.3.3, PHP 5","ret_desc":"Returns an associative array with all the NSAPI response headers.","seealso":[],"url":"function.nsapi-response-headers","name":"nsapi_response_headers","params":[{"list":[],"ret_type":"array"}]},"nsapi_virtual":{"desc":"Perform an NSAPI sub-request","long_desc":"nsapi_virtual() is an NSAPI-specific function which is equivalent to <!--#include virtual...--> in SSI (.shtml files). It does an NSAPI sub-request. It is useful for including CGI scripts or .shtml files, or anything else that you'd parse through webserver. To run the sub-request, all buffers are terminated and flushed to the browser, pending headers are sent too. You cannot make recursive requests with this function to other PHP scripts. If you want to include PHP scripts, use include() or require().","ver":"PHP 4 >= 4.3.3, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.nsapi-virtual","name":"nsapi_virtual","params":[{"list":[],"ret_type":"bool"}]},"nthmac":{"desc":"Obtain a nthmac key (needs 2 arguments)","ver":"PECL spplus >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.nthmac","name":"nthmac","params":[{"list":[{"type":"string","var":"$clent","beh":0,"desc":""},{"type":"string","var":"$data","beh":0,"desc":""}],"ret_type":"string"}]},"number_format":{"desc":"Format a number with grouped thousands","long_desc":"This function accepts either one, two, or four parameters (not three): If only one parameter is given, number will be formatted without decimals, but with a comma (\",\") between every group of thousands. If two parameters are given, number will be formatted with decimals decimals with a dot (\".\") in front, and a comma (\",\") between every group of thousands. If all four parameters are given, number will be formatted with decimals decimals, dec_point instead of a dot (\".\") before the decimals and thousands_sep instead of a comma (\",\") between every group of thousands.","ver":"PHP 4, PHP 5","ret_desc":"A formatted version of number.","seealso":[],"url":"function.number-format","name":"number_format","params":[{"list":[{"type":"float","var":"$number","beh":0,"desc":"The number being formatted."},{"type":"int","var":"$decimals","beh":0,"desc":"Sets the number of decimal points.","def":0}],"ret_type":"string"},{"list":[{"type":"float","var":"$number","beh":0,"desc":"The number being formatted."},{"type":"int","var":"$decimals","beh":0,"desc":"Sets the number of decimal points.","def":0},{"type":"string","var":"$dec_point","beh":0,"desc":"Sets the separator for the decimal point.","def":"'.'"},{"type":"string","var":"$thousands_sep","beh":1,"desc":"Sets the thousands separator.","def":"','"}],"ret_type":"string"}]},"oauth_get_sbs":{"desc":"Generate a Signature Base String","long_desc":"Generates a Signature Base String according to pecl\/oauth.","ver":"PECL OAuth >=0.99.7","ret_desc":"Returns a Signature Base String.","url":"function.oauth-get-sbs","name":"oauth_get_sbs","params":[{"list":[{"type":"string","var":"$http_method","beh":0,"desc":"The HTTP method."},{"type":"string","var":"$uri","beh":1,"desc":"URI to encode."},{"type":"array","var":"$request_parameters","beh":1,"desc":"Array of request parameters."}],"ret_type":"string"}]},"oauth_urlencode":{"desc":"Encode a URI to RFC 3986","long_desc":"Encodes a URI to \u00bb\u00a0RFC 3986.","ver":"PECL OAuth >=0.99.2","ret_desc":"Returns an \u00bb\u00a0RFC 3986 encoded string.","url":"function.oauth-urlencode","name":"oauth_urlencode","params":[{"list":[],"ret_type":"string"}]},"ob_clean":{"desc":"Clean (erase) the output buffer","long_desc":"This function discards the contents of the output buffer. This function does not destroy the output buffer like ob_end_clean() does.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.ob-clean","name":"ob_clean","params":[{"list":[],"ret_type":"void"}]},"ob_deflatehandler":{"desc":"Deflate output handler","long_desc":"For use with ob_start(). The deflate output buffer handler can only be used once. It conflicts with ob_gzhandler() and zlib.output_compression as well and should not be used after mbstring extension's mb_output_handler() and session extension's URL-Rewriter (AKA session.use_trans_sid).","ver":"PECL pecl_http >= 0.21.0","seealso":[],"url":"function.ob-deflatehandler","name":"ob_deflatehandler","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":""},{"type":"int","var":"$mode","beh":0,"desc":""}],"ret_type":"string"}]},"ob_end_clean":{"desc":"Clean (erase) the output buffer and turn off output buffering","long_desc":"This function discards the contents of the topmost output buffer and turns off this output buffering. If you want to further process the buffer's contents you have to call ob_get_contents() before ob_end_clean() as the buffer contents are discarded when ob_end_clean() is called.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. Reasons for failure are first that you called the function without an active buffer or that for some reason a buffer could not be deleted (possible for special buffer).","seealso":[],"url":"function.ob-end-clean","name":"ob_end_clean","params":[{"list":[],"ret_type":"bool"}]},"ob_end_flush":{"desc":"Flush (send) the output buffer and turn off output buffering","long_desc":"This function will send the contents of the topmost output buffer (if any) and turn this output buffer off. If you want to further process the buffer's contents you have to call ob_get_contents() before ob_end_flush() as the buffer contents are discarded after ob_end_flush() is called.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. Reasons for failure are first that you called the function without an active buffer or that for some reason a buffer could not be deleted (possible for special buffer).","seealso":[],"url":"function.ob-end-flush","name":"ob_end_flush","params":[{"list":[],"ret_type":"bool"}]},"ob_etaghandler":{"desc":"ETag output handler","long_desc":"For use with ob_start(). Output buffer handler generating an ETag with the hash algorithm specified with the INI setting http.etag.mode. This output handler is used by http_cache_etag().","ver":"PECL pecl_http >= 0.10.0","seealso":[],"url":"function.ob-etaghandler","name":"ob_etaghandler","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":""},{"type":"int","var":"$mode","beh":0,"desc":""}],"ret_type":"string"}]},"ob_flush":{"desc":"Flush (send) the output buffer","long_desc":"This function will send the contents of the output buffer (if any). If you want to further process the buffer's contents you have to call ob_get_contents() before ob_flush() as the buffer contents are discarded after ob_flush() is called. This function does not destroy the output buffer like ob_end_flush() does.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.ob-flush","name":"ob_flush","params":[{"list":[],"ret_type":"void"}]},"ob_get_clean":{"desc":"Get current buffer contents and delete current output buffer","long_desc":"Gets the current buffer contents and delete current output buffer. ob_get_clean() essentially executes both ob_get_contents() and ob_end_clean().","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the contents of the output buffer and end output buffering. If output buffering isn't active then FALSE is returned.","seealso":[],"url":"function.ob-get-clean","name":"ob_get_clean","params":[{"list":[],"ret_type":"string"}]},"ob_get_contents":{"desc":"Return the contents of the output buffer","long_desc":"Gets the contents of the output buffer without clearing it.","ver":"PHP 4, PHP 5","ret_desc":"This will return the contents of the output buffer or FALSE, if output buffering isn't active.","seealso":[],"url":"function.ob-get-contents","name":"ob_get_contents","params":[{"list":[],"ret_type":"string"}]},"ob_get_flush":{"desc":"Flush the output buffer, return it as a string and turn off output buffering","long_desc":"ob_get_flush() flushes the output buffer, return it as a string and turns off output buffering.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the output buffer or FALSE if no buffering is active.","seealso":[],"url":"function.ob-get-flush","name":"ob_get_flush","params":[{"list":[],"ret_type":"string"}]},"ob_get_length":{"desc":"Return the length of the output buffer","long_desc":"This will return the length of the contents in the output buffer.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns the length of the output buffer contents or FALSE if no buffering is active.","seealso":[],"url":"function.ob-get-length","name":"ob_get_length","params":[{"list":[],"ret_type":"int"}]},"ob_get_level":{"desc":"Return the nesting level of the output buffering mechanism","long_desc":"Returns the nesting level of the output buffering mechanism.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns the level of nested output buffering handlers or zero if output buffering is not active.","seealso":[],"url":"function.ob-get-level","name":"ob_get_level","params":[{"list":[],"ret_type":"int"}]},"ob_get_status":{"desc":"Get status of output buffers","long_desc":"ob_get_status() returns status information on either the top level output buffer or all active output buffer levels if full_status is set to TRUE.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"If called without the full_status parameter or with full_status = FALSE a simple array with the following elements is returned:","seealso":[],"url":"function.ob-get-status","name":"ob_get_status","params":[{"list":[],"ret_type":"array"}]},"ob_gzhandler":{"desc":"ob_start callback function to gzip output buffer","long_desc":"ob_gzhandler() is intended to be used as a callback function for ob_start() to help facilitate sending gz-encoded data to web browsers that support compressed web pages. Before ob_gzhandler() actually sends compressed data, it determines what type of content encoding the browser will accept (\"gzip\", \"deflate\" or none at all) and will return its output accordingly. All browsers are supported since it's up to the browser to send the correct header saying that it accepts compressed web pages. If a browser doesn't support compressed pages this function returns FALSE.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"","seealso":[],"url":"function.ob-gzhandler","name":"ob_gzhandler","params":[{"list":[{"type":"string","var":"$buffer","beh":0,"desc":""},{"type":"int","var":"$mode","beh":0,"desc":""}],"ret_type":"string"}]},"ob_iconv_handler":{"desc":"Convert character encoding as output buffer handler","long_desc":"Converts the string encoded in internal_encoding to output_encoding. internal_encoding and output_encoding should be defined in the php.ini file or in iconv_set_encoding().","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"See ob_start() for information about this handler return values.","seealso":[],"url":"function.ob-iconv-handler","name":"ob_iconv_handler","params":[{"list":[{"type":"string","var":"$contents","beh":0,"desc":""},{"type":"int","var":"$status","beh":0,"desc":""}],"ret_type":"string"}]},"ob_implicit_flush":{"desc":"Turn implicit flush on\/off","long_desc":"ob_implicit_flush() will turn implicit flushing on or off. Implicit flushing will result in a flush operation after every output call, so that explicit calls to flush() will no longer be needed.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.ob-implicit-flush","name":"ob_implicit_flush","params":[{"list":[],"ret_type":"void"}]},"ob_inflatehandler":{"desc":"Inflate output handler","long_desc":"For use with ob_start(). Same restrictions as with ob_deflatehandler() apply.","ver":"PECL pecl_http >= 0.21.0","seealso":[],"url":"function.ob-inflatehandler","name":"ob_inflatehandler","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":""},{"type":"int","var":"$mode","beh":0,"desc":""}],"ret_type":"string"}]},"ob_list_handlers":{"desc":"List all output handlers in use","long_desc":"Lists all output handlers in use.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"This will return an array with the output handlers in use (if any). If output_buffering is enabled or an anonymous function was used with ob_start(), ob_list_handlers() will return \"default output handler\".","seealso":[],"url":"function.ob-list-handlers","name":"ob_list_handlers","params":[{"list":[],"ret_type":"array"}]},"ob_start":{"desc":"Turn on output buffering","long_desc":"This function will turn output buffering on. While output buffering is active no output is sent from the script (other than headers), instead the output is stored in an internal buffer. The contents of this internal buffer may be copied into a string variable using ob_get_contents(). To output what is stored in the internal buffer, use ob_end_flush(). Alternatively, ob_end_clean() will silently discard the buffer contents. Output buffers are stackable, that is, you may call ob_start() while another ob_start() is active. Just make sure that you call ob_end_flush() the appropriate number of times. If multiple output callback functions are active, output is being filtered sequentially through each of them in nesting order.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ob-start","name":"ob_start","params":[{"list":[{"type":"callable","var":"$output_callback","beh":1,"desc":"An optional output_callback function may be specified. This function takes a string as a parameter and should return a string. The function will be called when the output buffer is flushed (sent) or cleaned (with ob_flush(), ob_clean() or similar function) or when the output buffer is flushed to the browser at the end of the request. When output_callback is called, it will receive the contents of the output buffer as its parameter and is expected to return a new output buffer as a result, which will be sent to the browser. If the output_callback is not a callable function, this function will return FALSE. If the callback function has two parameters, the second parameter is filled with a bit-field consisting of PHP_OUTPUT_HANDLER_START, PHP_OUTPUT_HANDLER_CONT and PHP_OUTPUT_HANDLER_END. If output_callback returns FALSE original input is sent to the browser. The output_callback parameter may be bypassed by passing a NULL value. ob_end_clean(), ob_end_flush(), ob_clean(), ob_flush() and ob_start() may not be called from a callback function. If you call them from callback function, the behavior is undefined. If you would like to delete the contents of a buffer, return \"\" (a null string) from callback function. You can't even call functions using the output buffering functions like print_r($expression, true) or highlight_file($filename, true) from a callback function."},{"type":"int","var":"$chunk_size","beh":1,"desc":"If the optional parameter chunk_size is passed, the buffer will be flushed after any output call which causes the buffer's length to equal or exceed chunk_size. The default value 0 means that the output function will only be called when the output buffer is closed. Prior to PHP 5.4.0, the value 1 was a special case value that set the chunk size to 4096 bytes.","def":0},{"type":"bool","var":"$erase","beh":1,"desc":"If the optional parameter erase is set to FALSE, the buffer will not be deleted until the script finishes. This causes that flushing and cleaning functions would issue a notice and return FALSE if called.","def":"true"}],"ret_type":"bool"}]},"ob_tidyhandler":{"desc":"ob_start callback function to repair the buffer","long_desc":"Callback function for ob_start() to repair the buffer.","ver":"PHP 5","ret_desc":"Returns the modified buffer.","seealso":[],"url":"function.ob-tidyhandler","name":"ob_tidyhandler","params":[{"list":[{"type":"string","var":"$input","beh":0,"desc":"The buffer."},{"type":"int","var":"$mode","beh":1,"desc":"The buffer mode."}],"ret_type":"string"}]},"oci_bind_array_by_name":{"desc":"Binds a PHP array to an Oracle PL\/SQL array parameter","long_desc":"Binds the PHP array var_array to the Oracle placeholder name, which points to an Oracle PL\/SQL array. Whether it will be used for input or output will be determined at run-time.","ver":"PHP 5 >= 5.1.2, PECL OCI8 >= 1.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.oci-bind-array-by-name","name":"oci_bind_array_by_name","params":[{"list":[{"type":"resource","var":"$statement","beh":1,"desc":"A valid OCI statement identifier."},{"type":"string","var":"$name","beh":1,"desc":"The Oracle placeholder."},{"type":"array","var":"&$var_array","beh":1,"desc":"An array."},{"type":"int","var":"$max_table_length","beh":1,"desc":"Sets the maximum length both for incoming and result arrays."},{"type":"int","var":"$max_item_length","beh":1,"desc":"Sets maximum length for array items. If not specified or equals to -1, oci_bind_array_by_name() will find the longest element in the incoming array and will use it as the maximum length.","def":-1},{"type":"int","var":"$type","beh":1,"desc":"Should be used to set the type of PL\/SQL array items. See list of available types below:","def":"SQLT_AFC"}],"ret_type":"bool"}]},"oci_bind_by_name":{"desc":"Binds a PHP variable to an Oracle placeholder","long_desc":"Binds a PHP variable variable to the Oracle bind variable placeholder bv_name. Binding is important for Oracle database performance and also as a way to avoid SQL Injection security issues. Binding allows the database to reuse the statement context and caches from previous executions of the statement, even if another user or process originally executed it. Binding reduces SQL Injection concerns because the data associated with a bind variable is never treated as part of the SQL statement. It does not need quoting or escaping. PHP variables that have been bound can be changed and the statement re-executed without needing to re-parse the statement or re-bind. In Oracle, bind variables are commonly divided into IN binds for values that are passed into the database, and OUT binds for values that are returned to PHP. A bind variable may be both IN and OUT. Whether a bind variable will be used for input or output is determined at run-time. You must specify maxlength when using an OUT bind so that PHP allocates enough memory to hold the returned value. For IN binds it is recommended to set the maxlength length if the statement is re-executed multiple times with different values for the PHP variable. Otherwise Oracle may truncate data to the length of the initial PHP variable value. If you don't know what the maximum length will be, then re-call oci_bind_by_name() with the current data size prior to each oci_execute() call. Binding an unnecessarily large length will have an impact on process memory in the database. A bind call tells Oracle which memory address to read data from. For IN binds that address needs to contain valid data when oci_execute() is called. This means that the variable bound must remain in scope until execution. If it doesn't, unexpected results or errors such as \"ORA-01460: unimplemented or unreasonable conversion requested\" may occur. For OUT binds one symptom is no value being set in the PHP variable. For a statement that is repeatedly executed, binding values that never change may reduce the ability of the Oracle optimizer to choose the best statement execution plan. Long running statements that are rarely re-executed may not benefit from binding. However in both cases, binding might be safer than joining strings into a SQL statement, as this can be a security risk if unfiltered user text is concatenated.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.oci-bind-by-name","name":"oci_bind_by_name","params":[{"list":[{"type":"resource","var":"$statement","beh":1,"desc":"A valid OCI8 statement identifer."},{"type":"string","var":"$bv_name","beh":1,"desc":"The colon-prefixed bind variable placeholder used in the statement. The colon is optional in bv_name. Oracle does not use question marks for placeholders."},{"type":"mixed","var":"&$variable","beh":1,"desc":"The PHP variable to be associated with bv_name"},{"type":"int","var":"$maxlength","beh":1,"desc":"Sets the maximum length for the data. If you set it to -1, this function will use the current length of variable to set the maximum length. In this case the variable must exist and contain data when oci_bind_by_name() is called.","def":-1},{"type":"int","var":"$type","beh":1,"desc":"The datatype that Oracle will treat the data as. The default type used is SQLT_CHR. Oracle will convert the data between this type and the database column (or PL\/SQL variable type), when possible. If you need to bind an abstract datatype (LOB\/ROWID\/BFILE) you need to allocate it first using the oci_new_descriptor() function. The length is not used for abstract datatypes and should be set to -1. Possible values for type are:","def":"SQLT_CHR"}],"ret_type":"bool"}]},"oci_cancel":{"desc":"Cancels reading from cursor","long_desc":"Invalidates a cursor, freeing all associated resources and cancels the ability to read from it.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.oci-cancel","name":"oci_cancel","params":[{"list":[],"ret_type":"bool"}]},"oci_client_version":{"desc":"Returns the Oracle client library version","long_desc":"Returns a string containing the version number of the Oracle C client library that PHP is linked with.","ver":"PHP 5.3.7, PECL OCI8 >= 1.4.6","ret_desc":"Returns the version number as a string.","seealso":[],"url":"function.oci-client-version","name":"oci_client_version","params":[{"list":[],"ret_type":"string"}]},"oci_close":{"desc":"Closes an Oracle connection","long_desc":"Unsets connection. The underlying database connection is closed if no other resources are using it and if it was created with oci_connect() or oci_new_connect(). It is recommended to close connections that are no longer needed because this makes database resources available for other users.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.oci-close","name":"oci_close","params":[{"list":[],"ret_type":"bool"}]},"oci_commit":{"desc":"Commits the outstanding database transaction","long_desc":"Commits the outstanding transaction for the Oracle connection. A commit ends the current transaction and makes permanent all changes. It releases all locks held. A transaction begins when the first SQL statement that changes data is executed with oci_execute() using the OCI_NO_AUTO_COMMIT flag. Further data changes made by other statements become part of the same transaction. Data changes made in a transaction are temporary until the transaction is committed or rolled back. Other users of the database will not see the changes until they are committed. When inserting or updating data, using transactions is recommended for relational data consistency and for performance reasons.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.oci-commit","name":"oci_commit","params":[{"list":[],"ret_type":"bool"}]},"oci_connect":{"desc":"Connect to an Oracle database","long_desc":"Returns a connection identifier needed for most other OCI8 operations. See Connection Handling for general information on connection management and connection pooling. From PHP 5.1.2 (PECL OCI8 1.1) oci_close() can be used to close the connection. The second and subsequent calls to oci_connect() with the same parameters will return the connection handle returned from the first call. This means that transactions in one handle are also in the other handles, because they use the same underlying database connection. If two handles need to be transactionally isolated from each other, use oci_new_connect() instead.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns a connection identifier or FALSE on error.","seealso":[],"url":"function.oci-connect","name":"oci_connect","params":[{"list":[{"type":"string","var":"$username","beh":1,"desc":"The Oracle user name."},{"type":"string","var":"$password","beh":1,"desc":"The password for username."},{"type":"string","var":"$connection_string","beh":1,"desc":"Contains the Oracle instance to connect to. It can be an \u00bb\u00a0Easy Connect string, or a Connect Name from the tnsnames.ora file, or the name of a local Oracle instance. If not specified, PHP uses environment variables such as TWO_TASK (on Linux) or LOCAL (on Windows) and ORACLE_SID to determine the Oracle instance to connect to. To use the Easy Connect naming method, PHP must be linked with Oracle 10g or greater Client libraries. The Easy Connect string for Oracle 10g is of the form: [\/\/]host_name[:port][\/service_name]. With Oracle 11g, the syntax is: [\/\/]host_name[:port][\/service_name][:server_type][\/instance_name]. Service names can be found by running the Oracle utility lsnrctl status on the database server machine. The tnsnames.ora file can be in the Oracle Net search path, which includes $ORACLE_HOME\/network\/admin and \/etc. Alternatively set TNS_ADMIN so that $TNS_ADMIN\/tnsnames.ora is read. Make sure the web daemon has read access to the file."},{"type":"string","var":"$character_set","beh":1,"desc":"Determines the character set used by the Oracle Client libraries. The character set does not need to match the character set used by the database. If it doesn't match, Oracle will do its best to convert data to and from the database character set. Depending on the character sets this may not give usable results. Conversion also adds some time overhead. If not specified, the Oracle Client libraries determine a character set from the NLS_LANG environment variable. Passing this parameter can reduce connection time."},{"type":"int","var":"$session_mode","beh":1,"desc":"This parameter is available since version PHP 5 (PECL OCI8 1.1) and accepts the following values: OCI_DEFAULT, OCI_SYSOPER and OCI_SYSDBA. If either OCI_SYSOPER or OCI_SYSDBA were specified, this function will try to establish privileged connection using external credentials. Privileged connections are disabled by default. To enable them you need to set oci8.privileged_connect to On. PHP 5.3 (PECL OCI8 1.3.4) introduced the OCI_CRED_EXT mode value. This tells Oracle to use External or OS authentication, which must be configured in the database. The OCI_CRED_EXT flag can only be used with username of \"\/\" and a empty password. oci8.privileged_connect may be On or Off. OCI_CRED_EXT may be combined with the OCI_SYSOPER or OCI_SYSDBA modes. OCI_CRED_EXT is not supported on Windows for security reasons."}],"ret_type":"resource"}]},"oci_define_by_name":{"desc":"Associates a PHP variable with a column for query fetches","long_desc":"Associates a PHP variable with a column for query fetches using oci_fetch(). The oci_define_by_name() call must occur before executing oci_execute().","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.oci-define-by-name","name":"oci_define_by_name","params":[{"list":[{"type":"resource","var":"$statement","beh":0,"desc":"A valid OCI8 statement identifier created by oci_parse() and executed by oci_execute(), or a REF CURSOR statement identifier."},{"type":"string","var":"$column_name","beh":1,"desc":"The column name used in the query. Use uppercase for Oracle's default, non-case sensitive column names. Use the exact column name case for case-sensitive column names."},{"type":"mixed","var":"&$variable","beh":1,"desc":"The PHP variable that will contain the returned column value."},{"type":"int","var":"$type","beh":1,"desc":"The data type to be returned. Generally not needed. Note that Oracle-style data conversions are not performed. For example, SQLT_INT will be ignored and the returned data type will still be SQLT_CHR. You can optionally use oci_new_descriptor() to allocate LOB\/ROWID\/BFILE descriptors.","def":"SQLT_CHR"}],"ret_type":"bool"}]},"oci_error":{"desc":"Returns the last error found","long_desc":"Returns the last error found. The function should be called immediately after an error occurs. Errors are cleared by a successful statement.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"If no error is found, oci_error() returns FALSE. Otherwise, oci_error() returns the error information as an associative array.","url":"function.oci-error","name":"oci_error","params":[{"list":[],"ret_type":"array"}]},"oci_execute":{"desc":"Executes a statement","long_desc":"Executes a statement previously returned from oci_parse(). After execution, statements like INSERT will have data committed to the database by default. For statements like SELECT, execution performs the logic of the query. Query results can subsequently be fetched in PHP with functions like oci_fetch_array(). Each parsed statement may be executed multiple times, saving the cost of re-parsing. This is commonly used for INSERT statements when data is bound with oci_bind_by_name().","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.oci-execute","name":"oci_execute","params":[{"list":[{"type":"resource","var":"$statement","beh":0,"desc":"A valid OCI statement identifier."},{"type":"int","var":"$mode","beh":0,"desc":"An optional second parameter can be one of the following constants: Using OCI_NO_AUTO_COMMIT mode starts a transaction. Transactions are automatically rolled back when the connection is closed, or when the script ends. Explicitly call oci_commit() to commit a transaction, or oci_rollback() to abort it. When inserting or updating data, using transactions is recommended for relational data consistency and for performance reasons. If OCI_NO_AUTO_COMMIT mode is used for any statement including queries, and oci_commit() or oci_rollback() is not subsequently called, then OCI8 will perform a rollback at the end of the script even if no data was changed. To avoid an unnecessary rollback, many scripts do not use OCI_NO_AUTO_COMMIT mode for queries or PL\/SQL. Be careful to ensure the appropriate transactional consistency for the application when using oci_execute() with different modes in the same script.","def":"OCI_COMMIT_ON_SUCCESS"}],"ret_type":"bool"}]},"oci_fetch":{"desc":"Fetches the next row from a query into internal buffers","long_desc":"Fetches the next row from a query into internal buffers accessible either with oci_result(), or by using variables previously defined with oci_define_by_name(). See oci_fetch_array() for general information about fetching data.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE if there are no more rows in the statement.","seealso":[],"url":"function.oci-fetch","name":"oci_fetch","params":[{"list":[],"ret_type":"bool"}]},"oci_fetch_all":{"desc":"Fetches multiple rows from a query into a two-dimensional array","long_desc":"Fetches multiple rows from a query into a two-dimensional array. By default, all rows are returned. This function can be called only once for each query executed with oci_execute().","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns the number of rows in output, which may be 0 or more, or FALSE on failure.","seealso":[],"url":"function.oci-fetch-all","name":"oci_fetch_all","params":[{"list":[{"type":"resource","var":"$statement","beh":1,"desc":"A valid OCI8 statement identifier created by oci_parse() and executed by oci_execute(), or a REF CURSOR statement identifier."},{"type":"array","var":"&$output","beh":1,"desc":"The variable to contain the returned rows. LOB columns are returned as strings, where Oracle supports conversion. See oci_fetch_array() for more information on how data and types are fetched."},{"type":"int","var":"$skip","beh":1,"desc":"The number of initial rows to discard when fetching the result. The default value is 0, so the first row onwards is returned.","def":0},{"type":"int","var":"$maxrows","beh":1,"desc":"The number of rows to return. The default is -1 meaning return all the rows from skip + 1 onwards.","def":-1},{"type":"int","var":"$flags","beh":1,"desc":"Parameter flags indicates the array structure and whether associative arrays should be used. Arrays can be indexed by column heading or numerically. Use the addition operator \"+\" to choose a combination of array structure and index modes. Oracle's default, non-case sensitive column names will have uppercase array keys. Case-sensitive column names will have array keys using the exact column case. Use var_dump() on output to verify the appropriate case to use for each query. Queries that have more than one column with the same name should use column aliases. Otherwise only one of the columns will appear in an associative array.","def":"OCI_FETCHSTATEMENT_BY_COLUMN + OCI_ASSOC"}],"ret_type":"int"}]},"oci_fetch_array":{"desc":"Returns the next row from a query as an associative or numeric array","long_desc":"Returns an array containing the next result-set row of a query. Each array entry corresponds to a column of the row. This function is typically called in a loop until it returns FALSE, indicating no more rows exist. For details on the data type mapping performed by the OCI8 extension, see the datatypes supported by the driver","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns an array with associative and\/or numeric indices. If there are no more rows in the statement then FALSE is returned.","seealso":[],"url":"function.oci-fetch-array","name":"oci_fetch_array","params":[{"list":[{"type":"resource","var":"$statement","beh":0,"desc":"A valid OCI8 statement identifier created by oci_parse() and executed by oci_execute(), or a REF CURSOR statement identifier."},{"type":"int","var":"$mode","beh":1,"desc":"An optional second parameter can be any combination of the following constants: The default mode is OCI_BOTH. Use the addition operator \"+\" to specify more than one mode at a time."}],"ret_type":"array"}]},"oci_fetch_assoc":{"desc":"Returns the next row from a query as an associative array","long_desc":"Returns an associative array containing the next result-set row of a query. Each array entry corresponds to a column of the row. This function is typically called in a loop until it returns FALSE, indicating no more rows exist. Calling oci_fetch_assoc() is identical to calling oci_fetch_array() with OCI_ASSOC + OCI_RETURN_NULLS.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns an associative array. If there are no more rows in the statement then FALSE is returned.","seealso":[],"url":"function.oci-fetch-assoc","name":"oci_fetch_assoc","params":[{"list":[],"ret_type":"array"}]},"oci_fetch_object":{"desc":"Returns the next row from a query as an object","long_desc":"Returns an object containing the next result-set row of a query. Each attribute of the object corresponds to a column of the row. This function is typically called in a loop until it returns FALSE, indicating no more rows exist. For details on the data type mapping performed by the OCI8 extension, see the datatypes supported by the driver","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns an object. Each attribute of the object corresponds to a column of the row. If there are no more rows in the statement then FALSE is returned.","seealso":[],"url":"function.oci-fetch-object","name":"oci_fetch_object","params":[{"list":[],"ret_type":"object"}]},"oci_fetch_row":{"desc":"Returns the next row from a query as a numeric array","long_desc":"Returns a numerically indexed array containing the next result-set row of a query. Each array entry corresponds to a column of the row. This function is typically called in a loop until it returns FALSE, indicating no more rows exist. Calling oci_fetch_row() is identical to calling oci_fetch_array() with OCI_NUM + OCI_RETURN_NULLS.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns a numerically indexed array. If there are no more rows in the statement then FALSE is returned.","seealso":[],"url":"function.oci-fetch-row","name":"oci_fetch_row","params":[{"list":[],"ret_type":"array"}]},"oci_field_is_null":{"desc":"Checks if the field is NULL","long_desc":"Checks if the given field from the statement is NULL.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns TRUE if field is NULL, FALSE otherwise.","url":"function.oci-field-is-null","name":"oci_field_is_null","params":[{"list":[{"type":"resource","var":"$statement","beh":0,"desc":"A valid OCI statement identifier."},{"type":"mixed","var":"$field","beh":0,"desc":"Can be a field's index or a field's name (uppercased)."}],"ret_type":"bool"}]},"oci_field_name":{"desc":"Returns the name of a field from the statement","long_desc":"Returns the name of the field.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns the name as a string, or FALSE on errors.","seealso":[],"url":"function.oci-field-name","name":"oci_field_name","params":[{"list":[{"type":"resource","var":"$statement","beh":0,"desc":"A valid OCI statement identifier."},{"type":"int","var":"$field","beh":0,"desc":"Can be the field's index (1-based) or name."}],"ret_type":"string"}]},"oci_field_precision":{"desc":"Tell the precision of a field","long_desc":"Returns precision of the field. For FLOAT columns, precision is nonzero and scale is -127. If precision is 0, then column is NUMBER. Else it's NUMBER(precision, scale).","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns the precision as an integer, or FALSE on errors.","seealso":[],"url":"function.oci-field-precision","name":"oci_field_precision","params":[{"list":[{"type":"resource","var":"$statement","beh":0,"desc":"A valid OCI statement identifier."},{"type":"int","var":"$field","beh":0,"desc":"Can be the field's index (1-based) or name."}],"ret_type":"int"}]},"oci_field_scale":{"desc":"Tell the scale of the field","long_desc":"Returns the scale of the column with field index. For FLOAT columns, precision is nonzero and scale is -127. If precision is 0, then column is NUMBER. Else it's NUMBER(precision, scale).","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns the scale as an integer, or FALSE on errors.","seealso":[],"url":"function.oci-field-scale","name":"oci_field_scale","params":[{"list":[{"type":"resource","var":"$statement","beh":0,"desc":"A valid OCI statement identifier."},{"type":"int","var":"$field","beh":0,"desc":"Can be the field's index (1-based) or name."}],"ret_type":"int"}]},"oci_field_size":{"desc":"Returns field's size","long_desc":"Returns the size of a field.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns the size of a field in bytes, or FALSE on errors.","seealso":[],"url":"function.oci-field-size","name":"oci_field_size","params":[{"list":[{"type":"resource","var":"$statement","beh":0,"desc":"A valid OCI statement identifier."},{"type":"mixed","var":"$field","beh":0,"desc":"Can be the field's index (1-based) or name."}],"ret_type":"int"}]},"oci_field_type":{"desc":"Returns field's data type","long_desc":"Returns a field's data type.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns the field data type as a string, or FALSE on errors.","seealso":[],"url":"function.oci-field-type","name":"oci_field_type","params":[{"list":[{"type":"resource","var":"$statement","beh":0,"desc":"A valid OCI statement identifier."},{"type":"int","var":"$field","beh":0,"desc":"Can be the field's index (1-based) or name."}],"ret_type":"mixed"}]},"oci_field_type_raw":{"desc":"Tell the raw Oracle data type of the field","long_desc":"Returns Oracle's raw data type of the field. However, if you want to get field's type, then oci_field_type() will suit you better.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns Oracle's raw data type as a string, or FALSE on errors.","url":"function.oci-field-type-raw","name":"oci_field_type_raw","params":[{"list":[{"type":"resource","var":"$statement","beh":0,"desc":"A valid OCI statement identifier."},{"type":"int","var":"$field","beh":0,"desc":"Can be the field's index (1-based) or name."}],"ret_type":"int"}]},"oci_free_statement":{"desc":"Frees all resources associated with statement or cursor","long_desc":"Frees resources associated with Oracle's cursor or statement, which was received from as a result of oci_parse() or obtained from Oracle.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.oci-free-statement","name":"oci_free_statement","params":[{"list":[],"ret_type":"bool"}]},"oci_internal_debug":{"desc":"Enables or disables internal debug output","long_desc":"Enables or disables internal debug output.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"No value is returned.","url":"function.oci-internal-debug","name":"oci_internal_debug","params":[{"list":[],"ret_type":"void"}]},"oci_lob_copy":{"desc":"Copies large object","long_desc":"Copies a large object or a part of a large object to another large object. Old LOB-recipient data will be overwritten. If you need to copy a particular part of a LOB to a particular position of a LOB, use OCI-Lob::seek() to move LOB internal pointers.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.oci-lob-copy","name":"oci_lob_copy","params":[{"list":[{"type":"OCI-Lob","var":"$lob_to","beh":0,"desc":"The destination LOB."},{"type":"OCI-Lob","var":"$lob_from","beh":1,"desc":"The copied LOB."},{"type":"int","var":"$length","beh":1,"desc":"Indicates the length of data to be copied.","def":0}],"ret_type":"bool"}]},"oci_lob_is_equal":{"desc":"Compares two LOB\/FILE locators for equality","long_desc":"Compares two LOB\/FILE locators.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns TRUE if these objects are equal, FALSE otherwise.","url":"function.oci-lob-is-equal","name":"oci_lob_is_equal","params":[{"list":[{"type":"OCI-Lob","var":"$lob1","beh":0,"desc":"A LOB identifier."},{"type":"OCI-Lob","var":"$lob2","beh":0,"desc":"A LOB identifier."}],"ret_type":"bool"}]},"oci_new_collection":{"desc":"Allocates new collection object","long_desc":"Allocates a new collection object.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns a new OCICollection object or FALSE on error.","url":"function.oci-new-collection","name":"oci_new_collection","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"An Oracle connection identifier, returned by oci_connect() or oci_pconnect()."},{"type":"string","var":"$tdo","beh":1,"desc":"Should be a valid named type (uppercase)."},{"type":"string","var":"$schema","beh":1,"desc":"Should point to the scheme, where the named type was created. The name of the current user is the default value.","def":"NULL"}],"ret_type":"OCI-Collection"}]},"oci_new_connect":{"desc":"Connect to the Oracle server using a unique connection","long_desc":"Establishes a new connection to an Oracle server and logs on. Unlike oci_connect() and oci_pconnect(), oci_new_connect() does not cache connections and will always return a brand-new freshly opened connection handle. This is useful if your application needs transactional isolation between two sets of queries.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns a connection identifier or FALSE on error.","seealso":[],"url":"function.oci-new-connect","name":"oci_new_connect","params":[{"list":[{"type":"string","var":"$username","beh":1,"desc":"The Oracle user name."},{"type":"string","var":"$password","beh":1,"desc":"The password for username."},{"type":"string","var":"$connection_string","beh":1,"desc":"Contains the Oracle instance to connect to. It can be an \u00bb\u00a0Easy Connect string, or a Connect Name from the tnsnames.ora file, or the name of a local Oracle instance. If not specified, PHP uses environment variables such as TWO_TASK (on Linux) or LOCAL (on Windows) and ORACLE_SID to determine the Oracle instance to connect to. To use the Easy Connect naming method, PHP must be linked with Oracle 10g or greater Client libraries. The Easy Connect string for Oracle 10g is of the form: [\/\/]host_name[:port][\/service_name]. With Oracle 11g, the syntax is: [\/\/]host_name[:port][\/service_name][:server_type][\/instance_name]. Service names can be found by running the Oracle utility lsnrctl status on the database server machine. The tnsnames.ora file can be in the Oracle Net search path, which includes $ORACLE_HOME\/network\/admin and \/etc. Alternatively set TNS_ADMIN so that $TNS_ADMIN\/tnsnames.ora is read. Make sure the web daemon has read access to the file."},{"type":"string","var":"$character_set","beh":1,"desc":"Determines the character set used by the Oracle Client libraries. The character set does not need to match the character set used by the database. If it doesn't match, Oracle will do its best to convert data to and from the database character set. Depending on the character sets this may not give usable results. Conversion also adds some time overhead. If not specified, the Oracle Client libraries determine a character set from the NLS_LANG environment variable. Passing this parameter can reduce connection time."},{"type":"int","var":"$session_mode","beh":1,"desc":"This parameter is available since version PHP 5 (PECL OCI8 1.1) and accepts the following values: OCI_DEFAULT, OCI_SYSOPER and OCI_SYSDBA. If either OCI_SYSOPER or OCI_SYSDBA were specified, this function will try to establish privileged connection using external credentials. Privileged connections are disabled by default. To enable them you need to set oci8.privileged_connect to On. PHP 5.3 (PECL OCI8 1.3.4) introduced the OCI_CRED_EXT mode value. This tells Oracle to use External or OS authentication, which must be configured in the database. The OCI_CRED_EXT flag can only be used with username of \"\/\" and a empty password. oci8.privileged_connect may be On or Off. OCI_CRED_EXT may be combined with the OCI_SYSOPER or OCI_SYSDBA modes. OCI_CRED_EXT is not supported on Windows for security reasons."}],"ret_type":"resource"}]},"oci_new_cursor":{"desc":"Allocates and returns a new cursor (statement handle)","long_desc":"Allocates a new statement handle on the specified connection.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns a new statement handle, or FALSE on error.","url":"function.oci-new-cursor","name":"oci_new_cursor","params":[{"list":[],"ret_type":"resource"}]},"oci_new_descriptor":{"desc":"Initializes a new empty LOB or FILE descriptor","long_desc":"Allocates resources to hold descriptor or LOB locator.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns a new LOB or FILE descriptor on success, FALSE on error.","seealso":[],"url":"function.oci-new-descriptor","name":"oci_new_descriptor","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"An Oracle connection identifier, returned by oci_connect() or oci_pconnect()."},{"type":"int","var":"$type","beh":0,"desc":"Valid values for type are: OCI_DTYPE_FILE, OCI_DTYPE_LOB and OCI_DTYPE_ROWID.","def":"OCI_DTYPE_LOB"}],"ret_type":"OCI-Lob"}]},"oci_num_fields":{"desc":"Returns the number of result columns in a statement","long_desc":"Gets the number of columns in the given statement.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns the number of columns as an integer, or FALSE on errors.","url":"function.oci-num-fields","name":"oci_num_fields","params":[{"list":[],"ret_type":"int"}]},"oci_num_rows":{"desc":"Returns number of rows affected during statement execution","long_desc":"Gets the number of rows affected during statement execution.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns the number of rows affected as an integer, or FALSE on errors.","url":"function.oci-num-rows","name":"oci_num_rows","params":[{"list":[],"ret_type":"int"}]},"oci_parse":{"desc":"Prepares an Oracle statement for execution","long_desc":"Prepares sql_text using connection and returns the statement identifier, which can be used with oci_bind_by_name(), oci_execute() and other functions. Statement identifiers can be freed with oci_free_statement() or by setting the variable to NULL.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns a statement handle on success, or FALSE on error.","seealso":[],"url":"function.oci-parse","name":"oci_parse","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"An Oracle connection identifier, returned by oci_connect(), oci_pconnect(), or oci_new_connect()."},{"type":"string","var":"$sql_text","beh":0,"desc":"The SQL or PL\/SQL statement. SQL statements should not end with a semi-colon (\";\"). PL\/SQL statements should end with a semi-colon (\";\")."}],"ret_type":"resource"}]},"oci_password_change":{"desc":"Changes password of Oracle's user","long_desc":"Changes password for user with username. The oci_password_change() function is most useful for PHP command-line scripts, or when non-persistent connections are used throughout the PHP application.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.oci-password-change","name":"oci_password_change","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"An Oracle connection identifier, returned by oci_connect() or oci_pconnect()."},{"type":"string","var":"$username","beh":0,"desc":"The Oracle user name."},{"type":"string","var":"$old_password","beh":1,"desc":"The old password."},{"type":"string","var":"$new_password","beh":1,"desc":"The new password to be set."}],"ret_type":"bool"},{"list":[{"type":"string","var":"$dbname","beh":0,"desc":"An Oracle connection identifier, returned by oci_connect() or oci_pconnect()."},{"type":"string","var":"$username","beh":0,"desc":"The Oracle user name."},{"type":"string","var":"$old_password","beh":1,"desc":"The old password."},{"type":"string","var":"$new_password","beh":1,"desc":"The new password to be set."}],"ret_type":"resource"}]},"oci_pconnect":{"desc":"Connect to an Oracle database using a persistent connection","long_desc":"Creates a persistent connection to an Oracle server and logs on. Persistent connections are cached and re-used between requests, resulting in reduced overhead on each page load; a typical PHP application will have a single persistent connection open against an Oracle server per Apache child process (or PHP FastCGI\/CGI process). See the Persistent Database Connections section for more information.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns a connection identifier or FALSE on error.","seealso":[],"url":"function.oci-pconnect","name":"oci_pconnect","params":[{"list":[{"type":"string","var":"$username","beh":1,"desc":"The Oracle user name."},{"type":"string","var":"$password","beh":1,"desc":"The password for username."},{"type":"string","var":"$connection_string","beh":1,"desc":"Contains the Oracle instance to connect to. It can be an \u00bb\u00a0Easy Connect string, or a Connect Name from the tnsnames.ora file, or the name of a local Oracle instance. If not specified, PHP uses environment variables such as TWO_TASK (on Linux) or LOCAL (on Windows) and ORACLE_SID to determine the Oracle instance to connect to. To use the Easy Connect naming method, PHP must be linked with Oracle 10g or greater Client libraries. The Easy Connect string for Oracle 10g is of the form: [\/\/]host_name[:port][\/service_name]. With Oracle 11g, the syntax is: [\/\/]host_name[:port][\/service_name][:server_type][\/instance_name]. Service names can be found by running the Oracle utility lsnrctl status on the database server machine. The tnsnames.ora file can be in the Oracle Net search path, which includes $ORACLE_HOME\/network\/admin and \/etc. Alternatively set TNS_ADMIN so that $TNS_ADMIN\/tnsnames.ora is read. Make sure the web daemon has read access to the file."},{"type":"string","var":"$character_set","beh":1,"desc":"Determines the character set used by the Oracle Client libraries. The character set does not need to match the character set used by the database. If it doesn't match, Oracle will do its best to convert data to and from the database character set. Depending on the character sets this may not give usable results. Conversion also adds some time overhead. If not specified, the Oracle Client libraries determine a character set from the NLS_LANG environment variable. Passing this parameter can reduce connection time."},{"type":"int","var":"$session_mode","beh":1,"desc":"This parameter is available since version PHP 5 (PECL OCI8 1.1) and accepts the following values: OCI_DEFAULT, OCI_SYSOPER and OCI_SYSDBA. If either OCI_SYSOPER or OCI_SYSDBA were specified, this function will try to establish privileged connection using external credentials. Privileged connections are disabled by default. To enable them you need to set oci8.privileged_connect to On. PHP 5.3 (PECL OCI8 1.3.4) introduced the OCI_CRED_EXT mode value. This tells Oracle to use External or OS authentication, which must be configured in the database. The OCI_CRED_EXT flag can only be used with username of \"\/\" and a empty password. oci8.privileged_connect may be On or Off. OCI_CRED_EXT may be combined with the OCI_SYSOPER or OCI_SYSDBA modes. OCI_CRED_EXT is not supported on Windows for security reasons."}],"ret_type":"resource"}]},"oci_result":{"desc":"Returns field's value from the fetched row","long_desc":"Returns the data from field in the current row, fetched by oci_fetch(). For details on the data type mapping performed by the OCI8 extension, see the datatypes supported by the driver","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns everything as strings except for abstract types (ROWIDs, LOBs and FILEs). Returns FALSE on error.","seealso":[],"url":"function.oci-result","name":"oci_result","params":[{"list":[{"type":"resource","var":"$statement","beh":0,"desc":""},{"type":"mixed","var":"$field","beh":0,"desc":"Can be either use the column number (1-based) or the column name (in uppercase)."}],"ret_type":"mixed"}]},"oci_rollback":{"desc":"Rolls back the outstanding database transaction","long_desc":"Reverts all uncommitted changes for the Oracle connection and ends the transaction. It releases all locks held. All Oracle SAVEPOINTS are erased. A transaction begins when the first SQL statement that changes data is executed with oci_execute() using the OCI_NO_AUTO_COMMIT flag. Further data changes made by other statements become part of the same transaction. Data changes made in a transaction are temporary until the transaction is committed or rolled back. Other users of the database will not see the changes until they are committed. When inserting or updating data, using transactions is recommended for relational data consistency and for performance reasons.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.oci-rollback","name":"oci_rollback","params":[{"list":[],"ret_type":"bool"}]},"oci_server_version":{"desc":"Returns the Oracle Database version","long_desc":"Returns a string with the Oracle Database version and available options","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns the version information as a string or FALSE on error.","seealso":[],"url":"function.oci-server-version","name":"oci_server_version","params":[{"list":[],"ret_type":"string"}]},"oci_set_action":{"desc":"Sets the action name","long_desc":"Sets the action name for Oracle tracing. The action name is registered with the database when the next 'roundtrip' from PHP to the database occurs, typically when an SQL statement is executed. The action name can subsequently be queried from database administration views such as V$SESSION. It can be used for tracing and monitoring such as with V$SQLAREA and DBMS_MONITOR.SERV_MOD_ACT_STAT_ENABLE. The value may be retained across persistent connections.","ver":"PHP 5.3.2, PECL OCI8 >= 1.4.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.oci-set-action","name":"oci_set_action","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"An Oracle connection identifier, returned by oci_connect(), oci_pconnect(), or oci_new_connect()."},{"type":"string","var":"$action_name","beh":0,"desc":"User chosen string up to 32 bytes long."}],"ret_type":"bool"}]},"oci_set_client_identifier":{"desc":"Sets the client identifier","long_desc":"Sets the client identifier used by various database components to identify lightweight application users who authenticate as the same database user. The client identifier is registered with the database when the next 'roundtrip' from PHP to the database occurs, typically when an SQL statement is executed. The identifier can subsequently be queried from database administration views such as V$SESSION. It can be used with DBMS_MONITOR.CLIENT_ID_TRACE_ENABLE for tracing. It can be used for auditing. The value may be retained across persistent connections.","ver":"PHP 5.3.2, PECL OCI8 >= 1.4.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.oci-set-client-identifier","name":"oci_set_client_identifier","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"An Oracle connection identifier, returned by oci_connect(), oci_pconnect(), or oci_new_connect()."},{"type":"string","var":"$client_identifier","beh":0,"desc":"User chosen string up to 64 bytes long."}],"ret_type":"bool"}]},"oci_set_client_info":{"desc":"Sets the client information","long_desc":"Sets the client information for Oracle tracing. The client information is registered with the database when the next 'roundtrip' from PHP to the database occurs, typically when an SQL statement is executed. The client information can subsequently be queried from database administration views such as V$SESSION. The value may be retained across persistent connections.","ver":"PHP 5.3.2, PECL OCI8 >= 1.4.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.oci-set-client-info","name":"oci_set_client_info","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"An Oracle connection identifier, returned by oci_connect(), oci_pconnect(), or oci_new_connect()."},{"type":"string","var":"$client_info","beh":0,"desc":"User chosen string up to 64 bytes long."}],"ret_type":"bool"}]},"oci_set_edition":{"desc":"Sets the database edition","long_desc":"Sets the database \"edition\" of objects to be used by a subsequent connections. Oracle Editions allow concurrent versions of applications to run using the same schema and object names. This is useful for upgrading live systems. Call oci_set_edition() before calling oci_connect(), oci_pconnect() or oci_new_connect(). If an edition is set that is not valid in the database, connection will fail even if oci_set_edition() returns success. When using persistent connections, if a connection with the requested edition setting already exists, it is reused. Otherwise, a different persistent connection is created","ver":"PHP 5.3.2, PECL OCI8 >= 1.4.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.oci-set-edition","name":"oci_set_edition","params":[{"list":[],"ret_type":"bool"}]},"oci_set_module_name":{"desc":"Sets the module name","long_desc":"Sets the module name for Oracle tracing. The module name is registered with the database when the next 'roundtrip' from PHP to the database occurs, typically when an SQL statement is executed. The name can subsequently be queried from database administration views such as V$SESSION. It can be used for tracing and monitoring such as with V$SQLAREA and DBMS_MONITOR.SERV_MOD_ACT_STAT_ENABLE. The value may be retained across persistent connections.","ver":"PHP 5.3.2, PECL OCI8 >= 1.4.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.oci-set-module-name","name":"oci_set_module_name","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"An Oracle connection identifier, returned by oci_connect(), oci_pconnect(), or oci_new_connect()."},{"type":"string","var":"$module_name","beh":0,"desc":"User chosen string up to 48 bytes long."}],"ret_type":"bool"}]},"oci_set_prefetch":{"desc":"Sets number of rows to be prefetched by queries","long_desc":"Sets the number of rows to be buffered by the Oracle Client libraries after a successful query call to oci_execute() and for each subsequent internal fetch request to the database. For queries returning a large number of rows, performance can be significantly improved by increasing the prefetch count above the default oci8.default_prefetch value. Prefetching is Oracle's efficient way of returning more than one data row from the database in each network request. This can result in better network and CPU utilization. The buffering of rows is internal to OCI8 and the behavior of OCI8 fetching functions is unchanged regardless of the prefetch count. For example, oci_fetch_row() will always return one row. The prefetch buffer is per-statement and is not used by re-executed statements or by other connections. Call oci_set_prefetch() before calling oci_execute(). A tuning goal is to set the prefetch value to a reasonable size for the network and database to handle. For queries returning a very large number of rows, overall system efficiency might be better if rows are retrieved from the database in several chunks (i.e set the prefetch value smaller than the number of rows). This allows the database to handle other users' statements while the PHP script is processing the current set of rows. Query prefetching was introduced in Oracle 8i. REF CURSOR prefetching was introduced in Oracle 11gR2 and occurs when PHP is linked with Oracle 11gR2 Client libraries and connected to 11gR2 or previous versions of the database. Nested cursor prefetching was introduced in Oracle 11gR2 and requires both the Oracle Client libraries and the database to be version 11gR2. Prefetching is not supported when queries contain LONG or LOB columns. The prefetch value is ignored and single-row fetches will be used in all the situations when prefetching is not supported.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.oci-set-prefetch","name":"oci_set_prefetch","params":[{"list":[{"type":"resource","var":"$statement","beh":0,"desc":"A valid OCI8 statement identifier created by oci_parse() and executed by oci_execute(), or a REF CURSOR statement identifier."},{"type":"int","var":"$rows","beh":0,"desc":"The number of rows to be prefetched, >= 0"}],"ret_type":"bool"}]},"oci_statement_type":{"desc":"Returns the type of a statement","long_desc":"Returns a keyword identifying the type of the OCI8 statement.","ver":"PHP 5, PECL OCI8 >= 1.1.0","ret_desc":"Returns the type of statement as one of the following strings.","url":"function.oci-statement-type","name":"oci_statement_type","params":[{"list":[],"ret_type":"string"}]},"ocibindbyname":{"desc":"Alias of oci_bind_by_name()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocibindbyname","name":"ocibindbyname","params":[]},"ocicancel":{"desc":"Alias of oci_cancel()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocicancel","name":"ocicancel","params":[]},"ocicloselob":{"desc":"Alias of OCI-Lob::close()","ver":"PHP 4 >= 4.0.6, PECL OCI8 1.0","url":"function.ocicloselob","name":"ocicloselob","params":[]},"ocicollappend":{"desc":"Alias of OCI-Collection::append()","ver":"PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocicollappend","name":"ocicollappend","params":[]},"ocicollassign":{"desc":"Alias of OCI-Collection::assign()","ver":"PHP 4 >= 4.0.6, PECL OCI8 1.0","url":"function.ocicollassign","name":"ocicollassign","params":[]},"ocicollassignelem":{"desc":"Alias of OCI-Collection::assignElem()","ver":"PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocicollassignelem","name":"ocicollassignelem","params":[]},"ocicollgetelem":{"desc":"Alias of OCI-Collection::getElem()","ver":"PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocicollgetelem","name":"ocicollgetelem","params":[]},"ocicollmax":{"desc":"Alias of OCI-Collection::max()","ver":"PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocicollmax","name":"ocicollmax","params":[]},"ocicollsize":{"desc":"Alias of OCI-Collection::size()","ver":"PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocicollsize","name":"ocicollsize","params":[]},"ocicolltrim":{"desc":"Alias of OCI-Collection::trim()","ver":"PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocicolltrim","name":"ocicolltrim","params":[]},"ocicolumnisnull":{"desc":"Alias of oci_field_is_null()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocicolumnisnull","name":"ocicolumnisnull","params":[]},"ocicolumnname":{"desc":"Alias of oci_field_name()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocicolumnname","name":"ocicolumnname","params":[]},"ocicolumnprecision":{"desc":"Alias of oci_field_precision()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocicolumnprecision","name":"ocicolumnprecision","params":[]},"ocicolumnscale":{"desc":"Alias of oci_field_scale()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocicolumnscale","name":"ocicolumnscale","params":[]},"ocicolumnsize":{"desc":"Alias of oci_field_size()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocicolumnsize","name":"ocicolumnsize","params":[]},"ocicolumntype":{"desc":"Alias of oci_field_type()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocicolumntype","name":"ocicolumntype","params":[]},"ocicolumntyperaw":{"desc":"Alias of oci_field_type_raw()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocicolumntyperaw","name":"ocicolumntyperaw","params":[]},"ocicommit":{"desc":"Alias of oci_commit()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocicommit","name":"ocicommit","params":[]},"ocidefinebyname":{"desc":"Alias of oci_define_by_name()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocidefinebyname","name":"ocidefinebyname","params":[]},"ocierror":{"desc":"Alias of oci_error()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocierror","name":"ocierror","params":[]},"ociexecute":{"desc":"Alias of oci_execute()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ociexecute","name":"ociexecute","params":[]},"ocifetch":{"desc":"Alias of oci_fetch()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocifetch","name":"ocifetch","params":[]},"ocifetchinto":{"desc":"Fetches the next row into an array (deprecated)","long_desc":"This function is deprecated. Recommended alternatives: oci_fetch_array(), oci_fetch_object(), oci_fetch_assoc() and oci_fetch_row().","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocifetchinto","name":"ocifetchinto","params":[{"list":[{"type":"resource","var":"$statement","beh":0,"desc":""},{"type":"array","var":"&$result","beh":1,"desc":""},{"type":"int","var":"$mode","beh":1,"desc":"","def":"OCI_ASSOC + OCI_NUM"}],"ret_type":"int"}]},"ocifetchstatement":{"desc":"Alias of oci_fetch_all()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocifetchstatement","name":"ocifetchstatement","params":[]},"ocifreecollection":{"desc":"Alias of OCI-Collection::free()","ver":"PHP 4 >= 4.0.7, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocifreecollection","name":"ocifreecollection","params":[]},"ocifreecursor":{"desc":"Alias of oci_free_statement()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocifreecursor","name":"ocifreecursor","params":[]},"ocifreedesc":{"desc":"Alias of OCI-Lob::free()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocifreedesc","name":"ocifreedesc","params":[]},"ocifreestatement":{"desc":"Alias of oci_free_statement()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocifreestatement","name":"ocifreestatement","params":[]},"ociinternaldebug":{"desc":"Alias of oci_internal_debug()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ociinternaldebug","name":"ociinternaldebug","params":[]},"ociloadlob":{"desc":"Alias of OCI-Lob::load()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ociloadlob","name":"ociloadlob","params":[]},"ocilogoff":{"desc":"Alias of oci_close()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocilogoff","name":"ocilogoff","params":[]},"ocilogon":{"desc":"Alias of oci_connect()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocilogon","name":"ocilogon","params":[]},"ocinewcollection":{"desc":"Alias of oci_new_collection()","ver":"PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocinewcollection","name":"ocinewcollection","params":[]},"ocinewcursor":{"desc":"Alias of oci_new_cursor()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocinewcursor","name":"ocinewcursor","params":[]},"ocinewdescriptor":{"desc":"Alias of oci_new_descriptor()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocinewdescriptor","name":"ocinewdescriptor","params":[]},"ocinlogon":{"desc":"Alias of oci_new_connect()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocinlogon","name":"ocinlogon","params":[]},"ocinumcols":{"desc":"Alias of oci_num_fields()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocinumcols","name":"ocinumcols","params":[]},"ociparse":{"desc":"Alias of oci_parse()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ociparse","name":"ociparse","params":[]},"ociplogon":{"desc":"Alias of oci_pconnect()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ociplogon","name":"ociplogon","params":[]},"ociresult":{"desc":"Alias of oci_result()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ociresult","name":"ociresult","params":[]},"ocirollback":{"desc":"Alias of oci_rollback()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocirollback","name":"ocirollback","params":[]},"ocirowcount":{"desc":"Alias of oci_num_rows()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocirowcount","name":"ocirowcount","params":[]},"ocisavelob":{"desc":"Alias of OCI-Lob::save()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocisavelob","name":"ocisavelob","params":[]},"ocisavelobfile":{"desc":"Alias of OCI-Lob::import()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocisavelobfile","name":"ocisavelobfile","params":[]},"ociserverversion":{"desc":"Alias of oci_server_version()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ociserverversion","name":"ociserverversion","params":[]},"ocisetprefetch":{"desc":"Alias of oci_set_prefetch()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocisetprefetch","name":"ocisetprefetch","params":[]},"ocistatementtype":{"desc":"Alias of oci_statement_type()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ocistatementtype","name":"ocistatementtype","params":[]},"ociwritelobtofile":{"desc":"Alias of OCI-Lob::export()","ver":"PHP 4, PHP 5, PECL OCI8 >= 1.0.0","url":"function.ociwritelobtofile","name":"ociwritelobtofile","params":[]},"ociwritetemporarylob":{"desc":"Alias of OCI-Lob::writeTemporary()","ver":"PHP 4 >= 4.0.6, PECL OCI8 1.0","url":"function.ociwritetemporarylob","name":"ociwritetemporarylob","params":[]},"octdec":{"desc":"Octal to decimal","long_desc":"Returns the decimal equivalent of the octal number represented by the octal_string argument.","ver":"PHP 4, PHP 5","ret_desc":"The decimal representation of octal_string","seealso":[],"url":"function.octdec","name":"octdec","params":[{"list":[],"ret_type":"number"}]},"odbc_autocommit":{"desc":"Toggle autocommit behaviour","long_desc":"Toggles autocommit behaviour. By default, auto-commit is on for a connection. Disabling auto-commit is equivalent with starting a transaction.","ver":"PHP 4, PHP 5","ret_desc":"Without the OnOff parameter, this function returns auto-commit status for connection_id. Non-zero is returned if auto-commit is on, 0 if it is off, or FALSE if an error occurs.","seealso":[],"url":"function.odbc-autocommit","name":"odbc_autocommit","params":[{"list":[{"type":"resource","var":"$connection_id","beh":0,"desc":"The ODBC connection identifier, see odbc_connect() for details."},{"type":"bool","var":"$OnOff","beh":0,"desc":"If OnOff is TRUE, auto-commit is enabled, if it is FALSE auto-commit is disabled.","def":"false"}],"ret_type":"mixed"}]},"odbc_binmode":{"desc":"Handling of binary column data","long_desc":"Enables handling of binary column data. ODBC SQL types affected are BINARY, VARBINARY, and LONGVARBINARY. When binary SQL data is converted to character C data, each byte (8 bits) of source data is represented as two ASCII characters. These characters are the ASCII character representation of the number in its hexadecimal form. For example, a binary 00000001 is converted to \"01\" and a binary 11111111 is converted to \"FF\". If odbc_fetch_into() is used, passthru means that an empty string is returned for these columns.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.odbc-binmode","name":"odbc_binmode","params":[{"list":[{"type":"resource","var":"$result_id","beh":0,"desc":"The result identifier. If result_id is 0, the settings apply as default for new results."},{"type":"int","var":"$mode","beh":0,"desc":"Possible values for mode are:"}],"ret_type":"bool"}]},"odbc_close":{"desc":"Close an ODBC connection","long_desc":"Closes down the connection to the database server.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","url":"function.odbc-close","name":"odbc_close","params":[{"list":[],"ret_type":"void"}]},"odbc_close_all":{"desc":"Close all ODBC connections","long_desc":"odbc_close_all() will close down all connections to database server(s).","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","url":"function.odbc-close-all","name":"odbc_close_all","params":[{"list":[],"ret_type":"void"}]},"odbc_columnprivileges":{"desc":"Lists columns and associated privileges for the given table","long_desc":"Lists columns and associated privileges for the given table.","ver":"PHP 4, PHP 5","ret_desc":"Returns an ODBC result identifier or FALSE on failure. This result identifier can be used to fetch a list of columns and associated privileges.","url":"function.odbc-columnprivileges","name":"odbc_columnprivileges","params":[{"list":[{"type":"resource","var":"$connection_id","beh":0,"desc":"The ODBC connection identifier, see odbc_connect() for details."},{"type":"string","var":"$qualifier","beh":0,"desc":"The qualifier."},{"type":"string","var":"$owner","beh":1,"desc":"The owner."},{"type":"string","var":"$table_name","beh":1,"desc":"The table name."},{"type":"string","var":"$column_name","beh":1,"desc":"The column_name argument accepts search patterns ('%' to match zero or more characters and '_' to match a single character)."}],"ret_type":"resource"}]},"odbc_columns":{"desc":"Lists the column names in specified tables","long_desc":"Lists all columns in the requested range.","ver":"PHP 4, PHP 5","ret_desc":"Returns an ODBC result identifier or FALSE on failure.","seealso":[],"url":"function.odbc-columns","name":"odbc_columns","params":[{"list":[{"type":"resource","var":"$connection_id","beh":1,"desc":"The ODBC connection identifier, see odbc_connect() for details."},{"type":"string","var":"$qualifier","beh":1,"desc":"The qualifier."},{"type":"string","var":"$schema","beh":1,"desc":"The owner."},{"type":"string","var":"$table_name","beh":1,"desc":"The table name."},{"type":"string","var":"$column_name","beh":1,"desc":"The column name."}],"ret_type":"resource"}]},"odbc_commit":{"desc":"Commit an ODBC transaction","long_desc":"Commits all pending transactions on the connection.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.odbc-commit","name":"odbc_commit","params":[{"list":[],"ret_type":"bool"}]},"odbc_connect":{"desc":"Connect to a datasource","long_desc":"The connection id returned by this functions is needed by other ODBC functions. You can have multiple connections open at once as long as they either use different db or different credentials. With some ODBC drivers, executing a complex stored procedure may fail with an error similar to: \"Cannot open a cursor on a stored procedure that has anything other than a single select statement in it\". Using SQL_CUR_USE_ODBC may avoid that error. Also, some drivers don't support the optional row_number parameter in odbc_fetch_row(). SQL_CUR_USE_ODBC might help in that case, too.","ver":"PHP 4, PHP 5","ret_desc":"Returns an ODBC connection id or 0 (FALSE) on error.","seealso":[],"url":"function.odbc-connect","name":"odbc_connect","params":[{"list":[{"type":"string","var":"$dsn","beh":0,"desc":"The database source name for the connection. Alternatively, a DSN-less connection string can be used."},{"type":"string","var":"$user","beh":1,"desc":"The username."},{"type":"string","var":"$password","beh":1,"desc":"The password."},{"type":"int","var":"$cursor_type","beh":1,"desc":"This sets the type of cursor to be used for this connection. This parameter is not normally needed, but can be useful for working around problems with some ODBC drivers."}],"ret_type":"resource"}]},"odbc_cursor":{"desc":"Get cursorname","long_desc":"Gets the cursorname for the given result_id.","ver":"PHP 4, PHP 5","ret_desc":"Returns the cursor name, as a string.","url":"function.odbc-cursor","name":"odbc_cursor","params":[{"list":[],"ret_type":"string"}]},"odbc_data_source":{"desc":"Returns information about a current connection","long_desc":"This function will return the list of available DSN (after calling it several times).","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns FALSE on error, and an array upon success.","url":"function.odbc-data-source","name":"odbc_data_source","params":[{"list":[{"type":"resource","var":"$connection_id","beh":0,"desc":"The ODBC connection identifier, see odbc_connect() for details."},{"type":"int","var":"$fetch_type","beh":0,"desc":"The fetch_type can be one of two constant types: SQL_FETCH_FIRST, SQL_FETCH_NEXT. Use SQL_FETCH_FIRST the first time this function is called, thereafter use the SQL_FETCH_NEXT."}],"ret_type":"array"}]},"odbc_do":{"desc":"Alias of odbc_exec()","long_desc":"This function is an alias of: odbc_exec().","ver":"PHP 4, PHP 5","url":"function.odbc-do","name":"odbc_do","params":[]},"odbc_error":{"desc":"Get the last error code","long_desc":"Returns a six-digit ODBC state, or an empty string if there has been no errors.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"If connection_id is specified, the last state of that connection is returned, else the last state of any connection is returned.","seealso":[],"url":"function.odbc-error","name":"odbc_error","params":[{"list":[],"ret_type":"string"}]},"odbc_errormsg":{"desc":"Get the last error message","long_desc":"Returns a string containing the last ODBC error message, or an empty string if there has been no errors.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"If connection_id is specified, the last state of that connection is returned, else the last state of any connection is returned.","seealso":[],"url":"function.odbc-errormsg","name":"odbc_errormsg","params":[{"list":[],"ret_type":"string"}]},"odbc_exec":{"desc":"Prepare and execute an SQL statement","long_desc":"Sends an SQL statement to the database server.","ver":"PHP 4, PHP 5","ret_desc":"Returns an ODBC result identifier if the SQL command was executed successfully, or FALSE on error.","seealso":[],"url":"function.odbc-exec","name":"odbc_exec","params":[{"list":[{"type":"resource","var":"$connection_id","beh":0,"desc":"The ODBC connection identifier, see odbc_connect() for details."},{"type":"string","var":"$query_string","beh":1,"desc":"The SQL statement."},{"type":"int","var":"$flags","beh":1,"desc":"This parameter is currently not used."}],"ret_type":"resource"}]},"odbc_execute":{"desc":"Execute a prepared statement","long_desc":"Executes a statement prepared with odbc_prepare().","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.odbc-execute","name":"odbc_execute","params":[{"list":[{"type":"resource","var":"$result_id","beh":0,"desc":"The result id resource, from odbc_prepare()."},{"type":"array","var":"$parameters_array","beh":1,"desc":"Parameters in parameter_array will be substituted for placeholders in the prepared statement in order. Elements of this array will be converted to strings by calling this function. Any parameters in parameter_array which start and end with single quotes will be taken as the name of a file to read and send to the database server as the data for the appropriate placeholder."}],"ret_type":"bool"}]},"odbc_fetch_array":{"desc":"Fetch a result row as an associative array","long_desc":"Fetch an associative array from an ODBC query. See the changelog below for when this function is available.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns an array that corresponds to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.odbc-fetch-array","name":"odbc_fetch_array","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource from odbc_exec()."},{"type":"int","var":"$rownumber","beh":1,"desc":"Optionally choose which row number to retrieve."}],"ret_type":"array"}]},"odbc_fetch_into":{"desc":"Fetch one result row into array","long_desc":"Fetch one result row into array.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of columns in the result; FALSE on error.","url":"function.odbc-fetch-into","name":"odbc_fetch_into","params":[{"list":[{"type":"resource","var":"$result_id","beh":0,"desc":"The result resource."},{"type":"array","var":"&$result_array","beh":1,"desc":"The result array that can be of any type since it will be converted to type array. The array will contain the column values starting at array index 0."},{"type":"int","var":"$rownumber","beh":1,"desc":"The row number."}],"ret_type":"int"}]},"odbc_fetch_object":{"desc":"Fetch a result row as an object","long_desc":"Fetch an object from an ODBC query. See the changelog below for when this function is available.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns an object that corresponds to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.odbc-fetch-object","name":"odbc_fetch_object","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The result resource from odbc_exec()."},{"type":"int","var":"$rownumber","beh":1,"desc":"Optionally choose which row number to retrieve."}],"ret_type":"object"}]},"odbc_fetch_row":{"desc":"Fetch a row","long_desc":"Fetches a row of the data that was returned by odbc_do() or odbc_exec(). After odbc_fetch_row() is called, the fields of that row can be accessed with odbc_result().","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if there was a row, FALSE otherwise.","url":"function.odbc-fetch-row","name":"odbc_fetch_row","params":[{"list":[{"type":"resource","var":"$result_id","beh":0,"desc":"The result identifier."},{"type":"int","var":"$row_number","beh":1,"desc":"If row_number is not specified, odbc_fetch_row() will try to fetch the next row in the result set. Calls to odbc_fetch_row() with and without row_number can be mixed. To step through the result more than once, you can call odbc_fetch_row() with row_number 1, and then continue doing odbc_fetch_row() without row_number to review the result. If a driver doesn't support fetching rows by number, the row_number parameter is ignored."}],"ret_type":"bool"}]},"odbc_field_len":{"desc":"Get the length (precision) of a field","long_desc":"Gets the length of the field referenced by number in the given result identifier.","ver":"PHP 4, PHP 5","ret_desc":"Returns the field name as a string, or FALSE on error.","seealso":[],"url":"function.odbc-field-len","name":"odbc_field_len","params":[{"list":[{"type":"resource","var":"$result_id","beh":0,"desc":"The result identifier."},{"type":"int","var":"$field_number","beh":0,"desc":"The field number. Field numbering starts at 1."}],"ret_type":"int"}]},"odbc_field_name":{"desc":"Get the columnname","long_desc":"Gets the name of the field occupying the given column number in the given result identifier.","ver":"PHP 4, PHP 5","ret_desc":"Returns the field name as a string, or FALSE on error.","url":"function.odbc-field-name","name":"odbc_field_name","params":[{"list":[{"type":"resource","var":"$result_id","beh":0,"desc":"The result identifier."},{"type":"int","var":"$field_number","beh":0,"desc":"The field number. Field numbering starts at 1."}],"ret_type":"string"}]},"odbc_field_num":{"desc":"Return column number","long_desc":"Gets the number of the column slot that corresponds to the named field in the given result identifier.","ver":"PHP 4, PHP 5","ret_desc":"Returns the field number as a integer, or FALSE on error. Field numbering starts at 1.","url":"function.odbc-field-num","name":"odbc_field_num","params":[{"list":[{"type":"resource","var":"$result_id","beh":0,"desc":"The result identifier."},{"type":"string","var":"$field_name","beh":0,"desc":"The field name."}],"ret_type":"int"}]},"odbc_field_precision":{"desc":"Alias of odbc_field_len()","long_desc":"This function is an alias of: odbc_field_len().","ver":"PHP 4, PHP 5","seealso":[],"url":"function.odbc-field-precision","name":"odbc_field_precision","params":[]},"odbc_field_scale":{"desc":"Get the scale of a field","long_desc":"Gets the scale of the field referenced by number in the given result identifier.","ver":"PHP 4, PHP 5","ret_desc":"Returns the field scale as a integer, or FALSE on error.","url":"function.odbc-field-scale","name":"odbc_field_scale","params":[{"list":[{"type":"resource","var":"$result_id","beh":0,"desc":"The result identifier."},{"type":"int","var":"$field_number","beh":0,"desc":"The field number. Field numbering starts at 1."}],"ret_type":"int"}]},"odbc_field_type":{"desc":"Datatype of a field","long_desc":"Gets the SQL type of the field referenced by number in the given result identifier.","ver":"PHP 4, PHP 5","ret_desc":"Returns the field type as a string, or FALSE on error.","url":"function.odbc-field-type","name":"odbc_field_type","params":[{"list":[{"type":"resource","var":"$result_id","beh":0,"desc":"The result identifier."},{"type":"int","var":"$field_number","beh":0,"desc":"The field number. Field numbering starts at 1."}],"ret_type":"string"}]},"odbc_foreignkeys":{"desc":"Retrieves a list of foreign keys","long_desc":"Retrieves a list of foreign keys in the specified table or a list of foreign keys in other tables that refer to the primary key in the specified table","ver":"PHP 4, PHP 5","ret_desc":"Returns an ODBC result identifier or FALSE on failure.","url":"function.odbc-foreignkeys","name":"odbc_foreignkeys","params":[{"list":[{"type":"resource","var":"$connection_id","beh":0,"desc":"The ODBC connection identifier, see odbc_connect() for details."},{"type":"string","var":"$pk_qualifier","beh":0,"desc":"The primary key qualifier."},{"type":"string","var":"$pk_owner","beh":1,"desc":"The primary key owner."},{"type":"string","var":"$pk_table","beh":1,"desc":"The primary key table."},{"type":"string","var":"$fk_qualifier","beh":1,"desc":"The foreign key qualifier."},{"type":"string","var":"$fk_owner","beh":1,"desc":"The foreign key owner."},{"type":"string","var":"$fk_table","beh":1,"desc":"The foreign key table."}],"ret_type":"resource"}]},"odbc_free_result":{"desc":"Free resources associated with a result","long_desc":"Free resources associated with a result. odbc_free_result() only needs to be called if you are worried about using too much memory while your script is running. All result memory will automatically be freed when the script is finished.","ver":"PHP 4, PHP 5","ret_desc":"Always returns TRUE.","url":"function.odbc-free-result","name":"odbc_free_result","params":[{"list":[],"ret_type":"bool"}]},"odbc_gettypeinfo":{"desc":"Retrieves information about data types supported by the data source","long_desc":"Retrieves information about data types supported by the data source.","ver":"PHP 4, PHP 5","ret_desc":"Returns an ODBC result identifier or FALSE on failure.","url":"function.odbc-gettypeinfo","name":"odbc_gettypeinfo","params":[{"list":[{"type":"resource","var":"$connection_id","beh":0,"desc":"The ODBC connection identifier, see odbc_connect() for details."},{"type":"int","var":"$data_type","beh":1,"desc":"The data type, which can be used to restrict the information to a single data type."}],"ret_type":"resource"}]},"odbc_longreadlen":{"desc":"Handling of LONG columns","long_desc":"Enables handling of LONG and LONGVARBINARY columns.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.odbc-longreadlen","name":"odbc_longreadlen","params":[{"list":[{"type":"resource","var":"$result_id","beh":0,"desc":"The result identifier."},{"type":"int","var":"$length","beh":0,"desc":"The number of bytes returned to PHP is controlled by the parameter length. If it is set to 0, Long column data is passed through to the client."}],"ret_type":"bool"}]},"odbc_next_result":{"desc":"Checks if multiple results are available","long_desc":"Checks if there are more result sets available as well as allowing access to the next result set via odbc_fetch_array(), odbc_fetch_row(), odbc_result(), etc.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns TRUE if there are more result sets, FALSE otherwise.","url":"function.odbc-next-result","name":"odbc_next_result","params":[{"list":[],"ret_type":"bool"}]},"odbc_num_fields":{"desc":"Number of columns in a result","long_desc":"Gets the number of fields (columns) in an ODBC result.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of fields, or -1 on error.","url":"function.odbc-num-fields","name":"odbc_num_fields","params":[{"list":[],"ret_type":"int"}]},"odbc_num_rows":{"desc":"Number of rows in a result","long_desc":"Gets the number of rows in a result. For INSERT, UPDATE and DELETE statements odbc_num_rows() returns the number of rows affected. For a SELECT clause this can be the number of rows available.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of rows in an ODBC result. This function will return -1 on error.","url":"function.odbc-num-rows","name":"odbc_num_rows","params":[{"list":[],"ret_type":"int"}]},"odbc_pconnect":{"desc":"Open a persistent database connection","long_desc":"Opens a persistent database connection. This function is much like odbc_connect(), except that the connection is not really closed when the script has finished. Future requests for a connection with the same dsn, user, password combination (via odbc_connect() and odbc_pconnect()) can reuse the persistent connection.","ver":"PHP 4, PHP 5","ret_desc":"Returns an ODBC connection id or 0 (FALSE) on error.","seealso":[],"url":"function.odbc-pconnect","name":"odbc_pconnect","params":[{"list":[{"type":"string","var":"$dsn","beh":0,"desc":""},{"type":"string","var":"$user","beh":1,"desc":""},{"type":"string","var":"$password","beh":1,"desc":""},{"type":"int","var":"$cursor_type","beh":1,"desc":""}],"ret_type":"resource"}]},"odbc_prepare":{"desc":"Prepares a statement for execution","long_desc":"Prepares a statement for execution. The result identifier can be used later to execute the statement with odbc_execute(). Some databases (such as IBM DB2, MS SQL Server, and Oracle) support stored procedures that accept parameters of type IN, INOUT, and OUT as defined by the ODBC specification. However, the Unified ODBC driver currently only supports parameters of type IN to stored procedures.","ver":"PHP 4, PHP 5","ret_desc":"Returns an ODBC result identifier if the SQL command was prepared successfully. Returns FALSE on error.","seealso":[],"url":"function.odbc-prepare","name":"odbc_prepare","params":[{"list":[{"type":"resource","var":"$connection_id","beh":0,"desc":"The ODBC connection identifier, see odbc_connect() for details."},{"type":"string","var":"$query_string","beh":0,"desc":"The query string statement being prepared."}],"ret_type":"resource"}]},"odbc_primarykeys":{"desc":"Gets the primary keys for a table","long_desc":"Returns a result identifier that can be used to fetch the column names that comprise the primary key for a table.","ver":"PHP 4, PHP 5","ret_desc":"Returns an ODBC result identifier or FALSE on failure.","url":"function.odbc-primarykeys","name":"odbc_primarykeys","params":[{"list":[{"type":"resource","var":"$connection_id","beh":0,"desc":"The ODBC connection identifier, see odbc_connect() for details."},{"type":"string","var":"$qualifier","beh":0,"desc":""},{"type":"string","var":"$owner","beh":1,"desc":""},{"type":"string","var":"$table","beh":1,"desc":""}],"ret_type":"resource"}]},"odbc_procedurecolumns":{"desc":"Retrieve information about parameters to procedures","long_desc":"Retrieve information about parameters to procedures.","ver":"PHP 4, PHP 5","ret_desc":"Returns the list of input and output parameters, as well as the columns that make up the result set for the specified procedures. Returns an ODBC result identifier or FALSE on failure.","url":"function.odbc-procedurecolumns","name":"odbc_procedurecolumns","params":[{"list":[],"ret_type":"resource"},{"list":[{"type":"resource","var":"$connection_id","beh":0,"desc":"The ODBC connection identifier, see odbc_connect() for details."},{"type":"string","var":"$qualifier","beh":0,"desc":"The qualifier."},{"type":"string","var":"$owner","beh":1,"desc":"The owner. This parameter accepts the following search patterns: \"%\" to match zero or more characters, and \"_\" to match a single character."},{"type":"string","var":"$proc","beh":1,"desc":"The proc. This parameter accepts the following search patterns: \"%\" to match zero or more characters, and \"_\" to match a single character."},{"type":"string","var":"$column","beh":1,"desc":"The column. This parameter accepts the following search patterns: \"%\" to match zero or more characters, and \"_\" to match a single character."}],"ret_type":"resource"}]},"odbc_procedures":{"desc":"Get the list of procedures stored in a specific data source","long_desc":"Lists all procedures in the requested range.","ver":"PHP 4, PHP 5","ret_desc":"Returns an ODBC result identifier containing the information or FALSE on failure.","url":"function.odbc-procedures","name":"odbc_procedures","params":[{"list":[],"ret_type":"resource"},{"list":[{"type":"resource","var":"$connection_id","beh":0,"desc":"The ODBC connection identifier, see odbc_connect() for details."},{"type":"string","var":"$qualifier","beh":0,"desc":"The qualifier."},{"type":"string","var":"$owner","beh":1,"desc":"The owner. This parameter accepts the following search patterns: \"%\" to match zero or more characters, and \"_\" to match a single character."},{"type":"string","var":"$name","beh":1,"desc":"The name. This parameter accepts the following search patterns: \"%\" to match zero or more characters, and \"_\" to match a single character."}],"ret_type":"resource"}]},"odbc_result":{"desc":"Get result data","long_desc":"Get result data","ver":"PHP 4, PHP 5","ret_desc":"Returns the string contents of the field, FALSE on error, NULL for NULL data, or TRUE for binary data.","url":"function.odbc-result","name":"odbc_result","params":[{"list":[{"type":"resource","var":"$result_id","beh":0,"desc":"The ODBC resource."},{"type":"mixed","var":"$field","beh":0,"desc":"The field name being retrieved. It can either be an integer containing the column number of the field you want; or it can be a string containing the name of the field."}],"ret_type":"mixed"}]},"odbc_result_all":{"desc":"Print result as HTML table","long_desc":"Prints all rows from a result identifier produced by odbc_exec(). The result is printed in HTML table format.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of rows in the result or FALSE on error.","url":"function.odbc-result-all","name":"odbc_result_all","params":[{"list":[{"type":"resource","var":"$result_id","beh":0,"desc":"The result identifier."},{"type":"string","var":"$format","beh":1,"desc":"Additional overall table formatting."}],"ret_type":"int"}]},"odbc_rollback":{"desc":"Rollback a transaction","long_desc":"Rolls back all pending statements on the connection.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.odbc-rollback","name":"odbc_rollback","params":[{"list":[],"ret_type":"bool"}]},"odbc_setoption":{"desc":"Adjust ODBC settings","long_desc":"This function allows fiddling with the ODBC options for a particular connection or query result. It was written to help find work around to problems in quirky ODBC drivers. You should probably only use this function if you are an ODBC programmer and understand the effects the various options will have. You will certainly need a good ODBC reference to explain all the different options and values that can be used. Different driver versions support different options. Because the effects may vary depending on the ODBC driver, use of this function in scripts to be made publicly available is strongly discouraged. Also, some ODBC options are not available to this function because they must be set before the connection is established or the query is prepared. However, if on a particular job it can make PHP work so your boss doesn't tell you to use a commercial product, that's all that really matters.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.odbc-setoption","name":"odbc_setoption","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"Is a connection id or result id on which to change the settings. For SQLSetConnectOption(), this is a connection id. For SQLSetStmtOption(), this is a result id."},{"type":"int","var":"$function","beh":0,"desc":"Is the ODBC function to use. The value should be 1 for SQLSetConnectOption() and 2 for SQLSetStmtOption()."},{"type":"int","var":"$option","beh":1,"desc":"The option to set."},{"type":"int","var":"$param","beh":1,"desc":"The value for the given option."}],"ret_type":"bool"}]},"odbc_specialcolumns":{"desc":"Retrieves special columns","long_desc":"Retrieves either the optimal set of columns that uniquely identifies a row in the table, or columns that are automatically updated when any value in the row is updated by a transaction.","ver":"PHP 4, PHP 5","ret_desc":"Returns an ODBC result identifier or FALSE on failure.","url":"function.odbc-specialcolumns","name":"odbc_specialcolumns","params":[{"list":[{"type":"resource","var":"$connection_id","beh":0,"desc":"The ODBC connection identifier, see odbc_connect() for details."},{"type":"int","var":"$type","beh":0,"desc":""},{"type":"string","var":"$qualifier","beh":1,"desc":"The qualifier."},{"type":"string","var":"$owner","beh":1,"desc":"The owner."},{"type":"string","var":"$table","beh":1,"desc":"The table."},{"type":"int","var":"$scope","beh":1,"desc":"The scope, which orders the result set."},{"type":"int","var":"$nullable","beh":1,"desc":"The nullable option."}],"ret_type":"resource"}]},"odbc_statistics":{"desc":"Retrieve statistics about a table","long_desc":"Get statistics about a table and its indexes.","ver":"PHP 4, PHP 5","ret_desc":"Returns an ODBC result identifier or FALSE on failure.","url":"function.odbc-statistics","name":"odbc_statistics","params":[{"list":[{"type":"resource","var":"$connection_id","beh":0,"desc":"The ODBC connection identifier, see odbc_connect() for details."},{"type":"string","var":"$qualifier","beh":0,"desc":"The qualifier."},{"type":"string","var":"$owner","beh":1,"desc":"The owner."},{"type":"string","var":"$table_name","beh":1,"desc":"The table name."},{"type":"int","var":"$unique","beh":1,"desc":"The unique attribute."},{"type":"int","var":"$accuracy","beh":1,"desc":"The accuracy."}],"ret_type":"resource"}]},"odbc_tableprivileges":{"desc":"Lists tables and the privileges associated with each table","long_desc":"Lists tables in the requested range and the privileges associated with each table.","ver":"PHP 4, PHP 5","ret_desc":"An ODBC result identifier or FALSE on failure.","url":"function.odbc-tableprivileges","name":"odbc_tableprivileges","params":[{"list":[{"type":"resource","var":"$connection_id","beh":0,"desc":"The ODBC connection identifier, see odbc_connect() for details."},{"type":"string","var":"$qualifier","beh":0,"desc":"The qualifier."},{"type":"string","var":"$owner","beh":1,"desc":"The owner. Accepts the following search patterns: ('%' to match zero or more characters and '_' to match a single character)"},{"type":"string","var":"$name","beh":1,"desc":"The name. Accepts the following search patterns: ('%' to match zero or more characters and '_' to match a single character)"}],"ret_type":"resource"}]},"odbc_tables":{"desc":"Get the list of table names stored in a specific data source","long_desc":"Lists all tables in the requested range. To support enumeration of qualifiers, owners, and table types, the following special semantics for the qualifier, owner, name, and table_type are available:","ver":"PHP 4, PHP 5","ret_desc":"Returns an ODBC result identifier containing the information or FALSE on failure.","seealso":[],"url":"function.odbc-tables","name":"odbc_tables","params":[{"list":[{"type":"resource","var":"$connection_id","beh":1,"desc":"The ODBC connection identifier, see odbc_connect() for details."},{"type":"string","var":"$qualifier","beh":1,"desc":"The qualifier."},{"type":"string","var":"$owner","beh":1,"desc":"The owner. Accepts search patterns ('%' to match zero or more characters and '_' to match a single character)."},{"type":"string","var":"$name","beh":1,"desc":"The name. Accepts search patterns ('%' to match zero or more characters and '_' to match a single character)."},{"type":"string","var":"$types","beh":1,"desc":"If table_type is not an empty string, it must contain a list of comma-separated values for the types of interest; each value may be enclosed in single quotes (') or unquoted. For example, \"'TABLE','VIEW'\" or \"TABLE, VIEW\". If the data source does not support a specified table type, odbc_tables() does not return any results for that type."}],"ret_type":"resource"}]},"openal_buffer_create":{"desc":"Generate OpenAL buffer","ver":"PECL openal >= 0.1.0","ret_desc":"Returns an Open AL(Buffer) resource on success or FALSE on failure.","seealso":[],"url":"function.openal-buffer-create","name":"openal_buffer_create","params":[{"list":[],"ret_type":"resource"}]},"openal_buffer_data":{"desc":"Load a buffer with data","ver":"PECL openal >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openal-buffer-data","name":"openal_buffer_data","params":[{"list":[{"type":"resource","var":"$buffer","beh":0,"desc":"An Open AL(Buffer) resource (previously created by openal_buffer_create())."},{"type":"int","var":"$format","beh":0,"desc":"Format of data, one of: AL_FORMAT_MONO8, AL_FORMAT_MONO16, AL_FORMAT_STEREO8 and AL_FORMAT_STEREO16"},{"type":"string","var":"$data","beh":1,"desc":"Block of binary audio data in the format and freq specified."},{"type":"int","var":"$freq","beh":1,"desc":"Frequency of data given in Hz."}],"ret_type":"bool"}]},"openal_buffer_destroy":{"desc":"Destroys an OpenAL buffer","ver":"PECL openal >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openal-buffer-destroy","name":"openal_buffer_destroy","params":[{"list":[],"ret_type":"bool"}]},"openal_buffer_get":{"desc":"Retrieve an OpenAL buffer property","ver":"PECL openal >= 0.1.0","ret_desc":"Returns an integer value appropriate to the property requested or FALSE on failure.","seealso":[],"url":"function.openal-buffer-get","name":"openal_buffer_get","params":[{"list":[{"type":"resource","var":"$buffer","beh":0,"desc":"An Open AL(Buffer) resource (previously created by openal_buffer_create())."},{"type":"int","var":"$property","beh":0,"desc":"Specific property, one of: AL_FREQUENCY, AL_BITS, AL_CHANNELS and AL_SIZE."}],"ret_type":"int"}]},"openal_buffer_loadwav":{"desc":"Load a .wav file into a buffer","ver":"PECL openal >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openal-buffer-loadwav","name":"openal_buffer_loadwav","params":[{"list":[{"type":"resource","var":"$buffer","beh":0,"desc":"An Open AL(Buffer) resource (previously created by openal_buffer_create())."},{"type":"string","var":"$wavfile","beh":0,"desc":"Path to .wav file on local file system."}],"ret_type":"bool"}]},"openal_context_create":{"desc":"Create an audio processing context","ver":"PECL openal >= 0.1.0","ret_desc":"Returns an Open AL(Context) resource on success or FALSE on failure.","seealso":[],"url":"function.openal-context-create","name":"openal_context_create","params":[{"list":[],"ret_type":"resource"}]},"openal_context_current":{"desc":"Make the specified context current","ver":"PECL openal >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openal-context-current","name":"openal_context_current","params":[{"list":[],"ret_type":"bool"}]},"openal_context_destroy":{"desc":"Destroys a context","ver":"PECL openal >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openal-context-destroy","name":"openal_context_destroy","params":[{"list":[],"ret_type":"bool"}]},"openal_context_process":{"desc":"Process the specified context","ver":"PECL openal >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openal-context-process","name":"openal_context_process","params":[{"list":[],"ret_type":"bool"}]},"openal_context_suspend":{"desc":"Suspend the specified context","ver":"PECL openal >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openal-context-suspend","name":"openal_context_suspend","params":[{"list":[],"ret_type":"bool"}]},"openal_device_close":{"desc":"Close an OpenAL device","ver":"PECL openal >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openal-device-close","name":"openal_device_close","params":[{"list":[],"ret_type":"bool"}]},"openal_device_open":{"desc":"Initialize the OpenAL audio layer","ver":"PECL openal >= 0.1.0","ret_desc":"Returns an Open AL(Device) resource on success or FALSE on failure.","seealso":[],"url":"function.openal-device-open","name":"openal_device_open","params":[{"list":[],"ret_type":"resource"}]},"openal_listener_get":{"desc":"Retrieve a listener property","ver":"PECL openal >= 0.1.0","ret_desc":"Returns a float or array of floats (as appropriate) or FALSE on failure.","seealso":[],"url":"function.openal-listener-get","name":"openal_listener_get","params":[{"list":[],"ret_type":"mixed"}]},"openal_listener_set":{"desc":"Set a listener property","ver":"PECL openal >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openal-listener-set","name":"openal_listener_set","params":[{"list":[{"type":"int","var":"$property","beh":0,"desc":"Property to set, one of: AL_GAIN (float), AL_POSITION (array(float,float,float)), AL_VELOCITY (array(float,float,float)) and AL_ORIENTATION (array(float,float,float))."},{"type":"mixed","var":"$setting","beh":0,"desc":"Value to set, either float, or an array of floats as appropriate."}],"ret_type":"bool"}]},"openal_source_create":{"desc":"Generate a source resource","ver":"PECL openal >= 0.1.0","ret_desc":"Returns an Open AL(Source) resource on success or FALSE on failure.","seealso":[],"url":"function.openal-source-create","name":"openal_source_create","params":[{"list":[],"ret_type":"resource"}]},"openal_source_destroy":{"desc":"Destroy a source resource","ver":"PECL openal >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openal-source-destroy","name":"openal_source_destroy","params":[{"list":[],"ret_type":"bool"}]},"openal_source_get":{"desc":"Retrieve an OpenAL source property","ver":"PECL openal >= 0.1.0","ret_desc":"Returns the type associated with the property being retrieved or FALSE on failure.","seealso":[],"url":"function.openal-source-get","name":"openal_source_get","params":[{"list":[{"type":"resource","var":"$source","beh":0,"desc":"An Open AL(Source) resource (previously created by openal_source_create())."},{"type":"int","var":"$property","beh":0,"desc":"Property to get, one of: AL_SOURCE_RELATIVE (int), AL_SOURCE_STATE (int), AL_PITCH (float), AL_GAIN (float), AL_MIN_GAIN (float), AL_MAX_GAIN (float), AL_MAX_DISTANCE (float), AL_ROLLOFF_FACTOR (float), AL_CONE_OUTER_GAIN (float), AL_CONE_INNER_ANGLE (float), AL_CONE_OUTER_ANGLE (float), AL_REFERENCE_DISTANCE (float), AL_POSITION (array(float,float,float)), AL_VELOCITY (array(float,float,float)), AL_DIRECTION (array(float,float,float))."}],"ret_type":"mixed"}]},"openal_source_pause":{"desc":"Pause the source","ver":"PECL openal >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openal-source-pause","name":"openal_source_pause","params":[{"list":[],"ret_type":"bool"}]},"openal_source_play":{"desc":"Start playing the source","ver":"PECL openal >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openal-source-play","name":"openal_source_play","params":[{"list":[],"ret_type":"bool"}]},"openal_source_rewind":{"desc":"Rewind the source","ver":"PECL openal >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openal-source-rewind","name":"openal_source_rewind","params":[{"list":[],"ret_type":"bool"}]},"openal_source_set":{"desc":"Set source property","ver":"PECL openal >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openal-source-set","name":"openal_source_set","params":[{"list":[{"type":"resource","var":"$source","beh":0,"desc":"An Open AL(Source) resource (previously created by openal_source_create())."},{"type":"int","var":"$property","beh":0,"desc":"Property to set, one of: AL_BUFFER (OpenAL(Source)), AL_LOOPING (bool), AL_SOURCE_RELATIVE (int), AL_SOURCE_STATE (int), AL_PITCH (float), AL_GAIN (float), AL_MIN_GAIN (float), AL_MAX_GAIN (float), AL_MAX_DISTANCE (float), AL_ROLLOFF_FACTOR (float), AL_CONE_OUTER_GAIN (float), AL_CONE_INNER_ANGLE (float), AL_CONE_OUTER_ANGLE (float), AL_REFERENCE_DISTANCE (float), AL_POSITION (array(float,float,float)), AL_VELOCITY (array(float,float,float)), AL_DIRECTION (array(float,float,float))."},{"type":"mixed","var":"$setting","beh":1,"desc":"Value to assign to specified property. Refer to the description of property for a description of the value(s) expected."}],"ret_type":"bool"}]},"openal_source_stop":{"desc":"Stop playing the source","ver":"PECL openal >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openal-source-stop","name":"openal_source_stop","params":[{"list":[],"ret_type":"bool"}]},"openal_stream":{"desc":"Begin streaming on a source","ver":"PECL openal >= 0.1.0","ret_desc":"Returns a stream resource on success or FALSE on failure.","seealso":[],"url":"function.openal-stream","name":"openal_stream","params":[{"list":[{"type":"resource","var":"$source","beh":0,"desc":"An Open AL(Source) resource (previously created by openal_source_create())."},{"type":"int","var":"$format","beh":0,"desc":"Format of data, one of: AL_FORMAT_MONO8, AL_FORMAT_MONO16, AL_FORMAT_STEREO8 and AL_FORMAT_STEREO16"},{"type":"int","var":"$rate","beh":1,"desc":"Frequency of data to stream given in Hz."}],"ret_type":"resource"}]},"opendir":{"desc":"Open directory handle","long_desc":"Opens up a directory handle to be used in subsequent closedir(), readdir(), and rewinddir() calls.","ver":"PHP 4, PHP 5","ret_desc":"Returns a directory handle resource on success, or FALSE on failure.","seealso":[],"url":"function.opendir","name":"opendir","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":"The directory path that is to be opened"},{"type":"resource","var":"$context","beh":1,"desc":"For a description of the context parameter, refer to the streams section of the manual."}],"ret_type":"resource"}]},"openlog":{"desc":"Open connection to system logger","long_desc":"openlog() opens a connection to the system logger for a program. The use of openlog() is optional. It will automatically be called by syslog() if necessary, in which case ident will default to FALSE.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openlog","name":"openlog","params":[{"list":[{"type":"string","var":"$ident","beh":0,"desc":"The string ident is added to each message."},{"type":"int","var":"$option","beh":0,"desc":"The option argument is used to indicate what logging options will be used when generating a log message."},{"type":"int","var":"$facility","beh":1,"desc":"The facility argument is used to specify what type of program is logging the message. This allows you to specify (in your machine's syslog configuration) how messages coming from different facilities will be handled."}],"ret_type":"bool"}]},"openssl_cipher_iv_length":{"desc":"Gets the cipher iv length","long_desc":"Gets the cipher iv length.","ver":"PHP 5 >= PHP 5.3.3","ret_desc":"Returns the cipher length on success, or FALSE on failure.","url":"function.openssl-cipher-iv-length","name":"openssl_cipher_iv_length","params":[{"list":[],"ret_type":"int"}]},"openssl_csr_export":{"desc":"Exports a CSR as a string","long_desc":"openssl_csr_export() takes the Certificate Signing Request represented by csr and stores it as ascii-armoured text into out, which is passed by reference.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openssl-csr-export","name":"openssl_csr_export","params":[{"list":[{"type":"resource","var":"$csr","beh":0,"desc":""},{"type":"string","var":"&$out","beh":1,"desc":""},{"type":"bool","var":"$notext","beh":1,"desc":"The optional parameter notext affects the verbosity of the output; if it is FALSE, then additional human-readable information is included in the output. The default value of notext is TRUE.","def":"true"}],"ret_type":"bool"}]},"openssl_csr_export_to_file":{"desc":"Exports a CSR to a file","long_desc":"openssl_csr_export_to_file() takes the Certificate Signing Request represented by csr and saves it as ascii-armoured text into the file named by outfilename.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openssl-csr-export-to-file","name":"openssl_csr_export_to_file","params":[{"list":[{"type":"resource","var":"$csr","beh":0,"desc":""},{"type":"string","var":"$outfilename","beh":1,"desc":"Path to the output file."},{"type":"bool","var":"$notext","beh":1,"desc":"The optional parameter notext affects the verbosity of the output; if it is FALSE, then additional human-readable information is included in the output. The default value of notext is TRUE.","def":"true"}],"ret_type":"bool"}]},"openssl_csr_get_public_key":{"desc":"Returns the public key of a CERT","ver":"PHP 5 >= 5.2.0","url":"function.openssl-csr-get-public-key","name":"openssl_csr_get_public_key","params":[{"list":[{"type":"mixed","var":"$csr","beh":0,"desc":""},{"type":"bool","var":"$use_shortnames","beh":0,"desc":"","def":"true"}],"ret_type":"resource"}]},"openssl_csr_get_subject":{"desc":"Returns the subject of a CERT","ver":"PHP 5 >= 5.2.0","url":"function.openssl-csr-get-subject","name":"openssl_csr_get_subject","params":[{"list":[{"type":"mixed","var":"$csr","beh":0,"desc":""},{"type":"bool","var":"$use_shortnames","beh":0,"desc":"","def":"true"}],"ret_type":"array"}]},"openssl_csr_new":{"desc":"Generates a CSR","long_desc":"openssl_csr_new() generates a new CSR (Certificate Signing Request) based on the information provided by dn, which represents the Distinguished Name to be used in the certificate.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns the CSR.","url":"function.openssl-csr-new","name":"openssl_csr_new","params":[{"list":[{"type":"array","var":"$dn","beh":1,"desc":"The Distinguished Name to be used in the certificate."},{"type":"resource","var":"&$privkey","beh":1,"desc":"privkey should be set to a private key that was previously generated by openssl_pkey_new() (or otherwise obtained from the other openssl_pkey family of functions). The corresponding public portion of the key will be used to sign the CSR."},{"type":"array","var":"$configargs","beh":1,"desc":"By default, the information in your system openssl.conf is used to initialize the request; you can specify a configuration file section by setting the config_section_section key of configargs. You can also specify an alternative openssl configuration file by setting the value of the config key to the path of the file you want to use. The following keys, if present in configargs behave as their equivalents in the openssl.conf, as listed in the table below."},{"type":"array","var":"$extraattribs","beh":1,"desc":"extraattribs is used to specify additional configuration options for the CSR. Both dn and extraattribs are associative arrays whose keys are converted to OIDs and applied to the relevant part of the request."}],"ret_type":"mixed"}]},"openssl_csr_sign":{"desc":"Sign a CSR with another certificate (or itself) and generate a certificate","long_desc":"openssl_csr_sign() generates an x509 certificate resource from the given CSR.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns an x509 certificate resource on success, FALSE on failure.","url":"function.openssl-csr-sign","name":"openssl_csr_sign","params":[{"list":[{"type":"mixed","var":"$csr","beh":1,"desc":"A CSR previously generated by openssl_csr_new(). It can also be the path to a PEM encoded CSR when specified as file:\/\/path\/to\/csr or an exported string generated by openssl_csr_export()."},{"type":"mixed","var":"$cacert","beh":1,"desc":"The generated certificate will be signed by cacert. If cacert is NULL, the generated certificate will be a self-signed certificate."},{"type":"mixed","var":"$priv_key","beh":1,"desc":"priv_key is the private key that corresponds to cacert."},{"type":"int","var":"$days","beh":1,"desc":"days specifies the length of time for which the generated certificate will be valid, in days."},{"type":"array","var":"$configargs","beh":1,"desc":"You can finetune the CSR signing by configargs. See openssl_csr_new() for more information about configargs."},{"type":"int","var":"$serial","beh":1,"desc":"An optional the serial number of issued certificate. If not specified it will default to 0.","def":0}],"ret_type":"resource"}]},"openssl_decrypt":{"desc":"Decrypts data","long_desc":"Takes a raw or base64 encoded string and decrypts it using a given method and key.","ver":"PHP 5 >= 5.3.0","ret_desc":"The decrypted string on success or FALSE on failure.","seealso":[],"url":"function.openssl-decrypt","name":"openssl_decrypt","params":[{"list":[{"type":"string","var":"$data","beh":1,"desc":"The data."},{"type":"string","var":"$method","beh":1,"desc":"The cipher method."},{"type":"string","var":"$password","beh":1,"desc":"The password."},{"type":"bool","var":"$raw_input","beh":1,"desc":"Setting to TRUE will take a raw encoded string, otherwise a base64 string is assumed for the data parameter.","def":"false"},{"type":"string","var":"$iv","beh":1,"desc":"A non-NULL Initialization Vector.","def":"\"\""}],"ret_type":"string"}]},"openssl_dh_compute_key":{"desc":"Computes shared secret for public value of remote DH key and local DH key","ver":"No version information available, might only be in SVN","ret_desc":"Returns computed key on success or FALSE on failure.","url":"function.openssl-dh-compute-key","name":"openssl_dh_compute_key","params":[{"list":[{"type":"string","var":"$pub_key","beh":0,"desc":"Public key"},{"type":"resource","var":"$dh_key","beh":0,"desc":"DH key"}],"ret_type":"string"}]},"openssl_digest":{"desc":"Computes a digest","long_desc":"Computes a digest hash value for the given data using a given method, and returns a raw or binhex encoded string.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the digested hash value on success or FALSE on failure.","seealso":[],"url":"function.openssl-digest","name":"openssl_digest","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":"The data."},{"type":"string","var":"$method","beh":1,"desc":"The digest method."},{"type":"bool","var":"$raw_output","beh":1,"desc":"Setting to TRUE will return as raw output data, otherwise the return value is binhex encoded.","def":"false"}],"ret_type":"string"}]},"openssl_encrypt":{"desc":"Encrypts data","long_desc":"Encrypts given data with given method and key, returns a raw or base64 encoded string","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the encrypted string on success or FALSE on failure.","seealso":[],"url":"function.openssl-encrypt","name":"openssl_encrypt","params":[{"list":[{"type":"string","var":"$data","beh":1,"desc":"The data."},{"type":"string","var":"$method","beh":1,"desc":"The cipher method."},{"type":"string","var":"$password","beh":1,"desc":"The password."},{"type":"bool","var":"$raw_output","beh":1,"desc":"Setting to TRUE will return as raw output data, otherwise the return value is base64 encoded.","def":"false"},{"type":"string","var":"$iv","beh":1,"desc":"A non-NULL Initialization Vector.","def":"\"\""}],"ret_type":"string"}]},"openssl_error_string":{"desc":"Return openSSL error message","long_desc":"openssl_error_string() returns the last error from the openSSL library. Error messages are queued, so this function should be called multiple times to collect all of the information. The last error will be the most recent one.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns an error message string, or FALSE if there are no more error messages to return.","url":"function.openssl-error-string","name":"openssl_error_string","params":[{"list":[],"ret_type":"string"}]},"openssl_free_key":{"desc":"Free key resource","long_desc":"openssl_free_key() frees the key associated with the specified key_identifier from memory.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"No value is returned.","url":"function.openssl-free-key","name":"openssl_free_key","params":[{"list":[],"ret_type":"void"}]},"openssl_get_cipher_methods":{"desc":"Gets available cipher methods","long_desc":"Gets a list of available cipher methods.","ver":"PHP 5 >= 5.3.0","ret_desc":"An array of available cipher methods.","seealso":[],"url":"function.openssl-get-cipher-methods","name":"openssl_get_cipher_methods","params":[{"list":[],"ret_type":"array"}]},"openssl_get_md_methods":{"desc":"Gets available digest methods","long_desc":"Gets a list of available digest methods.","ver":"PHP 5 >= 5.3.0","ret_desc":"An array of available digest methods.","seealso":[],"url":"function.openssl-get-md-methods","name":"openssl_get_md_methods","params":[{"list":[],"ret_type":"array"}]},"openssl_get_privatekey":{"desc":"Alias of openssl_pkey_get_private()","long_desc":"This function is an alias of: openssl_pkey_get_private().","ver":"PHP 4 >= 4.0.4, PHP 5","url":"function.openssl-get-privatekey","name":"openssl_get_privatekey","params":[]},"openssl_get_publickey":{"desc":"Alias of openssl_pkey_get_public()","long_desc":"This function is an alias of: openssl_pkey_get_public().","ver":"PHP 4 >= 4.0.4, PHP 5","url":"function.openssl-get-publickey","name":"openssl_get_publickey","params":[]},"openssl_open":{"desc":"Open sealed data","long_desc":"openssl_open() opens (decrypts) sealed_data using the private key associated with the key identifier priv_key_id and the envelope key env_key, and fills open_data with the decrypted data. The envelope key is generated when the data are sealed and can only be used by one specific private key. See openssl_seal() for more information.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openssl-open","name":"openssl_open","params":[{"list":[{"type":"string","var":"$sealed_data","beh":0,"desc":""},{"type":"string","var":"&$open_data","beh":1,"desc":"If the call is successful the opened data is returned in this parameter."},{"type":"string","var":"$env_key","beh":1,"desc":""},{"type":"mixed","var":"$priv_key_id","beh":1,"desc":""},{"type":"string","var":"$method","beh":1,"desc":""}],"ret_type":"bool"}]},"openssl_pkcs12_export":{"desc":"Exports a PKCS#12 Compatible Certificate Store File to variable.","long_desc":"openssl_pkcs12_export() stores x509 into a string named by out in a PKCS#12 file format.","ver":"PHP 5 >= 5.2.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.openssl-pkcs12-export","name":"openssl_pkcs12_export","params":[{"list":[{"type":"mixed","var":"$x509","beh":0,"desc":"See Key\/Certificate parameters for a list of valid values."},{"type":"string","var":"&$out","beh":1,"desc":"On success, this will hold the PKCS#12."},{"type":"mixed","var":"$priv_key","beh":1,"desc":"Private key component of PKCS#12 file."},{"type":"string","var":"$pass","beh":1,"desc":"Encryption password for unlocking the PKCS#12 file."},{"type":"array","var":"$args","beh":1,"desc":""}],"ret_type":"bool"}]},"openssl_pkcs12_export_to_file":{"desc":"Exports a PKCS#12 Compatible Certificate Store File","long_desc":"openssl_pkcs12_export_to_file() stores x509 into a file named by filename in a PKCS#12 file format.","ver":"PHP 5 >= 5.2.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.openssl-pkcs12-export-to-file","name":"openssl_pkcs12_export_to_file","params":[{"list":[{"type":"mixed","var":"$x509","beh":0,"desc":"See Key\/Certificate parameters for a list of valid values."},{"type":"string","var":"$filename","beh":1,"desc":"Path to the output file."},{"type":"mixed","var":"$priv_key","beh":1,"desc":"Private key component of PKCS#12 file."},{"type":"string","var":"$pass","beh":1,"desc":"Encryption password for unlocking the PKCS#12 file."},{"type":"array","var":"$args","beh":1,"desc":""}],"ret_type":"bool"}]},"openssl_pkcs12_read":{"desc":"Parse a PKCS#12 Certificate Store into an array","long_desc":"openssl_pkcs12_read() parses the PKCS#12 certificate store supplied by pkcs12 into a array named certs.","ver":"PHP 5 >= 5.2.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.openssl-pkcs12-read","name":"openssl_pkcs12_read","params":[{"list":[{"type":"string","var":"$pkcs12","beh":0,"desc":""},{"type":"array","var":"&$certs","beh":0,"desc":"On success, this will hold the Certificate Store Data."},{"type":"string","var":"$pass","beh":1,"desc":"Encryption password for unlocking the PKCS#12 file."}],"ret_type":"bool"}]},"openssl_pkcs7_decrypt":{"desc":"Decrypts an S\/MIME encrypted message","long_desc":"Decrypts the S\/MIME encrypted message contained in the file specified by infilename using the certificate and its associated private key specified by recipcert and recipkey.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.openssl-pkcs7-decrypt","name":"openssl_pkcs7_decrypt","params":[{"list":[{"type":"string","var":"$infilename","beh":0,"desc":""},{"type":"string","var":"$outfilename","beh":1,"desc":"The decrypted message is written to the file specified by outfilename."},{"type":"mixed","var":"$recipcert","beh":1,"desc":""},{"type":"mixed","var":"$recipkey","beh":1,"desc":""}],"ret_type":"bool"}]},"openssl_pkcs7_encrypt":{"desc":"Encrypt an S\/MIME message","long_desc":"openssl_pkcs7_encrypt() takes the contents of the file named infile and encrypts them using an RC2 40-bit cipher so that they can only be read by the intended recipients specified by recipcerts.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.openssl-pkcs7-encrypt","name":"openssl_pkcs7_encrypt","params":[{"list":[{"type":"string","var":"$infile","beh":1,"desc":""},{"type":"string","var":"$outfile","beh":1,"desc":""},{"type":"mixed","var":"$recipcerts","beh":1,"desc":"Either a lone X.509 certificate, or an array of X.509 certificates."},{"type":"array","var":"$headers","beh":1,"desc":"headers is an array of headers that will be prepended to the data after it has been encrypted. headers can be either an associative array keyed by header name, or an indexed array, where each element contains a single header line."},{"type":"int","var":"$flags","beh":1,"desc":"flags can be used to specify options that affect the encoding process - see PKCS7 constants.","def":0},{"type":"int","var":"$cipherid","beh":1,"desc":"One of cipher constants.","def":"OPENSSL_CIPHER_RC2_40"}],"ret_type":"bool"}]},"openssl_pkcs7_sign":{"desc":"Sign an S\/MIME message","long_desc":"openssl_pkcs7_sign() takes the contents of the file named infilename and signs them using the certificate and its matching private key specified by signcert and privkey parameters.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.openssl-pkcs7-sign","name":"openssl_pkcs7_sign","params":[{"list":[{"type":"string","var":"$infilename","beh":1,"desc":""},{"type":"string","var":"$outfilename","beh":1,"desc":""},{"type":"mixed","var":"$signcert","beh":1,"desc":""},{"type":"mixed","var":"$privkey","beh":1,"desc":""},{"type":"array","var":"$headers","beh":1,"desc":"headers is an array of headers that will be prepended to the data after it has been signed (see openssl_pkcs7_encrypt() for more information about the format of this parameter)."},{"type":"int","var":"$flags","beh":1,"desc":"flags can be used to alter the output - see PKCS7 constants.","def":"PKCS7_DETACHED"},{"type":"string","var":"$extracerts","beh":1,"desc":"extracerts specifies the name of a file containing a bunch of extra certificates to include in the signature which can for example be used to help the recipient to verify the certificate that you used."}],"ret_type":"bool"}]},"openssl_pkcs7_verify":{"desc":"Verifies the signature of an S\/MIME signed message","long_desc":"openssl_pkcs7_verify() reads the S\/MIME message contained in the given file and examines the digital signature.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE if the signature is verified, FALSE if it is not correct (the message has been tampered with, or the signing certificate is invalid), or -1 on error.","url":"function.openssl-pkcs7-verify","name":"openssl_pkcs7_verify","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"Path to the message."},{"type":"int","var":"$flags","beh":1,"desc":"flags can be used to affect how the signature is verified - see PKCS7 constants for more information."},{"type":"string","var":"$outfilename","beh":1,"desc":"If the outfilename is specified, it should be a string holding the name of a file into which the certificates of the persons that signed the messages will be stored in PEM format."},{"type":"array","var":"$cainfo","beh":1,"desc":"If the cainfo is specified, it should hold information about the trusted CA certificates to use in the verification process - see certificate verification for more information about this parameter."},{"type":"string","var":"$extracerts","beh":1,"desc":"If the extracerts is specified, it is the filename of a file containing a bunch of certificates to use as untrusted CAs."},{"type":"string","var":"$content","beh":1,"desc":"You can specify a filename with content that will be filled with the verified data, but with the signature information stripped."}],"ret_type":"mixed"}]},"openssl_pkey_export":{"desc":"Gets an exportable representation of a key into a string","long_desc":"openssl_pkey_export() exports key as a PEM encoded string and stores it into out (which is passed by reference).","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.openssl-pkey-export","name":"openssl_pkey_export","params":[{"list":[{"type":"mixed","var":"$key","beh":1,"desc":""},{"type":"string","var":"&$out","beh":1,"desc":""},{"type":"string","var":"$passphrase","beh":1,"desc":"The key is optionally protected by passphrase."},{"type":"array","var":"$configargs","beh":1,"desc":"configargs can be used to fine-tune the export process by specifying and\/or overriding options for the openssl configuration file. See openssl_csr_new() for more information about configargs."}],"ret_type":"bool"}]},"openssl_pkey_export_to_file":{"desc":"Gets an exportable representation of a key into a file","long_desc":"openssl_pkey_export_to_file() saves an ascii-armoured (PEM encoded) rendition of key into the file named by outfilename.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.openssl-pkey-export-to-file","name":"openssl_pkey_export_to_file","params":[{"list":[{"type":"mixed","var":"$key","beh":1,"desc":""},{"type":"string","var":"$outfilename","beh":1,"desc":"Path to the output file."},{"type":"string","var":"$passphrase","beh":1,"desc":"The key can be optionally protected by a passphrase."},{"type":"array","var":"$configargs","beh":1,"desc":"configargs can be used to fine-tune the export process by specifying and\/or overriding options for the openssl configuration file. See openssl_csr_new() for more information about configargs."}],"ret_type":"bool"}]},"openssl_pkey_free":{"desc":"Frees a private key","long_desc":"This function frees a private key created by openssl_pkey_new().","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"No value is returned.","url":"function.openssl-pkey-free","name":"openssl_pkey_free","params":[{"list":[],"ret_type":"void"}]},"openssl_pkey_get_details":{"desc":"Returns an array with the key details","long_desc":"This function returns the key details (bits, key, type).","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns an array with the key details in success or FALSE in failure. Returned array has indexes bits (number of bits), key (string representation of the public key) and type (type of the key which is one of OPENSSL_KEYTYPE_RSA, OPENSSL_KEYTYPE_DSA, OPENSSL_KEYTYPE_DH, OPENSSL_KEYTYPE_EC or -1 meaning unknown).","url":"function.openssl-pkey-get-details","name":"openssl_pkey_get_details","params":[{"list":[],"ret_type":"array"}]},"openssl_pkey_get_private":{"desc":"Get a private key","long_desc":"openssl_get_privatekey() parses key and prepares it for use by other functions.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns a positive key resource identifier on success, or FALSE on error.","url":"function.openssl-pkey-get-private","name":"openssl_pkey_get_private","params":[{"list":[{"type":"mixed","var":"$key","beh":0,"desc":"key can be one of the following:"},{"type":"string","var":"$passphrase","beh":0,"desc":"The optional parameter passphrase must be used if the specified key is encrypted (protected by a passphrase).","def":"\"\""}],"ret_type":"resource"}]},"openssl_pkey_get_public":{"desc":"Extract public key from certificate and prepare it for use","long_desc":"openssl_get_publickey() extracts the public key from certificate and prepares it for use by other functions.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns a positive key resource identifier on success, or FALSE on error.","url":"function.openssl-pkey-get-public","name":"openssl_pkey_get_public","params":[{"list":[],"ret_type":"resource"}]},"openssl_pkey_new":{"desc":"Generates a new private key","long_desc":"openssl_pkey_new() generates a new private and public key pair. The public component of the key can be obtained using openssl_pkey_get_public().","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns a resource identifier for the pkey on success, or FALSE on error.","url":"function.openssl-pkey-new","name":"openssl_pkey_new","params":[{"list":[],"ret_type":"resource"}]},"openssl_private_decrypt":{"desc":"Decrypts data with private key","long_desc":"openssl_private_decrypt() decrypts data that was previous encrypted via openssl_public_encrypt() and stores the result into decrypted. You can use this function e.g. to decrypt data which were supposed only to you.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openssl-private-decrypt","name":"openssl_private_decrypt","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":""},{"type":"string","var":"&$decrypted","beh":1,"desc":""},{"type":"mixed","var":"$key","beh":1,"desc":"key must be the private key corresponding that was used to encrypt the data."},{"type":"int","var":"$padding","beh":1,"desc":"padding can be one of OPENSSL_PKCS1_PADDING, OPENSSL_SSLV23_PADDING, OPENSSL_PKCS1_OAEP_PADDING, OPENSSL_NO_PADDING.","def":"OPENSSL_PKCS1_PADDING"}],"ret_type":"bool"}]},"openssl_private_encrypt":{"desc":"Encrypts data with private key","long_desc":"openssl_private_encrypt() encrypts data with private key and stores the result into crypted. Encrypted data can be decrypted via openssl_public_decrypt(). This function can be used e.g. to sign data (or its hash) to prove that it is not written by someone else.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openssl-private-encrypt","name":"openssl_private_encrypt","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":""},{"type":"string","var":"&$crypted","beh":1,"desc":""},{"type":"mixed","var":"$key","beh":1,"desc":""},{"type":"int","var":"$padding","beh":1,"desc":"padding can be one of OPENSSL_PKCS1_PADDING, OPENSSL_NO_PADDING.","def":"OPENSSL_PKCS1_PADDING"}],"ret_type":"bool"}]},"openssl_public_decrypt":{"desc":"Decrypts data with public key","long_desc":"openssl_public_decrypt() decrypts data that was previous encrypted via openssl_private_encrypt() and stores the result into decrypted. You can use this function e.g. to check if the message was written by the owner of the private key.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openssl-public-decrypt","name":"openssl_public_decrypt","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":""},{"type":"string","var":"&$decrypted","beh":1,"desc":""},{"type":"mixed","var":"$key","beh":1,"desc":"key must be the public key corresponding that was used to encrypt the data."},{"type":"int","var":"$padding","beh":1,"desc":"padding can be one of OPENSSL_PKCS1_PADDING, OPENSSL_NO_PADDING.","def":"OPENSSL_PKCS1_PADDING"}],"ret_type":"bool"}]},"openssl_public_encrypt":{"desc":"Encrypts data with public key","long_desc":"openssl_public_encrypt() encrypts data with public key and stores the result into crypted. Encrypted data can be decrypted via openssl_private_decrypt(). This function can be used e.g. to encrypt message which can be then read only by owner of the private key. It can be also used to store secure data in database.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openssl-public-encrypt","name":"openssl_public_encrypt","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":""},{"type":"string","var":"&$crypted","beh":1,"desc":"This will hold the result of the encryption."},{"type":"mixed","var":"$key","beh":1,"desc":"The public key."},{"type":"int","var":"$padding","beh":1,"desc":"padding can be one of OPENSSL_PKCS1_PADDING, OPENSSL_SSLV23_PADDING, OPENSSL_PKCS1_OAEP_PADDING, OPENSSL_NO_PADDING.","def":"OPENSSL_PKCS1_PADDING"}],"ret_type":"bool"}]},"openssl_random_pseudo_bytes":{"desc":"Generate a pseudo-random string of bytes","long_desc":"Generates a string of pseudo-random bytes, with the number of bytes determined by the length parameter. It also indicates if a cryptographically strong algorithm was used to produce the pseudo-random bytes, and does this via the optional crypto_strong parameter. It's rare for this to be FALSE, but some systems may be broken or old.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the generated string of bytes on success, or FALSE on failure.","seealso":[],"url":"function.openssl-random-pseudo-bytes","name":"openssl_random_pseudo_bytes","params":[{"list":[{"type":"int","var":"$length","beh":0,"desc":"The length of the desired string of bytes. Must be a positive integer. PHP will try to cast this parameter to a non-null integer to use it."},{"type":"bool","var":"&$crypto_strong","beh":1,"desc":"If passed into the function, this will hold a boolean value that determines if the algorithm used was \"cryptographically strong\", e.g., safe for usage with GPG, passwords, etc. TRUE if it did, otherwise FALSE"}],"ret_type":"string"}]},"openssl_seal":{"desc":"Seal (encrypt) data","long_desc":"openssl_seal() seals (encrypts) data by using RC4 with a randomly generated secret key. The key is encrypted with each of the public keys associated with the identifiers in pub_key_ids and each encrypted key is returned in env_keys. This means that one can send sealed data to multiple recipients (provided one has obtained their public keys). Each recipient must receive both the sealed data and the envelope key that was encrypted with the recipient's public key.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns the length of the sealed data on success, or FALSE on error. If successful the sealed data is returned in sealed_data, and the envelope keys in env_keys.","seealso":[],"url":"function.openssl-seal","name":"openssl_seal","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":""},{"type":"string","var":"&$sealed_data","beh":1,"desc":""},{"type":"array","var":"&$env_keys","beh":1,"desc":""},{"type":"array","var":"$pub_key_ids","beh":1,"desc":""},{"type":"string","var":"$method","beh":1,"desc":""}],"ret_type":"int"}]},"openssl_sign":{"desc":"Generate signature","long_desc":"openssl_sign() computes a signature for the specified data by using SHA1 for hashing followed by encryption using the private key associated with priv_key_id. Note that the data itself is not encrypted.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.openssl-sign","name":"openssl_sign","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":""},{"type":"string","var":"&$signature","beh":1,"desc":"If the call was successful the signature is returned in signature."},{"type":"mixed","var":"$priv_key_id","beh":1,"desc":""},{"type":"int","var":"$signature_alg","beh":1,"desc":"For more information see the list of Signature Algorithms.","def":"OPENSSL_ALGO_SHA1"}],"ret_type":"bool"}]},"openssl_verify":{"desc":"Verify signature","long_desc":"openssl_verify() verifies that the signature is correct for the specified data using the public key associated with pub_key_id. This must be the public key corresponding to the private key used for signing.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns 1 if the signature is correct, 0 if it is incorrect, and -1 on error.","seealso":[],"url":"function.openssl-verify","name":"openssl_verify","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":""},{"type":"string","var":"$signature","beh":1,"desc":""},{"type":"mixed","var":"$pub_key_id","beh":1,"desc":""},{"type":"int","var":"$signature_alg","beh":1,"desc":"For more information see the list of Signature Algorithms.","def":"OPENSSL_ALGO_SHA1"}],"ret_type":"int"}]},"openssl_x509_check_private_key":{"desc":"Checks if a private key corresponds to a certificate","long_desc":"Checks whether the given key is the private key that corresponds to cert.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE if key is the private key that corresponds to cert, or FALSE otherwise.","url":"function.openssl-x509-check-private-key","name":"openssl_x509_check_private_key","params":[{"list":[{"type":"mixed","var":"$cert","beh":0,"desc":"The certificate."},{"type":"mixed","var":"$key","beh":0,"desc":"The private key."}],"ret_type":"bool"}]},"openssl_x509_checkpurpose":{"desc":"Verifies if a certificate can be used for a particular purpose","long_desc":"openssl_x509_checkpurpose() examines a certificate to see if it can be used for the specified purpose.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns TRUE if the certificate can be used for the intended purpose, FALSE if it cannot, or -1 on error.","url":"function.openssl-x509-checkpurpose","name":"openssl_x509_checkpurpose","params":[{"list":[{"type":"mixed","var":"$x509cert","beh":1,"desc":"The examined certificate."},{"type":"int","var":"$purpose","beh":1,"desc":""},{"type":"array","var":"$cainfo","beh":1,"desc":"cainfo should be an array of trusted CA files\/dirs as described in Certificate Verification.","def":"array()"},{"type":"string","var":"$untrustedfile","beh":1,"desc":"If specified, this should be the name of a PEM encoded file holding certificates that can be used to help verify the certificate, although no trust is placed in the certificates that come from that file."}],"ret_type":"int"}]},"openssl_x509_export":{"desc":"Exports a certificate as a string","long_desc":"openssl_x509_export() stores x509 into a string named by output in a PEM encoded format.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.openssl-x509-export","name":"openssl_x509_export","params":[{"list":[{"type":"mixed","var":"$x509","beh":0,"desc":"See Key\/Certificate parameters for a list of valid values."},{"type":"string","var":"&$output","beh":1,"desc":"On success, this will hold the PEM."},{"type":"bool","var":"$notext","beh":1,"desc":"The optional parameter notext affects the verbosity of the output; if it is FALSE, then additional human-readable information is included in the output. The default value of notext is TRUE.","def":"TRUE"}],"ret_type":"bool"}]},"openssl_x509_export_to_file":{"desc":"Exports a certificate to file","long_desc":"openssl_x509_export_to_file() stores x509 into a file named by outfilename in a PEM encoded format.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.openssl-x509-export-to-file","name":"openssl_x509_export_to_file","params":[{"list":[{"type":"mixed","var":"$x509","beh":0,"desc":"See Key\/Certificate parameters for a list of valid values."},{"type":"string","var":"$outfilename","beh":1,"desc":"Path to the output file."},{"type":"bool","var":"$notext","beh":1,"desc":"The optional parameter notext affects the verbosity of the output; if it is FALSE, then additional human-readable information is included in the output. The default value of notext is TRUE.","def":"TRUE"}],"ret_type":"bool"}]},"openssl_x509_free":{"desc":"Free certificate resource","long_desc":"openssl_x509_free() frees the certificate associated with the specified x509cert resource from memory.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"No value is returned.","url":"function.openssl-x509-free","name":"openssl_x509_free","params":[{"list":[],"ret_type":"void"}]},"openssl_x509_parse":{"desc":"Parse an X509 certificate and return the information as an array","long_desc":"openssl_x509_parse() returns information about the supplied x509cert, including fields such as subject name, issuer name, purposes, valid from and valid to dates etc.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"The structure of the returned data is (deliberately) not yet documented, as it is still subject to change.","url":"function.openssl-x509-parse","name":"openssl_x509_parse","params":[{"list":[{"type":"mixed","var":"$x509cert","beh":0,"desc":""},{"type":"bool","var":"$shortnames","beh":0,"desc":"shortnames controls how the data is indexed in the array - if shortnames is TRUE (the default) then fields will be indexed with the short name form, otherwise, the long name form will be used - e.g.: CN is the shortname form of commonName.","def":"true"}],"ret_type":"array"}]},"openssl_x509_read":{"desc":"Parse an X.509 certificate and return a resource identifier for it","long_desc":"openssl_x509_read() parses the certificate supplied by x509certdata and returns a resource identifier for it.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"Returns a resource identifier on success or FALSE on failure.","url":"function.openssl-x509-read","name":"openssl_x509_read","params":[{"list":[],"ret_type":"resource"}]},"ord":{"desc":"Return ASCII value of character","long_desc":"Returns the ASCII value of the first character of string. This function complements chr().","ver":"PHP 4, PHP 5","ret_desc":"Returns the ASCII value as an integer.","seealso":[],"url":"function.ord","name":"ord","params":[{"list":[],"ret_type":"int"}]},"outeriterator":{"name":"OuterIterator","class":"OuterIterator"},"output_add_rewrite_var":{"desc":"Add URL rewriter values","long_desc":"This function adds another name\/value pair to the URL rewrite mechanism. The name and value will be added to URLs (as GET parameter) and forms (as hidden input fields) the same way as the session ID when transparent URL rewriting is enabled with session.use_trans_sid. Please note that absolute URLs (http:\/\/example.com\/..) aren't rewritten. This function's behavior is controlled by the url_rewriter.tags php.ini parameter.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.output-add-rewrite-var","name":"output_add_rewrite_var","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"The variable name."},{"type":"string","var":"$value","beh":0,"desc":"The variable value."}],"ret_type":"bool"}]},"output_reset_rewrite_vars":{"desc":"Reset URL rewriter values","long_desc":"This function resets the URL rewriter and removes all rewrite variables previously set by the output_add_rewrite_var() function or the session mechanism (if session.use_trans_sid was set on session_start()).","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.output-reset-rewrite-vars","name":"output_reset_rewrite_vars","params":[{"list":[],"ret_type":"bool"}]},"overload":{"desc":"Enable property and method call overloading for a class","long_desc":"The overload() function will enable property and method call overloading for a class identified by class_name.","ver":"PHP 4 >= 4.3.0","ret_desc":"No value is returned.","url":"function.overload","name":"overload","params":[{"list":[],"ret_type":"void"}]},"override_function":{"desc":"Overrides built-in functions","long_desc":"Overrides built-in functions by replacing them in the symbol table.","ver":"PECL apd >= 0.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.override-function","name":"override_function","params":[{"list":[{"type":"string","var":"$function_name","beh":0,"desc":"The function to override."},{"type":"string","var":"$function_args","beh":0,"desc":"The function arguments, as a comma separated string. Usually you will want to pass this parameter, as well as the function_code parameter, as a single quote delimited string. The reason for using single quoted strings, is to protect the variable names from parsing, otherwise, if you use double quotes there will be a need to escape the variable names, e.g. \\$your_var."},{"type":"string","var":"$function_code","beh":1,"desc":"The new code for the function."}],"ret_type":"bool"}]},"ovrimos_close":{"desc":"Closes the connection to ovrimos","long_desc":"Closes the specified connection to Ovrimos. This has the effect of rolling back uncommitted transactions.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"No value is returned.","seealso":[],"url":"function.ovrimos-close","name":"ovrimos_close","params":[{"list":[],"ret_type":"void"}]},"ovrimos_commit":{"desc":"Commits the transaction","long_desc":"Commits the transaction.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ovrimos-commit","name":"ovrimos_commit","params":[{"list":[],"ret_type":"bool"}]},"ovrimos_connect":{"desc":"Connect to the specified database","long_desc":"Connects to the specified database.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns a connection identifier (greater than 0) on success, or 0 on failure.","seealso":[],"url":"function.ovrimos-connect","name":"ovrimos_connect","params":[{"list":[{"type":"string","var":"$host","beh":0,"desc":"A host name or IP address."},{"type":"string","var":"$dborport","beh":0,"desc":"Either a database name, or the port number to connect to."},{"type":"string","var":"$user","beh":1,"desc":"The user name."},{"type":"string","var":"$password","beh":1,"desc":"Password associated with user."}],"ret_type":"int"}]},"ovrimos_cursor":{"desc":"Returns the name of the cursor","long_desc":"Gets the name of the cursor. Useful when wishing to perform positioned updates or deletes.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns the name as a string, or FALSE on error.","url":"function.ovrimos-cursor","name":"ovrimos_cursor","params":[{"list":[],"ret_type":"string"}]},"ovrimos_exec":{"desc":"Executes an SQL statement","long_desc":"Executes an SQL statement (query or update) and returns a result identifier.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns the result identifier as an integer, or FALSE on error.","seealso":[],"url":"function.ovrimos-exec","name":"ovrimos_exec","params":[{"list":[{"type":"int","var":"$connection_id","beh":0,"desc":"The Ovrimos connection identifier, returned by ovrimos_connect()."},{"type":"string","var":"$query","beh":0,"desc":"The SQL statement. Evidently, it should not contain parameters. Use ovrimos_prepare() for prepared statements."}],"ret_type":"int"}]},"ovrimos_execute":{"desc":"Executes a prepared SQL statement","long_desc":"Executes a prepared statement.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ovrimos-execute","name":"ovrimos_execute","params":[{"list":[{"type":"int","var":"$result_id","beh":0,"desc":"An Ovrimos result identifier prepared with ovrimos_prepare()."},{"type":"array","var":"$parameters_array","beh":1,"desc":"If the prepared statement contained parameters (question marks in the statement), the correct number of parameters should be passed in an array."}],"ret_type":"bool"}]},"ovrimos_fetch_into":{"desc":"Fetches a row from the result set","long_desc":"Fetches a row from the given result set, into result_array.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ovrimos-fetch-into","name":"ovrimos_fetch_into","params":[{"list":[{"type":"int","var":"$result_id","beh":1,"desc":"A result identifier, returned by ovrimos_execute() or ovrimos_exec()."},{"type":"array","var":"&$result_array","beh":1,"desc":"You must provide an array by reference. It will be filled with the fetched values."},{"type":"string","var":"$how","beh":1,"desc":"Determines how the rows are fetched. This can be one of the following strings (case is not significant):"},{"type":"int","var":"$rownumber","beh":1,"desc":"The row number, first one is 0. Only needed when how is set to Absolute."}],"ret_type":"bool"}]},"ovrimos_fetch_row":{"desc":"Fetches a row from the result set","long_desc":"Fetches a row from the result set. Column values should be retrieved with other calls.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ovrimos-fetch-row","name":"ovrimos_fetch_row","params":[{"list":[{"type":"int","var":"$result_id","beh":1,"desc":"A result identifier, returned by ovrimos_execute() or ovrimos_exec()."},{"type":"int","var":"$how","beh":1,"desc":"Determines how the rows are fetched. This can be one of the following strings (case is not significant):"},{"type":"int","var":"$row_number","beh":1,"desc":"The row number, first one is 0. Only needed when how is set to Absolute."}],"ret_type":"bool"}]},"ovrimos_field_len":{"desc":"Returns the length of the output column","long_desc":"Gets the length of the specified output column.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns the length as an integer, or FALSE on error.","seealso":[],"url":"function.ovrimos-field-len","name":"ovrimos_field_len","params":[{"list":[{"type":"int","var":"$result_id","beh":0,"desc":"A result identifier, returned by ovrimos_execute() or ovrimos_exec()."},{"type":"int","var":"$field_number","beh":0,"desc":"The field number. Starts at 1."}],"ret_type":"int"}]},"ovrimos_field_name":{"desc":"Returns the output column name","long_desc":"Returns the output column name at the index specified.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns the field name as a string, or FALSE on error.","seealso":[],"url":"function.ovrimos-field-name","name":"ovrimos_field_name","params":[{"list":[{"type":"int","var":"$result_id","beh":0,"desc":"A result identifier, returned by ovrimos_execute() or ovrimos_exec()."},{"type":"int","var":"$field_number","beh":0,"desc":"The field number. Starts at 1."}],"ret_type":"string"}]},"ovrimos_field_num":{"desc":"Returns the (1-based) index of the output column","long_desc":"Returns the 1-based index of the specified output column.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns the index, starting at 1, or FALSE on error.","seealso":[],"url":"function.ovrimos-field-num","name":"ovrimos_field_num","params":[{"list":[{"type":"int","var":"$result_id","beh":0,"desc":"A result identifier, returned by ovrimos_execute() or ovrimos_exec()."},{"type":"string","var":"$field_name","beh":0,"desc":"The field name."}],"ret_type":"int"}]},"ovrimos_field_type":{"desc":"Returns the type of the output column","long_desc":"Returns the type of the output column","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns the field type as an integer, or FALSE on error.","seealso":[],"url":"function.ovrimos-field-type","name":"ovrimos_field_type","params":[{"list":[{"type":"int","var":"$result_id","beh":0,"desc":"A result identifier, returned by ovrimos_execute() or ovrimos_exec()."},{"type":"int","var":"$field_number","beh":0,"desc":"A 1-based index."}],"ret_type":"int"}]},"ovrimos_free_result":{"desc":"Frees the specified result_id","long_desc":"Frees the specified result identifier.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns TRUE.","url":"function.ovrimos-free-result","name":"ovrimos_free_result","params":[{"list":[],"ret_type":"bool"}]},"ovrimos_longreadlen":{"desc":"Specifies how many bytes are to be retrieved from long datatypes","long_desc":"Specifies how many bytes are to be retrieved from long datatypes (long varchar and long varbinary).","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns TRUE.","url":"function.ovrimos-longreadlen","name":"ovrimos_longreadlen","params":[{"list":[{"type":"int","var":"$result_id","beh":0,"desc":"A result identifier, returned by ovrimos_execute() or ovrimos_exec()."},{"type":"int","var":"$length","beh":0,"desc":"The number of bytes to retrieve. Default is zero."}],"ret_type":"bool"}]},"ovrimos_num_fields":{"desc":"Returns the number of columns","long_desc":"Returns the number of columns in the specified result identifier.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns the number of columns as an integer, or FALSE on error.","seealso":[],"url":"function.ovrimos-num-fields","name":"ovrimos_num_fields","params":[{"list":[],"ret_type":"int"}]},"ovrimos_num_rows":{"desc":"Returns the number of rows affected by update operations","long_desc":"Gets the number of rows affected by update operations.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns the number of rows as an integer, or FALSE on error.","seealso":[],"url":"function.ovrimos-num-rows","name":"ovrimos_num_rows","params":[{"list":[],"ret_type":"int"}]},"ovrimos_prepare":{"desc":"Prepares an SQL statement","long_desc":"Prepares an SQL statement.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns a result identifier on success, or FALSE on error.","url":"function.ovrimos-prepare","name":"ovrimos_prepare","params":[{"list":[{"type":"int","var":"$connection_id","beh":0,"desc":"The Ovrimos connection identifier, returned by ovrimos_connect()."},{"type":"string","var":"$query","beh":0,"desc":"The SQL statement."}],"ret_type":"int"}]},"ovrimos_result":{"desc":"Retrieves the output column","long_desc":"Retrieves the output column specified by field.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns the column as a string, FALSE on failure.","url":"function.ovrimos-result","name":"ovrimos_result","params":[{"list":[{"type":"int","var":"$result_id","beh":0,"desc":"A result identifier, returned by ovrimos_execute() or ovrimos_exec()."},{"type":"mixed","var":"$field","beh":0,"desc":"Either as a string with the field name or as an 1-based index."}],"ret_type":"string"}]},"ovrimos_result_all":{"desc":"Prints the whole result set as an HTML table","long_desc":"Prints the whole result set as an HTML table.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns the number of rows in the generated table.","url":"function.ovrimos-result-all","name":"ovrimos_result_all","params":[{"list":[{"type":"int","var":"$result_id","beh":0,"desc":"A result identifier, returned by ovrimos_execute() or ovrimos_exec()."},{"type":"string","var":"$format","beh":1,"desc":"Optional HTML attributes for the generated table element."}],"ret_type":"int"}]},"ovrimos_rollback":{"desc":"Rolls back the transaction","long_desc":"Rolls back the transaction.","ver":"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ovrimos-rollback","name":"ovrimos_rollback","params":[{"list":[],"ret_type":"bool"}]},"pack":{"desc":"Pack data into binary string","long_desc":"Pack given arguments into binary string according to format. The idea for this function was taken from Perl and all formatting codes work the same as in Perl. However, there are some formatting codes that are missing such as Perl's \"u\" format code. Note that the distinction between signed and unsigned values only affects the function unpack(), where as function pack() gives the same result for signed and unsigned format codes.","ver":"PHP 4, PHP 5","ret_desc":"Returns a binary string containing data.","seealso":[],"url":"function.pack","name":"pack","params":[{"list":[{"type":"string","var":"$format","beh":1,"desc":"The format string consists of format codes followed by an optional repeater argument. The repeater argument can be either an integer value or * for repeating to the end of the input data. For a, A, h, H the repeat count specifies how many characters of one data argument are taken, for @ it is the absolute position where to put the next data, for everything else the repeat count specifies how many data arguments are consumed and packed into the resulting binary string. Currently implemented formats are:"},{"type":"mixed","var":"$args","beh":1,"desc":""},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"string"}]},"parse_ini_file":{"desc":"Parse a configuration file","long_desc":"parse_ini_file() loads in the ini file specified in filename, and returns the settings in it in an associative array. The structure of the ini file is the same as the php.ini's.","ver":"PHP 4, PHP 5","ret_desc":"The settings are returned as an associative array on success, and FALSE on failure.","seealso":[],"url":"function.parse-ini-file","name":"parse_ini_file","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"The filename of the ini file being parsed."},{"type":"bool","var":"$process_sections","beh":1,"desc":"By setting the process_sections parameter to TRUE, you get a multidimensional array, with the section names and settings included. The default for process_sections is FALSE","def":"false"},{"type":"int","var":"$scanner_mode","beh":1,"desc":"Can either be INI_SCANNER_NORMAL (default) or INI_SCANNER_RAW. If INI_SCANNER_RAW is supplied, then option values will not be parsed.","def":"INI_SCANNER_NORMAL"}],"ret_type":"array"}]},"parse_ini_string":{"desc":"Parse a configuration string","long_desc":"parse_ini_string() returns the settings in string ini in an associative array. The structure of the ini string is the same as the php.ini's.","ver":"PHP 5 >= 5.3.0","ret_desc":"The settings are returned as an associative array on success, and FALSE on failure.","seealso":[],"url":"function.parse-ini-string","name":"parse_ini_string","params":[{"list":[{"type":"string","var":"$ini","beh":1,"desc":"The contents of the ini file being parsed."},{"type":"bool","var":"$process_sections","beh":1,"desc":"By setting the process_sections parameter to TRUE, you get a multidimensional array, with the section names and settings included. The default for process_sections is FALSE","def":"false"},{"type":"int","var":"$scanner_mode","beh":1,"desc":"Can either be INI_SCANNER_NORMAL (default) or INI_SCANNER_RAW. If INI_SCANNER_RAW is supplied, then option values will not be parsed.","def":"INI_SCANNER_NORMAL"}],"ret_type":"array"}]},"parse_str":{"desc":"Parses the string into variables","long_desc":"Parses str as if it were the query string passed via a URL and sets variables in the current scope.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.parse-str","name":"parse_str","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The input string."},{"type":"array","var":"&$arr","beh":1,"desc":"If the second parameter arr is present, variables are stored in this variable as array elements instead."}],"ret_type":"void"}]},"parse_url":{"desc":"Parse a URL and return its components","long_desc":"This function parses a URL and returns an associative array containing any of the various components of the URL that are present. This function is not meant to validate the given URL, it only breaks it up into the above listed parts. Partial URLs are also accepted, parse_url() tries its best to parse them correctly.","ver":"PHP 4, PHP 5","ret_desc":"On seriously malformed URLs, parse_url() may return FALSE.","seealso":[],"url":"function.parse-url","name":"parse_url","params":[{"list":[{"type":"string","var":"$url","beh":0,"desc":"The URL to parse. Invalid characters are replaced by _."},{"type":"int","var":"$component","beh":0,"desc":"Specify one of PHP_URL_SCHEME, PHP_URL_HOST, PHP_URL_PORT, PHP_URL_USER, PHP_URL_PASS, PHP_URL_PATH, PHP_URL_QUERY or PHP_URL_FRAGMENT to retrieve just a specific URL component as a string (except when PHP_URL_PORT is given, in which case the return value will be an integer).","def":-1}],"ret_type":"mixed"}]},"parsekit_compile_file":{"desc":"Compile a string of PHP code and return the resulting op array","ver":"PECL parsekit >= 0.2.0","ret_desc":"Returns a complex multi-layer array structure as detailed below.","seealso":[],"url":"function.parsekit-compile-file","name":"parsekit_compile_file","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"A string containing the name of the file to compile. Similar to the argument to include()."},{"type":"array","var":"&$errors","beh":1,"desc":"A 2D hash of errors (including fatal errors) encountered during compilation. Returned by reference."},{"type":"int","var":"$options","beh":1,"desc":"One of either PARSEKIT_QUIET or PARSEKIT_SIMPLE. To produce varying degrees of verbosity in the returned output.","def":"PARSEKIT_QUIET"}],"ret_type":"array"}]},"parsekit_compile_string":{"desc":"Compile a string of PHP code and return the resulting op array","ver":"PECL parsekit >= 0.2.0","ret_desc":"Returns a complex multi-layer array structure as detailed below.","seealso":[],"url":"function.parsekit-compile-string","name":"parsekit_compile_string","params":[{"list":[{"type":"string","var":"$phpcode","beh":1,"desc":"A string containing phpcode. Similar to the argument to eval()."},{"type":"array","var":"&$errors","beh":1,"desc":"A 2D hash of errors (including fatal errors) encountered during compilation. Returned by reference."},{"type":"int","var":"$options","beh":1,"desc":"One of either PARSEKIT_QUIET or PARSEKIT_SIMPLE. To produce varying degrees of verbosity in the returned output.","def":"PARSEKIT_QUIET"}],"ret_type":"array"}]},"parsekit_func_arginfo":{"desc":"Return information regarding function argument(s)","ver":"PECL parsekit >= 0.3.0","ret_desc":"Returns an array containing argument information.","url":"function.parsekit-func-arginfo","name":"parsekit_func_arginfo","params":[{"list":[],"ret_type":"array"}]},"passthru":{"desc":"Execute an external program and display raw output","long_desc":"The passthru() function is similar to the exec() function in that it executes a command. This function should be used in place of exec() or system() when the output from the Unix command is binary data which needs to be passed directly back to the browser. A common use for this is to execute something like the pbmplus utilities that can output an image stream directly. By setting the Content-type to image\/gif and then calling a pbmplus program to output a gif, you can create PHP scripts that output images directly.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.passthru","name":"passthru","params":[{"list":[{"type":"string","var":"$command","beh":0,"desc":"The command that will be executed."},{"type":"int","var":"&$return_var","beh":1,"desc":"If the return_var argument is present, the return status of the Unix command will be placed here."}],"ret_type":"void"}]},"pathinfo":{"desc":"Returns information about a file path","long_desc":"pathinfo() returns information about path: either an associative array or a string, depending on options.","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"If the options parameter is not passed, an associative array containing the following elements is returned: dirname, basename, extension (if any), and filename.","seealso":[],"url":"function.pathinfo","name":"pathinfo","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":"The path to be parsed."},{"type":"int","var":"$options","beh":0,"desc":"If present, specifies a specific element to be returned; one of PATHINFO_DIRNAME, PATHINFO_BASENAME, PATHINFO_EXTENSION or PATHINFO_FILENAME. If options is not specified, returns all available elements.","def":"PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME"}],"ret_type":"mixed"}]},"pclose":{"desc":"Closes process file pointer","long_desc":"Closes a file pointer to a pipe opened by popen().","ver":"PHP 4, PHP 5","ret_desc":"Returns the termination status of the process that was run. In case of an error then -1 is returned.","seealso":[],"url":"function.pclose","name":"pclose","params":[{"list":[],"ret_type":"int"}]},"pcntl_alarm":{"desc":"Set an alarm clock for delivery of a signal","long_desc":"Creates a timer that will send a SIGALRM signal to the process after the given number of seconds. Any call to pcntl_alarm() will cancel any previously set alarm.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the time in seconds that any previously scheduled alarm had remaining before it was to be delivered, or 0 if there was no previously scheduled alarm.","url":"function.pcntl-alarm","name":"pcntl_alarm","params":[{"list":[],"ret_type":"int"}]},"pcntl_exec":{"desc":"Executes specified program in current process space","long_desc":"Executes the program with the given arguments.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns FALSE on error and does not return on success.","url":"function.pcntl-exec","name":"pcntl_exec","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"path must be the path to a binary executable or a script with a valid path pointing to an executable in the shebang ( #!\/usr\/local\/bin\/perl for example) as the first line. See your system's man execve(2) page for additional information."},{"type":"array","var":"$args","beh":1,"desc":"args is an array of argument strings passed to the program."},{"type":"array","var":"$envs","beh":1,"desc":"envs is an array of strings which are passed as environment to the program. The array is in the format of name => value, the key being the name of the environmental variable and the value being the value of that variable."}],"ret_type":"void"}]},"pcntl_fork":{"desc":"Forks the currently running process","long_desc":"The pcntl_fork() function creates a child process that differs from the parent process only in its PID and PPID. Please see your system's fork(2) man page for specific details as to how fork works on your system.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"On success, the PID of the child process is returned in the parent's thread of execution, and a 0 is returned in the child's thread of execution. On failure, a -1 will be returned in the parent's context, no child process will be created, and a PHP error is raised.","seealso":[],"url":"function.pcntl-fork","name":"pcntl_fork","params":[{"list":[],"ret_type":"int"}]},"pcntl_getpriority":{"desc":"Get the priority of any process","long_desc":"pcntl_getpriority() gets the priority of pid. Because priority levels can differ between system types and kernel versions, please see your system's getpriority(2) man page for specific details.","ver":"PHP 5","ret_desc":"pcntl_getpriority() returns the priority of the process or FALSE on error. A lower numerical value causes more favorable scheduling.","seealso":[],"url":"function.pcntl-getpriority","name":"pcntl_getpriority","params":[{"list":[{"type":"int","var":"$pid","beh":0,"desc":"If not specified, the pid of the current process is used.","def":"getmypid()"},{"type":"int","var":"$process_identifier","beh":1,"desc":"One of PRIO_PGRP, PRIO_USER or PRIO_PROCESS.","def":"PRIO_PROCESS"}],"ret_type":"int"}]},"pcntl_setpriority":{"desc":"Change the priority of any process","long_desc":"pcntl_setpriority() sets the priority of pid.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pcntl-setpriority","name":"pcntl_setpriority","params":[{"list":[{"type":"int","var":"$priority","beh":1,"desc":"priority is generally a value in the range -20 to 20. The default priority is 0 while a lower numerical value causes more favorable scheduling. Because priority levels can differ between system types and kernel versions, please see your system's setpriority(2) man page for specific details."},{"type":"int","var":"$pid","beh":1,"desc":"If not specified, the pid of the current process is used.","def":"getmypid()"},{"type":"int","var":"$process_identifier","beh":1,"desc":"One of PRIO_PGRP, PRIO_USER or PRIO_PROCESS.","def":"PRIO_PROCESS"}],"ret_type":"bool"}]},"pcntl_signal":{"desc":"Installs a signal handler","long_desc":"The pcntl_signal() function installs a new signal handler for the signal indicated by signo.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pcntl-signal","name":"pcntl_signal","params":[{"list":[{"type":"int","var":"$signo","beh":0,"desc":"The signal number."},{"type":"callable","var":"$handler","beh":1,"desc":"The signal handler which may be the name of a user created function, or method, or either of the two global constants SIG_IGN or SIG_DFL."},{"type":"bool","var":"$restart_syscalls","beh":1,"desc":"Specifies whether system call restarting should be used when this signal arrives.","def":"true"}],"ret_type":"bool"}]},"pcntl_signal_dispatch":{"desc":"Calls signal handlers for pending signals","long_desc":"The pcntl_signal_dispatch() function calls the signal handlers installed by pcntl_signal() for each pending signal.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pcntl-signal-dispatch","name":"pcntl_signal_dispatch","params":[{"list":[],"ret_type":"bool"}]},"pcntl_sigprocmask":{"desc":"Sets and retrieves blocked signals","long_desc":"The pcntl_sigprocmask() function adds, removes or sets blocked signals, depending on the how parameter.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pcntl-sigprocmask","name":"pcntl_sigprocmask","params":[{"list":[{"type":"int","var":"$how","beh":0,"desc":"Sets the behavior of pcntl_sigprocmask(). Possible values:"},{"type":"array","var":"$set","beh":1,"desc":"List of signals."},{"type":"array","var":"&$oldset","beh":1,"desc":"The oldset parameter is set to an array containing the list of the previously blocked signals."}],"ret_type":"bool"}]},"pcntl_sigtimedwait":{"desc":"Waits for signals, with a timeout","long_desc":"The pcntl_sigtimedwait() function operates in exactly the same way as pcntl_sigwaitinfo() except that it takes two additional parameters, seconds and nanoseconds, which enable an upper bound to be placed on the time for which the script is suspended.","ver":"PHP 5 >= 5.3.0","ret_desc":"On success, pcntl_sigtimedwait() returns a signal number.","seealso":[],"url":"function.pcntl-sigtimedwait","name":"pcntl_sigtimedwait","params":[{"list":[{"type":"array","var":"$set","beh":1,"desc":"Array of signals to wait for."},{"type":"array","var":"&$siginfo","beh":1,"desc":"The siginfo is set to an array containing informations about the signal. See pcntl_sigwaitinfo()."},{"type":"int","var":"$seconds","beh":1,"desc":"Timeout in seconds.","def":0},{"type":"int","var":"$nanoseconds","beh":1,"desc":"Timeout in nanoseconds.","def":0}],"ret_type":"int"}]},"pcntl_sigwaitinfo":{"desc":"Waits for signals","long_desc":"The pcntl_sigwaitinfo() function suspends execution of the calling script until one of the signals given in set are delivered. If one of the signal is already pending (e.g. blocked by pcntl_sigprocmask()), pcntl_sigwaitinfo() will return immediately.","ver":"PHP 5 >= 5.3.0","ret_desc":"On success, pcntl_sigwaitinfo() returns a signal number.","seealso":[],"url":"function.pcntl-sigwaitinfo","name":"pcntl_sigwaitinfo","params":[{"list":[{"type":"array","var":"$set","beh":0,"desc":"Array of signals to wait for."},{"type":"array","var":"&$siginfo","beh":1,"desc":"The siginfo parameter is set to an array containing informations about the signal. The following elements are set for all signals: The following elements may be set for the SIGCHLD signal: The following elements may be set for the SIGILL, SIGFPE, SIGSEGV and SIGBUS signals: The following element may be set for the SIGPOLL signal:"}],"ret_type":"int"}]},"pcntl_wait":{"desc":"Waits on or returns the status of a forked child","long_desc":"The wait function suspends execution of the current process until a child has exited, or until a signal is delivered whose action is to terminate the current process or to call a signal handling function. If a child has already exited by the time of the call (a so-called \"zombie\" process), the function returns immediately. Any system resources used by the child are freed. Please see your system's wait(2) man page for specific details as to how wait works on your system.","ver":"PHP 5","ret_desc":"pcntl_wait() returns the process ID of the child which exited, -1 on error or zero if WNOHANG was provided as an option (on wait3-available systems) and no child was available.","seealso":[],"url":"function.pcntl-wait","name":"pcntl_wait","params":[{"list":[{"type":"int","var":"&$status","beh":0,"desc":"pcntl_wait() will store status information in the status parameter which can be evaluated using the following functions: pcntl_wifexited(), pcntl_wifstopped(), pcntl_wifsignaled(), pcntl_wexitstatus(), pcntl_wtermsig() and pcntl_wstopsig()."},{"type":"int","var":"$options","beh":0,"desc":"If wait3 is available on your system (mostly BSD-style systems), you can provide the optional options parameter. If this parameter is not provided, wait will be used for the system call. If wait3 is not available, providing a value for options will have no effect. The value of options is the value of zero or more of the following two constants OR'ed together:","def":0}],"ret_type":"int"}]},"pcntl_waitpid":{"desc":"Waits on or returns the status of a forked child","long_desc":"Suspends execution of the current process until a child as specified by the pid argument has exited, or until a signal is delivered whose action is to terminate the current process or to call a signal handling function. If a child as requested by pid has already exited by the time of the call (a so-called \"zombie\" process), the function returns immediately. Any system resources used by the child are freed. Please see your system's waitpid(2) man page for specific details as to how waitpid works on your system.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"pcntl_waitpid() returns the process ID of the child which exited, -1 on error or zero if WNOHANG was used and no child was available","seealso":[],"url":"function.pcntl-waitpid","name":"pcntl_waitpid","params":[{"list":[{"type":"int","var":"$pid","beh":0,"desc":"The value of pid can be one of the following:"},{"type":"int","var":"&$status","beh":1,"desc":"pcntl_waitpid() will store status information in the status parameter which can be evaluated using the following functions: pcntl_wifexited(), pcntl_wifstopped(), pcntl_wifsignaled(), pcntl_wexitstatus(), pcntl_wtermsig() and pcntl_wstopsig()."},{"type":"int","var":"$options","beh":1,"desc":"The value of options is the value of zero or more of the following two global constants OR'ed together:","def":0}],"ret_type":"int"}]},"pcntl_wexitstatus":{"desc":"Returns the return code of a terminated child","long_desc":"Returns the return code of a terminated child. This function is only useful if pcntl_wifexited() returned TRUE.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns the return code, as an integer.","seealso":[],"url":"function.pcntl-wexitstatus","name":"pcntl_wexitstatus","params":[{"list":[],"ret_type":"int"}]},"pcntl_wifexited":{"desc":"Checks if status code represents a normal exit","long_desc":"Checks whether the child status code represents a normal exit.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns TRUE if the child status code represents a normal exit, FALSE otherwise.","seealso":[],"url":"function.pcntl-wifexited","name":"pcntl_wifexited","params":[{"list":[],"ret_type":"bool"}]},"pcntl_wifsignaled":{"desc":"Checks whether the status code represents a termination due to a signal","long_desc":"Checks whether the child process exited because of a signal which was not caught.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns TRUE if the child process exited because of a signal which was not caught, FALSE otherwise.","seealso":[],"url":"function.pcntl-wifsignaled","name":"pcntl_wifsignaled","params":[{"list":[],"ret_type":"bool"}]},"pcntl_wifstopped":{"desc":"Checks whether the child process is currently stopped","long_desc":"Checks whether the child process which caused the return is currently stopped; this is only possible if the call to pcntl_waitpid() was done using the option WUNTRACED.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns TRUE if the child process which caused the return is currently stopped, FALSE otherwise.","seealso":[],"url":"function.pcntl-wifstopped","name":"pcntl_wifstopped","params":[{"list":[],"ret_type":"bool"}]},"pcntl_wstopsig":{"desc":"Returns the signal which caused the child to stop","long_desc":"Returns the number of the signal which caused the child to stop. This function is only useful if pcntl_wifstopped() returned TRUE.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns the signal number.","seealso":[],"url":"function.pcntl-wstopsig","name":"pcntl_wstopsig","params":[{"list":[],"ret_type":"int"}]},"pcntl_wtermsig":{"desc":"Returns the signal which caused the child to terminate","long_desc":"Returns the number of the signal that caused the child process to terminate. This function is only useful if pcntl_wifsignaled() returned TRUE.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns the signal number, as an integer.","seealso":[],"url":"function.pcntl-wtermsig","name":"pcntl_wtermsig","params":[{"list":[],"ret_type":"int"}]},"pfsockopen":{"desc":"Open persistent Internet or Unix domain socket connection","long_desc":"This function behaves exactly as fsockopen() with the difference that the connection is not closed after the script finishes. It is the persistent version of fsockopen().","ver":"PHP 4, PHP 5","seealso":[],"url":"function.pfsockopen","name":"pfsockopen","params":[{"list":[{"type":"string","var":"$hostname","beh":1,"desc":""},{"type":"int","var":"$port","beh":1,"desc":"","def":-1},{"type":"int","var":"&$errno","beh":1,"desc":""},{"type":"string","var":"&$errstr","beh":1,"desc":""},{"type":"float","var":"$timeout","beh":1,"desc":"","def":"ini_get(\"default_socket_timeout\")"}],"ret_type":"resource"}]},"pg_affected_rows":{"desc":"Returns number of affected records (tuples)","long_desc":"pg_affected_rows() returns the number of tuples (instances\/records\/rows) affected by INSERT, UPDATE, and DELETE queries.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The number of rows affected by the query. If no tuple is affected, it will return 0.","seealso":[],"url":"function.pg-affected-rows","name":"pg_affected_rows","params":[{"list":[],"ret_type":"int"}]},"pg_cancel_query":{"desc":"Cancel an asynchronous query","long_desc":"pg_cancel_query() cancels an asynchronous query sent with pg_send_query(), pg_send_query_params() or pg_send_execute(). You cannot cancel a query executed using pg_query().","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-cancel-query","name":"pg_cancel_query","params":[{"list":[],"ret_type":"bool"}]},"pg_client_encoding":{"desc":"Gets the client encoding","long_desc":"PostgreSQL supports automatic character set conversion between server and client for certain character sets. pg_client_encoding() returns the client encoding as a string. The returned string will be one of the standard PostgreSQL encoding identifiers.","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"The client encoding, or FALSE on error.","seealso":[],"url":"function.pg-client-encoding","name":"pg_client_encoding","params":[{"list":[],"ret_type":"string"}]},"pg_close":{"desc":"Closes a PostgreSQL connection","long_desc":"pg_close() closes the non-persistent connection to a PostgreSQL database associated with the given connection resource. If there is open large object resource on the connection, do not close the connection before closing all large object resources.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-close","name":"pg_close","params":[{"list":[],"ret_type":"bool"}]},"pg_connect":{"desc":"Open a PostgreSQL connection","long_desc":"pg_connect() opens a connection to a PostgreSQL database specified by the connection_string. If a second call is made to pg_connect() with the same connection_string as an existing connection, the existing connection will be returned unless you pass PGSQL_CONNECT_FORCE_NEW as connect_type. The old syntax with multiple parameters $conn = pg_connect(\"host\", \"port\", \"options\", \"tty\", \"dbname\") has been deprecated.","ver":"PHP 4, PHP 5","ret_desc":"PostgreSQL connection resource on success, FALSE on failure.","seealso":[],"url":"function.pg-connect","name":"pg_connect","params":[{"list":[{"type":"string","var":"$connection_string","beh":0,"desc":"The connection_string can be empty to use all default parameters, or it can contain one or more parameter settings separated by whitespace. Each parameter setting is in the form keyword = value. Spaces around the equal sign are optional. To write an empty value or a value containing spaces, surround it with single quotes, e.g., keyword = 'a value'. Single quotes and backslashes within the value must be escaped with a backslash, i.e., \\' and \\\\. The currently recognized parameter keywords are: host, hostaddr, port, dbname (defaults to value of user), user, password, connect_timeout, options, tty (ignored), sslmode, requiressl (deprecated in favor of sslmode), and service. Which of these arguments exist depends on your PostgreSQL version. The options parameter can be used to set command line parameters to be invoked by the server."},{"type":"int","var":"$connect_type","beh":1,"desc":"If PGSQL_CONNECT_FORCE_NEW is passed, then a new connection is created, even if the connection_string is identical to an existing connection."}],"ret_type":"resource"}]},"pg_connection_busy":{"desc":"Get connection is busy or not","long_desc":"pg_connection_busy() determines whether or not a connection is busy. If it is busy, a previous query is still executing. If pg_get_result() is used on the connection, it will be blocked.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE if the connection is busy, FALSE otherwise.","seealso":[],"url":"function.pg-connection-busy","name":"pg_connection_busy","params":[{"list":[],"ret_type":"bool"}]},"pg_connection_reset":{"desc":"Reset connection (reconnect)","long_desc":"pg_connection_reset() resets the connection. It is useful for error recovery.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-connection-reset","name":"pg_connection_reset","params":[{"list":[],"ret_type":"bool"}]},"pg_connection_status":{"desc":"Get connection status","long_desc":"pg_connection_status() returns the status of the specified connection.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"PGSQL_CONNECTION_OK or PGSQL_CONNECTION_BAD.","seealso":[],"url":"function.pg-connection-status","name":"pg_connection_status","params":[{"list":[],"ret_type":"int"}]},"pg_convert":{"desc":"Convert associative array values into suitable for SQL statement","long_desc":"pg_convert() checks and converts the values in assoc_array into suitable values for use in an SQL statement. Precondition for pg_convert() is the existence of a table table_name which has at least as many columns as assoc_array has elements. The fieldnames in table_name must match the indices in assoc_array and the corresponding datatypes must be compatible. Returns an array with the converted values on success, FALSE otherwise.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"An array of converted values, or FALSE on error.","seealso":[],"url":"function.pg-convert","name":"pg_convert","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource."},{"type":"string","var":"$table_name","beh":1,"desc":"Name of the table against which to convert types."},{"type":"array","var":"$assoc_array","beh":1,"desc":"Data to be converted."},{"type":"int","var":"$options","beh":1,"desc":"Any number of PGSQL_CONV_IGNORE_DEFAULT, PGSQL_CONV_FORCE_NULL or PGSQL_CONV_IGNORE_NOT_NULL, combined.","def":0}],"ret_type":"array"}]},"pg_copy_from":{"desc":"Insert records into a table from an array","long_desc":"pg_copy_from() inserts records into a table from rows. It issues a COPY FROM SQL command internally to insert records.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-copy-from","name":"pg_copy_from","params":[{"list":[{"type":"resource","var":"$connection","beh":1,"desc":"PostgreSQL database connection resource."},{"type":"string","var":"$table_name","beh":1,"desc":"Name of the table into which to copy the rows."},{"type":"array","var":"$rows","beh":1,"desc":"An array of data to be copied into table_name. Each value in rows becomes a row in table_name. Each value in rows should be a delimited string of the values to insert into each field. Values should be linefeed terminated."},{"type":"string","var":"$delimiter","beh":1,"desc":"The token that separates values for each field in each element of rows. Default is TAB."},{"type":"string","var":"$null_as","beh":1,"desc":"How SQL NULL values are represented in the rows. Default is \\N (\"\\\\N\")."}],"ret_type":"bool"}]},"pg_copy_to":{"desc":"Copy a table to an array","long_desc":"pg_copy_to() copies a table to an array. It issues COPY TO SQL command internally to retrieve records.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"An array with one element for each line of COPY data. It returns FALSE on failure.","seealso":[],"url":"function.pg-copy-to","name":"pg_copy_to","params":[{"list":[{"type":"resource","var":"$connection","beh":1,"desc":"PostgreSQL database connection resource."},{"type":"string","var":"$table_name","beh":1,"desc":"Name of the table from which to copy the data into rows."},{"type":"string","var":"$delimiter","beh":1,"desc":"The token that separates values for each field in each element of rows. Default is TAB."},{"type":"string","var":"$null_as","beh":1,"desc":"How SQL NULL values are represented in the rows. Default is \\N (\"\\\\N\")."}],"ret_type":"array"}]},"pg_dbname":{"desc":"Get the database name","long_desc":"pg_dbname() returns the name of the database that the given PostgreSQL connection resource.","ver":"PHP 4, PHP 5","ret_desc":"A string containing the name of the database the connection is to, or FALSE on error.","url":"function.pg-dbname","name":"pg_dbname","params":[{"list":[],"ret_type":"string"}]},"pg_delete":{"desc":"Deletes records","long_desc":"pg_delete() deletes records from a table specified by the keys and values in assoc_array. If options is specified, pg_convert() is applied to assoc_array with the specified options.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. Returns string if PGSQL_DML_STRING is passed via options.","seealso":[],"url":"function.pg-delete","name":"pg_delete","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource."},{"type":"string","var":"$table_name","beh":1,"desc":"Name of the table from which to delete rows."},{"type":"array","var":"$assoc_array","beh":1,"desc":"An array whose keys are field names in the table table_name, and whose values are the values of those fields that are to be deleted."},{"type":"int","var":"$options","beh":1,"desc":"Any number of PGSQL_CONV_FORCE_NULL, PGSQL_DML_NO_CONV, PGSQL_DML_EXEC or PGSQL_DML_STRING combined. If PGSQL_DML_STRING is part of the options then query string is returned.","def":"PGSQL_DML_EXEC"}],"ret_type":"mixed"}]},"pg_end_copy":{"desc":"Sync with PostgreSQL backend","long_desc":"pg_end_copy() syncs the PostgreSQL frontend (usually a web server process) with the PostgreSQL server after doing a copy operation performed by pg_put_line(). pg_end_copy() must be issued, otherwise the PostgreSQL server may get out of sync with the frontend and will report an error.","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-end-copy","name":"pg_end_copy","params":[{"list":[],"ret_type":"bool"}]},"pg_escape_bytea":{"desc":"Escape a string for insertion into a bytea field","long_desc":"pg_escape_bytea() escapes string for bytea datatype. It returns escaped string.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"A string containing the escaped data.","seealso":[],"url":"function.pg-escape-bytea","name":"pg_escape_bytea","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"string","var":"$data","beh":1,"desc":"A string containing text or binary data to be inserted into a bytea column."}],"ret_type":"string"}]},"pg_escape_identifier":{"desc":"Escape a identifier for insertion into a text field","long_desc":"pg_escape_identifier() escapes a identifier (e.g. table, field names) for quering the database. It returns an escaped identifier string for PostgreSQL server. pg_escape_identifier() adds double quotes before and after data. Users should not add double quotes. Use of this function is recommended for identifier parameters in query. For SQL literals (i.e. parameters except bytea), pg_escape_literal() or pg_escape_string() muse be used. For bytea type fields, pg_escape_bytea() must be used instead.","ver":"No version information available, might only be in SVN","ret_desc":"A string containing the escaped data.","seealso":[],"url":"function.pg-escape-identifier","name":"pg_escape_identifier","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"string","var":"$data","beh":1,"desc":"A string containing text to be escaped."}],"ret_type":"string"}]},"pg_escape_literal":{"desc":"Escape a literal for insertion into a text field","long_desc":"pg_escape_literal() escapes a literal for querying the PostgreSQL database. It returns an escaped literal in the PostgreSQL format. pg_escape_literal() adds quotes before and after data. Users should not add quotes. Use of this function is recommended instead of pg_escape_string(). If the type of the column is bytea, pg_escape_bytea() must be used instead. For escaping identifiers (e.g. table, field names), pg_escape_identifier() must be used.","ver":"No version information available, might only be in SVN","ret_desc":"A string containing the escaped data.","seealso":[],"url":"function.pg-escape-literal","name":"pg_escape_literal","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"string","var":"$data","beh":1,"desc":"A string containing text to be escaped."}],"ret_type":"string"}]},"pg_escape_string":{"desc":"Escape a string for query","long_desc":"pg_escape_string() escapes a string for querying the database. It returns an escaped string in the PostgreSQL format without quotes. pg_escape_literal() is more preferred way to escape SQL parameters for PostgreSQL. addslashes() must not be used with PostgreSQL. If the type of the column is bytea, pg_escape_bytea() must be used instead. pg_escape_identifier() must be used to escape identifiers (e.g. table names, field names)","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"A string containing the escaped data.","seealso":[],"url":"function.pg-escape-string","name":"pg_escape_string","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"string","var":"$data","beh":1,"desc":"A string containing text to be escaped."}],"ret_type":"string"}]},"pg_execute":{"desc":"Sends a request to execute a prepared statement with given parameters, and waits for the result.","long_desc":"Sends a request to execute a prepared statement with given parameters, and waits for the result. pg_execute() is like pg_query_params(), but the command to be executed is specified by naming a previously-prepared statement, instead of giving a query string. This feature allows commands that will be used repeatedly to be parsed and planned just once, rather than each time they are executed. The statement must have been prepared previously in the current session. pg_execute() is supported only against PostgreSQL 7.4 or higher connections; it will fail when using earlier versions. The parameters are identical to pg_query_params(), except that the name of a prepared statement is given instead of a query string.","ver":"PHP 5 >= 5.1.0","ret_desc":"A query result resource on success or FALSE on failure.","seealso":[],"url":"function.pg-execute","name":"pg_execute","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"string","var":"$stmtname","beh":1,"desc":"The name of the prepared statement to execute. if \"\" is specified, then the unnamed statement is executed. The name must have been previously prepared using pg_prepare(), pg_send_prepare() or a PREPARE SQL command."},{"type":"array","var":"$params","beh":1,"desc":"An array of parameter values to substitute for the $1, $2, etc. placeholders in the original prepared query string. The number of elements in the array must match the number of placeholders."}],"ret_type":"resource"}]},"pg_fetch_all":{"desc":"Fetches all rows from a result as an array","long_desc":"pg_fetch_all() returns an array that contains all rows (records) in the result resource.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"An array with all rows in the result. Each row is an array of field values indexed by field name.","seealso":[],"url":"function.pg-fetch-all","name":"pg_fetch_all","params":[{"list":[],"ret_type":"array"}]},"pg_fetch_all_columns":{"desc":"Fetches all rows in a particular result column as an array","long_desc":"pg_fetch_all_columns() returns an array that contains all rows (records) in a particular column of the result resource.","ver":"PHP 5 >= 5.1.0","ret_desc":"An array with all values in the result column.","seealso":[],"url":"function.pg-fetch-all-columns","name":"pg_fetch_all_columns","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$column","beh":0,"desc":"Column number, zero-based, to be retrieved from the result resource. Defaults to the first column if not specified.","def":0}],"ret_type":"array"}]},"pg_fetch_array":{"desc":"Fetch a row as an array","long_desc":"pg_fetch_array() returns an array that corresponds to the fetched row (record). pg_fetch_array() is an extended version of pg_fetch_row(). In addition to storing the data in the numeric indices (field number) to the result array, it can also store the data using associative indices (field name). It stores both indicies by default. pg_fetch_array() is NOT significantly slower than using pg_fetch_row(), and is significantly easier to use.","ver":"PHP 4, PHP 5","ret_desc":"An array indexed numerically (beginning with 0) or associatively (indexed by field name), or both. Each value in the array is represented as a string. Database NULL values are returned as NULL.","seealso":[],"url":"function.pg-fetch-array","name":"pg_fetch_array","params":[{"list":[{"type":"resource","var":"$result","beh":1,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$row","beh":1,"desc":"Row number in result to fetch. Rows are numbered from 0 upwards. If omitted or NULL, the next row is fetched."},{"type":"int","var":"$result_type","beh":1,"desc":"An optional parameter that controls how the returned array is indexed. result_type is a constant and can take the following values: PGSQL_ASSOC, PGSQL_NUM and PGSQL_BOTH. Using PGSQL_NUM, pg_fetch_array() will return an array with numerical indices, using PGSQL_ASSOC it will return only associative indices while PGSQL_BOTH, the default, will return both numerical and associative indices.","def":"PGSQL_BOTH"}],"ret_type":"array"}]},"pg_fetch_assoc":{"desc":"Fetch a row as an associative array","long_desc":"pg_fetch_assoc() returns an associative array that corresponds to the fetched row (records). pg_fetch_assoc() is equivalent to calling pg_fetch_array() with PGSQL_ASSOC as the optional third parameter. It only returns an associative array. If you need the numeric indices, use pg_fetch_row(). pg_fetch_assoc() is NOT significantly slower than using pg_fetch_row(), and is significantly easier to use.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"An array indexed associatively (by field name). Each value in the array is represented as a string. Database NULL values are returned as NULL.","seealso":[],"url":"function.pg-fetch-assoc","name":"pg_fetch_assoc","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$row","beh":1,"desc":"Row number in result to fetch. Rows are numbered from 0 upwards. If omitted or NULL, the next row is fetched."}],"ret_type":"array"}]},"pg_fetch_object":{"desc":"Fetch a row as an object","long_desc":"pg_fetch_object() returns an object with properties that correspond to the fetched row's field names. It can optionally instantiate an object of a specific class, and pass parameters to that class's constructor. Speed-wise, the function is identical to pg_fetch_array(), and almost as fast as pg_fetch_row() (the difference is insignificant).","ver":"PHP 4, PHP 5","ret_desc":"An object with one attribute for each field name in the result. Database NULL values are returned as NULL.","seealso":[],"url":"function.pg-fetch-object","name":"pg_fetch_object","params":[{"list":[{"type":"resource","var":"$result","beh":1,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$row","beh":1,"desc":"Row number in result to fetch. Rows are numbered from 0 upwards. If omitted or NULL, the next row is fetched."},{"type":"int","var":"$result_type","beh":1,"desc":"Ignored and deprecated.","def":"PGSQL_ASSOC"}],"ret_type":"object"},{"list":[{"type":"resource","var":"$result","beh":1,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$row","beh":1,"desc":"Row number in result to fetch. Rows are numbered from 0 upwards. If omitted or NULL, the next row is fetched."},{"type":"string","var":"$class_name","beh":1,"desc":"Ignored and deprecated."},{"type":"array","var":"$params","beh":1,"desc":"The name of the class to instantiate, set the properties of and return. If not specified, a stdClass object is returned."}],"ret_type":"object"}]},"pg_fetch_result":{"desc":"Returns values from a result resource","long_desc":"pg_fetch_result() returns the value of a particular row and field (column) in a PostgreSQL result resource.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Boolean is returned as \"t\" or \"f\". All other types, including arrays are returned as strings formatted in the same default PostgreSQL manner that you would see in the psql program. Database NULL values are returned as NULL.","seealso":[],"url":"function.pg-fetch-result","name":"pg_fetch_result","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$row","beh":0,"desc":"Row number in result to fetch. Rows are numbered from 0 upwards. If omitted, next row is fetched."},{"type":"mixed","var":"$field","beh":1,"desc":"A string representing the name of the field (column) to fetch, otherwise an int representing the field number to fetch. Fields are numbered from 0 upwards."}],"ret_type":"string"},{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"mixed","var":"$field","beh":0,"desc":"Row number in result to fetch. Rows are numbered from 0 upwards. If omitted, next row is fetched."}],"ret_type":"string"}]},"pg_fetch_row":{"desc":"Get a row as an enumerated array","long_desc":"pg_fetch_row() fetches one row of data from the result associated with the specified result resource.","ver":"PHP 4, PHP 5","ret_desc":"An array, indexed from 0 upwards, with each value represented as a string. Database NULL values are returned as NULL.","seealso":[],"url":"function.pg-fetch-row","name":"pg_fetch_row","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$row","beh":1,"desc":"Row number in result to fetch. Rows are numbered from 0 upwards. If omitted or NULL, the next row is fetched."}],"ret_type":"array"}]},"pg_field_is_null":{"desc":"Test if a field is SQL NULL","long_desc":"pg_field_is_null() tests if a field in a PostgreSQL result resource is SQL NULL or not.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns 1 if the field in the given row is SQL NULL, 0 if not. FALSE is returned if the row is out of range, or upon any other error.","url":"function.pg-field-is-null","name":"pg_field_is_null","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$row","beh":0,"desc":"Row number in result to fetch. Rows are numbered from 0 upwards. If omitted, current row is fetched."},{"type":"mixed","var":"$field","beh":1,"desc":"Field number (starting from 0) as an integer or the field name as a string."}],"ret_type":"int"},{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"mixed","var":"$field","beh":0,"desc":"Row number in result to fetch. Rows are numbered from 0 upwards. If omitted, current row is fetched."}],"ret_type":"int"}]},"pg_field_name":{"desc":"Returns the name of a field","long_desc":"pg_field_name() returns the name of the field occupying the given field_number in the given PostgreSQL result resource. Field numbering starts from 0.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The field name, or FALSE on error.","seealso":[],"url":"function.pg-field-name","name":"pg_field_name","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$field_number","beh":0,"desc":"Field number, starting from 0."}],"ret_type":"string"}]},"pg_field_num":{"desc":"Returns the field number of the named field","long_desc":"pg_field_num() will return the number of the field number that corresponds to the field_name in the given PostgreSQL result resource.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The field number (numbered from 0), or -1 on error.","seealso":[],"url":"function.pg-field-num","name":"pg_field_num","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"string","var":"$field_name","beh":0,"desc":"The name of the field."}],"ret_type":"int"}]},"pg_field_prtlen":{"desc":"Returns the printed length","long_desc":"pg_field_prtlen() returns the actual printed length (number of characters) of a specific value in a PostgreSQL result. Row numbering starts at 0. This function will return FALSE on an error. field_name_or_number can be passed either as an integer or as a string. If it is passed as an integer, PHP recognises it as the field number, otherwise as field name. See the example given at the pg_field_name() page.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The field printed length, or FALSE on error.","seealso":[],"url":"function.pg-field-prtlen","name":"pg_field_prtlen","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$row_number","beh":0,"desc":"Row number in result. Rows are numbered from 0 upwards. If omitted, current row is fetched."},{"type":"mixed","var":"$field_name_or_number","beh":1,"desc":""}],"ret_type":"int"},{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"mixed","var":"$field_name_or_number","beh":0,"desc":"Row number in result. Rows are numbered from 0 upwards. If omitted, current row is fetched."}],"ret_type":"int"}]},"pg_field_size":{"desc":"Returns the internal storage size of the named field","long_desc":"pg_field_size() returns the internal storage size (in bytes) of the field number in the given PostgreSQL result.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The internal field storage size (in bytes). -1 indicates a variable length field. FALSE is returned on error.","seealso":[],"url":"function.pg-field-size","name":"pg_field_size","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$field_number","beh":0,"desc":"Field number, starting from 0."}],"ret_type":"int"}]},"pg_field_table":{"desc":"Returns the name or oid of the tables field","long_desc":"pg_field_table() returns the name of the table that field belongs to, or the table's oid if oid_only is TRUE.","ver":"PHP 5 >= 5.2.0","ret_desc":"On success either the fields table name or oid. Or, FALSE on failure.","seealso":[],"url":"function.pg-field-table","name":"pg_field_table","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$field_number","beh":1,"desc":"Field number, starting from 0."},{"type":"bool","var":"$oid_only","beh":1,"desc":"By default the tables name that field belongs to is returned but if oid_only is set to TRUE, then the oid will instead be returned.","def":"false"}],"ret_type":"mixed"}]},"pg_field_type":{"desc":"Returns the type name for the corresponding field number","long_desc":"pg_field_type() returns a string containing the base type name of the given field_number in the given PostgreSQL result resource.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"A string containing the base name of the field's type, or FALSE on error.","seealso":[],"url":"function.pg-field-type","name":"pg_field_type","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$field_number","beh":0,"desc":"Field number, starting from 0."}],"ret_type":"string"}]},"pg_field_type_oid":{"desc":"Returns the type ID (OID) for the corresponding field number","long_desc":"pg_field_type_oid() returns an integer containing the OID of the base type of the given field_number in the given PostgreSQL result resource. You can get more information about the field type by querying PostgreSQL's pg_type system table using the OID obtained with this function. The PostgreSQL format_type() function will convert a type OID into an SQL standard type name.","ver":"PHP 5 >= 5.1.0","ret_desc":"The OID of the field's base type. FALSE is returned on error.","seealso":[],"url":"function.pg-field-type-oid","name":"pg_field_type_oid","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$field_number","beh":0,"desc":"Field number, starting from 0."}],"ret_type":"int"}]},"pg_free_result":{"desc":"Free result memory","long_desc":"pg_free_result() frees the memory and data associated with the specified PostgreSQL query result resource. This function need only be called if memory consumption during script execution is a problem. Otherwise, all result memory will be automatically freed when the script ends.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-free-result","name":"pg_free_result","params":[{"list":[],"ret_type":"bool"}]},"pg_get_notify":{"desc":"Gets SQL NOTIFY message","long_desc":"pg_get_notify() gets notifications generated by a NOTIFY SQL command. To receive notifications, the LISTEN SQL command must be issued.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"An array containing the NOTIFY message name and backend PID. Otherwise if no NOTIFY is waiting, then FALSE is returned.","seealso":[],"url":"function.pg-get-notify","name":"pg_get_notify","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource."},{"type":"int","var":"$result_type","beh":1,"desc":"An optional parameter that controls how the returned array is indexed. result_type is a constant and can take the following values: PGSQL_ASSOC, PGSQL_NUM and PGSQL_BOTH. Using PGSQL_NUM, pg_get_notify() will return an array with numerical indices, using PGSQL_ASSOC it will return only associative indices while PGSQL_BOTH, the default, will return both numerical and associative indices."}],"ret_type":"array"}]},"pg_get_pid":{"desc":"Gets the backend's process ID","long_desc":"pg_get_pid() gets the backend's (database server process) PID. The PID is useful to determine whether or not a NOTIFY message received via pg_get_notify() is sent from another process or not.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"The backend database process ID.","seealso":[],"url":"function.pg-get-pid","name":"pg_get_pid","params":[{"list":[],"ret_type":"int"}]},"pg_get_result":{"desc":"Get asynchronous query result","long_desc":"pg_get_result() gets the result resource from an asynchronous query executed by pg_send_query(), pg_send_query_params() or pg_send_execute(). pg_send_query() and the other asynchronous query functions can send multiple queries to a PostgreSQL server and pg_get_result() is used to get each query's results, one by one.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The result resource, or FALSE if no more results are available.","seealso":[],"url":"function.pg-get-result","name":"pg_get_result","params":[{"list":[],"ret_type":"resource"}]},"pg_host":{"desc":"Returns the host name associated with the connection","long_desc":"pg_host() returns the host name of the given PostgreSQL connection resource is connected to.","ver":"PHP 4, PHP 5","ret_desc":"A string containing the name of the host the connection is to, or FALSE on error.","seealso":[],"url":"function.pg-host","name":"pg_host","params":[{"list":[],"ret_type":"string"}]},"pg_insert":{"desc":"Insert array into table","long_desc":"pg_insert() inserts the values of assoc_array into the table specified by table_name. If options is specified, pg_convert() is applied to assoc_array with the specified options.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. Returns string if PGSQL_DML_STRING is passed via options.","seealso":[],"url":"function.pg-insert","name":"pg_insert","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource."},{"type":"string","var":"$table_name","beh":1,"desc":"Name of the table into which to insert rows. The table table_name must at least have as many columns as assoc_array has elements."},{"type":"array","var":"$assoc_array","beh":1,"desc":"An array whose keys are field names in the table table_name, and whose values are the values of those fields that are to be inserted."},{"type":"int","var":"$options","beh":1,"desc":"Any number of PGSQL_CONV_OPTS, PGSQL_DML_NO_CONV, PGSQL_DML_EXEC, PGSQL_DML_ASYNC or PGSQL_DML_STRING combined. If PGSQL_DML_STRING is part of the options then query string is returned.","def":"PGSQL_DML_EXEC"}],"ret_type":"mixed"}]},"pg_last_error":{"desc":"Get the last error message string of a connection","long_desc":"pg_last_error() returns the last error message for a given connection. Error messages may be overwritten by internal PostgreSQL (libpq) function calls. It may not return an appropriate error message if multiple errors occur inside a PostgreSQL module function. Use pg_result_error(), pg_result_error_field(), pg_result_status() and pg_connection_status() for better error handling.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"A string containing the last error message on the given connection, or FALSE on error.","seealso":[],"url":"function.pg-last-error","name":"pg_last_error","params":[{"list":[],"ret_type":"string"}]},"pg_last_notice":{"desc":"Returns the last notice message from PostgreSQL server","long_desc":"pg_last_notice() returns the last notice message from the PostgreSQL server on the specified connection. The PostgreSQL server sends notice messages in several cases, for instance when creating a SERIAL column in a table. With pg_last_notice(), you can avoid issuing useless queries by checking whether or not the notice is related to your transaction. Notice message tracking can be set to optional by setting 1 for pgsql.ignore_notice in php.ini. Notice message logging can be set to optional by setting 0 for pgsql.log_notice in php.ini. Unless pgsql.ignore_notice is set to 0, notice message cannot be logged.","ver":"PHP 4 >= 4.0.6, PHP 5","ret_desc":"A string containing the last notice on the given connection, or FALSE on error.","seealso":[],"url":"function.pg-last-notice","name":"pg_last_notice","params":[{"list":[],"ret_type":"string"}]},"pg_last_oid":{"desc":"Returns the last row's OID","long_desc":"pg_last_oid() is used to retrieve the OID assigned to an inserted row. OID field became an optional field from PostgreSQL 7.2 and will not be present by default in PostgreSQL 8.1. When the OID field is not present in a table, the programmer must use pg_result_status() to check for successful insertion. To get the value of a SERIAL field in an inserted row, it is necessary to use the PostgreSQL CURRVAL function, naming the sequence whose last value is required. If the name of the sequence is unknown, the pg_get_serial_sequence PostgreSQL 8.0 function is necessary. PostgreSQL 8.1 has a function LASTVAL that returns the value of the most recently used sequence in the session. This avoids the need for naming the sequence, table or column altogether.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"A string containing the OID assigned to the most recently inserted row in the specified connection, or FALSE on error or no available OID.","seealso":[],"url":"function.pg-last-oid","name":"pg_last_oid","params":[{"list":[],"ret_type":"string"}]},"pg_lo_close":{"desc":"Close a large object","long_desc":"pg_lo_close() closes a large object. large_object is a resource for the large object from pg_lo_open(). To use the large object interface, it is necessary to enclose it within a transaction block.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-lo-close","name":"pg_lo_close","params":[{"list":[],"ret_type":"bool"}]},"pg_lo_create":{"desc":"Create a large object","long_desc":"pg_lo_create() creates a large object and returns the OID of the large object. PostgreSQL access modes INV_READ, INV_WRITE, and INV_ARCHIVE are not supported, the object is created always with both read and write access. INV_ARCHIVE has been removed from PostgreSQL itself (version 6.3 and above). To use the large object interface, it is necessary to enclose it within a transaction block. Instead of using the large object interface (which has no access controls and is cumbersome to use), try PostgreSQL's bytea column type and pg_escape_bytea().","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"A large object OID or FALSE on error.","url":"function.pg-lo-create","name":"pg_lo_create","params":[{"list":[{"type":"resource","var":"$connection","beh":1,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"mixed","var":"$object_id","beh":1,"desc":"If an object_id is given the function will try to create a large object with this id, else a free object id is assigned by the server. The parameter was added in PHP 5.3 and relies on functionality that first appeared in PostgreSQL 8.1."}],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"pg_lo_export":{"desc":"Export a large object to file","long_desc":"pg_lo_export() takes a large object in a PostgreSQL database and saves its contents to a file on the local filesystem. To use the large object interface, it is necessary to enclose it within a transaction block.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-lo-export","name":"pg_lo_export","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"int","var":"$oid","beh":1,"desc":"The OID of the large object in the database."},{"type":"string","var":"$pathname","beh":1,"desc":"The full path and file name of the file in which to write the large object on the client filesystem."}],"ret_type":"bool"}]},"pg_lo_import":{"desc":"Import a large object from file","long_desc":"pg_lo_import() creates a new large object in the database using a file on the filesystem as its data source. To use the large object interface, it is necessary to enclose it within a transaction block.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The OID of the newly created large object, or FALSE on failure.","seealso":[],"url":"function.pg-lo-import","name":"pg_lo_import","params":[{"list":[{"type":"resource","var":"$connection","beh":1,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"string","var":"$pathname","beh":1,"desc":"The full path and file name of the file on the client filesystem from which to read the large object data."},{"type":"mixed","var":"$object_id","beh":1,"desc":"If an object_id is given the function will try to create a large object with this id, else a free object id is assigned by the server. The parameter was added in PHP 5.3 and relies on functionality that first appeared in PostgreSQL 8.1."}],"ret_type":"int"},{"list":[{"type":"string","var":"$pathname","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"resource","var":"$connection","beh":1,"desc":"The full path and file name of the file on the client filesystem from which to read the large object data."}],"ret_type":"int"}]},"pg_lo_open":{"desc":"Open a large object","long_desc":"pg_lo_open() opens a large object in the database and returns large object resource so that it can be manipulated. To use the large object interface, it is necessary to enclose it within a transaction block.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"A large object resource or FALSE on error.","seealso":[],"url":"function.pg-lo-open","name":"pg_lo_open","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"int","var":"$oid","beh":0,"desc":"The OID of the large object in the database."},{"type":"string","var":"$mode","beh":1,"desc":"Can be either \"r\" for read-only, \"w\" for write only or \"rw\" for read and write."}],"ret_type":"resource"}]},"pg_lo_read":{"desc":"Read a large object","long_desc":"pg_lo_read() reads at most len bytes from a large object and returns it as a string. To use the large object interface, it is necessary to enclose it within a transaction block.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"A string containing len bytes from the large object, or FALSE on error.","seealso":[],"url":"function.pg-lo-read","name":"pg_lo_read","params":[{"list":[{"type":"resource","var":"$large_object","beh":0,"desc":"PostgreSQL large object (LOB) resource, returned by pg_lo_open()."},{"type":"int","var":"$len","beh":0,"desc":"An optional maximum number of bytes to return.","def":8192}],"ret_type":"string"}]},"pg_lo_read_all":{"desc":"Reads an entire large object and send straight to browser","long_desc":"pg_lo_read_all() reads a large object and passes it straight through to the browser after sending all pending headers. Mainly intended for sending binary data like images or sound. To use the large object interface, it is necessary to enclose it within a transaction block.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Number of bytes read or FALSE on error.","seealso":[],"url":"function.pg-lo-read-all","name":"pg_lo_read_all","params":[{"list":[],"ret_type":"int"}]},"pg_lo_seek":{"desc":"Seeks position within a large object","long_desc":"pg_lo_seek() seeks a position within a large object resource. To use the large object interface, it is necessary to enclose it within a transaction block.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-lo-seek","name":"pg_lo_seek","params":[{"list":[{"type":"resource","var":"$large_object","beh":0,"desc":"PostgreSQL large object (LOB) resource, returned by pg_lo_open()."},{"type":"int","var":"$offset","beh":1,"desc":"The number of bytes to seek."},{"type":"int","var":"$whence","beh":1,"desc":"One of the constants PGSQL_SEEK_SET (seek from object start), PGSQL_SEEK_CUR (seek from current position) or PGSQL_SEEK_END (seek from object end) .","def":"PGSQL_SEEK_CUR"}],"ret_type":"bool"}]},"pg_lo_tell":{"desc":"Returns current seek position a of large object","long_desc":"pg_lo_tell() returns the current position (offset from the beginning) of a large object. To use the large object interface, it is necessary to enclose it within a transaction block.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The current seek offset (in number of bytes) from the beginning of the large object. If there is an error, the return value is negative.","seealso":[],"url":"function.pg-lo-tell","name":"pg_lo_tell","params":[{"list":[],"ret_type":"int"}]},"pg_lo_unlink":{"desc":"Delete a large object","long_desc":"pg_lo_unlink() deletes a large object with the oid. Returns TRUE on success or FALSE on failure. To use the large object interface, it is necessary to enclose it within a transaction block.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-lo-unlink","name":"pg_lo_unlink","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"int","var":"$oid","beh":0,"desc":"The OID of the large object in the database."}],"ret_type":"bool"}]},"pg_lo_write":{"desc":"Write to a large object","long_desc":"pg_lo_write() writes data into a large object at the current seek position. To use the large object interface, it is necessary to enclose it within a transaction block.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The number of bytes written to the large object, or FALSE on error.","seealso":[],"url":"function.pg-lo-write","name":"pg_lo_write","params":[{"list":[{"type":"resource","var":"$large_object","beh":0,"desc":"PostgreSQL large object (LOB) resource, returned by pg_lo_open()."},{"type":"string","var":"$data","beh":1,"desc":"The data to be written to the large object. If len is specified and is less than the length of data, only len bytes will be written."},{"type":"int","var":"$len","beh":1,"desc":"An optional maximum number of bytes to write. Must be greater than zero and no greater than the length of data. Defaults to the length of data."}],"ret_type":"int"}]},"pg_meta_data":{"desc":"Get meta data for table","long_desc":"pg_meta_data() returns table definition for table_name as an array.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"An array of the table definition, or FALSE on error.","seealso":[],"url":"function.pg-meta-data","name":"pg_meta_data","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource."},{"type":"string","var":"$table_name","beh":0,"desc":"The name of the table."}],"ret_type":"array"}]},"pg_num_fields":{"desc":"Returns the number of fields in a result","long_desc":"pg_num_fields() returns the number of fields (columns) in a PostgreSQL result resource.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The number of fields (columns) in the result. On error, -1 is returned.","seealso":[],"url":"function.pg-num-fields","name":"pg_num_fields","params":[{"list":[],"ret_type":"int"}]},"pg_num_rows":{"desc":"Returns the number of rows in a result","long_desc":"pg_num_rows() will return the number of rows in a PostgreSQL result resource.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The number of rows in the result. On error, -1 is returned.","seealso":[],"url":"function.pg-num-rows","name":"pg_num_rows","params":[{"list":[],"ret_type":"int"}]},"pg_options":{"desc":"Get the options associated with the connection","long_desc":"pg_options() will return a string containing the options specified on the given PostgreSQL connection resource.","ver":"PHP 4, PHP 5","ret_desc":"A string containing the connection options, or FALSE on error.","seealso":[],"url":"function.pg-options","name":"pg_options","params":[{"list":[],"ret_type":"string"}]},"pg_parameter_status":{"desc":"Looks up a current parameter setting of the server.","long_desc":"Looks up a current parameter setting of the server. Certain parameter values are reported by the server automatically at connection startup or whenever their values change. pg_parameter_status() can be used to interrogate these settings. It returns the current value of a parameter if known, or FALSE if the parameter is not known. Parameters reported as of PostgreSQL 8.0 include server_version, server_encoding, client_encoding, is_superuser, session_authorization, DateStyle, TimeZone, and integer_datetimes. (server_encoding, TimeZone, and integer_datetimes were not reported by releases before 8.0.) Note that server_version, server_encoding and integer_datetimes cannot change after PostgreSQL startup. PostgreSQL 7.3 or lower servers do not report parameter settings, pg_parameter_status() includes logic to obtain values for server_version and client_encoding anyway. Applications are encouraged to use pg_parameter_status() rather than ad hoc code to determine these values.","ver":"PHP 5","ret_desc":"A string containing the value of the parameter, FALSE on failure or invalid param_name.","url":"function.pg-parameter-status","name":"pg_parameter_status","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"string","var":"$param_name","beh":1,"desc":"Possible param_name values include server_version, server_encoding, client_encoding, is_superuser, session_authorization, DateStyle, TimeZone, and integer_datetimes."}],"ret_type":"string"}]},"pg_pconnect":{"desc":"Open a persistent PostgreSQL connection","long_desc":"pg_pconnect() opens a connection to a PostgreSQL database. It returns a connection resource that is needed by other PostgreSQL functions. If a second call is made to pg_pconnect() with the same connection_string as an existing connection, the existing connection will be returned unless you pass PGSQL_CONNECT_FORCE_NEW as connect_type. To enable persistent connection, the pgsql.allow_persistent php.ini directive must be set to \"On\" (which is the default). The maximum number of persistent connection can be defined with the pgsql.max_persistent php.ini directive (defaults to -1 for no limit). The total number of connections can be set with the pgsql.max_links php.ini directive. pg_close() will not close persistent links generated by pg_pconnect().","ver":"PHP 4, PHP 5","ret_desc":"PostgreSQL connection resource on success, FALSE on failure.","seealso":[],"url":"function.pg-pconnect","name":"pg_pconnect","params":[{"list":[{"type":"string","var":"$connection_string","beh":0,"desc":"The connection_string can be empty to use all default parameters, or it can contain one or more parameter settings separated by whitespace. Each parameter setting is in the form keyword = value. Spaces around the equal sign are optional. To write an empty value or a value containing spaces, surround it with single quotes, e.g., keyword = 'a value'. Single quotes and backslashes within the value must be escaped with a backslash, i.e., \\' and \\\\. The currently recognized parameter keywords are: host, hostaddr, port, dbname, user, password, connect_timeout, options, tty (ignored), sslmode, requiressl (deprecated in favor of sslmode), and service. Which of these arguments exist depends on your PostgreSQL version."},{"type":"int","var":"$connect_type","beh":1,"desc":"If PGSQL_CONNECT_FORCE_NEW is passed, then a new connection is created, even if the connection_string is identical to an existing connection."}],"ret_type":"resource"}]},"pg_ping":{"desc":"Ping database connection","long_desc":"pg_ping() pings a database connection and tries to reconnect it if it is broken.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-ping","name":"pg_ping","params":[{"list":[],"ret_type":"bool"}]},"pg_port":{"desc":"Return the port number associated with the connection","long_desc":"pg_port() returns the port number that the given PostgreSQL connection resource is connected to.","ver":"PHP 4, PHP 5","ret_desc":"An int containing the port number of the database server the connection is to, or FALSE on error.","url":"function.pg-port","name":"pg_port","params":[{"list":[],"ret_type":"int"}]},"pg_prepare":{"desc":"Submits a request to create a prepared statement with the given parameters, and waits for completion.","long_desc":"pg_prepare() creates a prepared statement for later execution with pg_execute() or pg_send_execute(). This feature allows commands that will be used repeatedly to be parsed and planned just once, rather than each time they are executed. pg_prepare() is supported only against PostgreSQL 7.4 or higher connections; it will fail when using earlier versions. The function creates a prepared statement named stmtname from the query string, which must contain a single SQL command. stmtname may be \"\" to create an unnamed statement, in which case any pre-existing unnamed statement is automatically replaced; otherwise it is an error if the statement name is already defined in the current session. If any parameters are used, they are referred to in the query as $1, $2, etc. Prepared statements for use with pg_prepare() can also be created by executing SQL PREPARE statements. (But pg_prepare() is more flexible since it does not require parameter types to be pre-specified.) Also, although there is no PHP function for deleting a prepared statement, the SQL DEALLOCATE statement can be used for that purpose.","ver":"PHP 5 >= 5.1.0","ret_desc":"A query result resource on success or FALSE on failure.","seealso":[],"url":"function.pg-prepare","name":"pg_prepare","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"string","var":"$stmtname","beh":1,"desc":"The name to give the prepared statement. Must be unique per-connection. If \"\" is specified, then an unnamed statement is created, overwriting any previously defined unnamed statement."},{"type":"string","var":"$query","beh":1,"desc":"The parameterized SQL statement. Must contain only a single statement. (multiple statements separated by semi-colons are not allowed.) If any parameters are used, they are referred to as $1, $2, etc."}],"ret_type":"resource"}]},"pg_put_line":{"desc":"Send a NULL-terminated string to PostgreSQL backend","long_desc":"pg_put_line() sends a NULL-terminated string to the PostgreSQL backend server. This is needed in conjunction with PostgreSQL's COPY FROM command. COPY is a high-speed data loading interface supported by PostgreSQL. Data is passed in without being parsed, and in a single transaction. An alternative to using raw pg_put_line() commands is to use pg_copy_from(). This is a far simpler interface.","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-put-line","name":"pg_put_line","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"string","var":"$data","beh":1,"desc":"A line of text to be sent directly to the PostgreSQL backend. A NULL terminator is added automatically."}],"ret_type":"bool"}]},"pg_query":{"desc":"Execute a query","long_desc":"pg_query() executes the query on the specified database connection. If an error occurs, and FALSE is returned, details of the error can be retrieved using the pg_last_error() function if the connection is valid.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"A query result resource on success or FALSE on failure.","seealso":[],"url":"function.pg-query","name":"pg_query","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"string","var":"$query","beh":1,"desc":"The SQL statement or statements to be executed. When multiple statements are passed to the function, they are automatically executed as one transaction, unless there are explicit BEGIN\/COMMIT commands included in the query string. However, using multiple transactions in one function call is not recommended. Data inside the query should be properly escaped."}],"ret_type":"resource"}]},"pg_query_params":{"desc":"Submits a command to the server and waits for the result, with the ability to pass parameters separately from the SQL command text.","long_desc":"Submits a command to the server and waits for the result, with the ability to pass parameters separately from the SQL command text. pg_query_params() is like pg_query(), but offers additional functionality: parameter values can be specified separately from the command string proper. pg_query_params() is supported only against PostgreSQL 7.4 or higher connections; it will fail when using earlier versions. If parameters are used, they are referred to in the query string as $1, $2, etc. params specifies the actual values of the parameters. A NULL value in this array means the corresponding parameter is SQL NULL. The primary advantage of pg_query_params() over pg_query() is that parameter values may be separated from the query string, thus avoiding the need for tedious and error-prone quoting and escaping. Unlike pg_query(), pg_query_params() allows at most one SQL command in the given string. (There can be semicolons in it, but not more than one nonempty command.)","ver":"PHP 5 >= 5.1.0","ret_desc":"A query result resource on success or FALSE on failure.","seealso":[],"url":"function.pg-query-params","name":"pg_query_params","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"string","var":"$query","beh":1,"desc":"The parameterized SQL statement. Must contain only a single statement. (multiple statements separated by semi-colons are not allowed.) If any parameters are used, they are referred to as $1, $2, etc."},{"type":"array","var":"$params","beh":1,"desc":"An array of parameter values to substitute for the $1, $2, etc. placeholders in the original prepared query string. The number of elements in the array must match the number of placeholders."}],"ret_type":"resource"}]},"pg_result_error":{"desc":"Get error message associated with result","long_desc":"pg_result_error() returns any error message associated with the result resource. Therefore, the user has a better chance of getting the correct error message than with pg_last_error(). The function pg_result_error_field() can give much greater detail on result errors than pg_result_error(). Because pg_query() returns FALSE if the query fails, you must use pg_send_query() and pg_get_result() to get the result handle.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns a string if there is an error associated with the result parameter, FALSE otherwise.","seealso":[],"url":"function.pg-result-error","name":"pg_result_error","params":[{"list":[],"ret_type":"string"}]},"pg_result_error_field":{"desc":"Returns an individual field of an error report.","long_desc":"pg_result_error_field() returns one of the detailed error message fields associated with result resource. It is only available against a PostgreSQL 7.4 or above server. The error field is specified by the fieldcode. Because pg_query() and pg_query_params() return FALSE if the query fails, you must use pg_send_query() and pg_get_result() to get the result handle. If you need to get additional error information from failed pg_query() queries, use pg_set_error_verbosity() and pg_last_error() and then parse the result.","ver":"PHP 5 >= 5.1.0","ret_desc":"A string containing the contents of the error field, NULL if the field does not exist or FALSE on failure.","seealso":[],"url":"function.pg-result-error-field","name":"pg_result_error_field","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"A PostgreSQL query result resource from a previously executed statement."},{"type":"int","var":"$fieldcode","beh":0,"desc":"Possible fieldcode values are: PGSQL_DIAG_SEVERITY, PGSQL_DIAG_SQLSTATE, PGSQL_DIAG_MESSAGE_PRIMARY, PGSQL_DIAG_MESSAGE_DETAIL, PGSQL_DIAG_MESSAGE_HINT, PGSQL_DIAG_STATEMENT_POSITION, PGSQL_DIAG_INTERNAL_POSITION (PostgreSQL 8.0+ only), PGSQL_DIAG_INTERNAL_QUERY (PostgreSQL 8.0+ only), PGSQL_DIAG_CONTEXT, PGSQL_DIAG_SOURCE_FILE, PGSQL_DIAG_SOURCE_LINE or PGSQL_DIAG_SOURCE_FUNCTION."}],"ret_type":"string"}]},"pg_result_seek":{"desc":"Set internal row offset in result resource","long_desc":"pg_result_seek() sets the internal row offset in a result resource.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-result-seek","name":"pg_result_seek","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$offset","beh":0,"desc":"Row to move the internal offset to in the result resource. Rows are numbered starting from zero."}],"ret_type":"bool"}]},"pg_result_status":{"desc":"Get status of query result","long_desc":"pg_result_status() returns the status of a result resource, or the PostgreSQL command completion tag associated with the result","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Possible return values are PGSQL_EMPTY_QUERY, PGSQL_COMMAND_OK, PGSQL_TUPLES_OK, PGSQL_COPY_OUT, PGSQL_COPY_IN, PGSQL_BAD_RESPONSE, PGSQL_NONFATAL_ERROR and PGSQL_FATAL_ERROR if PGSQL_STATUS_LONG is specified. Otherwise, a string containing the PostgreSQL command tag is returned.","seealso":[],"url":"function.pg-result-status","name":"pg_result_status","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"PostgreSQL query result resource, returned by pg_query(), pg_query_params() or pg_execute() (among others)."},{"type":"int","var":"$type","beh":0,"desc":"Either PGSQL_STATUS_LONG to return the numeric status of the result, or PGSQL_STATUS_STRING to return the command tag of the result. If not specified, PGSQL_STATUS_LONG is the default.","def":"PGSQL_STATUS_LONG"}],"ret_type":"mixed"}]},"pg_select":{"desc":"Select records","long_desc":"pg_select() selects records specified by assoc_array which has field=>value. For a successful query, it returns an array containing all records and fields that match the condition specified by assoc_array. If options is specified, pg_convert() is applied to assoc_array with the specified flags.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. Returns string if PGSQL_DML_STRING is passed via options.","seealso":[],"url":"function.pg-select","name":"pg_select","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource."},{"type":"string","var":"$table_name","beh":1,"desc":"Name of the table from which to select rows."},{"type":"array","var":"$assoc_array","beh":1,"desc":"An array whose keys are field names in the table table_name, and whose values are the conditions that a row must meet to be retrieved."},{"type":"int","var":"$options","beh":1,"desc":"Any number of PGSQL_CONV_FORCE_NULL, PGSQL_DML_NO_CONV, PGSQL_DML_EXEC, PGSQL_DML_ASYNC or PGSQL_DML_STRING combined. If PGSQL_DML_STRING is part of the options then query string is returned.","def":"PGSQL_DML_EXEC"}],"ret_type":"mixed"}]},"pg_send_execute":{"desc":"Sends a request to execute a prepared statement with given parameters, without waiting for the result(s).","long_desc":"Sends a request to execute a prepared statement with given parameters, without waiting for the result(s). This is similar to pg_send_query_params(), but the command to be executed is specified by naming a previously-prepared statement, instead of giving a query string. The function's parameters are handled identically to pg_execute(). Like pg_execute(), it will not work on pre-7.4 versions of PostgreSQL.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success, FALSE on failure. Use pg_get_result() to determine the query result.","seealso":[],"url":"function.pg-send-execute","name":"pg_send_execute","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"string","var":"$stmtname","beh":0,"desc":"The name of the prepared statement to execute. if \"\" is specified, then the unnamed statement is executed. The name must have been previously prepared using pg_prepare(), pg_send_prepare() or a PREPARE SQL command."},{"type":"array","var":"$params","beh":1,"desc":"An array of parameter values to substitute for the $1, $2, etc. placeholders in the original prepared query string. The number of elements in the array must match the number of placeholders."}],"ret_type":"bool"}]},"pg_send_prepare":{"desc":"Sends a request to create a prepared statement with the given parameters, without waiting for completion.","long_desc":"Sends a request to create a prepared statement with the given parameters, without waiting for completion. This is an asynchronous version of pg_prepare(): it returns TRUE if it was able to dispatch the request, and FALSE if not. After a successful call, call pg_get_result() to determine whether the server successfully created the prepared statement. The function's parameters are handled identically to pg_prepare(). Like pg_prepare(), it will not work on pre-7.4 versions of PostgreSQL.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success, FALSE on failure. Use pg_get_result() to determine the query result.","seealso":[],"url":"function.pg-send-prepare","name":"pg_send_prepare","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"string","var":"$stmtname","beh":0,"desc":"The name to give the prepared statement. Must be unique per-connection. If \"\" is specified, then an unnamed statement is created, overwriting any previously defined unnamed statement."},{"type":"string","var":"$query","beh":1,"desc":"The parameterized SQL statement. Must contain only a single statement. (multiple statements separated by semi-colons are not allowed.) If any parameters are used, they are referred to as $1, $2, etc."}],"ret_type":"bool"}]},"pg_send_query":{"desc":"Sends asynchronous query","long_desc":"pg_send_query() sends a query or queries asynchronously to the connection. Unlike pg_query(), it can send multiple queries at once to PostgreSQL and get the results one by one using pg_get_result(). Script execution is not blocked while the queries are executing. Use pg_connection_busy() to check if the connection is busy (i.e. the query is executing). Queries may be cancelled using pg_cancel_query(). Although the user can send multiple queries at once, multiple queries cannot be sent over a busy connection. If a query is sent while the connection is busy, it waits until the last query is finished and discards all its results.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-send-query","name":"pg_send_query","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource."},{"type":"string","var":"$query","beh":0,"desc":"The SQL statement or statements to be executed. Data inside the query should be properly escaped."}],"ret_type":"bool"}]},"pg_send_query_params":{"desc":"Submits a command and separate parameters to the server without waiting for the result(s).","long_desc":"Submits a command and separate parameters to the server without waiting for the result(s). This is equivalent to pg_send_query() except that query parameters can be specified separately from the query string. The function's parameters are handled identically to pg_query_params(). Like pg_query_params(), it will not work on pre-7.4 PostgreSQL connections, and it allows only one command in the query string.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-send-query-params","name":"pg_send_query_params","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource."},{"type":"string","var":"$query","beh":0,"desc":"The parameterized SQL statement. Must contain only a single statement. (multiple statements separated by semi-colons are not allowed.) If any parameters are used, they are referred to as $1, $2, etc."},{"type":"array","var":"$params","beh":1,"desc":"An array of parameter values to substitute for the $1, $2, etc. placeholders in the original prepared query string. The number of elements in the array must match the number of placeholders."}],"ret_type":"bool"}]},"pg_set_client_encoding":{"desc":"Set the client encoding","long_desc":"pg_set_client_encoding() sets the client encoding and returns 0 if success or -1 if error. PostgreSQL will automatically convert data in the backend database encoding into the frontend encoding.","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"Returns 0 on success or -1 on error.","seealso":[],"url":"function.pg-set-client-encoding","name":"pg_set_client_encoding","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"string","var":"$encoding","beh":1,"desc":"The required client encoding. One of SQL_ASCII, EUC_JP, EUC_CN, EUC_KR, EUC_TW, UNICODE, MULE_INTERNAL, LATINX (X=1...9), KOI8, WIN, ALT, SJIS, BIG5 or WIN1250. The exact list of available encodings depends on your PostgreSQL version, so check your PostgreSQL manual for a more specific list."}],"ret_type":"int"}]},"pg_set_error_verbosity":{"desc":"Determines the verbosity of messages returned by pg_last_error() and pg_result_error().","long_desc":"Determines the verbosity of messages returned by pg_last_error() and pg_result_error(). pg_set_error_verbosity() sets the verbosity mode, returning the connection's previous setting. In PGSQL_ERRORS_TERSE mode, returned messages include severity, primary text, and position only; this will normally fit on a single line. The default mode (PGSQL_ERRORS_DEFAULT) produces messages that include the above plus any detail, hint, or context fields (these may span multiple lines). The PGSQL_ERRORS_VERBOSE mode includes all available fields. Changing the verbosity does not affect the messages available from already-existing result objects, only subsequently-created ones.","ver":"PHP 5 >= 5.1.0","ret_desc":"The previous verbosity level: PGSQL_ERRORS_TERSE, PGSQL_ERRORS_DEFAULT or PGSQL_ERRORS_VERBOSE.","seealso":[],"url":"function.pg-set-error-verbosity","name":"pg_set_error_verbosity","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."},{"type":"int","var":"$verbosity","beh":1,"desc":"The required verbosity: PGSQL_ERRORS_TERSE, PGSQL_ERRORS_DEFAULT or PGSQL_ERRORS_VERBOSE."}],"ret_type":"int"}]},"pg_trace":{"desc":"Enable tracing a PostgreSQL connection","long_desc":"pg_trace() enables tracing of the PostgreSQL frontend\/backend communication to a file. To fully understand the results, one needs to be familiar with the internals of PostgreSQL communication protocol. For those who are not, it can still be useful for tracing errors in queries sent to the server, you could do for example grep '^To backend' trace.log and see what queries actually were sent to the PostgreSQL server. For more information, refer to the \u00bb\u00a0PostgreSQL Documentation.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.pg-trace","name":"pg_trace","params":[{"list":[{"type":"string","var":"$pathname","beh":1,"desc":"The full path and file name of the file in which to write the trace log. Same as in fopen()."},{"type":"string","var":"$mode","beh":1,"desc":"An optional file access mode, same as for fopen().","def":"\"w\""},{"type":"resource","var":"$connection","beh":1,"desc":"PostgreSQL database connection resource. When connection is not present, the default connection is used. The default connection is the last connection made by pg_connect() or pg_pconnect()."}],"ret_type":"bool"}]},"pg_transaction_status":{"desc":"Returns the current in-transaction status of the server.","long_desc":"Returns the current in-transaction status of the server.","ver":"PHP 5 >= 5.1.0","ret_desc":"The status can be PGSQL_TRANSACTION_IDLE (currently idle), PGSQL_TRANSACTION_ACTIVE (a command is in progress), PGSQL_TRANSACTION_INTRANS (idle, in a valid transaction block), or PGSQL_TRANSACTION_INERROR (idle, in a failed transaction block). PGSQL_TRANSACTION_UNKNOWN is reported if the connection is bad. PGSQL_TRANSACTION_ACTIVE is reported only when a query has been sent to the server and not yet completed.","url":"function.pg-transaction-status","name":"pg_transaction_status","params":[{"list":[],"ret_type":"int"}]},"pg_tty":{"desc":"Return the TTY name associated with the connection","long_desc":"pg_tty() returns the TTY name that server side debugging output is sent to on the given PostgreSQL connection resource.","ver":"PHP 4, PHP 5","ret_desc":"A string containing the debug TTY of the connection, or FALSE on error.","url":"function.pg-tty","name":"pg_tty","params":[{"list":[],"ret_type":"string"}]},"pg_unescape_bytea":{"desc":"Unescape binary for bytea type","long_desc":"pg_unescape_bytea() unescapes PostgreSQL bytea data values. It returns the unescaped string, possibly containing binary data.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"A string containing the unescaped data.","seealso":[],"url":"function.pg-unescape-bytea","name":"pg_unescape_bytea","params":[{"list":[],"ret_type":"string"}]},"pg_untrace":{"desc":"Disable tracing of a PostgreSQL connection","long_desc":"Stop tracing started by pg_trace().","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Always returns TRUE.","seealso":[],"url":"function.pg-untrace","name":"pg_untrace","params":[{"list":[],"ret_type":"bool"}]},"pg_update":{"desc":"Update table","long_desc":"pg_update() updates records that matches condition with data. If options is specified, pg_convert() is applied to data with specified options.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. Returns string if PGSQL_DML_STRING is passed via options.","seealso":[],"url":"function.pg-update","name":"pg_update","params":[{"list":[{"type":"resource","var":"$connection","beh":0,"desc":"PostgreSQL database connection resource."},{"type":"string","var":"$table_name","beh":1,"desc":"Name of the table into which to update rows."},{"type":"array","var":"$data","beh":1,"desc":"An array whose keys are field names in the table table_name, and whose values are what matched rows are to be updated to."},{"type":"array","var":"$condition","beh":1,"desc":"An array whose keys are field names in the table table_name, and whose values are the conditions that a row must meet to be updated."},{"type":"int","var":"$options","beh":1,"desc":"Any number of PGSQL_CONV_OPTS, PGSQL_DML_NO_CONV, PGSQL_DML_EXEC or PGSQL_DML_STRING combined. If PGSQL_DML_STRING is part of the options then query string is returned.","def":"PGSQL_DML_EXEC"}],"ret_type":"mixed"}]},"pg_version":{"desc":"Returns an array with client, protocol and server version (when available)","long_desc":"pg_version() returns an array with the client, protocol and server version. Protocol and server versions are only available if PHP was compiled with PostgreSQL 7.4 or later. For more detailed server information, use pg_parameter_status().","ver":"PHP 5","ret_desc":"Returns an array with client, protocol and server keys and values (if available). Returns FALSE on error or invalid connection.","seealso":[],"url":"function.pg-version","name":"pg_version","params":[{"list":[],"ret_type":"array"}]},"php_check_syntax":{"desc":"Check the PHP syntax of (and execute) the specified file","long_desc":"Performs a syntax (lint) check on the specified filename testing for scripting errors. This is similar to using php -l from the commandline except that this function will execute (but not output) the checked filename. For example, if a function is defined in filename, this defined function will be available to the file that executed php_check_syntax(), but output from filename will be suppressed.","ver":"PHP 5 <= 5.0.4","ret_desc":"Returns TRUE if the lint check passed, and FALSE if the link check failed or if filename cannot be opened.","seealso":[],"url":"function.php-check-syntax","name":"php_check_syntax","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The name of the file being checked."},{"type":"string","var":"&$error_message","beh":1,"desc":"If the error_message parameter is used, it will contain the error message generated by the syntax check. error_message is passed by reference."}],"ret_type":"bool"}]},"php_ini_loaded_file":{"desc":"Retrieve a path to the loaded php.ini file","long_desc":"Check if a php.ini file is loaded, and retrieve its path.","ver":"PHP 5 >= 5.2.4","ret_desc":"The loaded php.ini path, or FALSE if one is not loaded.","seealso":[],"url":"function.php-ini-loaded-file","name":"php_ini_loaded_file","params":[{"list":[],"ret_type":"string"}]},"php_ini_scanned_files":{"desc":"Return a list of .ini files parsed from the additional ini dir","long_desc":"php_ini_scanned_files() returns a comma-separated list of configuration files parsed after php.ini. These files are found in a directory defined by the --with-config-file-scan-dir option which is set during compilation. The returned configuration files also include the path as declared in the --with-config-file-scan-dir option.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns a comma-separated string of .ini files on success. Each comma is followed by a newline. If the directive --with-config-file-scan-dir wasn't set, FALSE is returned. If it was set and the directory was empty, an empty string is returned. If a file is unrecognizable, the file will still make it into the returned string but a PHP error will also result. This PHP error will be seen both at compile time and while using php_ini_scanned_files().","seealso":[],"url":"function.php-ini-scanned-files","name":"php_ini_scanned_files","params":[{"list":[],"ret_type":"string"}]},"php_logo_guid":{"desc":"Gets the logo guid","long_desc":"This function returns the ID which can be used to display the PHP logo using the built-in image. Logo is displayed only if expose_php is On.","ver":"PHP 4, PHP 5","ret_desc":"Returns PHPE9568F34-D428-11d2-A769-00AA001ACF42.","seealso":[],"url":"function.php-logo-guid","name":"php_logo_guid","params":[{"list":[],"ret_type":"string"}]},"php_sapi_name":{"desc":"Returns the type of interface between web server and PHP","long_desc":"Returns a lowercase string that describes the type of interface (the Server API, SAPI) that PHP is using. For example, in CLI PHP this string will be \"cli\" whereas with Apache it may have several different values depending on the exact SAPI used. Possible values are listed below.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns the interface type, as a lowercase string.","seealso":[],"url":"function.php-sapi-name","name":"php_sapi_name","params":[{"list":[],"ret_type":"string"}]},"php_strip_whitespace":{"desc":"Return source with stripped comments and whitespace","long_desc":"Returns the PHP source code in filename with PHP comments and whitespace removed. This may be useful for determining the amount of actual code in your scripts compared with the amount of comments. This is similar to using php -w from the commandline.","ver":"PHP 5","ret_desc":"The stripped source code will be returned on success, or an empty string on failure.","url":"function.php-strip-whitespace","name":"php_strip_whitespace","params":[{"list":[],"ret_type":"string"}]},"php_uname":{"desc":"Returns information about the operating system PHP is running on","long_desc":"php_uname() returns a description of the operating system PHP is running on. This is the same string you see at the very top of the phpinfo() output. For the name of just the operating system, consider using the PHP_OS constant, but keep in mind this constant will contain the operating system PHP was built on. On some older UNIX platforms, it may not be able to determine the current OS information in which case it will revert to displaying the OS PHP was built on. This will only happen if your uname() library call either doesn't exist or doesn't work.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns the description, as a string.","seealso":[],"url":"function.php-uname","name":"php_uname","params":[{"list":[],"ret_type":"string"}]},"phpcredits":{"desc":"Prints out the credits for PHP","long_desc":"This function prints out the credits listing the PHP developers, modules, etc. It generates the appropriate HTML codes to insert the information in a page.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.phpcredits","name":"phpcredits","params":[{"list":[],"ret_type":"bool"}]},"phpinfo":{"desc":"Outputs information about PHP's configuration","long_desc":"Outputs a large amount of information about the current state of PHP. This includes information about PHP compilation options and extensions, the PHP version, server information and environment (if compiled as a module), the PHP environment, OS version information, paths, master and local values of configuration options, HTTP headers, and the PHP License. Because every system is setup differently, phpinfo() is commonly used to check configuration settings and for available predefined variables on a given system. phpinfo() is also a valuable debugging tool as it contains all EGPCS (Environment, GET, POST, Cookie, Server) data.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.phpinfo","name":"phpinfo","params":[{"list":[],"ret_type":"bool"}]},"phpversion":{"desc":"Gets the current PHP version","long_desc":"Returns a string containing the version of the currently running PHP parser or extension.","ver":"PHP 4, PHP 5","ret_desc":"If the optional extension parameter is specified, phpversion() returns the version of that extension, or FALSE if there is no version information associated or the extension isn't enabled.","seealso":[],"url":"function.phpversion","name":"phpversion","params":[{"list":[],"ret_type":"string"}]},"pi":{"desc":"Get value of pi","long_desc":"Returns an approximation of pi. The returned float has a precision based on the precision directive in php.ini, which defaults to 14. Also, you can use the M_PI constant which yields identical results to pi().","ver":"PHP 4, PHP 5","ret_desc":"The value of pi as float.","url":"function.pi","name":"pi","params":[{"list":[],"ret_type":"float"}]},"png2wbmp":{"desc":"Convert PNG image file to WBMP image file","long_desc":"Converts a PNG file into a WBMP file.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.png2wbmp","name":"png2wbmp","params":[{"list":[{"type":"string","var":"$pngname","beh":0,"desc":"Path to PNG file."},{"type":"string","var":"$wbmpname","beh":0,"desc":"Path to destination WBMP file."},{"type":"int","var":"$dest_height","beh":1,"desc":"Destination image height."},{"type":"int","var":"$dest_width","beh":1,"desc":"Destination image width."},{"type":"int","var":"$threshold","beh":1,"desc":"Threshold value, between 0 and 8 (inclusive)."}],"ret_type":"bool"}]},"popen":{"desc":"Opens process file pointer","long_desc":"Opens a pipe to a process executed by forking the command given by command.","ver":"PHP 4, PHP 5","ret_desc":"Returns a file pointer identical to that returned by fopen(), except that it is unidirectional (may only be used for reading or writing) and must be closed with pclose(). This pointer may be used with fgets(), fgetss(), and fwrite(). When the mode is 'r', the returned file pointer equals to the STDOUT of the command, when the mode is 'w', the returned file pointer equals to the STDIN of the command.","seealso":[],"url":"function.popen","name":"popen","params":[{"list":[{"type":"string","var":"$command","beh":0,"desc":"The command"},{"type":"string","var":"$mode","beh":0,"desc":"The mode"}],"ret_type":"resource"}]},"pos":{"desc":"Alias of current()","long_desc":"This function is an alias of: current()","ver":"PHP 4, PHP 5","url":"function.pos","name":"pos","params":[]},"posix_access":{"desc":"Determine accessibility of a file","long_desc":"posix_access() checks the user's permission of a file.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.posix-access","name":"posix_access","params":[{"list":[{"type":"string","var":"$file","beh":0,"desc":"The name of the file to be tested."},{"type":"int","var":"$mode","beh":0,"desc":"A mask consisting of one or more of POSIX_F_OK, POSIX_R_OK, POSIX_W_OK and POSIX_X_OK. POSIX_R_OK, POSIX_W_OK and POSIX_X_OK request checking whether the file exists and has read, write and execute permissions, respectively. POSIX_F_OK just requests checking for the existence of the file.","def":"POSIX_F_OK"}],"ret_type":"bool"}]},"posix_ctermid":{"desc":"Get path name of controlling terminal","long_desc":"Generates a string which is the pathname for the current controlling terminal for the process. On error this will set errno, which can be checked using posix_get_last_error()","ver":"PHP 4, PHP 5","ret_desc":"Upon successful completion, returns string of the pathname to the current controlling terminal. Otherwise FALSE is returned and errno is set, which can be checked with posix_get_last_error().","seealso":[],"url":"function.posix-ctermid","name":"posix_ctermid","params":[{"list":[],"ret_type":"string"}]},"posix_errno":{"desc":"Alias of posix_get_last_error()","long_desc":"This function is an alias of: posix_get_last_error().","ver":"PHP 4 >= 4.2.0, PHP 5","url":"function.posix-errno","name":"posix_errno","params":[]},"posix_get_last_error":{"desc":"Retrieve the error number set by the last posix function that failed","long_desc":"Retrieve the error number set by the last posix function that failed. The system error message associated with the errno may be checked with posix_strerror().","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns the errno (error number) set by the last posix function that failed. If no errors exist, 0 is returned.","seealso":[],"url":"function.posix-get-last-error","name":"posix_get_last_error","params":[{"list":[],"ret_type":"int"}]},"posix_getcwd":{"desc":"Pathname of current directory","long_desc":"Gets the absolute pathname of the script's current working directory. On error, it sets errno which can be checked using posix_get_last_error()","ver":"PHP 4, PHP 5","ret_desc":"Returns a string of the absolute pathname on success. On error, returns FALSE and sets errno which can be checked with posix_get_last_error().","url":"function.posix-getcwd","name":"posix_getcwd","params":[{"list":[],"ret_type":"string"}]},"posix_getegid":{"desc":"Return the effective group ID of the current process","long_desc":"Return the numeric effective group ID of the current process.","ver":"PHP 4, PHP 5","ret_desc":"Returns an integer of the effective group ID.","seealso":[],"url":"function.posix-getegid","name":"posix_getegid","params":[{"list":[],"ret_type":"int"}]},"posix_geteuid":{"desc":"Return the effective user ID of the current process","long_desc":"Return the numeric effective user ID of the current process. See also posix_getpwuid() for information on how to convert this into a useable username.","ver":"PHP 4, PHP 5","ret_desc":"Returns the user id, as an integer","seealso":[],"url":"function.posix-geteuid","name":"posix_geteuid","params":[{"list":[],"ret_type":"int"}]},"posix_getgid":{"desc":"Return the real group ID of the current process","long_desc":"Return the numeric real group ID of the current process.","ver":"PHP 4, PHP 5","ret_desc":"Returns the real group id, as an integer.","seealso":[],"url":"function.posix-getgid","name":"posix_getgid","params":[{"list":[],"ret_type":"int"}]},"posix_getgrgid":{"desc":"Return info about a group by group id","long_desc":"Gets information about a group provided its id.","ver":"PHP 4, PHP 5","ret_desc":"The array elements returned are:","seealso":[],"url":"function.posix-getgrgid","name":"posix_getgrgid","params":[{"list":[],"ret_type":"array"}]},"posix_getgrnam":{"desc":"Return info about a group by name","long_desc":"Gets information about a group provided its name.","ver":"PHP 4, PHP 5","ret_desc":"The array elements returned are:","seealso":[],"url":"function.posix-getgrnam","name":"posix_getgrnam","params":[{"list":[],"ret_type":"array"}]},"posix_getgroups":{"desc":"Return the group set of the current process","long_desc":"Gets the group set of the current process.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of integers containing the numeric group ids of the group set of the current process.","seealso":[],"url":"function.posix-getgroups","name":"posix_getgroups","params":[{"list":[],"ret_type":"array"}]},"posix_getlogin":{"desc":"Return login name","long_desc":"Returns the login name of the user owning the current process.","ver":"PHP 4, PHP 5","ret_desc":"Returns the login name of the user, as a string.","seealso":[],"url":"function.posix-getlogin","name":"posix_getlogin","params":[{"list":[],"ret_type":"string"}]},"posix_getpgid":{"desc":"Get process group id for job control","long_desc":"Returns the process group identifier of the process pid or FALSE on failure.","ver":"PHP 4, PHP 5","ret_desc":"Returns the identifier, as an integer.","seealso":[],"url":"function.posix-getpgid","name":"posix_getpgid","params":[{"list":[],"ret_type":"int"}]},"posix_getpgrp":{"desc":"Return the current process group identifier","long_desc":"Return the process group identifier of the current process.","ver":"PHP 4, PHP 5","ret_desc":"Returns the identifier, as an integer.","seealso":[],"url":"function.posix-getpgrp","name":"posix_getpgrp","params":[{"list":[],"ret_type":"int"}]},"posix_getpid":{"desc":"Return the current process identifier","long_desc":"Return the process identifier of the current process.","ver":"PHP 4, PHP 5","ret_desc":"Returns the identifier, as an integer.","seealso":[],"url":"function.posix-getpid","name":"posix_getpid","params":[{"list":[],"ret_type":"int"}]},"posix_getppid":{"desc":"Return the parent process identifier","long_desc":"Return the process identifier of the parent process of the current process.","ver":"PHP 4, PHP 5","ret_desc":"Returns the identifier, as an integer.","url":"function.posix-getppid","name":"posix_getppid","params":[{"list":[],"ret_type":"int"}]},"posix_getpwnam":{"desc":"Return info about a user by username","long_desc":"Returns an array of information about the given user.","ver":"PHP 4, PHP 5","ret_desc":"On success an array with the following elements is returned, else FALSE is returned:","seealso":[],"url":"function.posix-getpwnam","name":"posix_getpwnam","params":[{"list":[],"ret_type":"array"}]},"posix_getpwuid":{"desc":"Return info about a user by user id","long_desc":"Returns an array of information about the user referenced by the given user ID.","ver":"PHP 4, PHP 5","ret_desc":"Returns an associative array with the following elements:","seealso":[],"url":"function.posix-getpwuid","name":"posix_getpwuid","params":[{"list":[],"ret_type":"array"}]},"posix_getrlimit":{"desc":"Return info about system resource limits","long_desc":"posix_getrlimit() returns an array of information about the current resource's soft and hard limits. Each resource has an associated soft and hard limit. The soft limit is the value that the kernel enforces for the corresponding resource. The hard limit acts as a ceiling for the soft limit. An unprivileged process may only set its soft limit to a value from 0 to the hard limit, and irreversibly lower its hard limit.","ver":"PHP 4, PHP 5","ret_desc":"Returns an associative array of elements for each limit that is defined. Each limit has a soft and a hard limit.","seealso":[],"url":"function.posix-getrlimit","name":"posix_getrlimit","params":[{"list":[],"ret_type":"array"}]},"posix_getsid":{"desc":"Get the current sid of the process","long_desc":"Return the session id of the process pid. The session id of a process is the process group id of the session leader.","ver":"PHP 4, PHP 5","ret_desc":"Returns the identifier, as an integer.","seealso":[],"url":"function.posix-getsid","name":"posix_getsid","params":[{"list":[],"ret_type":"int"}]},"posix_getuid":{"desc":"Return the real user ID of the current process","long_desc":"Return the numeric real user ID of the current process.","ver":"PHP 4, PHP 5","ret_desc":"Returns the user id, as an integer","seealso":[],"url":"function.posix-getuid","name":"posix_getuid","params":[{"list":[],"ret_type":"int"}]},"posix_initgroups":{"desc":"Calculate the group access list","long_desc":"Calculates the group access list for the user specified in name.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.posix-initgroups","name":"posix_initgroups","params":[{"list":[{"type":"string","var":"$name","beh":0,"desc":"The user to calculate the list for."},{"type":"int","var":"$base_group_id","beh":0,"desc":"Typically the group number from the password file."}],"ret_type":"bool"}]},"posix_isatty":{"desc":"Determine if a file descriptor is an interactive terminal","long_desc":"Determines if the file descriptor fd refers to a valid terminal type device.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if fd is an open descriptor connected to a terminal and FALSE otherwise.","seealso":[],"url":"function.posix-isatty","name":"posix_isatty","params":[{"list":[],"ret_type":"bool"}]},"posix_kill":{"desc":"Send a signal to a process","long_desc":"Send the signal sig to the process with the process identifier pid.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.posix-kill","name":"posix_kill","params":[{"list":[{"type":"int","var":"$pid","beh":0,"desc":"The process identifier."},{"type":"int","var":"$sig","beh":0,"desc":"One of the PCNTL signals constants."}],"ret_type":"bool"}]},"posix_mkfifo":{"desc":"Create a fifo special file (a named pipe)","long_desc":"posix_mkfifo() creates a special FIFO file which exists in the file system and acts as a bidirectional communication endpoint for processes.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.posix-mkfifo","name":"posix_mkfifo","params":[{"list":[{"type":"string","var":"$pathname","beh":0,"desc":"Path to the FIFO file."},{"type":"int","var":"$mode","beh":0,"desc":"The second parameter mode has to be given in octal notation (e.g. 0644). The permission of the newly created FIFO also depends on the setting of the current umask(). The permissions of the created file are (mode & ~umask)."}],"ret_type":"bool"}]},"posix_mknod":{"desc":"Create a special or ordinary file (POSIX.1)","long_desc":"Creates a special or ordinary file.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.posix-mknod","name":"posix_mknod","params":[{"list":[{"type":"string","var":"$pathname","beh":1,"desc":"The file to create"},{"type":"int","var":"$mode","beh":1,"desc":"This parameter is constructed by a bitwise OR between file type (one of the following constants: POSIX_S_IFREG, POSIX_S_IFCHR, POSIX_S_IFBLK, POSIX_S_IFIFO or POSIX_S_IFSOCK) and permissions."},{"type":"int","var":"$major","beh":1,"desc":"The major device kernel identifier (required to pass when using S_IFCHR or S_IFBLK).","def":0},{"type":"int","var":"$minor","beh":1,"desc":"The minor device kernel identifier.","def":0}],"ret_type":"bool"}]},"posix_setegid":{"desc":"Set the effective GID of the current process","long_desc":"Set the effective group ID of the current process. This is a privileged function and needs appropriate privileges (usually root) on the system to be able to perform this function.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.posix-setegid","name":"posix_setegid","params":[{"list":[],"ret_type":"bool"}]},"posix_seteuid":{"desc":"Set the effective UID of the current process","long_desc":"Set the real user ID of the current process. This is a privileged function and needs appropriate privileges (usually root) on the system to be able to perform this function.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.posix-seteuid","name":"posix_seteuid","params":[{"list":[],"ret_type":"bool"}]},"posix_setgid":{"desc":"Set the GID of the current process","long_desc":"Set the real group ID of the current process. This is a privileged function and needs appropriate privileges (usually root) on the system to be able to perform this function. The appropriate order of function calls is posix_setgid() first, posix_setuid() last.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.posix-setgid","name":"posix_setgid","params":[{"list":[],"ret_type":"bool"}]},"posix_setpgid":{"desc":"Set process group id for job control","long_desc":"Let the process pid join the process group pgid.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.posix-setpgid","name":"posix_setpgid","params":[{"list":[{"type":"int","var":"$pid","beh":0,"desc":"The process id."},{"type":"int","var":"$pgid","beh":0,"desc":"The process group id."}],"ret_type":"bool"}]},"posix_setsid":{"desc":"Make the current process a session leader","long_desc":"Make the current process a session leader.","ver":"PHP 4, PHP 5","ret_desc":"Returns the session id, or -1 on errors.","seealso":[],"url":"function.posix-setsid","name":"posix_setsid","params":[{"list":[],"ret_type":"int"}]},"posix_setuid":{"desc":"Set the UID of the current process","long_desc":"Set the real user ID of the current process. This is a privileged function that needs appropriate privileges (usually root) on the system to be able to perform this function.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.posix-setuid","name":"posix_setuid","params":[{"list":[],"ret_type":"bool"}]},"posix_strerror":{"desc":"Retrieve the system error message associated with the given errno","long_desc":"Returns the POSIX system error message associated with the given errno. You may get the errno parameter by calling posix_get_last_error().","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns the error message, as a string.","seealso":[],"url":"function.posix-strerror","name":"posix_strerror","params":[{"list":[],"ret_type":"string"}]},"posix_times":{"desc":"Get process times","long_desc":"Gets information about the current CPU usage.","ver":"PHP 4, PHP 5","ret_desc":"Returns a hash of strings with information about the current process CPU usage. The indices of the hash are:","url":"function.posix-times","name":"posix_times","params":[{"list":[],"ret_type":"array"}]},"posix_ttyname":{"desc":"Determine terminal device name","long_desc":"Returns a string for the absolute path to the current terminal device that is open on the file descriptor fd.","ver":"PHP 4, PHP 5","ret_desc":"On success, returns a string of the absolute path of the fd. On failure, returns FALSE","url":"function.posix-ttyname","name":"posix_ttyname","params":[{"list":[],"ret_type":"string"}]},"posix_uname":{"desc":"Get system name","long_desc":"Gets information about the system. Posix requires that assumptions must not be made about the format of the values, e.g. the assumption that a release may contain three digits or anything else returned by this function.","ver":"PHP 4, PHP 5","ret_desc":"Returns a hash of strings with information about the system. The indices of the hash are","url":"function.posix-uname","name":"posix_uname","params":[{"list":[],"ret_type":"array"}]},"pow":{"desc":"Exponential expression","long_desc":"Returns base raised to the power of exp.","ver":"PHP 4, PHP 5","ret_desc":"base raised to the power of exp. If both arguments are non-negative integers and the result can be represented as an integer, the result will be returned with integer type, otherwise it will be returned as a float.","seealso":[],"url":"function.pow","name":"pow","params":[{"list":[{"type":"number","var":"$base","beh":0,"desc":"The base to use"},{"type":"number","var":"$exp","beh":0,"desc":"The exponent"}],"ret_type":"number"}]},"preg_filter":{"desc":"Perform a regular expression search and replace","long_desc":"preg_filter() is identical to preg_replace() except it only returns the (possibly transformed) subjects where there was a match. For details about how this function works, read the preg_replace() documentation.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an array if the subject parameter is an array, or a string otherwise.","seealso":[],"url":"function.preg-filter","name":"preg_filter","params":[{"list":[{"type":"mixed","var":"$pattern","beh":1,"desc":""},{"type":"mixed","var":"$replacement","beh":1,"desc":""},{"type":"mixed","var":"$subject","beh":1,"desc":""},{"type":"int","var":"$limit","beh":1,"desc":"","def":-1},{"type":"int","var":"&$count","beh":1,"desc":""}],"ret_type":"mixed"}]},"preg_grep":{"desc":"Return array entries that match the pattern","long_desc":"Returns the array consisting of the elements of the input array that match the given pattern.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array indexed using the keys from the input array.","seealso":[],"url":"function.preg-grep","name":"preg_grep","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"The pattern to search for, as a string."},{"type":"array","var":"$input","beh":1,"desc":"The input array."},{"type":"int","var":"$flags","beh":1,"desc":"If set to PREG_GREP_INVERT, this function returns the elements of the input array that do not match the given pattern.","def":0}],"ret_type":"array"}]},"preg_last_error":{"desc":"Returns the error code of the last PCRE regex execution","long_desc":"Returns the error code of the last PCRE regex execution.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns one of the following constants (explained on their own page):","url":"function.preg-last-error","name":"preg_last_error","params":[{"list":[],"ret_type":"int"}]},"preg_match":{"desc":"Perform a regular expression match","long_desc":"Searches subject for a match to the regular expression given in pattern.","ver":"PHP 4, PHP 5","ret_desc":"preg_match() returns the number of times pattern matches. That will be either 0 times (no match) or 1 time because preg_match() will stop searching after the first match. preg_match_all() on the contrary will continue until it reaches the end of subject. preg_match() returns FALSE if an error occurred.","seealso":[],"url":"function.preg-match","name":"preg_match","params":[{"list":[{"type":"string","var":"$pattern","beh":1,"desc":"The pattern to search for, as a string."},{"type":"string","var":"$subject","beh":1,"desc":"The input string."},{"type":"array","var":"&$matches","beh":1,"desc":"If matches is provided, then it is filled with the results of search. $matches[0] will contain the text that matched the full pattern, $matches[1] will have the text that matched the first captured parenthesized subpattern, and so on."},{"type":"int","var":"$flags","beh":1,"desc":"flags can be the following flag:","def":0},{"type":"int","var":"$offset","beh":1,"desc":"","def":0}],"ret_type":"int"}]},"preg_match_all":{"desc":"Perform a global regular expression match","long_desc":"Searches subject for all matches to the regular expression given in pattern and puts them in matches in the order specified by flags. After the first match is found, the subsequent searches are continued on from end of the last match.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of full pattern matches (which might be zero), or FALSE if an error occurred.","seealso":[],"url":"function.preg-match-all","name":"preg_match_all","params":[{"list":[{"type":"string","var":"$pattern","beh":1,"desc":"The pattern to search for, as a string."},{"type":"string","var":"$subject","beh":1,"desc":"The input string."},{"type":"array","var":"&$matches","beh":1,"desc":"Array of all matches in multi-dimensional array ordered according to flags."},{"type":"int","var":"$flags","beh":1,"desc":"Can be a combination of the following flags (note that it doesn't make sense to use PREG_PATTERN_ORDER together with PREG_SET_ORDER): If no order flag is given, PREG_PATTERN_ORDER is assumed.","def":"PREG_PATTERN_ORDER"},{"type":"int","var":"$offset","beh":1,"desc":"Orders results so that $matches[0] is an array of full pattern matches, $matches[1] is an array of strings matched by the first parenthesized subpattern, and so on.","def":0}],"ret_type":"int"}]},"preg_quote":{"desc":"Quote regular expression characters","long_desc":"preg_quote() takes str and puts a backslash in front of every character that is part of the regular expression syntax. This is useful if you have a run-time string that you need to match in some text and the string may contain special regex characters. The special regular expression characters are: . \\ + * ? [ ^ ] $ ( ) { } = ! < > | : -","ver":"PHP 4, PHP 5","ret_desc":"Returns the quoted string.","url":"function.preg-quote","name":"preg_quote","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The input string."},{"type":"string","var":"$delimiter","beh":0,"desc":"If the optional delimiter is specified, it will also be escaped. This is useful for escaping the delimiter that is required by the PCRE functions. The \/ is the most commonly used delimiter.","def":"NULL"}],"ret_type":"string"}]},"preg_replace":{"desc":"Perform a regular expression search and replace","long_desc":"Searches subject for matches to pattern and replaces them with replacement.","ver":"PHP 4, PHP 5","ret_desc":"preg_replace() returns an array if the subject parameter is an array, or a string otherwise.","seealso":[],"url":"function.preg-replace","name":"preg_replace","params":[{"list":[{"type":"mixed","var":"$pattern","beh":1,"desc":"The pattern to search for. It can be either a string or an array with strings. Several PCRE modifiers are also available, including 'e' (PREG_REPLACE_EVAL), which is specific to this function."},{"type":"mixed","var":"$replacement","beh":1,"desc":"The string or an array with strings to replace. If this parameter is a string and the pattern parameter is an array, all patterns will be replaced by that string. If both pattern and replacement parameters are arrays, each pattern will be replaced by the replacement counterpart. If there are fewer elements in the replacement array than in the pattern array, any extra patterns will be replaced by an empty string. replacement may contain references of the form \\\\n or (since PHP 4.0.4) $n, with the latter form being the preferred one. Every such reference will be replaced by the text captured by the n'th parenthesized pattern. n can be from 0 to 99, and \\\\0 or $0 refers to the text matched by the whole pattern. Opening parentheses are counted from left to right (starting from 1) to obtain the number of the capturing subpattern. To use backslash in replacement, it must be doubled (\"\\\\\\\\\" PHP string). When working with a replacement pattern where a backreference is immediately followed by another number (i.e.: placing a literal number immediately after a matched pattern), you cannot use the familiar \\\\1 notation for your backreference. \\\\11, for example, would confuse preg_replace() since it does not know whether you want the \\\\1 backreference followed by a literal 1, or the \\\\11 backreference followed by nothing. In this case the solution is to use \\${1}1. This creates an isolated $1 backreference, leaving the 1 as a literal. When using the e modifier, this function escapes some characters (namely ', \", \\ and NULL) in the strings that replace the backreferences. This is done to ensure that no syntax errors arise from backreference usage with either single or double quotes (e.g. 'strlen(\\'$1\\')+strlen(\"$2\")'). Make sure you are aware of PHP's string syntax to know exactly how the interpreted string will look."},{"type":"mixed","var":"$subject","beh":1,"desc":"The string or an array with strings to search and replace. If subject is an array, then the search and replace is performed on every entry of subject, and the return value is an array as well."},{"type":"int","var":"$limit","beh":1,"desc":"The maximum possible replacements for each pattern in each subject string. Defaults to -1 (no limit).","def":-1},{"type":"int","var":"&$count","beh":1,"desc":"If specified, this variable will be filled with the number of replacements done."}],"ret_type":"mixed"}]},"preg_replace_callback":{"desc":"Perform a regular expression search and replace using a callback","long_desc":"The behavior of this function is almost identical to preg_replace(), except for the fact that instead of replacement parameter, one should specify a callback.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"preg_replace_callback() returns an array if the subject parameter is an array, or a string otherwise. On errors the return value is NULL","seealso":[],"url":"function.preg-replace-callback","name":"preg_replace_callback","params":[{"list":[{"type":"mixed","var":"$pattern","beh":1,"desc":"The pattern to search for. It can be either a string or an array with strings."},{"type":"callable","var":"$callback","beh":1,"desc":"A callback that will be called and passed an array of matched elements in the subject string. The callback should return the replacement string. You'll often need the callback function for a preg_replace_callback() in just one place. In this case you can use an anonymous function (since PHP 5.3.0) or create_function() to declare an anonymous function as callback within the call to preg_replace_callback(). By doing it this way you have all information for the call in one place and do not clutter the function namespace with a callback function's name not used anywhere else."},{"type":"mixed","var":"$subject","beh":1,"desc":"The string or an array with strings to search and replace."},{"type":"int","var":"$limit","beh":1,"desc":"The maximum possible replacements for each pattern in each subject string. Defaults to -1 (no limit).","def":-1},{"type":"int","var":"&$count","beh":1,"desc":"If specified, this variable will be filled with the number of replacements done."}],"ret_type":"mixed"}]},"preg_split":{"desc":"Split string by a regular expression","long_desc":"Split the given string by a regular expression.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array containing substrings of subject split along boundaries matched by pattern.","seealso":[],"url":"function.preg-split","name":"preg_split","params":[{"list":[{"type":"string","var":"$pattern","beh":1,"desc":"The pattern to search for, as a string."},{"type":"string","var":"$subject","beh":1,"desc":"The input string."},{"type":"int","var":"$limit","beh":1,"desc":"If specified, then only substrings up to limit are returned with the rest of the string being placed in the last substring. A limit of -1, 0 or NULL means \"no limit\" and, as is standard across PHP, you can use NULL to skip to the flags parameter.","def":-1},{"type":"int","var":"$flags","beh":1,"desc":"flags can be any combination of the following flags (combined with the | bitwise operator):","def":0}],"ret_type":"array"}]},"prev":{"desc":"Rewind the internal array pointer","long_desc":"Rewind the internal array pointer. prev() behaves just like next(), except it rewinds the internal array pointer one place instead of advancing it.","ver":"PHP 4, PHP 5","ret_desc":"Returns the array value in the previous place that's pointed to by the internal array pointer, or FALSE if there are no more elements.","seealso":[],"url":"function.prev","name":"prev","params":[{"list":[],"ret_type":"mixed"}]},"print":{"desc":"Output a string","long_desc":"Outputs arg. print() is not actually a real function (it is a language construct) so you are not required to use parentheses with its argument list.","ver":"PHP 4, PHP 5","ret_desc":"Returns 1, always.","seealso":[],"url":"function.print","name":"print","params":[{"list":[],"ret_type":"int"}]},"print_r":{"desc":"Prints human-readable information about a variable","long_desc":"print_r() displays information about a variable in a way that's readable by humans. print_r(), var_dump() and var_export() will also show protected and private properties of objects with PHP 5. Static class members will not be shown. Remember that print_r() will move the array pointer to the end. Use reset() to bring it back to beginning.","ver":"PHP 4, PHP 5","ret_desc":"If given a string, integer or float, the value itself will be printed. If given an array, values will be presented in a format that shows keys and elements. Similar notation is used for objects.","seealso":[],"url":"function.print-r","name":"print_r","params":[{"list":[{"type":"mixed","var":"$expression","beh":0,"desc":"The expression to be printed."},{"type":"bool","var":"$return","beh":0,"desc":"If you would like to capture the output of print_r(), use the return parameter. When this parameter is set to TRUE, print_r() will return the information rather than print it.","def":"false"}],"ret_type":"mixed"}]},"printer_abort":{"desc":"Deletes the printer's spool file","long_desc":"This function deletes the printers spool file.","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-abort","name":"printer_abort","params":[{"list":[],"ret_type":"void"}]},"printer_close":{"desc":"Close an open printer connection","long_desc":"This function closes the printer connection. printer_close() also closes the active device context.","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-close","name":"printer_close","params":[{"list":[],"ret_type":"void"}]},"printer_create_brush":{"desc":"Create a new brush","long_desc":"The function creates a new brush and returns a handle to it. A brush is used to fill shapes. For an example see printer_select_brush().","ver":"PECL printer SVN","ret_desc":"Returns a brush handle or FALSE on error.","url":"function.printer-create-brush","name":"printer_create_brush","params":[{"list":[{"type":"int","var":"$style","beh":0,"desc":"style must be one of the following constants:"},{"type":"string","var":"$color","beh":0,"desc":"color must be a color in RGB hex format, i.e. \"000000\" for black."}],"ret_type":"resource"}]},"printer_create_dc":{"desc":"Create a new device context","long_desc":"The function creates a new device context. A device context is used to customize the graphic objects of the document.","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-create-dc","name":"printer_create_dc","params":[{"list":[],"ret_type":"void"}]},"printer_create_font":{"desc":"Create a new font","long_desc":"The function creates a new font and returns a handle to it. A font is used to draw text. For an example see printer_select_font().","ver":"PECL printer SVN","ret_desc":"Returns a font handle on success or FALSE on error.","url":"function.printer-create-font","name":"printer_create_font","params":[{"list":[{"type":"string","var":"$face","beh":0,"desc":"face must be a string specifying the font face."},{"type":"int","var":"$height","beh":0,"desc":"height specifies the font height."},{"type":"int","var":"$width","beh":1,"desc":"width specifies the font width."},{"type":"int","var":"$font_weight","beh":1,"desc":"The font_weight specifies the font weight (400 is normal), and can be one of the following predefined constants."},{"type":"bool","var":"$italic","beh":1,"desc":"italic can be TRUE or FALSE, and sets whether the font should be italic."},{"type":"bool","var":"$underline","beh":1,"desc":"underline can be TRUE or FALSE, and sets whether the font should be underlined."},{"type":"bool","var":"$strikeout","beh":1,"desc":"strikeout can be TRUE or FALSE, and sets whether the font should be stroked out."},{"type":"int","var":"$orientation","beh":1,"desc":"orientation specifies a rotation."}],"ret_type":"resource"}]},"printer_create_pen":{"desc":"Create a new pen","long_desc":"The function creates a new pen and returns a handle to it. A pen is used to draw lines and curves. For an example see printer_select_pen().","ver":"PECL printer SVN","ret_desc":"Returns a pen handle or FALSE on error.","url":"function.printer-create-pen","name":"printer_create_pen","params":[{"list":[{"type":"int","var":"$style","beh":0,"desc":"style must be one of the following constants:"},{"type":"int","var":"$width","beh":0,"desc":"width specifies the width of the pen."},{"type":"string","var":"$color","beh":1,"desc":"color must be a color in RGB hex format, i.e. \"000000\" for black."}],"ret_type":"resource"}]},"printer_delete_brush":{"desc":"Delete a brush","long_desc":"The function deletes the selected brush. For an example see printer_select_brush().","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-delete-brush","name":"printer_delete_brush","params":[{"list":[],"ret_type":"void"}]},"printer_delete_dc":{"desc":"Delete a device context","long_desc":"The function deletes the device context. For an example see printer_create_dc().","ver":"PECL printer SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.printer-delete-dc","name":"printer_delete_dc","params":[{"list":[],"ret_type":"bool"}]},"printer_delete_font":{"desc":"Delete a font","long_desc":"The function deletes the selected font. For an example see printer_select_font().","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-delete-font","name":"printer_delete_font","params":[{"list":[],"ret_type":"void"}]},"printer_delete_pen":{"desc":"Delete a pen","long_desc":"The function deletes the selected pen. For an example see printer_select_pen().","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-delete-pen","name":"printer_delete_pen","params":[{"list":[],"ret_type":"void"}]},"printer_draw_bmp":{"desc":"Draw a bmp","long_desc":"The function draws an bmp.","ver":"PECL printer SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.printer-draw-bmp","name":"printer_draw_bmp","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid printer handle."},{"type":"string","var":"$filename","beh":1,"desc":"Path to the bitmap."},{"type":"int","var":"$x","beh":1,"desc":"x is the upper left x coordinate of the bitmap."},{"type":"int","var":"$y","beh":1,"desc":"y is the upper left y coordinate of the bitmap."},{"type":"int","var":"$width","beh":1,"desc":"The bitmap width."},{"type":"int","var":"$height","beh":1,"desc":"The bitmap height."}],"ret_type":"bool"}]},"printer_draw_chord":{"desc":"Draw a chord","long_desc":"The function simply draws an chord.","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-draw-chord","name":"printer_draw_chord","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid printer handle."},{"type":"int","var":"$rec_x","beh":0,"desc":"rec_x is the upper left x coordinate of the bounding rectangle."},{"type":"int","var":"$rec_y","beh":1,"desc":"rec_y is the upper left y coordinate of the bounding rectangle."},{"type":"int","var":"$rec_x1","beh":1,"desc":"rec_x1 is the lower right x coordinate of the bounding rectangle."},{"type":"int","var":"$rec_y1","beh":1,"desc":"rec_y1 is the lower right y coordinate of the bounding rectangle."},{"type":"int","var":"$rad_x","beh":1,"desc":"rad_x is x coordinate of the radial defining the beginning of the chord."},{"type":"int","var":"$rad_y","beh":1,"desc":"rad_y is y coordinate of the radial defining the beginning of the chord."},{"type":"int","var":"$rad_x1","beh":1,"desc":"rad_x1 is x coordinate of the radial defining the end of the chord."},{"type":"int","var":"$rad_y1","beh":1,"desc":"rad_y1 is y coordinate of the radial defining the end of the chord."}],"ret_type":"void"}]},"printer_draw_elipse":{"desc":"Draw an ellipse","long_desc":"The function draws an ellipse.","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-draw-elipse","name":"printer_draw_elipse","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid printer handle."},{"type":"int","var":"$ul_x","beh":0,"desc":"ul_x is the upper left x coordinate of the ellipse."},{"type":"int","var":"$ul_y","beh":1,"desc":"ul_y is the upper left y coordinate of the ellipse."},{"type":"int","var":"$lr_x","beh":1,"desc":"lr_x is the lower right x coordinate of the ellipse."},{"type":"int","var":"$lr_y","beh":1,"desc":"lr_y is the lower right y coordinate of the ellipse."}],"ret_type":"void"}]},"printer_draw_line":{"desc":"Draw a line","long_desc":"The function draws a line using the selected pen.","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-draw-line","name":"printer_draw_line","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid printer handle."},{"type":"int","var":"$from_x","beh":0,"desc":"from_x is the x coordinate of the origin point."},{"type":"int","var":"$from_y","beh":1,"desc":"from_y is the y coordinate of the origin point."},{"type":"int","var":"$to_x","beh":1,"desc":"to_x is the x coordinate of the destination point."},{"type":"int","var":"$to_y","beh":1,"desc":"to_y is the y coordinate of the destination point."}],"ret_type":"void"}]},"printer_draw_pie":{"desc":"Draw a pie","long_desc":"The function draws an pie.","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-draw-pie","name":"printer_draw_pie","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid printer handle."},{"type":"int","var":"$rec_x","beh":0,"desc":"rec_x is the upper left x coordinate of the bounding rectangle."},{"type":"int","var":"$rec_y","beh":1,"desc":"rec_y is the upper left y coordinate of the bounding rectangle."},{"type":"int","var":"$rec_x1","beh":1,"desc":"rec_x1 is the lower right x coordinate of the bounding rectangle."},{"type":"int","var":"$rec_y1","beh":1,"desc":"rec_y1 is the lower right y coordinate of the bounding rectangle."},{"type":"int","var":"$rad1_x","beh":1,"desc":"rad1_x is x coordinate of the first radial's ending."},{"type":"int","var":"$rad1_y","beh":1,"desc":"rad1_y is y coordinate of the first radial's ending."},{"type":"int","var":"$rad2_x","beh":1,"desc":"rad2_x is x coordinate of the second radial's ending."},{"type":"int","var":"$rad2_y","beh":1,"desc":"rad2_y is y coordinate of the second radial's ending."}],"ret_type":"void"}]},"printer_draw_rectangle":{"desc":"Draw a rectangle","long_desc":"The function draws a rectangle.","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-draw-rectangle","name":"printer_draw_rectangle","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid printer handle."},{"type":"int","var":"$ul_x","beh":0,"desc":"ul_x is the upper left x coordinate of the rectangle."},{"type":"int","var":"$ul_y","beh":1,"desc":"ul_y is the upper left y coordinate of the rectangle."},{"type":"int","var":"$lr_x","beh":1,"desc":"lr_x is the lower right x coordinate of the rectangle."},{"type":"int","var":"$lr_y","beh":1,"desc":"lr_y is the lower right y coordinate of the rectangle."}],"ret_type":"void"}]},"printer_draw_roundrect":{"desc":"Draw a rectangle with rounded corners","long_desc":"The function draws a rectangle with rounded corners.","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-draw-roundrect","name":"printer_draw_roundrect","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid printer handle."},{"type":"int","var":"$ul_x","beh":0,"desc":"ul_x is the upper left x coordinate of the rectangle."},{"type":"int","var":"$ul_y","beh":1,"desc":"ul_y is the upper left y coordinate of the rectangle."},{"type":"int","var":"$lr_x","beh":1,"desc":"lr_x is the lower right x coordinate of the rectangle."},{"type":"int","var":"$lr_y","beh":1,"desc":"lr_y is the lower right y coordinate of the rectangle."},{"type":"int","var":"$width","beh":1,"desc":"width is the width of the ellipse."},{"type":"int","var":"$height","beh":1,"desc":"height is the height of the ellipse."}],"ret_type":"void"}]},"printer_draw_text":{"desc":"Draw text","long_desc":"The function draws text at position x, y using the selected font.","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-draw-text","name":"printer_draw_text","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid handle to a printer."},{"type":"string","var":"$text","beh":0,"desc":"The text to be written."},{"type":"int","var":"$x","beh":1,"desc":"x is the x coordinate of the position."},{"type":"int","var":"$y","beh":1,"desc":"y is the y coordinate of the position."}],"ret_type":"void"}]},"printer_end_doc":{"desc":"Close document","long_desc":"Closes a new document in the printer spooler. The document is now ready for printing. For an example see printer_start_doc().","ver":"PECL printer SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.printer-end-doc","name":"printer_end_doc","params":[{"list":[],"ret_type":"bool"}]},"printer_end_page":{"desc":"Close active page","long_desc":"The function closes the active page in the active document. For an example see printer_start_doc().","ver":"PECL printer SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.printer-end-page","name":"printer_end_page","params":[{"list":[],"ret_type":"bool"}]},"printer_get_option":{"desc":"Retrieve printer configuration data","long_desc":"The function retrieves the configuration setting of option.","ver":"PECL printer SVN","ret_desc":"Returns the value of option.","url":"function.printer-get-option","name":"printer_get_option","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid handle to a printer."},{"type":"string","var":"$option","beh":0,"desc":"Take a look at printer_set_option() for the settings that can be retrieved, additionally the following settings can be retrieved:"}],"ret_type":"mixed"}]},"printer_list":{"desc":"Return an array of printers attached to the server","long_desc":"The function enumerates available printers and their capabilities.","ver":"PECL printer SVN","ret_desc":"Return an array of printers.","url":"function.printer-list","name":"printer_list","params":[{"list":[{"type":"int","var":"$enumtype","beh":1,"desc":"enumtype must be one of the following predefined constants:"},{"type":"string","var":"$name","beh":1,"desc":"Used with PRINTER_ENUM_NAME."},{"type":"int","var":"$level","beh":1,"desc":"level sets the level of information request. Can be 1,2,4 or 5."}],"ret_type":"array"}]},"printer_logical_fontheight":{"desc":"Get logical font height","long_desc":"The function calculates the logical font height of height.","ver":"PECL printer SVN","ret_desc":"Returns the logical font height or FALSE on failure.","url":"function.printer-logical-fontheight","name":"printer_logical_fontheight","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid printer handle."},{"type":"int","var":"$height","beh":0,"desc":"The font height."}],"ret_type":"int"}]},"printer_open":{"desc":"Opens a connection to a printer","long_desc":"This function tries to open a connection to the given printer. printer_open() also starts a device context.","ver":"PECL printer SVN","ret_desc":"Returns a printer handle on success or FALSE on failure.","url":"function.printer-open","name":"printer_open","params":[{"list":[],"ret_type":"resource"}]},"printer_select_brush":{"desc":"Select a brush","long_desc":"The function selects a brush as the active drawing object of the actual device context. A brush is used to fill shapes. If you draw an rectangle the brush is used to draw the shapes, while the pen is used to draw the border. If you haven't selected a brush before drawing shapes, the shape won't be filled.","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-select-brush","name":"printer_select_brush","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid printer handle."},{"type":"resource","var":"$brush_handle","beh":0,"desc":"brush_handle must be a valid brush handle."}],"ret_type":"void"}]},"printer_select_font":{"desc":"Select a font","long_desc":"The function selects a font to draw text.","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-select-font","name":"printer_select_font","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid printer handle."},{"type":"resource","var":"$font_handle","beh":0,"desc":"font_handle must be a valid font handle."}],"ret_type":"void"}]},"printer_select_pen":{"desc":"Select a pen","long_desc":"The function selects a pen as the active drawing object of the actual device context. A pen is used to draw lines and curves. I.e. if you draw a single line the pen is used. If you draw an rectangle the pen is used to draw the borders, while the brush is used to fill the shape. If you haven't selected a pen before drawing shapes, the shape won't be outlined.","ver":"PECL printer SVN","ret_desc":"No value is returned.","url":"function.printer-select-pen","name":"printer_select_pen","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid printer handle."},{"type":"resource","var":"$pen_handle","beh":0,"desc":"pen_handle must be a valid pen handle."}],"ret_type":"void"}]},"printer_set_option":{"desc":"Configure the printer connection","long_desc":"The function sets options for the current connection.","ver":"PECL printer SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.printer-set-option","name":"printer_set_option","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid printer handle."},{"type":"int","var":"$option","beh":0,"desc":"Option can be one of the following constants:"},{"type":"mixed","var":"$value","beh":1,"desc":"The option value."}],"ret_type":"bool"}]},"printer_start_doc":{"desc":"Start a new document","long_desc":"The function creates a new document in the printer spooler. A document can contain multiple pages, it's used to schedule the print job in the spooler.","ver":"PECL printer SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.printer-start-doc","name":"printer_start_doc","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid printer handle."},{"type":"string","var":"$document","beh":1,"desc":"The optional parameter document can be used to set an alternative document name."}],"ret_type":"bool"}]},"printer_start_page":{"desc":"Start a new page","long_desc":"The function creates a new page in the active document. For an example see printer_start_doc().","ver":"PECL printer SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.printer-start-page","name":"printer_start_page","params":[{"list":[],"ret_type":"bool"}]},"printer_write":{"desc":"Write data to the printer","long_desc":"Writes content directly to the printer.","ver":"PECL printer SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.printer-write","name":"printer_write","params":[{"list":[{"type":"resource","var":"$printer_handle","beh":0,"desc":"printer_handle must be a valid printer handle."},{"type":"string","var":"$content","beh":0,"desc":"The data to be written."}],"ret_type":"bool"}]},"printf":{"desc":"Output a formatted string","long_desc":"Produces output according to format.","ver":"PHP 4, PHP 5","ret_desc":"Returns the length of the outputted string.","seealso":[],"url":"function.printf","name":"printf","params":[{"list":[{"type":"string","var":"$format","beh":1,"desc":"See sprintf() for a description of format."},{"type":"mixed","var":"$args","beh":1,"desc":""},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"int"}]},"proc_close":{"desc":"Close a process opened by proc_open() and return the exit code of that process","long_desc":"proc_close() is similar to pclose() except that it only works on processes opened by proc_open(). proc_close() waits for the process to terminate, and returns its exit code. If you have open pipes to that process, you should fclose() them prior to calling this function in order to avoid a deadlock - the child process may not be able to exit while the pipes are open.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the termination status of the process that was run. In case of an error then -1 is returned.","url":"function.proc-close","name":"proc_close","params":[{"list":[],"ret_type":"int"}]},"proc_get_status":{"desc":"Get information about a process opened by proc_open()","long_desc":"proc_get_status() fetches data about a process opened using proc_open().","ver":"PHP 5","ret_desc":"An array of collected information on success, and FALSE on failure. The returned array contains the following elements:","seealso":[],"url":"function.proc-get-status","name":"proc_get_status","params":[{"list":[],"ret_type":"array"}]},"proc_nice":{"desc":"Change the priority of the current process","long_desc":"proc_nice() changes the priority of the current process by the amount specified in increment. A positive increment will lower the priority of the current process, whereas a negative increment will raise the priority. proc_nice() is not related to proc_open() and its associated functions in any way.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. If an error occurs, like the user lacks permission to change the priority, an error of level E_WARNING is also generated.","url":"function.proc-nice","name":"proc_nice","params":[{"list":[],"ret_type":"bool"}]},"proc_open":{"desc":"Execute a command and open file pointers for input\/output","long_desc":"proc_open() is similar to popen() but provides a much greater degree of control over the program execution.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns a resource representing the process, which should be freed using proc_close() when you are finished with it. On failure returns FALSE.","seealso":[],"url":"function.proc-open","name":"proc_open","params":[{"list":[{"type":"string","var":"$cmd","beh":1,"desc":"The command to execute"},{"type":"array","var":"$descriptorspec","beh":1,"desc":"An indexed array where the key represents the descriptor number and the value represents how PHP will pass that descriptor to the child process. 0 is stdin, 1 is stdout, while 2 is stderr. Each element can be: The file descriptor numbers are not limited to 0, 1 and 2 - you may specify any valid file descriptor number and it will be passed to the child process. This allows your script to interoperate with other scripts that run as \"co-processes\". In particular, this is useful for passing passphrases to programs like PGP, GPG and openssl in a more secure manner. It is also useful for reading status information provided by those programs on auxiliary file descriptors."},{"type":"array","var":"&$pipes","beh":1,"desc":"Will be set to an indexed array of file pointers that correspond to PHP's end of any pipes that are created."},{"type":"string","var":"$cwd","beh":1,"desc":"The initial working dir for the command. This must be an absolute directory path, or NULL if you want to use the default value (the working dir of the current PHP process)"},{"type":"array","var":"$env","beh":1,"desc":"An array with the environment variables for the command that will be run, or NULL to use the same environment as the current PHP process"},{"type":"array","var":"$other_options","beh":1,"desc":"Allows you to specify additional options. Currently supported options include:"}],"ret_type":"resource"}]},"proc_terminate":{"desc":"Kills a process opened by proc_open","long_desc":"Signals a process (created using proc_open()) that it should terminate. proc_terminate() returns immediately and does not wait for the process to terminate. proc_terminate() allows you terminate the process and continue with other tasks. You may poll the process (to see if it has stopped yet) by using the proc_get_status() function.","ver":"PHP 5","ret_desc":"Returns the termination status of the process that was run.","seealso":[],"url":"function.proc-terminate","name":"proc_terminate","params":[{"list":[{"type":"resource","var":"$process","beh":0,"desc":"The proc_open() resource that will be closed."},{"type":"int","var":"$signal","beh":0,"desc":"This optional parameter is only useful on POSIX operating systems; you may specify a signal to send to the process using the kill(2) system call. The default is SIGTERM.","def":15}],"ret_type":"bool"}]},"property_exists":{"desc":"Checks if the object or class has a property","long_desc":"This function checks if the given property exists in the specified class.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE if the property exists, FALSE if it doesn't exist or NULL in case of an error.","seealso":[],"url":"function.property-exists","name":"property_exists","params":[{"list":[{"type":"mixed","var":"$class","beh":0,"desc":"The class name or an object of the class to test for"},{"type":"string","var":"$property","beh":0,"desc":"The name of the property"}],"ret_type":"bool"}]},"ps_add_bookmark":{"desc":"Add bookmark to current page","long_desc":"Adds a bookmark for the current page. Bookmarks usually appear in PDF-Viewers left of the page in a hierarchical tree. Clicking on a bookmark will jump to the given page. The note will not be visible if the document is printed or viewed but it will show up if the document is converted to pdf by either Acrobat Distiller\u2122 or Ghostview.","ver":"PECL ps >= 1.1.0","ret_desc":"The returned value is a reference for the bookmark. It is only used if the bookmark shall be used as a parent. The value is greater zero if the function succeeds. In case of an error zero will be returned.","seealso":[],"url":"function.ps-add-bookmark","name":"ps_add_bookmark","params":[{"list":[{"type":"resource","var":"$psdoc","beh":1,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$text","beh":1,"desc":"The text used for displaying the bookmark."},{"type":"int","var":"$parent","beh":1,"desc":"A bookmark previously created by this function which is used as the parent of the new bookmark.","def":0},{"type":"int","var":"$open","beh":1,"desc":"If open is unequal to zero the bookmark will be shown open by the pdf viewer.","def":0}],"ret_type":"int"}]},"ps_add_launchlink":{"desc":"Adds link which launches file","long_desc":"Places a hyperlink at the given position pointing to a file program which is being started when clicked on. The hyperlink's source position is a rectangle with its lower left corner at (llx, lly) and its upper right corner at (urx, ury). The rectangle has by default a thin blue border. The note will not be visible if the document is printed or viewed but it will show up if the document is converted to pdf by either Acrobat Distiller\u2122 or Ghostview.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-add-launchlink","name":"ps_add_launchlink","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$llx","beh":0,"desc":"The x-coordinate of the lower left corner."},{"type":"float","var":"$lly","beh":1,"desc":"The y-coordinate of the lower left corner."},{"type":"float","var":"$urx","beh":1,"desc":"The x-coordinate of the upper right corner."},{"type":"float","var":"$ury","beh":1,"desc":"The y-coordinate of the upper right corner."},{"type":"string","var":"$filename","beh":1,"desc":"The path of the program to be started, when the link is clicked on."}],"ret_type":"bool"}]},"ps_add_locallink":{"desc":"Adds link to a page in the same document","long_desc":"Places a hyperlink at the given position pointing to a page in the same document. Clicking on the link will jump to the given page. The first page in a document has number 1. The hyperlink's source position is a rectangle with its lower left corner at (llx, lly) and its upper right corner at (urx, ury). The rectangle has by default a thin blue border. The note will not be visible if the document is printed or viewed but it will show up if the document is converted to pdf by either Acrobat Distiller\u2122 or Ghostview.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-add-locallink","name":"ps_add_locallink","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$llx","beh":0,"desc":"The x-coordinate of the lower left corner."},{"type":"float","var":"$lly","beh":1,"desc":"The y-coordinate of the lower left corner."},{"type":"float","var":"$urx","beh":1,"desc":"The x-coordinate of the upper right corner."},{"type":"float","var":"$ury","beh":1,"desc":"The y-coordinate of the upper right corner."},{"type":"int","var":"$page","beh":1,"desc":"The number of the page displayed when clicking on the link."},{"type":"string","var":"$dest","beh":1,"desc":"The parameter dest determines how the document is being viewed. It can be fitpage, fitwidth, fitheight, or fitbbox."}],"ret_type":"bool"}]},"ps_add_note":{"desc":"Adds note to current page","long_desc":"Adds a note at a certain position on the page. Notes are like little rectangular sheets with text on it, which can be placed anywhere on a page. They are shown either folded or unfolded. If folded, the specified icon is used as a placeholder. The note will not be visible if the document is printed or viewed but it will show up if the document is converted to pdf by either Acrobat Distiller\u2122 or Ghostview.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-add-note","name":"ps_add_note","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$llx","beh":0,"desc":"The x-coordinate of the lower left corner."},{"type":"float","var":"$lly","beh":1,"desc":"The y-coordinate of the lower left corner."},{"type":"float","var":"$urx","beh":1,"desc":"The x-coordinate of the upper right corner."},{"type":"float","var":"$ury","beh":1,"desc":"The y-coordinate of the upper right corner."},{"type":"string","var":"$contents","beh":1,"desc":"The text of the note."},{"type":"string","var":"$title","beh":1,"desc":"The title of the note as displayed in the header of the note."},{"type":"string","var":"$icon","beh":1,"desc":"The icon shown if the note is folded. This parameter can be set to comment, insert, note, paragraph, newparagraph, key, or help."},{"type":"int","var":"$open","beh":1,"desc":"If open is unequal to zero the note will be shown unfolded after opening the document with a pdf viewer."}],"ret_type":"bool"}]},"ps_add_pdflink":{"desc":"Adds link to a page in a second pdf document","long_desc":"Places a hyperlink at the given position pointing to a second pdf document. Clicking on the link will branch to the document at the given page. The first page in a document has number 1. The hyperlink's source position is a rectangle with its lower left corner at (llx, lly) and its upper right corner at (urx, ury). The rectangle has by default a thin blue border. The note will not be visible if the document is printed or viewed but it will show up if the document is converted to pdf by either Acrobat Distiller\u2122 or Ghostview.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-add-pdflink","name":"ps_add_pdflink","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$llx","beh":0,"desc":"The x-coordinate of the lower left corner."},{"type":"float","var":"$lly","beh":1,"desc":"The y-coordinate of the lower left corner."},{"type":"float","var":"$urx","beh":1,"desc":"The x-coordinate of the upper right corner."},{"type":"float","var":"$ury","beh":1,"desc":"The y-coordinate of the upper right corner."},{"type":"string","var":"$filename","beh":1,"desc":"The name of the pdf document to be opened when clicking on this link."},{"type":"int","var":"$page","beh":1,"desc":"The page number of the destination pdf document"},{"type":"string","var":"$dest","beh":1,"desc":"The parameter dest determines how the document is being viewed. It can be fitpage, fitwidth, fitheight, or fitbbox."}],"ret_type":"bool"}]},"ps_add_weblink":{"desc":"Adds link to a web location","long_desc":"Places a hyperlink at the given position pointing to a web page. The hyperlink's source position is a rectangle with its lower left corner at (llx, lly) and its upper right corner at (urx, ury). The rectangle has by default a thin blue border. The note will not be visible if the document is printed or viewed but it will show up if the document is converted to pdf by either Acrobat Distiller\u2122 or Ghostview.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-add-weblink","name":"ps_add_weblink","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$llx","beh":0,"desc":"The x-coordinate of the lower left corner."},{"type":"float","var":"$lly","beh":1,"desc":"The y-coordinate of the lower left corner."},{"type":"float","var":"$urx","beh":1,"desc":"The x-coordinate of the upper right corner."},{"type":"float","var":"$ury","beh":1,"desc":"The y-coordinate of the upper right corner."},{"type":"string","var":"$url","beh":1,"desc":"The url of the hyperlink to be opened when clicking on this link, e.g. http:\/\/www.php.net."}],"ret_type":"bool"}]},"ps_arc":{"desc":"Draws an arc counterclockwise","long_desc":"Draws a portion of a circle with at middle point at (x, y). The arc starts at an angle of alpha and ends at an angle of beta. It is drawn counterclockwise (use ps_arcn() to draw clockwise). The subpath added to the current path starts on the arc at angle alpha and ends on the arc at angle beta.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-arc","name":"ps_arc","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$x","beh":0,"desc":"The x-coordinate of the circle's middle point."},{"type":"float","var":"$y","beh":1,"desc":"The y-coordinate of the circle's middle point."},{"type":"float","var":"$radius","beh":1,"desc":"The radius of the circle"},{"type":"float","var":"$alpha","beh":1,"desc":"The start angle given in degrees."},{"type":"float","var":"$beta","beh":1,"desc":"The end angle given in degrees."}],"ret_type":"bool"}]},"ps_arcn":{"desc":"Draws an arc clockwise","long_desc":"Draws a portion of a circle with at middle point at (x, y). The arc starts at an angle of alpha and ends at an angle of beta. It is drawn clockwise (use ps_arc() to draw counterclockwise). The subpath added to the current path starts on the arc at angle beta and ends on the arc at angle alpha.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-arcn","name":"ps_arcn","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$x","beh":0,"desc":"The x-coordinate of the circle's middle point."},{"type":"float","var":"$y","beh":1,"desc":"The y-coordinate of the circle's middle point."},{"type":"float","var":"$radius","beh":1,"desc":"The radius of the circle"},{"type":"float","var":"$alpha","beh":1,"desc":"The starting angle given in degrees."},{"type":"float","var":"$beta","beh":1,"desc":"The end angle given in degrees."}],"ret_type":"bool"}]},"ps_begin_page":{"desc":"Start a new page","long_desc":"Starts a new page. Although the parameters width and height imply a different page size for each page, this is not possible in PostScript. The first call of ps_begin_page() will set the page size for the whole document. Consecutive calls will have no effect, except for creating a new page. The situation is different if you intent to convert the PostScript document into PDF. This function places pdfmarks into the document which can set the size for each page indiviually. The resulting PDF document will have different page sizes. Though PostScript does not know different page sizes, pslib places a bounding box for each page into the document. This size is evaluated by some PostScript viewers and will have precedence over the BoundingBox in the Header of the document. This can lead to unexpected results when you set a BoundingBox whose lower left corner is not (0, 0), because the bounding box of the page will always have a lower left corner (0, 0) and overwrites the global setting. Each page is encapsulated into save\/restore. This means, that most of the settings made on one page will not be retained on the next page. If there is up to the first call of ps_begin_page() no call of ps_findfont(), then the header of the PostScript document will be output and the bounding box will be set to the size of the first page. The lower left corner of the bounding box is set to (0, 0). If ps_findfont() was called before, then the header has been output already, and the document will not have a valid bounding box. In order to prevent this, one should call ps_set_info() to set the info field BoundingBox and possibly Orientation before any ps_findfont() or ps_begin_page() calls.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-begin-page","name":"ps_begin_page","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$width","beh":0,"desc":"The width of the page in pixel, e.g. 596 for A4 format."},{"type":"float","var":"$height","beh":1,"desc":"The height of the page in pixel, e.g. 842 for A4 format."}],"ret_type":"bool"}]},"ps_begin_pattern":{"desc":"Start a new pattern","long_desc":"Starts a new pattern. A pattern is like a page containing e.g. a drawing which can be used for filling areas. It is used like a color by calling ps_setcolor() and setting the color space to pattern.","ver":"PECL ps >= 1.2.0","ret_desc":"The identifier of the pattern or FALSE on failure.","seealso":[],"url":"function.ps-begin-pattern","name":"ps_begin_pattern","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$width","beh":0,"desc":"The width of the pattern in pixel."},{"type":"float","var":"$height","beh":1,"desc":"The height of the pattern in pixel."},{"type":"float","var":"$xstep","beh":1,"desc":"The distance in pixel of placements of the pattern in horizontal direction."},{"type":"float","var":"$ystep","beh":1,"desc":"The distance in pixel of placements of the pattern in vertical direction."},{"type":"int","var":"$painttype","beh":1,"desc":"Must be 1 or 2."}],"ret_type":"int"}]},"ps_begin_template":{"desc":"Start a new template","long_desc":"Starts a new template. A template is called a form in the postscript language. It is created similar to a pattern but used like an image. Templates are often used for drawings which are placed several times through out the document, e.g. like a company logo. All drawing functions may be used within a template. The template will not be drawn until it is placed by ps_place_image().","ver":"PECL ps >= 1.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-begin-template","name":"ps_begin_template","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$width","beh":0,"desc":"The width of the template in pixel."},{"type":"float","var":"$height","beh":1,"desc":"The height of the template in pixel."}],"ret_type":"int"}]},"ps_circle":{"desc":"Draws a circle","long_desc":"Draws a circle with its middle point at (x, y). The circle starts and ends at position (x+radius, y). If this function is called outside a path it will start a new path. If it is called within a path it will add the circle as a subpath. If the last drawing operation does not end in point (x+radius, y) then there will be a gap in the path.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-circle","name":"ps_circle","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$x","beh":0,"desc":"The x-coordinate of the circle's middle point."},{"type":"float","var":"$y","beh":1,"desc":"The y-coordinate of the circle's middle point."},{"type":"float","var":"$radius","beh":1,"desc":"The radius of the circle"}],"ret_type":"bool"}]},"ps_clip":{"desc":"Clips drawing to current path","long_desc":"Takes the current path and uses it to define the border of a clipping area. Everything drawn outside of that area will not be visible.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-clip","name":"ps_clip","params":[{"list":[],"ret_type":"bool"}]},"ps_close":{"desc":"Closes a PostScript document","long_desc":"Closes the PostScript document. This function writes the trailer of the PostScript document. It also writes the bookmark tree. ps_close() does not free any resources, which is done by ps_delete(). This function is also called by ps_delete() if it has not been called before.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-close","name":"ps_close","params":[{"list":[],"ret_type":"bool"}]},"ps_close_image":{"desc":"Closes image and frees memory","long_desc":"Closes an image and frees its resources. Once an image is closed it cannot be used anymore.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns NULL on success or FALSE on failure.","seealso":[],"url":"function.ps-close-image","name":"ps_close_image","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"int","var":"$imageid","beh":0,"desc":"Resource identifier of the image as returned by ps_open_image() or ps_open_image_file()."}],"ret_type":"void"}]},"ps_closepath":{"desc":"Closes path","long_desc":"Connects the last point with the first point of a path. The resulting path can be used for stroking, filling, clipping, etc..","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-closepath","name":"ps_closepath","params":[{"list":[],"ret_type":"bool"}]},"ps_closepath_stroke":{"desc":"Closes and strokes path","long_desc":"Connects the last point with first point of a path and draws the resulting closed line.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-closepath-stroke","name":"ps_closepath_stroke","params":[{"list":[],"ret_type":"bool"}]},"ps_continue_text":{"desc":"Continue text in next line","long_desc":"Output a text one line below the last line. The line spacing is taken from the value \"leading\" which must be set with ps_set_value(). The actual position of the text is determined by the values \"textx\" and \"texty\" which can be requested with ps_get_value()","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-continue-text","name":"ps_continue_text","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$text","beh":0,"desc":"The text to output."}],"ret_type":"bool"}]},"ps_curveto":{"desc":"Draws a curve","long_desc":"Add a section of a cubic B\u00e9zier curve described by the three given control points to the current path.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-curveto","name":"ps_curveto","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$x1","beh":0,"desc":"x-coordinate of first control point."},{"type":"float","var":"$y1","beh":1,"desc":"y-coordinate of first control point."},{"type":"float","var":"$x2","beh":1,"desc":"x-coordinate of second control point."},{"type":"float","var":"$y2","beh":1,"desc":"y-coordinate of second control point."},{"type":"float","var":"$x3","beh":1,"desc":"x-coordinate of third control point."},{"type":"float","var":"$y3","beh":1,"desc":"y-coordinate of third control point."}],"ret_type":"bool"}]},"ps_delete":{"desc":"Deletes all resources of a PostScript document","long_desc":"Mainly frees memory used by the document. Also closes a file, if it was not closed before with ps_close(). You should in any case close the file with ps_close() before, because ps_close() not just closes the file but also outputs a trailor containing PostScript comments like the number of pages in the document and adding the bookmark hierarchy.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-delete","name":"ps_delete","params":[{"list":[],"ret_type":"bool"}]},"ps_end_page":{"desc":"End a page","long_desc":"Ends a page which was started with ps_begin_page(). Ending a page will leave the current drawing context, which e.g. requires to reload fonts if they were loading within the page, and to set many other drawing parameters like the line width, or color..","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-end-page","name":"ps_end_page","params":[{"list":[],"ret_type":"bool"}]},"ps_end_pattern":{"desc":"End a pattern","long_desc":"Ends a pattern which was started with ps_begin_pattern(). Once a pattern has been ended, it can be used like a color to fill areas.","ver":"PECL ps >= 1.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-end-pattern","name":"ps_end_pattern","params":[{"list":[],"ret_type":"bool"}]},"ps_end_template":{"desc":"End a template","long_desc":"Ends a template which was started with ps_begin_template(). Once a template has been ended, it can be used like an image.","ver":"PECL ps >= 1.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-end-template","name":"ps_end_template","params":[{"list":[],"ret_type":"bool"}]},"ps_fill":{"desc":"Fills the current path","long_desc":"Fills the path constructed with previously called drawing functions like ps_lineto().","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-fill","name":"ps_fill","params":[{"list":[],"ret_type":"bool"}]},"ps_fill_stroke":{"desc":"Fills and strokes the current path","long_desc":"Fills and draws the path constructed with previously called drawing functions like ps_lineto().","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-fill-stroke","name":"ps_fill_stroke","params":[{"list":[],"ret_type":"bool"}]},"ps_findfont":{"desc":"Loads a font","long_desc":"Loads a font for later use. Before text is output with a loaded font it must be set with ps_setfont(). This function needs the adobe font metric file in order to calculate the space used up by the characters. A font which is loaded within a page will only be available on that page. Fonts which are to be used in the complete document have to be loaded before the first call of ps_begin_page(). Calling ps_findfont() between pages will make that font available for all following pages. The name of the afm file must be fontname.afm. If the font shall be embedded the file fontname.pfb containing the font outline must be present as well. Calling ps_findfont() before the first page requires to output the postscript header which includes the BoundingBox for the whole document. Usually the BoundingBox is set with the first call of ps_begin_page() which now comes after ps_findfont(). Consequently the BoundingBox has not been set and a warning will be issued when ps_findfont() is called. In order to prevent this situation, one should call ps_set_parameter() to set the BoundingBox before ps_findfont() is called.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns the identifier of the font or zero in case of an error. The identifier is a positive number.","seealso":[],"url":"function.ps-findfont","name":"ps_findfont","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$fontname","beh":1,"desc":"The name of the font."},{"type":"string","var":"$encoding","beh":1,"desc":"ps_findfont() will try to load the file passed in the parameter encoding. Encoding files are of the same syntax as those used by dvips(1). They contain a font encoding vector (which is currently not used but must be present) and a list of extra ligatures to extend the list of ligatures derived from the afm file. encoding can be NULL or the empty string if the default encoding (TeXBase1) shall be used. If the encoding is set to builtin then there will be no reencoding and the font specific encoding will be used. This is very useful with symbol fonts."},{"type":"bool","var":"$embed","beh":1,"desc":"If set to a value >0 the font will be embedded into the document. This requires the font outline (.pfb file) to be present.","def":"false"}],"ret_type":"int"}]},"ps_get_buffer":{"desc":"Fetches the full buffer containig the generated PS data","long_desc":"This function is not implemented yet. It will always return an empty string. The idea for a later implementation is to write the contents of the postscript file into an internal buffer if in memory creation is requested, and retrieve the buffer content with this function. Currently, documents created in memory are send to the browser without buffering.","ver":"PECL ps >= 1.1.0","seealso":[],"url":"function.ps-get-buffer","name":"ps_get_buffer","params":[{"list":[],"ret_type":"string"}]},"ps_get_parameter":{"desc":"Gets certain parameters","long_desc":"Gets several parameters which were directly set by ps_set_parameter() or indirectly by one of the other functions. Parameters are by definition string values. This function cannot be used to retrieve resources which were also set by ps_set_parameter(). The parameter name can have the following values.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns the value of the parameter or FALSE on failure.","seealso":[],"url":"function.ps-get-parameter","name":"ps_get_parameter","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$name","beh":1,"desc":"Name of the parameter."},{"type":"float","var":"$modifier","beh":1,"desc":"An identifier needed if a parameter of a resource is requested, e.g. the size of an image. In such a case the resource id is passed."}],"ret_type":"string"}]},"ps_get_value":{"desc":"Gets certain values","long_desc":"Gets several values which were set by ps_set_value(). Values are by definition float values. The parameter name can have the following values.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns the value of the parameter or FALSE.","seealso":[],"url":"function.ps-get-value","name":"ps_get_value","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$name","beh":1,"desc":"Name of the value."},{"type":"float","var":"$modifier","beh":1,"desc":"The parameter modifier specifies the resource for which the value is to be retrieved. This can be the id of a font or an image."}],"ret_type":"float"}]},"ps_hyphenate":{"desc":"Hyphenates a word","long_desc":"Hyphenates the passed word. ps_hyphenate() evaluates the value hyphenminchars (set by ps_set_value()) and the parameter hyphendict (set by ps_set_parameter()). hyphendict must be set before calling this function. This function requires the locale category LC_CTYPE to be set properly. This is done when the extension is initialized by using the environment variables. On Unix systems read the man page of locale for more information.","ver":"PECL ps >= 1.1.1","ret_desc":"An array of integers indicating the position of possible breaks in the text or FALSE on failure.","seealso":[],"url":"function.ps-hyphenate","name":"ps_hyphenate","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$text","beh":0,"desc":"text should not contain any non alpha characters. Possible positions for breaks are returned in an array of interger numbers. Each number is the position of the char in text after which a hyphenation can take place."}],"ret_type":"array"}]},"ps_include_file":{"desc":"Reads an external file with raw PostScript code","long_desc":"","ver":"PECL ps >= 1.3.4","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ps-include-file","name":"ps_include_file","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$file","beh":0,"desc":""}],"ret_type":"bool"}]},"ps_lineto":{"desc":"Draws a line","long_desc":"Adds a straight line from the current point to the given coordinates to the current path. Use ps_moveto() to set the starting point of the line.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-lineto","name":"ps_lineto","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$x","beh":0,"desc":"x-coordinate of the end point of the line."},{"type":"float","var":"$y","beh":1,"desc":"y-coordinate of the end point of the line."}],"ret_type":"bool"}]},"ps_makespotcolor":{"desc":"Create spot color","long_desc":"Creates a spot color from the current fill color. The fill color must be defined in rgb, cmyk or gray colorspace. The spot color name can be an arbitrary name. A spot color can be set as any color with ps_setcolor(). When the document is not printed but displayed by an postscript viewer the given color in the specified color space is use.","ver":"PECL ps >= 1.1.0","ret_desc":"The id of the new spot color or 0 in case of an error.","seealso":[],"url":"function.ps-makespotcolor","name":"ps_makespotcolor","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$name","beh":1,"desc":"Name of the spot color, e.g. Pantone 5565."},{"type":"int","var":"$reserved","beh":1,"desc":"","def":0}],"ret_type":"int"}]},"ps_moveto":{"desc":"Sets current point","long_desc":"Sets the current point to new coordinates. If this is the first call of ps_moveto() after a previous path has been ended then it will start a new path. If this function is called in the middle of a path it will just set the current point and start a subpath.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-moveto","name":"ps_moveto","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$x","beh":0,"desc":"x-coordinate of the point to move to."},{"type":"float","var":"$y","beh":1,"desc":"y-coordinate of the point to move to."}],"ret_type":"bool"}]},"ps_new":{"desc":"Creates a new PostScript document object","long_desc":"Creates a new document instance. It does not create the file on disk or in memory, it just sets up everything. ps_new() is usually followed by a call of ps_open_file() to actually create the postscript document.","ver":"PECL ps >= 1.1.0","ret_desc":"Resource of PostScript document or FALSE on failure. The return value is passed to all other functions as the first argument.","seealso":[],"url":"function.ps-new","name":"ps_new","params":[{"list":[],"ret_type":"resource"}]},"ps_open_file":{"desc":"Opens a file for output","long_desc":"Creates a new file on disk and writes the PostScript document into it. The file will be closed when ps_close() is called.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-open-file","name":"ps_open_file","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$filename","beh":1,"desc":"The name of the postscript file. If filename is not passed the document will be created in memory and all output will go straight to the browser."}],"ret_type":"bool"}]},"ps_open_image":{"desc":"Reads an image for later placement","long_desc":"Reads an image which is already available in memory. The parameter source is currently not evaluated and assumed to be memory. The image data is a sequence of pixels starting in th upper left corner and ending in the lower right corner. Each pixel consists of components color components, and each component has bpc bits.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns identifier of image or zero in case of an error. The identifier is a positive number greater than 0.","seealso":[],"url":"function.ps-open-image","name":"ps_open_image","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$type","beh":0,"desc":"The type of the image. Possible values are png, jpeg, or eps."},{"type":"string","var":"$source","beh":1,"desc":"Not used."},{"type":"string","var":"$data","beh":1,"desc":"The image data."},{"type":"int","var":"$lenght","beh":1,"desc":"The length of the image data."},{"type":"int","var":"$width","beh":1,"desc":"The width of the image."},{"type":"int","var":"$height","beh":1,"desc":"The height of the image."},{"type":"int","var":"$components","beh":1,"desc":"The number of components for each pixel. This can be 1 (gray scale images), 3 (rgb images), or 4 (cmyk, rgba images)."},{"type":"int","var":"$bpc","beh":1,"desc":"Number of bits per component (quite often 8)."},{"type":"string","var":"$params","beh":1,"desc":""}],"ret_type":"int"}]},"ps_open_image_file":{"desc":"Opens image from file","long_desc":"Loads an image for later use.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns identifier of image or zero in case of an error. The identifier is a positive number greater than 0.","seealso":[],"url":"function.ps-open-image-file","name":"ps_open_image_file","params":[{"list":[{"type":"resource","var":"$psdoc","beh":1,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$type","beh":1,"desc":"The type of the image. Possible values are png, jpeg, or eps."},{"type":"string","var":"$filename","beh":1,"desc":"The name of the file containing the image data."},{"type":"string","var":"$stringparam","beh":1,"desc":"Not used."},{"type":"int","var":"$intparam","beh":1,"desc":"Not used.","def":0}],"ret_type":"int"}]},"ps_open_memory_image":{"desc":"Takes an GD image and returns an image for placement in a PS document","long_desc":"","ver":"PECL ps >= 1.1.0","url":"function.ps-open-memory-image","name":"ps_open_memory_image","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"int","var":"$gd","beh":0,"desc":""}],"ret_type":"int"}]},"ps_place_image":{"desc":"Places image on the page","long_desc":"Places a formerly loaded image on the page. The image can be scaled. If the image shall be rotated as well, you will have to rotate the coordinate system before with ps_rotate().","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-place-image","name":"ps_place_image","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"int","var":"$imageid","beh":0,"desc":"The resource identifier of the image as returned by ps_open_image() or ps_open_image_file()."},{"type":"float","var":"$x","beh":1,"desc":"x-coordinate of the lower left corner of the image."},{"type":"float","var":"$y","beh":1,"desc":"y-coordinate of the lower left corner of the image."},{"type":"float","var":"$scale","beh":1,"desc":"The scaling factor for the image. A scale of 1.0 will result in a resolution of 72 dpi, because each pixel is equivalent to 1 point."}],"ret_type":"bool"}]},"ps_rect":{"desc":"Draws a rectangle","long_desc":"Draws a rectangle with its lower left corner at (x, y). The rectangle starts and ends in its lower left corner. If this function is called outside a path it will start a new path. If it is called within a path it will add the rectangle as a subpath. If the last drawing operation does not end in the lower left corner then there will be a gap in the path.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-rect","name":"ps_rect","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$x","beh":0,"desc":"x-coordinate of the lower left corner of the rectangle."},{"type":"float","var":"$y","beh":1,"desc":"y-coordinate of the lower left corner of the rectangle."},{"type":"float","var":"$width","beh":1,"desc":"The width of the image."},{"type":"float","var":"$height","beh":1,"desc":"The height of the image."}],"ret_type":"bool"}]},"ps_restore":{"desc":"Restore previously save context","long_desc":"Restores a previously saved graphics context. Any call of ps_save() must be accompanied by a call to ps_restore(). All coordinate transformations, line style settings, color settings, etc. are being restored to the state before the call of ps_save().","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-restore","name":"ps_restore","params":[{"list":[],"ret_type":"bool"}]},"ps_rotate":{"desc":"Sets rotation factor","long_desc":"Sets the rotation of the coordinate system.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-rotate","name":"ps_rotate","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$rot","beh":0,"desc":"Angle of rotation in degree."}],"ret_type":"bool"}]},"ps_save":{"desc":"Save current context","long_desc":"Saves the current graphics context, containing colors, translation and rotation settings and some more. A saved context can be restored with ps_restore().","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-save","name":"ps_save","params":[{"list":[],"ret_type":"bool"}]},"ps_scale":{"desc":"Sets scaling factor","long_desc":"Sets horizontal and vertical scaling of the coordinate system.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-scale","name":"ps_scale","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$x","beh":0,"desc":"Scaling factor in horizontal direction."},{"type":"float","var":"$y","beh":1,"desc":"Scaling factor in vertical direction."}],"ret_type":"bool"}]},"ps_set_border_color":{"desc":"Sets color of border for annotations","long_desc":"Links added with one of the functions ps_add_weblink(), ps_add_pdflink(), etc. will be displayed with a surounded rectangle when the postscript document is converted to pdf and viewed in a pdf viewer. This rectangle is not visible in the postscript document. This function sets the color of the rectangle's border line.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-set-border-color","name":"ps_set_border_color","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$red","beh":0,"desc":"The red component of the border color."},{"type":"float","var":"$green","beh":1,"desc":"The green component of the border color."},{"type":"float","var":"$blue","beh":1,"desc":"The blue component of the border color."}],"ret_type":"bool"}]},"ps_set_border_dash":{"desc":"Sets length of dashes for border of annotations","long_desc":"Links added with one of the functions ps_add_weblink(), ps_add_pdflink(), etc. will be displayed with a surounded rectangle when the postscript document is converted to pdf and viewed in a pdf viewer. This rectangle is not visible in the postscript document. This function sets the length of the black and white portion of a dashed border line.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-set-border-dash","name":"ps_set_border_dash","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$black","beh":0,"desc":"The length of the dash."},{"type":"float","var":"$white","beh":1,"desc":"The length of the gap between dashes."}],"ret_type":"bool"}]},"ps_set_border_style":{"desc":"Sets border style of annotations","long_desc":"Links added with one of the functions ps_add_weblink(), ps_add_pdflink(), etc. will be displayed with a surounded rectangle when the postscript document is converted to pdf and viewed in a pdf viewer. This rectangle is not visible in the postscript document. This function sets the appearance and width of the border line.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-set-border-style","name":"ps_set_border_style","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$style","beh":0,"desc":"style can be solid or dashed."},{"type":"float","var":"$width","beh":1,"desc":"The line width of the border."}],"ret_type":"bool"}]},"ps_set_info":{"desc":"Sets information fields of document","long_desc":"Sets certain information fields of the document. This fields will be shown as a comment in the header of the PostScript file. If the document is converted to pdf this fields will also be used for the document information. The BoundingBox is usually set to the value given to the first page. This only works if ps_findfont() has not been called before. In such cases the BoundingBox would be left unset unless you set it explicitly with this function. This function will have no effect anymore when the header of the postscript file has been already written. It must be called before the first page or the first call of ps_findfont().","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-set-info","name":"ps_set_info","params":[{"list":[{"type":"resource","var":"$p","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$key","beh":0,"desc":"The name of the information field to set. The values which can be set are Keywords, Subject, Title, Creator, Author, BoundingBox, and Orientation. Be aware that some of them has a meaning to PostScript viewers."},{"type":"string","var":"$val","beh":1,"desc":"The value of the information field. The field Orientation can be set to either Portrait or Landscape. The BoundingBox is a string consisting of four numbers. The first two numbers are the coordinates of the lower left corner of the page. The last two numbers are the coordinates of the upper right corner."}],"ret_type":"bool"}]},"ps_set_parameter":{"desc":"Sets certain parameters","long_desc":"Sets several parameters which are used by many functions. Parameters are by definition string values.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-set-parameter","name":"ps_set_parameter","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$name","beh":0,"desc":"For a list of possible names see ps_get_parameter()."},{"type":"string","var":"$value","beh":1,"desc":"The value of the parameter."}],"ret_type":"bool"}]},"ps_set_text_pos":{"desc":"Sets position for text output","long_desc":"Set the position for the next text output. You may alternatively set the x and y value separately by calling ps_set_value() and choosing textx respectively texty as the value name. If you want to output text at a certain position it is more convenient to use ps_show_xy() instead of setting the text position and calling ps_show().","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-set-text-pos","name":"ps_set_text_pos","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$x","beh":0,"desc":"x-coordinate of the new text position."},{"type":"float","var":"$y","beh":1,"desc":"y-coordinate of the new text position."}],"ret_type":"bool"}]},"ps_set_value":{"desc":"Sets certain values","long_desc":"Sets several values which are used by many functions. Parameters are by definition float values.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-set-value","name":"ps_set_value","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$name","beh":0,"desc":"The name can be one of the following:"},{"type":"float","var":"$value","beh":1,"desc":"The way how text is shown."}],"ret_type":"bool"}]},"ps_setcolor":{"desc":"Sets current color","long_desc":"Sets the color for drawing, filling, or both.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ps-setcolor","name":"ps_setcolor","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$type","beh":0,"desc":"The parameter type can be both, fill, or fillstroke."},{"type":"string","var":"$colorspace","beh":1,"desc":"The colorspace should be one of gray, rgb, cmyk, spot, pattern. Depending on the colorspace either only the first, the first three or all parameters will be used."},{"type":"float","var":"$c1","beh":1,"desc":"Depending on the colorspace this is either the red component (rgb), the cyan component (cmyk), the gray value (gray), the identifier of the spot color or the identifier of the pattern."},{"type":"float","var":"$c2","beh":1,"desc":"Depending on the colorspace this is either the green component (rgb), the magenta component (cmyk)."},{"type":"float","var":"$c3","beh":1,"desc":"Depending on the colorspace this is either the blue component (rgb), the yellow component (cmyk)."},{"type":"float","var":"$c4","beh":1,"desc":"This must only be set in cmyk colorspace and specifies the black component."}],"ret_type":"bool"}]},"ps_setdash":{"desc":"Sets appearance of a dashed line","long_desc":"Sets the length of the black and white portions of a dashed line.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-setdash","name":"ps_setdash","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$on","beh":0,"desc":"The length of the dash."},{"type":"float","var":"$off","beh":1,"desc":"The length of the gap between dashes."}],"ret_type":"bool"}]},"ps_setflat":{"desc":"Sets flatness","long_desc":"","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ps-setflat","name":"ps_setflat","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$value","beh":0,"desc":"The value must be between 0.2 and 1."}],"ret_type":"bool"}]},"ps_setfont":{"desc":"Sets font to use for following output","long_desc":"Sets a font, which has to be loaded before with ps_findfont(). Outputting text without setting a font results in an error.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-setfont","name":"ps_setfont","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"int","var":"$fontid","beh":0,"desc":"The font identifier as returned by ps_findfont()."},{"type":"float","var":"$size","beh":1,"desc":"The size of the font."}],"ret_type":"bool"}]},"ps_setgray":{"desc":"Sets gray value","long_desc":"Sets the gray value for all following drawing operations.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-setgray","name":"ps_setgray","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$gray","beh":0,"desc":"The value must be between 0 (white) and 1 (black)."}],"ret_type":"bool"}]},"ps_setlinecap":{"desc":"Sets appearance of line ends","long_desc":"Sets how line ends look like.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-setlinecap","name":"ps_setlinecap","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"int","var":"$type","beh":0,"desc":"The type of line ends. Possible values are PS_LINECAP_BUTT, PS_LINECAP_ROUND, or PS_LINECAP_SQUARED."}],"ret_type":"bool"}]},"ps_setlinejoin":{"desc":"Sets how contected lines are joined","long_desc":"Sets how lines are joined.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-setlinejoin","name":"ps_setlinejoin","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"int","var":"$type","beh":0,"desc":"The way lines are joined. Possible values are PS_LINEJOIN_MITER, PS_LINEJOIN_ROUND, or PS_LINEJOIN_BEVEL."}],"ret_type":"bool"}]},"ps_setlinewidth":{"desc":"Sets width of a line","long_desc":"Sets the line width for all following drawing operations.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-setlinewidth","name":"ps_setlinewidth","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$width","beh":0,"desc":"The width of lines in points."}],"ret_type":"bool"}]},"ps_setmiterlimit":{"desc":"Sets the miter limit","long_desc":"If two lines join in a small angle and the line join is set to PS_LINEJOIN_MITER, then the resulting spike will be very long. The miter limit is the maximum ratio of the miter length (the length of the spike) and the line width.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-setmiterlimit","name":"ps_setmiterlimit","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$value","beh":0,"desc":"The maximum ratio between the miter length and the line width. Larger values (> 10) will result in very long spikes when two lines meet in a small angle. Keep the default unless you know what you are doing."}],"ret_type":"bool"}]},"ps_setoverprintmode":{"desc":"Sets overprint mode","long_desc":"","ver":"PECL ps >= 1.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ps-setoverprintmode","name":"ps_setoverprintmode","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"int","var":"$mode","beh":0,"desc":""}],"ret_type":"bool"}]},"ps_setpolydash":{"desc":"Sets appearance of a dashed line","long_desc":"Sets the length of the black and white portions of a dashed line. ps_setpolydash() is used to set more complicated dash patterns.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-setpolydash","name":"ps_setpolydash","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$arr","beh":0,"desc":"arr is a list of length elements alternately for the black and white portion."}],"ret_type":"bool"}]},"ps_shading":{"desc":"Creates a shading for later use","long_desc":"Creates a shading, which can be used by ps_shfill() or ps_shading_pattern(). The color of the shading can be in any color space except for pattern.","ver":"PECL ps >= 1.3.0","ret_desc":"Returns the identifier of the pattern or FALSE on failure.","seealso":[],"url":"function.ps-shading","name":"ps_shading","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$type","beh":0,"desc":"The type of shading can be either radial or axial. Each shading starts with the current fill color and ends with the given color values passed in the parameters c1 to c4 (see ps_setcolor() for their meaning)."},{"type":"float","var":"$x0","beh":1,"desc":"The coordinates x0, y0, x1, y1 are the start and end point of the shading. If the type of shading is radial the two points are the middle points of a starting and ending circle."},{"type":"float","var":"$y0","beh":1,"desc":"See ps_setcolor() for their meaning."},{"type":"float","var":"$x1","beh":1,"desc":"If the shading is of type radial the optlist must also contain the parameters r0 and r1 with the radius of the start and end circle."},{"type":"float","var":"$y1","beh":1,"desc":""},{"type":"float","var":"$c1","beh":1,"desc":""},{"type":"float","var":"$c2","beh":1,"desc":""},{"type":"float","var":"$c3","beh":1,"desc":""},{"type":"float","var":"$c4","beh":1,"desc":""},{"type":"string","var":"$optlist","beh":1,"desc":""}],"ret_type":"int"}]},"ps_shading_pattern":{"desc":"Creates a pattern based on a shading","long_desc":"Creates a pattern based on a shading, which has to be created before with ps_shading(). Shading patterns can be used like regular patterns.","ver":"PECL ps >= 1.3.0","ret_desc":"The identifier of the pattern or FALSE on failure.","seealso":[],"url":"function.ps-shading-pattern","name":"ps_shading_pattern","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"int","var":"$shadingid","beh":0,"desc":"The identifier of a shading previously created with ps_shading()."},{"type":"string","var":"$optlist","beh":1,"desc":"This argument is not currently used."}],"ret_type":"int"}]},"ps_shfill":{"desc":"Fills an area with a shading","long_desc":"Fills an area with a shading, which has to be created before with ps_shading(). This is an alternative way to creating a pattern from a shading ps_shading_pattern() and using the pattern as the filling color.","ver":"PECL ps >= 1.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-shfill","name":"ps_shfill","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"int","var":"$shadingid","beh":0,"desc":"The identifier of a shading previously created with ps_shading()."}],"ret_type":"bool"}]},"ps_show":{"desc":"Output text","long_desc":"Output a text at the current text position. The text position can be set by storing the x and y coordinates into the values textx and texty with the function ps_set_value(). The function will issue an error if a font was not set before with ps_setfont(). ps_show() evaluates the following parameters and values as set by ps_set_parameter() and ps_set_value().","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-show","name":"ps_show","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$text","beh":0,"desc":"The text to be output."}],"ret_type":"bool"}]},"ps_show2":{"desc":"Output a text at current position","long_desc":"","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ps-show2","name":"ps_show2","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$text","beh":0,"desc":""},{"type":"int","var":"$len","beh":1,"desc":""}],"ret_type":"bool"}]},"ps_show_boxed":{"desc":"Output text in a box","long_desc":"Outputs a text in a given box. The lower left corner of the box is at (left, bottom). Line breaks will be inserted where needed. Multiple spaces are treated as one. Tabulators are treated as spaces. The text will be hyphenated if the parameter hyphenation is set to TRUE and the parameter hyphendict contains a valid filename for a hyphenation file. The line spacing is taken from the value leading. Paragraphs can be separated by an empty line just like in TeX. If the value parindent is set to value > 0.0 then the first n lines will be indented. The number n of lines is set by the parameter numindentlines. In order to prevent indenting of the first m paragraphs set the value parindentskip to a positive number.","ver":"PECL ps >= 1.1.0","ret_desc":"Number of characters that could not be written.","seealso":[],"url":"function.ps-show-boxed","name":"ps_show_boxed","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$text","beh":1,"desc":"The text to be output into the given box."},{"type":"float","var":"$left","beh":1,"desc":"x-coordinate of the lower left corner of the box."},{"type":"float","var":"$bottom","beh":1,"desc":"y-coordinate of the lower left corner of the box."},{"type":"float","var":"$width","beh":1,"desc":"Width of the box."},{"type":"float","var":"$height","beh":1,"desc":"Height of the box."},{"type":"string","var":"$hmode","beh":1,"desc":"The parameter hmode can be \"justify\", \"fulljustify\", \"right\", \"left\", or \"center\". The difference of \"justify\" and \"fulljustify\" just affects the last line of the box. In fulljustify mode the last line will be left and right justified unless this is also the last line of paragraph. In justify mode it will always be left justified."},{"type":"string","var":"$feature","beh":1,"desc":""}],"ret_type":"int"}]},"ps_show_xy":{"desc":"Output text at given position","long_desc":"Output a text at the given text position.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-show-xy","name":"ps_show_xy","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$text","beh":0,"desc":"The text to be output."},{"type":"float","var":"$x","beh":1,"desc":"x-coordinate of the lower left corner of the box surrounding the text."},{"type":"float","var":"$y","beh":1,"desc":"y-coordinate of the lower left corner of the box surrounding the text."}],"ret_type":"bool"}]},"ps_show_xy2":{"desc":"Output text at position","long_desc":"","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ps-show-xy2","name":"ps_show_xy2","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":""},{"type":"string","var":"$text","beh":0,"desc":""},{"type":"int","var":"$len","beh":1,"desc":""},{"type":"float","var":"$xcoor","beh":1,"desc":""},{"type":"float","var":"$ycoor","beh":1,"desc":""}],"ret_type":"bool"}]},"ps_string_geometry":{"desc":"Gets geometry of a string","long_desc":"This function is similar to ps_stringwidth() but returns an array of dimensions containing the width, ascender, and descender of the text.","ver":"PECL ps >= 1.2.0","ret_desc":"An array of the dimensions of a string. The element 'width' contains the width of the string as returned by ps_stringwidth(). The element 'descender' contains the maximum descender and 'ascender' the maximum ascender of the string.","seealso":[],"url":"function.ps-string-geometry","name":"ps_string_geometry","params":[{"list":[{"type":"resource","var":"$psdoc","beh":1,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$text","beh":1,"desc":"The text for which the geometry is to be calculated."},{"type":"int","var":"$fontid","beh":1,"desc":"The identifier of the font to be used. If not font is specified the current font will be used.","def":0},{"type":"float","var":"$size","beh":1,"desc":"The size of the font. If no size is specified the current size is used.","def":0}],"ret_type":"array"}]},"ps_stringwidth":{"desc":"Gets width of a string","long_desc":"Calculates the width of a string in points if it was output in the given font and font size. This function needs an Adobe font metrics file to calculate the precise width. If kerning is turned on, it will be taken into account.","ver":"PECL ps >= 1.1.0","ret_desc":"Width of a string in points.","seealso":[],"url":"function.ps-stringwidth","name":"ps_stringwidth","params":[{"list":[{"type":"resource","var":"$psdoc","beh":1,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"string","var":"$text","beh":1,"desc":"The text for which the width is to be calculated."},{"type":"int","var":"$fontid","beh":1,"desc":"The identifier of the font to be used. If not font is specified the current font will be used.","def":0},{"type":"float","var":"$size","beh":1,"desc":"The size of the font. If no size is specified the current size is used.","def":0}],"ret_type":"float"}]},"ps_stroke":{"desc":"Draws the current path","long_desc":"Draws the path constructed with previously called drawing functions like ps_lineto().","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-stroke","name":"ps_stroke","params":[{"list":[],"ret_type":"bool"}]},"ps_symbol":{"desc":"Output a glyph","long_desc":"Output the glyph at position ord in the font encoding vector of the current font. The font encoding for a font can be set when loading the font with ps_findfont().","ver":"PECL ps >= 1.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-symbol","name":"ps_symbol","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"int","var":"$ord","beh":0,"desc":"The position of the glyph in the font encoding vector."}],"ret_type":"bool"}]},"ps_symbol_name":{"desc":"Gets name of a glyph","long_desc":"This function needs an Adobe font metrics file to know which glyphs are available.","ver":"PECL ps >= 1.2.0","ret_desc":"The name of a glyph in the given font.","seealso":[],"url":"function.ps-symbol-name","name":"ps_symbol_name","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"int","var":"$ord","beh":1,"desc":"The parameter ord is the position of the glyph in the font encoding vector."},{"type":"int","var":"$fontid","beh":1,"desc":"The identifier of the font to be used. If not font is specified the current font will be used.","def":0}],"ret_type":"string"}]},"ps_symbol_width":{"desc":"Gets width of a glyph","long_desc":"Calculates the width of a glyph in points if it was output in the given font and font size. This function needs an Adobe font metrics file to calculate the precise width.","ver":"PECL ps >= 1.2.0","ret_desc":"The width of a glyph in points.","seealso":[],"url":"function.ps-symbol-width","name":"ps_symbol_width","params":[{"list":[{"type":"resource","var":"$psdoc","beh":1,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"int","var":"$ord","beh":1,"desc":"The position of the glyph in the font encoding vector."},{"type":"int","var":"$fontid","beh":1,"desc":"The identifier of the font to be used. If not font is specified the current font will be used.","def":0},{"type":"float","var":"$size","beh":1,"desc":"The size of the font. If no size is specified the current size is used.","def":0}],"ret_type":"float"}]},"ps_translate":{"desc":"Sets translation","long_desc":"Sets a new initial point of the coordinate system.","ver":"PECL ps >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ps-translate","name":"ps_translate","params":[{"list":[{"type":"resource","var":"$psdoc","beh":0,"desc":"Resource identifier of the postscript file as returned by ps_new()."},{"type":"float","var":"$x","beh":0,"desc":"x-coordinate of the origin of the translated coordinate system."},{"type":"float","var":"$y","beh":1,"desc":"y-coordinate of the origin of the translated coordinate system."}],"ret_type":"bool"}]},"pspell_add_to_personal":{"desc":"Add the word to a personal wordlist","long_desc":"pspell_add_to_personal() adds a word to the personal wordlist. If you used pspell_new_config() with pspell_config_personal() to open the dictionary, you can save the wordlist later with pspell_save_wordlist().","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.pspell-add-to-personal","name":"pspell_add_to_personal","params":[{"list":[{"type":"int","var":"$dictionary_link","beh":0,"desc":""},{"type":"string","var":"$word","beh":0,"desc":"The added word."}],"ret_type":"bool"}]},"pspell_add_to_session":{"desc":"Add the word to the wordlist in the current session","long_desc":"pspell_add_to_session() adds a word to the wordlist associated with the current session. It is very similar to pspell_add_to_personal()","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.pspell-add-to-session","name":"pspell_add_to_session","params":[{"list":[{"type":"int","var":"$dictionary_link","beh":0,"desc":""},{"type":"string","var":"$word","beh":0,"desc":"The added word."}],"ret_type":"bool"}]},"pspell_check":{"desc":"Check a word","long_desc":"pspell_check() checks the spelling of a word.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE if the spelling is correct, FALSE if not.","url":"function.pspell-check","name":"pspell_check","params":[{"list":[{"type":"int","var":"$dictionary_link","beh":0,"desc":""},{"type":"string","var":"$word","beh":0,"desc":"The tested word."}],"ret_type":"bool"}]},"pspell_clear_session":{"desc":"Clear the current session","long_desc":"pspell_clear_session() clears the current session. The current wordlist becomes blank, and, for example, if you try to save it with pspell_save_wordlist(), nothing happens.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.pspell-clear-session","name":"pspell_clear_session","params":[{"list":[],"ret_type":"bool"}]},"pspell_config_create":{"desc":"Create a config used to open a dictionary","long_desc":"Create a config used to open a dictionary. pspell_config_create() has a very similar syntax to pspell_new(). In fact, using pspell_config_create() immediately followed by pspell_new_config() will produce the exact same result. However, after creating a new config, you can also use pspell_config_*() functions before calling pspell_new_config() to take advantage of some advanced functionality. For more information and examples, check out inline manual pspell website:\u00bb\u00a0http:\/\/aspell.net\/.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Retuns a pspell config identifier, or FALSE on error.","url":"function.pspell-config-create","name":"pspell_config_create","params":[{"list":[{"type":"string","var":"$language","beh":1,"desc":"The language parameter is the language code which consists of the two letter ISO 639 language code and an optional two letter ISO 3166 country code after a dash or underscore."},{"type":"string","var":"$spelling","beh":1,"desc":"The spelling parameter is the requested spelling for languages with more than one spelling such as English. Known values are 'american', 'british', and 'canadian'."},{"type":"string","var":"$jargon","beh":1,"desc":"The jargon parameter contains extra information to distinguish two different words lists that have the same language and spelling parameters."},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding parameter is the encoding that words are expected to be in. Valid values are 'utf-8', 'iso8859-*', 'koi8-r', 'viscii', 'cp1252', 'machine unsigned 16', 'machine unsigned 32'. This parameter is largely untested, so be careful when using."}],"ret_type":"int"}]},"pspell_config_data_dir":{"desc":"location of language data files","long_desc":"","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.pspell-config-data-dir","name":"pspell_config_data_dir","params":[{"list":[{"type":"int","var":"$conf","beh":0,"desc":""},{"type":"string","var":"$directory","beh":0,"desc":""}],"ret_type":"bool"}]},"pspell_config_dict_dir":{"desc":"Location of the main word list","long_desc":"","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.pspell-config-dict-dir","name":"pspell_config_dict_dir","params":[{"list":[{"type":"int","var":"$conf","beh":0,"desc":""},{"type":"string","var":"$directory","beh":0,"desc":""}],"ret_type":"bool"}]},"pspell_config_ignore":{"desc":"Ignore words less than N characters long","long_desc":"pspell_config_ignore() should be used on a config before calling pspell_new_config(). This function allows short words to be skipped by the spell checker.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.pspell-config-ignore","name":"pspell_config_ignore","params":[{"list":[{"type":"int","var":"$dictionary_link","beh":0,"desc":""},{"type":"int","var":"$n","beh":0,"desc":"Words less than n characters will be skipped."}],"ret_type":"bool"}]},"pspell_config_mode":{"desc":"Change the mode number of suggestions returned","long_desc":"pspell_config_mode() should be used on a config before calling pspell_new_config(). This function determines how many suggestions will be returned by pspell_suggest().","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.pspell-config-mode","name":"pspell_config_mode","params":[{"list":[{"type":"int","var":"$dictionary_link","beh":0,"desc":""},{"type":"int","var":"$mode","beh":0,"desc":"The mode parameter is the mode in which spellchecker will work. There are several modes available:"}],"ret_type":"bool"}]},"pspell_config_personal":{"desc":"Set a file that contains personal wordlist","long_desc":"Set a file that contains personal wordlist. The personal wordlist will be loaded and used in addition to the standard one after you call pspell_new_config(). The file is also the file where pspell_save_wordlist() will save personal wordlist to. pspell_config_personal() should be used on a config before calling pspell_new_config().","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.pspell-config-personal","name":"pspell_config_personal","params":[{"list":[{"type":"int","var":"$dictionary_link","beh":0,"desc":""},{"type":"string","var":"$file","beh":0,"desc":"The personal wordlist. If the file does not exist, it will be created. The file should be writable by whoever PHP runs as (e.g. nobody)."}],"ret_type":"bool"}]},"pspell_config_repl":{"desc":"Set a file that contains replacement pairs","long_desc":"Set a file that contains replacement pairs. The replacement pairs improve the quality of the spellchecker. When a word is misspelled, and a proper suggestion was not found in the list, pspell_store_replacement() can be used to store a replacement pair and then pspell_save_wordlist() to save the wordlist along with the replacement pairs. pspell_config_repl() should be used on a config before calling pspell_new_config().","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.pspell-config-repl","name":"pspell_config_repl","params":[{"list":[{"type":"int","var":"$dictionary_link","beh":0,"desc":""},{"type":"string","var":"$file","beh":0,"desc":"The file should be writable by whoever PHP runs as (e.g. nobody)."}],"ret_type":"bool"}]},"pspell_config_runtogether":{"desc":"Consider run-together words as valid compounds","long_desc":"This function determines whether run-together words will be treated as legal compounds. That is, \"thecat\" will be a legal compound, although there should be a space between the two words. Changing this setting only affects the results returned by pspell_check(); pspell_suggest() will still return suggestions. pspell_config_runtogether() should be used on a config before calling pspell_new_config().","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.pspell-config-runtogether","name":"pspell_config_runtogether","params":[{"list":[{"type":"int","var":"$dictionary_link","beh":0,"desc":""},{"type":"bool","var":"$flag","beh":0,"desc":"TRUE if run-together words should be treated as legal compounds, FALSE otherwise."}],"ret_type":"bool"}]},"pspell_config_save_repl":{"desc":"Determine whether to save a replacement pairs list along with the wordlist","long_desc":"pspell_config_save_repl() determines whether pspell_save_wordlist() will save the replacement pairs along with the wordlist. Usually there is no need to use this function because if pspell_config_repl() is used, the replacement pairs will be saved by pspell_save_wordlist() anyway, and if it is not, the replacement pairs will not be saved. pspell_config_save_repl() should be used on a config before calling pspell_new_config().","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.pspell-config-save-repl","name":"pspell_config_save_repl","params":[{"list":[{"type":"int","var":"$dictionary_link","beh":0,"desc":""},{"type":"bool","var":"$flag","beh":0,"desc":"TRUE if replacement pairs should be saved, FALSE otherwise."}],"ret_type":"bool"}]},"pspell_new":{"desc":"Load a new dictionary","long_desc":"pspell_new() opens up a new dictionary and returns the dictionary link identifier for use in other pspell functions. For more information and examples, check out inline manual pspell website:\u00bb\u00a0http:\/\/aspell.net\/.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns the dictionary link identifier on success or FALSE on failure.","url":"function.pspell-new","name":"pspell_new","params":[{"list":[{"type":"string","var":"$language","beh":1,"desc":"The language parameter is the language code which consists of the two letter ISO 639 language code and an optional two letter ISO 3166 country code after a dash or underscore."},{"type":"string","var":"$spelling","beh":1,"desc":"The spelling parameter is the requested spelling for languages with more than one spelling such as English. Known values are 'american', 'british', and 'canadian'."},{"type":"string","var":"$jargon","beh":1,"desc":"The jargon parameter contains extra information to distinguish two different words lists that have the same language and spelling parameters."},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding parameter is the encoding that words are expected to be in. Valid values are 'utf-8', 'iso8859-*', 'koi8-r', 'viscii', 'cp1252', 'machine unsigned 16', 'machine unsigned 32'. This parameter is largely untested, so be careful when using."},{"type":"int","var":"$mode","beh":1,"desc":"The mode parameter is the mode in which spellchecker will work. There are several modes available:","def":0}],"ret_type":"int"}]},"pspell_new_config":{"desc":"Load a new dictionary with settings based on a given config","long_desc":"pspell_new_config() opens up a new dictionary with settings specified in a config, created with pspell_config_create() and modified with pspell_config_*() functions. This method provides you with the most flexibility and has all the functionality provided by pspell_new() and pspell_new_personal().","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns a dictionary link identifier on success.","url":"function.pspell-new-config","name":"pspell_new_config","params":[{"list":[],"ret_type":"int"}]},"pspell_new_personal":{"desc":"Load a new dictionary with personal wordlist","long_desc":"pspell_new_personal() opens up a new dictionary with a personal wordlist. The wordlist can be modified and saved with pspell_save_wordlist(), if desired. However, the replacement pairs are not saved. In order to save replacement pairs, you should create a config using pspell_config_create(), set the personal wordlist file with pspell_config_personal(), set the file for replacement pairs with pspell_config_repl(), and open a new dictionary with pspell_new_config(). For more information and examples, check out inline manual pspell website:\u00bb\u00a0http:\/\/aspell.net\/.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns the dictionary link identifier for use in other pspell functions.","url":"function.pspell-new-personal","name":"pspell_new_personal","params":[{"list":[{"type":"string","var":"$personal","beh":1,"desc":"The file where words added to the personal list will be stored. It should be an absolute filename beginning with '\/' because otherwise it will be relative to $HOME, which is \"\/root\" for most systems, and is probably not what you want."},{"type":"string","var":"$language","beh":1,"desc":"The language code which consists of the two letter ISO 639 language code and an optional two letter ISO 3166 country code after a dash or underscore."},{"type":"string","var":"$spelling","beh":1,"desc":"The requested spelling for languages with more than one spelling such as English. Known values are 'american', 'british', and 'canadian'."},{"type":"string","var":"$jargon","beh":1,"desc":"Extra information to distinguish two different words lists that have the same language and spelling parameters."},{"type":"string","var":"$encoding","beh":1,"desc":"The encoding that words are expected to be in. Valid values are utf-8, iso8859-*, koi8-r, viscii, cp1252, machine unsigned 16, machine unsigned 32."},{"type":"int","var":"$mode","beh":1,"desc":"The mode in which spellchecker will work. There are several modes available:","def":0}],"ret_type":"int"}]},"pspell_save_wordlist":{"desc":"Save the personal wordlist to a file","long_desc":"pspell_save_wordlist() saves the personal wordlist from the current session. The location of files to be saved specified with pspell_config_personal() and (optionally) pspell_config_repl().","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.pspell-save-wordlist","name":"pspell_save_wordlist","params":[{"list":[],"ret_type":"bool"}]},"pspell_store_replacement":{"desc":"Store a replacement pair for a word","long_desc":"pspell_store_replacement() stores a replacement pair for a word, so that replacement can be returned by pspell_suggest() later. In order to be able to take advantage of this function, you have to use pspell_new_personal() to open the dictionary. In order to permanently save the replacement pair, you have to use pspell_config_personal() and pspell_config_repl() to set the path where to save your custom wordlists, and then use pspell_save_wordlist() for the changes to be written to disk.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.pspell-store-replacement","name":"pspell_store_replacement","params":[{"list":[{"type":"int","var":"$dictionary_link","beh":0,"desc":"A dictionary link identifier, opened with pspell_new_personal()"},{"type":"string","var":"$misspelled","beh":0,"desc":"The misspelled word."},{"type":"string","var":"$correct","beh":1,"desc":"The fixed spelling for the misspelled word."}],"ret_type":"bool"}]},"pspell_suggest":{"desc":"Suggest spellings of a word","long_desc":"pspell_suggest() returns an array of possible spellings for the given word.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns an array of possible spellings.","url":"function.pspell-suggest","name":"pspell_suggest","params":[{"list":[{"type":"int","var":"$dictionary_link","beh":0,"desc":""},{"type":"string","var":"$word","beh":0,"desc":"The tested word."}],"ret_type":"array"}]},"putenv":{"desc":"Sets the value of an environment variable","long_desc":"Adds setting to the server environment. The environment variable will only exist for the duration of the current request. At the end of the request the environment is restored to its original state. Setting certain environment variables may be a potential security breach. The safe_mode_allowed_env_vars directive contains a comma-delimited list of prefixes. In Safe Mode, the user may only alter environment variables whose names begin with the prefixes supplied by this directive. By default, users will only be able to set environment variables that begin with PHP_ (e.g. PHP_FOO=BAR). Note: if this directive is empty, PHP will let the user modify ANY environment variable! The safe_mode_protected_env_vars directive contains a comma-delimited list of environment variables, that the end user won't be able to change using putenv(). These variables will be protected even if safe_mode_allowed_env_vars is set to allow to change them.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.putenv","name":"putenv","params":[{"list":[],"ret_type":"bool"}]},"px_close":{"desc":"Closes a paradox database","long_desc":"Closes the paradox database. This function will not close the file. You will have to call fclose() afterwards.","ver":"PECL paradox >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.px-close","name":"px_close","params":[{"list":[],"ret_type":"bool"}]},"px_create_fp":{"desc":"Create a new paradox database","long_desc":"Create a new paradox database file. The actual file has to be opened before with fopen(). Make sure the file is writable.","ver":"PECL paradox >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.px-create-fp","name":"px_create_fp","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"resource","var":"$file","beh":0,"desc":"File handle as returned by fopen()."},{"type":"array","var":"$fielddesc","beh":1,"desc":"fielddesc is an array containing one element for each field specification. A field specification is an array itself with either two or three elements.The first element is always a string value used as the name of the field. It may not be larger than ten characters. The second element contains the field type which is one of the constants listed in the table Constants for field types. In the case of a character field or bcd field, you will have to provide a third element specifying the length respectively the precesion of the field. If your field specification contains blob fields, you will have to make sure to either make the field large enough for all field values to fit or specify a blob file with px_set_blob_file() for storing the blobs. If this is not done the field data is truncated."}],"ret_type":"bool"}]},"px_date2string":{"desc":"Converts a date into a string.","long_desc":"Turns a date as it stored in the paradox file into human readable format. Paradox dates are the number of days since 1.1.0000. This function is just for convenience. It can be easily replaced by some math and the calendar functions as demonstrated in the example below.","ver":"PECL paradox >= 1.4.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.px-date2string","name":"px_date2string","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"int","var":"$value","beh":0,"desc":"Value as stored in paradox database field of type PX_FIELD_DATE."},{"type":"string","var":"$format","beh":1,"desc":"String format similar to the format used by date(). The placeholders support by this function is a subset of those supported by date() (Y, y, m, n, d, j, L)."}],"ret_type":"string"}]},"px_delete":{"desc":"Deletes resource of paradox database","long_desc":"Deletes the resource of the paradox file and frees all memory.","ver":"PECL paradox >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.px-delete","name":"px_delete","params":[{"list":[],"ret_type":"bool"}]},"px_delete_record":{"desc":"Deletes record from paradox database","long_desc":"This function deletes a record from the database. It does not free the space in the database file but just marks it as deleted. Inserting a new record afterwards will reuse the space.","ver":"PECL paradox >= 1.4.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.px-delete-record","name":"px_delete_record","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"int","var":"$num","beh":0,"desc":"The record number is an artificial number counting records in the order as they are stored in the database. The first record has number 0."}],"ret_type":"bool"}]},"px_get_field":{"desc":"Returns the specification of a single field","ver":"PECL paradox >= 1.0.0","ret_desc":"Returns the specification of the fieldno 'th database field as an associated array. The array contains three fields named name, type, and size.","url":"function.px-get-field","name":"px_get_field","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"int","var":"$fieldno","beh":0,"desc":"Number of the field. The first field has number 0. Specifying a field number less than 0 and greater or equal the number of fields will trigger an error."}],"ret_type":"array"}]},"px_get_info":{"desc":"Return lots of information about a paradox file","ver":"PECL paradox >= 1.0.0","ret_desc":"Returns an associated array with lots of information about a paradox file. This array is likely to be extended in the future.","seealso":[],"url":"function.px-get-info","name":"px_get_info","params":[{"list":[],"ret_type":"array"}]},"px_get_parameter":{"desc":"Gets a parameter","long_desc":"Gets various parameters.","ver":"PECL paradox >= 1.1.0","ret_desc":"Returns the value of the parameter or FALSE on failure.","url":"function.px-get-parameter","name":"px_get_parameter","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"string","var":"$name","beh":0,"desc":"The name can be one of the following:"}],"ret_type":"string"}]},"px_get_record":{"desc":"Returns record of paradox database","ver":"PECL paradox >= 1.0.0","ret_desc":"Returns the num'th record from the paradox database. The record is returned as an associated array with its keys being the field names.","seealso":[],"url":"function.px-get-record","name":"px_get_record","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"int","var":"$num","beh":1,"desc":"The record number is an artificial number counting records in the order as they are stored in the database. The first record has number 0."},{"type":"int","var":"$mode","beh":1,"desc":"The optional mode can be PX_KEYTOLOWER or PX_KEYTOUPPER in order to convert the keys of the returned array into lower or upper case. If mode is not passed or is 0, then the key will be exactly like the field name. The element values will contain the field values. NULL values will be retained and are different from 0.0, 0 or the empty string. Fields of type PX_FIELD_TIME will be returned as an integer counting the number of milliseconds starting at midnight. A timestamp (PX_FIELD_TIMESTAMP) and date (PX_FIELD_DATE) are floating point respectively int values counting milliseconds respectively days starting at the beginning of julian calendar. Use the functions px-timestamp2string() and px-date2string() to convert them into a character representation.","def":0}],"ret_type":"array"}]},"px_get_schema":{"desc":"Returns the database schema","long_desc":"px_get_schema() returns the database schema.","ver":"PECL paradox >= 1.0.0","ret_desc":"Returns the schema of a database file as an associated array. The key name is equal to the field name. Each array element is itself an associated array containing the two fields type and size. type is one of the constants in table Constants for field types. size is the number of bytes this field consumes in the record. The total of all field sizes is equal to the record size as it can be retrieved with px-get-info().","url":"function.px-get-schema","name":"px_get_schema","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"int","var":"$mode","beh":0,"desc":"If the optional mode is PX_KEYTOLOWER or PX_KEYTOUPPER the keys of the returned array will be converted to lower or upper case. If mode is 0 or not passed at all, then the key name will be identical to the field name.","def":0}],"ret_type":"array"}]},"px_get_value":{"desc":"Gets a value","long_desc":"Gets various values.","ver":"PECL paradox >= 1.1.0","ret_desc":"Returns the value of the parameter or FALSE on failure.","url":"function.px-get-value","name":"px_get_value","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"string","var":"$name","beh":0,"desc":"name can be one of the following."}],"ret_type":"float"}]},"px_insert_record":{"desc":"Inserts record into paradox database","long_desc":"Inserts a new record into the database. The record is not necessarily inserted at the end of the database, but may be inserted at any position depending on where the first free slot is found. The record data is passed as an array of field values. The elements in the array must correspond to the fields in the database. If the array has less elements than fields in the database, the remaining fields will be set to null. Most field values can be passed as its equivalent php type e.g. a long value is used for fields of type PX_FIELD_LONG, PX_FIELD_SHORT and PX_FIELD_AUTOINC, a double values is used for fields of type PX_FIELD_CURRENCY and PX_FIELD_NUMBER. Field values for blob and alpha fields are passed as strings. Fields of type PX_FIELD_TIME and PX_FIELD_DATE both require a long value. In the first case this is the number of milliseconds since midnight. In the second case this is the number of days since 1.1.0000. Below there are two examples to convert the current date or timestamp into a value suitable for one of paradox's date\/time fields.","ver":"PECL paradox >= 1.4.0","ret_desc":"Returns FALSE on failure or the record number in case of success.","seealso":[],"url":"function.px-insert-record","name":"px_insert_record","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"array","var":"$data","beh":0,"desc":"Associated or indexed array containing the field values as e.g. returned by px_retrieve_record()."}],"ret_type":"int"}]},"px_new":{"desc":"Create a new paradox object","long_desc":"Create a new paradox object. You will have to call this function before any further functions. px_new() does not create any file on the disk, it just creates an instance of a paradox object. This function must not be called if the object oriented interface is used. Use new paradox_db() instead.","ver":"PECL paradox >= 1.0.0","ret_desc":"Returns FALSE on failure.","seealso":[],"url":"function.px-new","name":"px_new","params":[{"list":[],"ret_type":"resource"}]},"px_numfields":{"desc":"Returns number of fields in a database","long_desc":"Get the number of fields in a database file.","ver":"PECL paradox >= 1.0.0","ret_desc":"Returns the number of fields in a database file. The return value of this function is identical to the element numfields in the array returned by px_get_info().","url":"function.px-numfields","name":"px_numfields","params":[{"list":[],"ret_type":"int"}]},"px_numrecords":{"desc":"Returns number of records in a database","long_desc":"Get the number of records in a database file.","ver":"PECL paradox >= 1.0.0","ret_desc":"Returns the number of records in a database file. The return value of this function is identical to the element numrecords in the array returned by px_get_info().","url":"function.px-numrecords","name":"px_numrecords","params":[{"list":[],"ret_type":"int"}]},"px_open_fp":{"desc":"Open paradox database","long_desc":"Open an existing paradox database file. The actual file has to be opened before with fopen(). This function can also be used to open primary index files and tread them like a paradox database. This is supported for those who would like to investigate a primary index. It cannot be used to accelerate access to a database file.","ver":"PECL paradox >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.px-open-fp","name":"px_open_fp","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"resource","var":"$file","beh":0,"desc":"file is the return value from fopen() with the actual database file as parameter. Make sure the database is writable if you plan to update or insert records."}],"ret_type":"bool"}]},"px_put_record":{"desc":"Stores record into paradox database","long_desc":"Stores a record into a paradox database. The record is always added at the end of the database, regardless of any free slots. Use px_insert_record() to add a new record into the first free slot found in the database.","ver":"PECL paradox >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.px-put-record","name":"px_put_record","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"array","var":"$record","beh":1,"desc":"Associated or indexed array containing the field values as e.g. returned by px_retrieve_record()."},{"type":"int","var":"$recpos","beh":1,"desc":"This optional parameter may be used to specify a record number greater than the current number of records in the database. The function will add as many empty records as needed. There is hardly any need for this parameter.","def":-1}],"ret_type":"bool"}]},"px_retrieve_record":{"desc":"Returns record of paradox database","long_desc":"This function is very similar to px_get_record() but uses internally a different approach to retrieve the data. It relies on pxlib for reading each single field value, which usually results in support for more field types.","ver":"PECL paradox >= 1.4.0","ret_desc":"Returns the num'th record from the paradox database. The record is returned as an associated array with its keys being the field names.","seealso":[],"url":"function.px-retrieve-record","name":"px_retrieve_record","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"int","var":"$num","beh":1,"desc":"The record number is an artificial number counting records in the order as they are stored in the database. The first record has number 0."},{"type":"int","var":"$mode","beh":1,"desc":"The optional mode can be PX_KEYTOLOWER or PX_KEYTOUPPER in order to convert the keys into lower or upper case. If mode is not passed or is 0, then the key will be exactly like the field name. The element values will contain the field values. NULL values will be retained and are different from 0.0, 0 or the empty string. Fields of type PX_FIELD_TIME will be returned as an integer counting the number of milliseconds starting at midnight. A timestamp is a floating point value also counting milliseconds starting at the beginning of julian calendar.","def":0}],"ret_type":"array"}]},"px_set_blob_file":{"desc":"Sets the file where blobs are read from","long_desc":"Sets the name of the file where blobs are going to be read from or written into. Without calling this function, px_get_record() or px_retrieve_record() will only return data in blob fields if the data is part of the record and not stored in the blob file. Blob data is stored in the record if it is small enough to fit in the size of the blob field. Calling px_put_record(), px_insert_record(), or px_update_record() without calling px_set_blob_file() will result in truncated blob fields unless the data fits into the database file. Calling this function twice will close the first blob file and open the new one.","ver":"PECL paradox >= 1.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.px-set-blob-file","name":"px_set_blob_file","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"string","var":"$filename","beh":0,"desc":"The name of the file. Its extension should be .MB."}],"ret_type":"bool"}]},"px_set_parameter":{"desc":"Sets a parameter","long_desc":"Sets various parameters.","ver":"PECL paradox >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.px-set-parameter","name":"px_set_parameter","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"string","var":"$name","beh":0,"desc":"Depending on the parameter you want to set, name can be one of the following."},{"type":"string","var":"$value","beh":1,"desc":"The name of the table as it will be stored in the database header."}],"ret_type":"bool"}]},"px_set_tablename":{"desc":"Sets the name of a table (deprecated)","long_desc":"Sets the table name of a paradox database, which was created with px_create_fp(). This function is deprecated use px_set_parameter() instead.","ver":"PECL paradox >= 1.0.0","ret_desc":"Returns NULL on success or FALSE on failure.","seealso":[],"url":"function.px-set-tablename","name":"px_set_tablename","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"string","var":"$name","beh":0,"desc":"The name of the table. If it is not set explicitly it will be set to the name of the database file."}],"ret_type":"void"}]},"px_set_targetencoding":{"desc":"Sets the encoding for character fields (deprecated)","long_desc":"Set the encoding for data retrieved from a character field. All character fields will be recoded to the encoding set by this function. If the encoding is not set, the character data will be returned in the DOS code page encoding as specified in the database file. The encoding can be any string identifier known to iconv or recode. On Unix systems run iconv -l for a list of available encodings. This function is deprecated and should be replaced by calling px_set_parameter(). See also px_get_info() to determine the DOS code page as stored in the database file.","ver":"PECL paradox >= 1.0.0","ret_desc":"Returns FALSE if the encoding could not be set, e.g. the encoding is unknown, or pxlib does not support recoding at all. In the second case a warning will be issued.","seealso":[],"url":"function.px-set-targetencoding","name":"px_set_targetencoding","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"string","var":"$encoding","beh":0,"desc":"The encoding for the output. Data which is being read from character fields is recoded into the targetencoding."}],"ret_type":"bool"}]},"px_set_value":{"desc":"Sets a value","long_desc":"Sets various values.","ver":"PECL paradox >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.px-set-value","name":"px_set_value","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"string","var":"$name","beh":0,"desc":"name can be one of the following."},{"type":"float","var":"$value","beh":1,"desc":"The number of primary keys. Paradox databases always use the first numprimkeys fields for the primary index."}],"ret_type":"bool"}]},"px_timestamp2string":{"desc":"Converts the timestamp into a string.","long_desc":"Turns a timestamp as it stored in the paradox file into human readable format. Paradox timestamps are the number of miliseconds since 0001-01-02. This function is just for convenience. It can be easily replaced by some math and the calendar functions as demonstrated in the following example.","ver":"PECL paradox >= 1.4.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.px-timestamp2string","name":"px_timestamp2string","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database."},{"type":"float","var":"$value","beh":0,"desc":"Value as stored in paradox database field of type PX_FIELD_TIME, or PX_FIELD_TIMESTAMP."},{"type":"string","var":"$format","beh":1,"desc":"String format similar to the format used by date(). The placeholders support by this function is a subset of those supported by date() (Y, y, m, n, d, j, H, h, G, g, i, s, A, a, L)."}],"ret_type":"string"}]},"px_update_record":{"desc":"Updates record in paradox database","long_desc":"Updates an exiting record in the database. The record starts at 0. The record data is passed as an array of field values. The elements in the array must correspond to the fields in the database. If the array has less elements than fields in the database, the remaining fields will be set to null.","ver":"PECL paradox >= 1.4.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.px-update-record","name":"px_update_record","params":[{"list":[{"type":"resource","var":"$pxdoc","beh":0,"desc":"Resource identifier of the paradox database as returned by px_new()."},{"type":"array","var":"$data","beh":0,"desc":"Associated array containing the field values as returned by px_retrieve_record()."},{"type":"int","var":"$num","beh":1,"desc":"The record number is an artificial number counting records in the order as they are stored in the database. The first record has number 0."}],"ret_type":"bool"}]},"qdom_error":{"desc":"Returns the error string from the last QDOM operation or FALSE if no errors occurred","ver":"PHP 4 >= 4.0.5","url":"function.qdom-error","name":"qdom_error","params":[{"list":[],"ret_type":"string"}]},"qdom_tree":{"desc":"Creates a tree of an XML string","ver":"PHP 4 >= 4.0.4","url":"function.qdom-tree","name":"qdom_tree","params":[{"list":[],"ret_type":"QDomDocument"}]},"quoted_printable_decode":{"desc":"Convert a quoted-printable string to an 8 bit string","long_desc":"This function returns an 8-bit binary string corresponding to the decoded quoted printable string (according to \u00bb\u00a0RFC2045, section 6.7, not \u00bb\u00a0RFC2821, section 4.5.2, so additional periods are not stripped from the beginning of line). This function is similar to imap_qprint(), except this one does not require the IMAP module to work.","ver":"PHP 4, PHP 5","ret_desc":"Returns the 8-bit binary string.","seealso":[],"url":"function.quoted-printable-decode","name":"quoted_printable_decode","params":[{"list":[],"ret_type":"string"}]},"quoted_printable_encode":{"desc":"Convert a 8 bit string to a quoted-printable string","long_desc":"Returns a quoted printable string created according to \u00bb\u00a0RFC2045, section 6.7. This function is similar to imap_8bit(), except this one does not require the IMAP module to work.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the encoded string.","seealso":[],"url":"function.quoted-printable-encode","name":"quoted_printable_encode","params":[{"list":[],"ret_type":"string"}]},"quotemeta":{"desc":"Quote meta characters","long_desc":"Returns a version of str with a backslash character (\\) before every character that is among these:","ver":"PHP 4, PHP 5","ret_desc":"Returns the string with meta characters quoted, or FALSE if an empty string is given as str.","seealso":[],"url":"function.quotemeta","name":"quotemeta","params":[{"list":[],"ret_type":"string"}]},"rad2deg":{"desc":"Converts the radian number to the equivalent number in degrees","long_desc":"This function converts number from radian to degrees.","ver":"PHP 4, PHP 5","ret_desc":"The equivalent of number in degrees","seealso":[],"url":"function.rad2deg","name":"rad2deg","params":[{"list":[],"ret_type":"float"}]},"radius_acct_open":{"desc":"Creates a Radius handle for accounting","long_desc":"","ver":"PECL radius >= 1.1.0","ret_desc":"Returns a handle on success, FALSE on error. This function only fails if insufficient memory is available.","url":"function.radius-acct-open","name":"radius_acct_open","params":[{"list":[],"ret_type":"resource"}]},"radius_add_server":{"desc":"Adds a server","long_desc":"radius_add_server() may be called multiple times, and it may be used together with radius_config(). At most 10 servers may be specified. When multiple servers are given, they are tried in round-robin fashion until a valid response is received, or until each server's max_tries limit has been reached.","ver":"PECL radius >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.radius-add-server","name":"radius_add_server","params":[{"list":[{"type":"resource","var":"$radius_handle","beh":0,"desc":""},{"type":"string","var":"$hostname","beh":0,"desc":"The hostname parameter specifies the server host, either as a fully qualified domain name or as a dotted-quad IP address in text form."},{"type":"int","var":"$port","beh":1,"desc":"The port specifies the UDP port to contact on the server. If port is given as 0, the library looks up the radius\/udp or radacct\/udp service in the network services database, and uses the port found there. If no entry is found, the library uses the standard Radius ports, 1812 for authentication and 1813 for accounting."},{"type":"string","var":"$secret","beh":1,"desc":"The shared secret for the server host is passed to the secret parameter. The Radius protocol ignores all but the leading 128 bytes of the shared secret."},{"type":"int","var":"$timeout","beh":1,"desc":"The timeout for receiving replies from the server is passed to the timeout parameter, in units of seconds."},{"type":"int","var":"$max_tries","beh":1,"desc":"The maximum number of repeated requests to make before giving up is passed into the max_tries."}],"ret_type":"bool"}]},"radius_auth_open":{"desc":"Creates a Radius handle for authentication","long_desc":"","ver":"PECL radius >= 1.1.0","ret_desc":"Returns a handle on success, FALSE on error. This function only fails if insufficient memory is available.","url":"function.radius-auth-open","name":"radius_auth_open","params":[{"list":[],"ret_type":"resource"}]},"radius_close":{"desc":"Frees all ressources","long_desc":"It is not needed to call this function because php frees all resources at the end of each request.","ver":"PECL radius >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.radius-close","name":"radius_close","params":[{"list":[],"ret_type":"bool"}]},"radius_config":{"desc":"Causes the library to read the given configuration file","long_desc":"Before issuing any Radius requests, the library must be made aware of the servers it can contact. The easiest way to configure the library is to call radius_config(). radius_config() causes the library to read a configuration file whose format is described in \u00bb\u00a0radius.conf.","ver":"PECL radius >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.radius-config","name":"radius_config","params":[{"list":[{"type":"resource","var":"$radius_handle","beh":0,"desc":""},{"type":"string","var":"$file","beh":0,"desc":"The pathname of the configuration file is passed as the file argument to radius_config(). The library can also be configured programmatically by calls to radius_add_server()."}],"ret_type":"bool"}]},"radius_create_request":{"desc":"Create accounting or authentication request","long_desc":"A Radius request consists of a code specifying the kind of request, and zero or more attributes which provide additional information. To begin constructing a new request, call radius_create_request().","ver":"PECL radius >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.radius-create-request","name":"radius_create_request","params":[{"list":[{"type":"resource","var":"$radius_handle","beh":0,"desc":""},{"type":"int","var":"$type","beh":0,"desc":"Type is RADIUS_ACCESS_REQUEST or RADIUS_ACCOUNTING_REQUEST."}],"ret_type":"bool"}]},"radius_cvt_addr":{"desc":"Converts raw data to IP-Address","long_desc":"","ver":"PECL radius >= 1.1.0","seealso":[],"url":"function.radius-cvt-addr","name":"radius_cvt_addr","params":[{"list":[],"ret_type":"string"}]},"radius_cvt_int":{"desc":"Converts raw data to integer","long_desc":"","ver":"PECL radius >= 1.1.0","seealso":[],"url":"function.radius-cvt-int","name":"radius_cvt_int","params":[{"list":[],"ret_type":"int"}]},"radius_cvt_string":{"desc":"Converts raw data to string","long_desc":"","ver":"PECL radius >= 1.1.0","seealso":[],"url":"function.radius-cvt-string","name":"radius_cvt_string","params":[{"list":[],"ret_type":"string"}]},"radius_demangle":{"desc":"Demangles data","long_desc":"Some data (Passwords, MS-CHAPv1 MPPE-Keys) is mangled for security reasons, and must be demangled before you can use them.","ver":"PECL radius >= 1.2.0","ret_desc":"Returns the demangled string, or FALSE on error.","url":"function.radius-demangle","name":"radius_demangle","params":[{"list":[{"type":"resource","var":"$radius_handle","beh":0,"desc":""},{"type":"string","var":"$mangled","beh":0,"desc":""}],"ret_type":"string"}]},"radius_demangle_mppe_key":{"desc":"Derives mppe-keys from mangled data","long_desc":"When using MPPE with MS-CHAPv2, the send- and recv-keys are mangled (see \u00bb\u00a0RFC 2548), however this function is useless, because I don't think that there is or will be a PPTP-MPPE implementation in PHP.","ver":"PECL radius >= 1.2.0","ret_desc":"Returns the demangled string, or FALSE on error.","url":"function.radius-demangle-mppe-key","name":"radius_demangle_mppe_key","params":[{"list":[{"type":"resource","var":"$radius_handle","beh":0,"desc":""},{"type":"string","var":"$mangled","beh":0,"desc":""}],"ret_type":"string"}]},"radius_get_attr":{"desc":"Extracts an attribute","long_desc":"Like Radius requests, each response may contain zero or more attributes. After a response has been received successfully by radius_send_request(), its attributes can be extracted one by one using radius_get_attr(). Each time radius_get_attr() is called, it gets the next attribute from the current response.","ver":"PECL radius >= 1.1.0","ret_desc":"Returns an associative array containing the attribute-type and the data, or error number <= 0.","seealso":[],"url":"function.radius-get-attr","name":"radius_get_attr","params":[{"list":[],"ret_type":"mixed"}]},"radius_get_vendor_attr":{"desc":"Extracts a vendor specific attribute","long_desc":"If radius_get_attr() returns RADIUS_VENDOR_SPECIFIC, radius_get_vendor_attr() may be called to determine the vendor.","ver":"PECL radius >= 1.1.0","ret_desc":"Returns an associative array containing the attribute-type, vendor and the data, or FALSE on error.","seealso":[],"url":"function.radius-get-vendor-attr","name":"radius_get_vendor_attr","params":[{"list":[],"ret_type":"array"}]},"radius_put_addr":{"desc":"Attaches an IP-Address attribute","ver":"PECL radius >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.radius-put-addr","name":"radius_put_addr","params":[{"list":[{"type":"resource","var":"$radius_handle","beh":0,"desc":""},{"type":"int","var":"$type","beh":0,"desc":""},{"type":"string","var":"$addr","beh":1,"desc":""}],"ret_type":"bool"}]},"radius_put_attr":{"desc":"Attaches a binary attribute","ver":"PECL radius >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.radius-put-attr","name":"radius_put_attr","params":[{"list":[{"type":"resource","var":"$radius_handle","beh":0,"desc":""},{"type":"int","var":"$type","beh":0,"desc":""},{"type":"string","var":"$value","beh":1,"desc":""}],"ret_type":"bool"}]},"radius_put_int":{"desc":"Attaches an integer attribute","ver":"PECL radius >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.radius-put-int","name":"radius_put_int","params":[{"list":[{"type":"resource","var":"$radius_handle","beh":0,"desc":""},{"type":"int","var":"$type","beh":0,"desc":""},{"type":"int","var":"$value","beh":1,"desc":""}],"ret_type":"bool"}]},"radius_put_string":{"desc":"Attaches a string attribute","ver":"PECL radius >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.radius-put-string","name":"radius_put_string","params":[{"list":[{"type":"resource","var":"$radius_handle","beh":0,"desc":""},{"type":"int","var":"$type","beh":0,"desc":""},{"type":"string","var":"$value","beh":1,"desc":""}],"ret_type":"bool"}]},"radius_put_vendor_addr":{"desc":"Attaches a vendor specific IP-Address attribute","ver":"PECL radius >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.radius-put-vendor-addr","name":"radius_put_vendor_addr","params":[{"list":[{"type":"resource","var":"$radius_handle","beh":0,"desc":""},{"type":"int","var":"$vendor","beh":0,"desc":""},{"type":"int","var":"$type","beh":1,"desc":""},{"type":"string","var":"$addr","beh":1,"desc":""}],"ret_type":"bool"}]},"radius_put_vendor_attr":{"desc":"Attaches a vendor specific binary attribute","ver":"PECL radius >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.radius-put-vendor-attr","name":"radius_put_vendor_attr","params":[{"list":[{"type":"resource","var":"$radius_handle","beh":0,"desc":""},{"type":"int","var":"$vendor","beh":0,"desc":""},{"type":"int","var":"$type","beh":1,"desc":""},{"type":"string","var":"$value","beh":1,"desc":""}],"ret_type":"bool"}]},"radius_put_vendor_int":{"desc":"Attaches a vendor specific integer attribute","ver":"PECL radius >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.radius-put-vendor-int","name":"radius_put_vendor_int","params":[{"list":[{"type":"resource","var":"$radius_handle","beh":0,"desc":""},{"type":"int","var":"$vendor","beh":0,"desc":""},{"type":"int","var":"$type","beh":1,"desc":""},{"type":"int","var":"$value","beh":1,"desc":""}],"ret_type":"bool"}]},"radius_put_vendor_string":{"desc":"Attaches a vendor specific string attribute","ver":"PECL radius >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.radius-put-vendor-string","name":"radius_put_vendor_string","params":[{"list":[{"type":"resource","var":"$radius_handle","beh":0,"desc":""},{"type":"int","var":"$vendor","beh":0,"desc":""},{"type":"int","var":"$type","beh":1,"desc":""},{"type":"string","var":"$value","beh":1,"desc":""}],"ret_type":"bool"}]},"radius_request_authenticator":{"desc":"Returns the request authenticator","long_desc":"The request authenticator is needed for demangling mangled data like passwords and encryption-keys.","ver":"PECL radius >= 1.1.0","ret_desc":"Returns the request authenticator as string, or FALSE on error.","seealso":[],"url":"function.radius-request-authenticator","name":"radius_request_authenticator","params":[{"list":[],"ret_type":"string"}]},"radius_send_request":{"desc":"Sends the request and waites for a reply","long_desc":"After the Radius request has been constructed, it is sent by radius_send_request(). The radius_send_request() function sends the request and waits for a valid reply, retrying the defined servers in round-robin fashion as necessary.","ver":"PECL radius >= 1.1.0","ret_desc":"If a valid response is received, radius_send_request() returns the Radius code which specifies the type of the response. This will typically be RADIUS_ACCESS_ACCEPT, RADIUS_ACCESS_REJECT, or RADIUS_ACCESS_CHALLENGE. If no valid response is received, radius_send_request() returns FALSE.","seealso":[],"url":"function.radius-send-request","name":"radius_send_request","params":[{"list":[],"ret_type":"int"}]},"radius_server_secret":{"desc":"Returns the shared secret","long_desc":"The shared secret is needed as salt for demangling mangled data like passwords and encryption-keys.","ver":"PECL radius >= 1.1.0","ret_desc":"Returns the server's shared secret as string, or FALSE on error.","url":"function.radius-server-secret","name":"radius_server_secret","params":[{"list":[],"ret_type":"string"}]},"radius_strerror":{"desc":"Returns an error message","long_desc":"If Radius-functions fail then they record an error message. This error message can be retrieved with this function.","ver":"PECL radius >= 1.1.0","ret_desc":"Returns error messages as string from failed radius functions.","url":"function.radius-strerror","name":"radius_strerror","params":[{"list":[],"ret_type":"string"}]},"rand":{"desc":"Generate a random integer","long_desc":"If called without the optional min, max arguments rand() returns a pseudo-random integer between 0 and getrandmax(). If you want a random number between 5 and 15 (inclusive), for example, use rand(5, 15).","ver":"PHP 4, PHP 5","ret_desc":"A pseudo random value between min (or 0) and max (or getrandmax(), inclusive).","seealso":[],"url":"function.rand","name":"rand","params":[{"list":[],"ret_type":"int"},{"list":[{"type":"int","var":"$min","beh":0,"desc":"The lowest value to return (default: 0)"},{"type":"int","var":"$max","beh":0,"desc":"The highest value to return (default: getrandmax())"}],"ret_type":"int"}]},"range":{"desc":"Create an array containing a range of elements","long_desc":"Create an array containing a range of elements.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of elements from start to limit, inclusive.","seealso":[],"url":"function.range","name":"range","params":[{"list":[{"type":"mixed","var":"$start","beh":0,"desc":"First value of the sequence."},{"type":"mixed","var":"$limit","beh":1,"desc":"The sequence is ended upon reaching the limit value."},{"type":"number","var":"$step","beh":1,"desc":"If a step value is given, it will be used as the increment between elements in the sequence. step should be given as a positive number. If not specified, step will default to 1.","def":1}],"ret_type":"array"}]},"rar_wrapper_cache_stats":{"desc":"Cache hits and misses for the URL wrapper","long_desc":"","ver":"PECL rar >= 3.0.0","ret_desc":"","url":"function.rar-wrapper-cache-stats","name":"rar_wrapper_cache_stats","params":[{"list":[],"ret_type":"string"}]},"rawurldecode":{"desc":"Decode URL-encoded strings","long_desc":"Returns a string in which the sequences with percent (%) signs followed by two hex digits have been replaced with literal characters.","ver":"PHP 4, PHP 5","ret_desc":"Returns the decoded URL, as a string.","seealso":[],"url":"function.rawurldecode","name":"rawurldecode","params":[{"list":[],"ret_type":"string"}]},"rawurlencode":{"desc":"URL-encode according to RFC 3986","long_desc":"Encodes the given string according to \u00bb\u00a0RFC 3986.","ver":"PHP 4, PHP 5","ret_desc":"Returns a string in which all non-alphanumeric characters except -_.~ have been replaced with a percent (%) sign followed by two hex digits. This is the encoding described in \u00bb\u00a0RFC 3986 for protecting literal characters from being interpreted as special URL delimiters, and for protecting URLs from being mangled by transmission media with character conversions (like some email systems).","seealso":[],"url":"function.rawurlencode","name":"rawurlencode","params":[{"list":[],"ret_type":"string"}]},"read_exif_data":{"desc":"Alias of exif_read_data()","long_desc":"This function is an alias of: exif_read_data().","ver":"PHP 4 >= 4.0.1, PHP 5","url":"function.read-exif-data","name":"read_exif_data","params":[]},"readdir":{"desc":"Read entry from directory handle","long_desc":"Returns the name of the next entry in the directory. The entries are returned in the order in which they are stored by the filesystem.","ver":"PHP 4, PHP 5","ret_desc":"Returns the entry name on success or FALSE on failure.","seealso":[],"url":"function.readdir","name":"readdir","params":[{"list":[],"ret_type":"string"}]},"readfile":{"desc":"Outputs a file","long_desc":"Reads a file and writes it to the output buffer.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of bytes read from the file. If an error occurs, FALSE is returned and unless the function was called as @readfile(), an error message is printed.","seealso":[],"url":"function.readfile","name":"readfile","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"The filename being read."},{"type":"bool","var":"$use_include_path","beh":1,"desc":"You can use the optional second parameter and set it to TRUE, if you want to search for the file in the include_path, too.","def":"false"},{"type":"resource","var":"$context","beh":1,"desc":"A context stream resource."}],"ret_type":"int"}]},"readgzfile":{"desc":"Output a gz-file","long_desc":"Reads a file, decompresses it and writes it to standard output. readgzfile() can be used to read a file which is not in gzip format; in this case readgzfile() will directly read from the file without decompression.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of (uncompressed) bytes read from the file. If an error occurs, FALSE is returned and unless the function was called as @readgzfile, an error message is printed.","seealso":[],"url":"function.readgzfile","name":"readgzfile","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The file name. This file will be opened from the filesystem and its contents written to standard output."},{"type":"int","var":"$use_include_path","beh":0,"desc":"You can set this optional parameter to 1, if you want to search for the file in the include_path too.","def":0}],"ret_type":"int"}]},"readline":{"desc":"Reads a line","long_desc":"Reads a single line from the user. You must add this line to the history yourself using readline_add_history().","ver":"PHP 4, PHP 5","ret_desc":"Returns a single string from the user. The line returned has the ending newline removed.","url":"function.readline","name":"readline","params":[{"list":[],"ret_type":"string"}]},"readline_add_history":{"desc":"Adds a line to the history","long_desc":"This function adds a line to the command line history.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.readline-add-history","name":"readline_add_history","params":[{"list":[],"ret_type":"bool"}]},"readline_callback_handler_install":{"desc":"Initializes the readline callback interface and terminal, prints the prompt and returns immediately","long_desc":"Sets up a readline callback interface then prints prompt and immediately returns. Calling this function twice without removing the previous callback interface will automatically and conveniently overwrite the old interface. The callback feature is useful when combined with stream_select() as it allows interleaving of IO and user input, unlike readline().","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.readline-callback-handler-install","name":"readline_callback_handler_install","params":[{"list":[{"type":"string","var":"$prompt","beh":0,"desc":"The prompt message."},{"type":"callable","var":"$callback","beh":0,"desc":"The callback function takes one parameter; the user input returned."}],"ret_type":"bool"}]},"readline_callback_handler_remove":{"desc":"Removes a previously installed callback handler and restores terminal settings","long_desc":"Removes a previously installed callback handler and restores terminal settings.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE if a previously installed callback handler was removed, or FALSE if one could not be found.","seealso":[],"url":"function.readline-callback-handler-remove","name":"readline_callback_handler_remove","params":[{"list":[],"ret_type":"bool"}]},"readline_callback_read_char":{"desc":"Reads a character and informs the readline callback interface when a line is received","long_desc":"Reads a character of user input. When a line is received, this function informs the readline callback interface installed using readline_callback_handler_install() that a line is ready for input.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","seealso":[],"url":"function.readline-callback-read-char","name":"readline_callback_read_char","params":[{"list":[],"ret_type":"void"}]},"readline_clear_history":{"desc":"Clears the history","long_desc":"This function clears the entire command line history.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.readline-clear-history","name":"readline_clear_history","params":[{"list":[],"ret_type":"bool"}]},"readline_completion_function":{"desc":"Registers a completion function","long_desc":"This function registers a completion function. This is the same kind of functionality you'd get if you hit your tab key while using Bash.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.readline-completion-function","name":"readline_completion_function","params":[{"list":[],"ret_type":"bool"}]},"readline_info":{"desc":"Gets\/sets various internal readline variables","long_desc":"Gets or sets various internal readline variables.","ver":"PHP 4, PHP 5","ret_desc":"If called with no parameters, this function returns an array of values for all the setting readline uses. The elements will be indexed by the following values: done, end, erase_empty_line, library_version, line_buffer, mark, pending_input, point, prompt, readline_name, and terminal_name.","url":"function.readline-info","name":"readline_info","params":[{"list":[{"type":"string","var":"$varname","beh":1,"desc":"A variable name."},{"type":"string","var":"$newvalue","beh":1,"desc":"If provided, this will be the new value of the setting."}],"ret_type":"mixed"}]},"readline_list_history":{"desc":"Lists the history","long_desc":"Gets the entire command line history.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of the entire command line history. The elements are indexed by integers starting at zero.","url":"function.readline-list-history","name":"readline_list_history","params":[{"list":[],"ret_type":"array"}]},"readline_on_new_line":{"desc":"Inform readline that the cursor has moved to a new line","long_desc":"Tells readline that the cursor has moved to a new line.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","url":"function.readline-on-new-line","name":"readline_on_new_line","params":[{"list":[],"ret_type":"void"}]},"readline_read_history":{"desc":"Reads the history","long_desc":"This function reads a command history from a file.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.readline-read-history","name":"readline_read_history","params":[{"list":[],"ret_type":"bool"}]},"readline_redisplay":{"desc":"Redraws the display","long_desc":"Redraws readline to redraw the display.","ver":"PHP 5 >= 5.1.0","ret_desc":"No value is returned.","url":"function.readline-redisplay","name":"readline_redisplay","params":[{"list":[],"ret_type":"void"}]},"readline_write_history":{"desc":"Writes the history","long_desc":"This function writes the command history to a file.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.readline-write-history","name":"readline_write_history","params":[{"list":[],"ret_type":"bool"}]},"readlink":{"desc":"Returns the target of a symbolic link","long_desc":"readlink() does the same as the readlink C function.","ver":"PHP 4, PHP 5","ret_desc":"Returns the contents of the symbolic link path or FALSE on error.","seealso":[],"url":"function.readlink","name":"readlink","params":[{"list":[],"ret_type":"string"}]},"realpath":{"desc":"Returns canonicalized absolute pathname","long_desc":"realpath() expands all symbolic links and resolves references to '\/.\/', '\/..\/' and extra '\/' characters in the input path and return the canonicalized absolute pathname.","ver":"PHP 4, PHP 5","ret_desc":"Returns the canonicalized absolute pathname on success. The resulting path will have no symbolic link, '\/.\/' or '\/..\/' components.","seealso":[],"url":"function.realpath","name":"realpath","params":[{"list":[],"ret_type":"string"}]},"realpath_cache_get":{"desc":"Get realpath cache entries","long_desc":"Get the contents of the realpath cache.","ver":"PHP 5 >= 5.3.2","ret_desc":"Returns an array of realpath cache entries. The keys are original path entries, and the values are arrays of data items, containing the resolved path, expiration date, and other options kept in the cache.","seealso":[],"url":"function.realpath-cache-get","name":"realpath_cache_get","params":[{"list":[],"ret_type":"array"}]},"realpath_cache_size":{"desc":"Get realpath cache size","long_desc":"Get the amount of memory used by the realpath cache.","ver":"PHP 5 >= 5.3.2","ret_desc":"Returns how much memory realpath cache is using.","seealso":[],"url":"function.realpath-cache-size","name":"realpath_cache_size","params":[{"list":[],"ret_type":"int"}]},"recode":{"desc":"Alias of recode_string()","long_desc":"This function is an alias of: recode_string().","ver":"PHP 4, PHP 5","url":"function.recode","name":"recode","params":[]},"recode_file":{"desc":"Recode from file to file according to recode request","long_desc":"Recode the file referenced by file handle input into the file referenced by file handle output according to the recode request.","ver":"PHP 4, PHP 5","ret_desc":"Returns FALSE, if unable to comply, TRUE otherwise.","seealso":[],"url":"function.recode-file","name":"recode_file","params":[{"list":[{"type":"string","var":"$request","beh":0,"desc":"The desired recode request type"},{"type":"resource","var":"$input","beh":0,"desc":"A local file handle resource for the input"},{"type":"resource","var":"$output","beh":1,"desc":"A local file handle resource for the output"}],"ret_type":"bool"}]},"recode_string":{"desc":"Recode a string according to a recode request","long_desc":"Recode the string string according to the recode request request.","ver":"PHP 4, PHP 5","ret_desc":"Returns the recoded string or FALSE, if unable to perform the recode request.","seealso":[],"url":"function.recode-string","name":"recode_string","params":[{"list":[{"type":"string","var":"$request","beh":0,"desc":"The desired recode request type"},{"type":"string","var":"$string","beh":0,"desc":"The string to be recoded"}],"ret_type":"string"}]},"recursiveiterator":{"name":"RecursiveIterator","class":"RecursiveIterator"},"reflectionclass":{"name":"ReflectionClass","class":"ReflectionClass"},"reflectionextension":{"name":"ReflectionExtension","class":"ReflectionExtension"},"reflectionfunction":{"name":"ReflectionFunction","class":"ReflectionFunction"},"reflectionfunctionabstract":{"name":"ReflectionFunctionAbstract","class":"ReflectionFunctionAbstract"},"reflectionmethod":{"name":"ReflectionMethod","class":"ReflectionMethod"},"reflectionobject":{"name":"ReflectionObject","class":"ReflectionObject"},"reflectionparameter":{"name":"ReflectionParameter","class":"ReflectionParameter"},"reflectionproperty":{"name":"ReflectionProperty","class":"ReflectionProperty"},"register_shutdown_function":{"desc":"Register a function for execution on shutdown","long_desc":"Registers a callback to be executed after script execution finishes or exit() is called. Multiple calls to register_shutdown_function() can be made, and each will be called in the same order as they were registered. If you call exit() within one registered shutdown function, processing will stop completely and no other registered shutdown functions will be called.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.register-shutdown-function","name":"register_shutdown_function","params":[{"list":[{"type":"callable","var":"$callback","beh":1,"desc":"The shutdown callback to register. The shutdown callbacks are executed as the part of the request, so it's possible to send output from them and access output buffers."},{"type":"mixed","var":"$parameter","beh":1,"desc":"It is possible to pass parameters to the shutdown function by passing additional parameters."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"void"}]},"register_tick_function":{"desc":"Register a function for execution on each tick","long_desc":"Registers the given function to be executed when a tick is called.","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.register-tick-function","name":"register_tick_function","params":[{"list":[{"type":"callable","var":"$function","beh":1,"desc":"The function name as a string, or an array consisting of an object and a method."},{"type":"mixed","var":"$arg","beh":1,"desc":""},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"bool"}]},"rename":{"desc":"Renames a file or directory","long_desc":"Attempts to rename oldname to newname.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.rename","name":"rename","params":[{"list":[{"type":"string","var":"$oldname","beh":0,"desc":""},{"type":"string","var":"$newname","beh":1,"desc":"The new name."},{"type":"resource","var":"$context","beh":1,"desc":""}],"ret_type":"bool"}]},"rename_function":{"desc":"Renames orig_name to new_name in the global function table","long_desc":"Renames a orig_name to new_name in the global function table. Useful for temporarily overriding built-in functions.","ver":"PECL apd >= 0.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.rename-function","name":"rename_function","params":[{"list":[{"type":"string","var":"$original_name","beh":0,"desc":"The original function name."},{"type":"string","var":"$new_name","beh":0,"desc":"The new name for the original_name function."}],"ret_type":"bool"}]},"reset":{"desc":"Set the internal pointer of an array to its first element","long_desc":"reset() rewinds array's internal pointer to the first element and returns the value of the first array element.","ver":"PHP 4, PHP 5","ret_desc":"Returns the value of the first array element, or FALSE if the array is empty.","seealso":[],"url":"function.reset","name":"reset","params":[{"list":[],"ret_type":"mixed"}]},"restore_error_handler":{"desc":"Restores the previous error handler function","long_desc":"Used after changing the error handler function using set_error_handler(), to revert to the previous error handler (which could be the built-in or a user defined function).","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"This function always returns TRUE.","seealso":[],"url":"function.restore-error-handler","name":"restore_error_handler","params":[{"list":[],"ret_type":"bool"}]},"restore_exception_handler":{"desc":"Restores the previously defined exception handler function","long_desc":"Used after changing the exception handler function using set_exception_handler(), to revert to the previous exception handler (which could be the built-in or a user defined function).","ver":"PHP 5","ret_desc":"This function always returns TRUE.","seealso":[],"url":"function.restore-exception-handler","name":"restore_exception_handler","params":[{"list":[],"ret_type":"bool"}]},"restore_include_path":{"desc":"Restores the value of the include_path configuration option","long_desc":"Restores the include_path configuration option back to its original master value as set in php.ini","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.restore-include-path","name":"restore_include_path","params":[{"list":[],"ret_type":"void"}]},"rewind":{"desc":"Rewind the position of a file pointer","long_desc":"Sets the file position indicator for handle to the beginning of the file stream.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.rewind","name":"rewind","params":[{"list":[],"ret_type":"bool"}]},"rewinddir":{"desc":"Rewind directory handle","long_desc":"Resets the directory stream indicated by dir_handle to the beginning of the directory.","ver":"PHP 4, PHP 5","url":"function.rewinddir","name":"rewinddir","params":[{"list":[],"ret_type":"void"}]},"rmdir":{"desc":"Removes directory","long_desc":"Attempts to remove the directory named by dirname. The directory must be empty, and the relevant permissions must permit this. A E_WARNING level error will be generated on failure.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.rmdir","name":"rmdir","params":[{"list":[{"type":"string","var":"$dirname","beh":0,"desc":"Path to the directory."},{"type":"resource","var":"$context","beh":1,"desc":""}],"ret_type":"bool"}]},"round":{"desc":"Rounds a float","long_desc":"Returns the rounded value of val to specified precision (number of digits after the decimal point). precision can also be negative or zero (default).","ver":"PHP 4, PHP 5","ret_desc":"The rounded value","seealso":[],"url":"function.round","name":"round","params":[{"list":[{"type":"float","var":"$val","beh":1,"desc":"The value to round"},{"type":"int","var":"$precision","beh":1,"desc":"The optional number of decimal digits to round to.","def":0},{"type":"int","var":"$mode","beh":1,"desc":"One of PHP_ROUND_HALF_UP, PHP_ROUND_HALF_DOWN, PHP_ROUND_HALF_EVEN, or PHP_ROUND_HALF_ODD.","def":"PHP_ROUND_HALF_UP"}],"ret_type":"float"}]},"rpm_close":{"desc":"Closes an RPM file","long_desc":"rpm_close() will close an RPM file pointer.","ver":"PECL rpmreader >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.rpm-close","name":"rpm_close","params":[{"list":[],"ret_type":"bool"}]},"rpm_get_tag":{"desc":"Retrieves a header tag from an RPM file","long_desc":"rpm_get_tag() will retrieve a given tag from the RPM file's header and return it.","ver":"PECL rpmreader >= 0.1.0","ret_desc":"The return value can be of various types depending on the tagnum supplied to the function.","seealso":[],"url":"function.rpm-get-tag","name":"rpm_get_tag","params":[{"list":[{"type":"resource","var":"$rpmr","beh":0,"desc":"A file pointer resource successfully opened by rpm_open()."},{"type":"int","var":"$tagnum","beh":0,"desc":"The tag number to retrieve from the RPM header. This value can be specified using the list of constants defined by this module."}],"ret_type":"mixed"}]},"rpm_is_valid":{"desc":"Tests a filename for validity as an RPM file","long_desc":"rpm_is_valid() will test an RPM file for validity as an RPM file. This is not the same as rpm_open() as it only checks the file for validity but does not return a file pointer to be used by further functions.","ver":"PECL rpmreader >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.rpm-is-valid","name":"rpm_is_valid","params":[{"list":[],"ret_type":"bool"}]},"rpm_open":{"desc":"Opens an RPM file","long_desc":"rpm_open() will open an RPM file and will determine if the file is a valid RPM file.","ver":"PECL rpmreader >= 0.1.0","ret_desc":"If the open succeeds, then rpm_open() will return a file pointer resource to the newly opened file. On error, the function will return FALSE.","seealso":[],"url":"function.rpm-open","name":"rpm_open","params":[{"list":[],"ret_type":"resource"}]},"rpm_version":{"desc":"Returns a string representing the current version of the rpmreader extension","long_desc":"rpm_version() will return the current version of the rpmreader extension.","ver":"PECL rpmreader >= 0.3.0","ret_desc":"rpm_version() will return a string representing the rpmreader version currently loaded in PHP.","url":"function.rpm-version","name":"rpm_version","params":[{"list":[],"ret_type":"string"}]},"rrd_create":{"desc":"Creates rrd database file","long_desc":"Creates the rdd database file.","ver":"PECL rrd >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.rrd-create","name":"rrd_create","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"Filename for newly created rrd file."},{"type":"array","var":"$options","beh":0,"desc":"Options for rrd create - list of strings. See man page of rrd create for whole list of options."}],"ret_type":"bool"}]},"rrd_error":{"desc":"Gets latest error message.","long_desc":"Returns latest global rrd error message.","ver":"PECL rrd >= 0.9.0","ret_desc":"Latest error message.","url":"function.rrd-error","name":"rrd_error","params":[{"list":[],"ret_type":"string"}]},"rrd_fetch":{"desc":"Fetch the data for graph as array.","long_desc":"Gets data for graph output from RRD database file as array. This function has same result as rrd_graph(), but fetched data are returned as array, no image file is created.","ver":"PECL rrd >= 0.9.0","ret_desc":"Returns information about retrieved graph data.","url":"function.rrd-fetch","name":"rrd_fetch","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"RRD database file name."},{"type":"array","var":"$options","beh":0,"desc":"Array of options for resolution specification."}],"ret_type":"array"}]},"rrd_first":{"desc":"Gets the timestamp of the first sample from rrd file.","long_desc":"Returns the first data sample from the specified RRA of the RRD file.","ver":"PECL rrd >= 0.9.0","ret_desc":"Integer number of unix timestamp, FALSE if some error occurs.","url":"function.rrd-first","name":"rrd_first","params":[{"list":[{"type":"string","var":"$file","beh":0,"desc":"RRD database file name."},{"type":"int","var":"$raaindex","beh":0,"desc":"The index number of the RRA that is to be examined. Default value is 0.","def":0}],"ret_type":"int"}]},"rrd_graph":{"desc":"Creates image from a data.","long_desc":"Creates image for a particular data from RRD file.","ver":"PECL rrd >= 0.9.0","ret_desc":"Array with information about generated image is returned, FALSE when error occurs.","url":"function.rrd-graph","name":"rrd_graph","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"RRD database file name."},{"type":"array","var":"$options","beh":0,"desc":"Options for generating image. See man page of rrd graph for all possible options. All options (data definitions, variable defintions, etc.) are allowed."}],"ret_type":"array"}]},"rrd_info":{"desc":"Gets information about rrd file","long_desc":"Returns information about particular RRD database file.","ver":"PECL rrd >= 0.9.0","ret_desc":"Array with information about requsted RRD file, FALSE when error occurs.","url":"function.rrd-info","name":"rrd_info","params":[{"list":[],"ret_type":"array"}]},"rrd_last":{"desc":"Gets unix timestamp of the last sample.","long_desc":"Returns the UNIX timestamp of the most recent update of the RRD database.","ver":"PECL rrd >= 0.9.0","ret_desc":"Integer as unix timestamp of the most recent data from the RRD database.","url":"function.rrd-last","name":"rrd_last","params":[{"list":[],"ret_type":"int"}]},"rrd_lastupdate":{"desc":"Gets information about last updated data.","long_desc":"Gets array of the UNIX timestamp and the values stored for each date in the most recent update of the RRD database file.","ver":"PECL rrd >= 0.9.0","ret_desc":"Array of information about last update, FALSE when error occurs.","url":"function.rrd-lastupdate","name":"rrd_lastupdate","params":[{"list":[],"ret_type":"array"}]},"rrd_restore":{"desc":"Restores the RRD file from XML dump.","long_desc":"Restores the RRD file from the XML dump.","ver":"PECL rrd >= 0.9.0","ret_desc":"Returns TRUE on success, FALSE otherwise.","url":"function.rrd-restore","name":"rrd_restore","params":[{"list":[{"type":"string","var":"$xml_file","beh":0,"desc":"XML filename with the dump of the original RRD database file."},{"type":"string","var":"$rrd_file","beh":1,"desc":"Restored RRD database file name."},{"type":"array","var":"$options","beh":1,"desc":"Array of options for restoring. See man page for rrd restore."}],"ret_type":"bool"}]},"rrd_tune":{"desc":"Tunes some RRD database file header options.","long_desc":"Change some options in the RRD dabase header file. E.g. renames the source for the data etc.","ver":"PECL rrd >= 0.9.0","ret_desc":"Returns TRUE on success, FALSE otherwise.","url":"function.rrd-tune","name":"rrd_tune","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"RRD database file name."},{"type":"array","var":"$options","beh":0,"desc":"Options with RRD database file properties which will be changed. See rrd tune man page for details."}],"ret_type":"bool"}]},"rrd_update":{"desc":"Updates the RRD database.","long_desc":"Updates the RRD database file. The input data is time interpolated according to the properties of the RRD database file.","ver":"PECL rrd >= 0.9.0","ret_desc":"Returns TRUE on success, FALSE when error occurs.","url":"function.rrd-update","name":"rrd_update","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"RRD database file name. This database will be updated."},{"type":"array","var":"$options","beh":0,"desc":"Options for updating the RRD database. This is list of strings. See man page of rrd update for whole list of options."}],"ret_type":"bool"}]},"rrd_version":{"desc":"Gets information about underlying rrdtool library","long_desc":"Returns information about underlying rrdtool library.","ver":"PECL rrd >= 1.0.0","ret_desc":"String with rrdtool version number e.g. \"1.4.3\".","url":"function.rrd-version","name":"rrd_version","params":[{"list":[],"ret_type":"string"}]},"rrd_xport":{"desc":"Exports the information about RRD database.","long_desc":"Exports the information about RRD database file. This data can be converted to XML file via user space PHP script and then restored back as RRD database file.","ver":"PECL rrd >= 0.9.0","ret_desc":"Array with information about RRD database file, FALSE when error occurs.","url":"function.rrd-xport","name":"rrd_xport","params":[{"list":[],"ret_type":"array"}]},"rsort":{"desc":"Sort an array in reverse order","long_desc":"This function sorts an array in reverse order (highest to lowest).","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.rsort","name":"rsort","params":[{"list":[{"type":"array","var":"&$array","beh":0,"desc":"The input array."},{"type":"int","var":"$sort_flags","beh":0,"desc":"You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().","def":"SORT_REGULAR"}],"ret_type":"bool"}]},"rtrim":{"desc":"Strip whitespace (or other characters) from the end of a string","long_desc":"This function returns a string with whitespace stripped from the end of str. Without the second parameter, rtrim() will strip these characters:","ver":"PHP 4, PHP 5","ret_desc":"Returns the modified string.","seealso":[],"url":"function.rtrim","name":"rtrim","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The input string."},{"type":"string","var":"$charlist","beh":1,"desc":"You can also specify the characters you want to strip, by means of the charlist parameter. Simply list all characters that you want to be stripped. With .. you can specify a range of characters."}],"ret_type":"string"}]},"runkit_class_adopt":{"desc":"Convert a base class to an inherited class, add ancestral methods when appropriate","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-class-adopt","name":"runkit_class_adopt","params":[{"list":[{"type":"string","var":"$classname","beh":0,"desc":"Name of class to be adopted"},{"type":"string","var":"$parentname","beh":0,"desc":"Parent class which child class is extending"}],"ret_type":"bool"}]},"runkit_class_emancipate":{"desc":"Convert an inherited class to a base class, removes any method whose scope is ancestral","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-class-emancipate","name":"runkit_class_emancipate","params":[{"list":[],"ret_type":"bool"}]},"runkit_constant_add":{"desc":"Similar to define(), but allows defining in class definitions as well","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-constant-add","name":"runkit_constant_add","params":[{"list":[{"type":"string","var":"$constname","beh":0,"desc":"Name of constant to declare. Either a string to indicate a global constant, or classname::constname to indicate a class constant."},{"type":"mixed","var":"$value","beh":0,"desc":"NULL, Bool, Long, Double, String, or Resource value to store in the new constant."}],"ret_type":"bool"}]},"runkit_constant_redefine":{"desc":"Redefine an already defined constant","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-constant-redefine","name":"runkit_constant_redefine","params":[{"list":[{"type":"string","var":"$constname","beh":0,"desc":"Constant to redefine. Either string indicating global constant, or classname::constname indicating class constant."},{"type":"mixed","var":"$newvalue","beh":0,"desc":"New value to assign to constant."}],"ret_type":"bool"}]},"runkit_constant_remove":{"desc":"Remove\/Delete an already defined constant","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-constant-remove","name":"runkit_constant_remove","params":[{"list":[],"ret_type":"bool"}]},"runkit_function_add":{"desc":"Add a new function, similar to create_function()","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-function-add","name":"runkit_function_add","params":[{"list":[{"type":"string","var":"$funcname","beh":0,"desc":"Name of function to be created"},{"type":"string","var":"$arglist","beh":0,"desc":"Comma separated argument list"},{"type":"string","var":"$code","beh":1,"desc":"Code making up the function"}],"ret_type":"bool"}]},"runkit_function_copy":{"desc":"Copy a function to a new function name","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-function-copy","name":"runkit_function_copy","params":[{"list":[{"type":"string","var":"$funcname","beh":0,"desc":"Name of existing function"},{"type":"string","var":"$targetname","beh":0,"desc":"Name of new function to copy definition to"}],"ret_type":"bool"}]},"runkit_function_redefine":{"desc":"Replace a function definition with a new implementation","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-function-redefine","name":"runkit_function_redefine","params":[{"list":[{"type":"string","var":"$funcname","beh":0,"desc":"Name of function to redefine"},{"type":"string","var":"$arglist","beh":0,"desc":"New list of arguments to be accepted by function"},{"type":"string","var":"$code","beh":1,"desc":"New code implementation"}],"ret_type":"bool"}]},"runkit_function_remove":{"desc":"Remove a function definition","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-function-remove","name":"runkit_function_remove","params":[{"list":[],"ret_type":"bool"}]},"runkit_function_rename":{"desc":"Change a function's name","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-function-rename","name":"runkit_function_rename","params":[{"list":[{"type":"string","var":"$funcname","beh":0,"desc":"Current function name"},{"type":"string","var":"$newname","beh":0,"desc":"New function name"}],"ret_type":"bool"}]},"runkit_import":{"desc":"Process a PHP file importing function and class definitions, overwriting where appropriate","long_desc":"Similar to include() however any code residing outside of a function or class is simply ignored. Additionally, depending on the value of flags, any functions or classes which already exist in the currently running environment will be automatically overwritten by their new definitions.","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.runkit-import","name":"runkit_import","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"Filename to import function and class definitions from"},{"type":"int","var":"$flags","beh":0,"desc":"Bitwise OR of the RUNKIT_IMPORT_* family of constants.","def":"RUNKIT_IMPORT_CLASS_METHODS"}],"ret_type":"bool"}]},"runkit_lint":{"desc":"Check the PHP syntax of the specified php code","long_desc":"The runkit_lint() function performs a syntax (lint) check on the specified php code testing for scripting errors. This is similar to using php -l from the command line except runkit_lint() accepts actual code rather than a filename.","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-lint","name":"runkit_lint","params":[{"list":[],"ret_type":"bool"}]},"runkit_lint_file":{"desc":"Check the PHP syntax of the specified file","long_desc":"The runkit_lint_file() function performs a syntax (lint) check on the specified filename testing for scripting errors. This is similar to using php -l from the commandline.","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-lint-file","name":"runkit_lint_file","params":[{"list":[],"ret_type":"bool"}]},"runkit_method_add":{"desc":"Dynamically adds a new method to a given class","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-method-add","name":"runkit_method_add","params":[{"list":[{"type":"string","var":"$classname","beh":0,"desc":"The class to which this method will be added"},{"type":"string","var":"$methodname","beh":1,"desc":"The name of the method to add"},{"type":"string","var":"$args","beh":1,"desc":"Comma-delimited list of arguments for the newly-created method"},{"type":"string","var":"$code","beh":1,"desc":"The code to be evaluated when methodname is called"},{"type":"int","var":"$flags","beh":1,"desc":"The type of method to create, can be RUNKIT_ACC_PUBLIC, RUNKIT_ACC_PROTECTED or RUNKIT_ACC_PRIVATE","def":"RUNKIT_ACC_PUBLIC"}],"ret_type":"bool"}]},"runkit_method_copy":{"desc":"Copies a method from class to another","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-method-copy","name":"runkit_method_copy","params":[{"list":[{"type":"string","var":"$dClass","beh":0,"desc":"Destination class for copied method"},{"type":"string","var":"$dMethod","beh":1,"desc":"Destination method name"},{"type":"string","var":"$sClass","beh":1,"desc":"Source class of the method to copy"},{"type":"string","var":"$sMethod","beh":1,"desc":"Name of the method to copy from the source class. If this parameter is omitted, the value of dMethod is assumed."}],"ret_type":"bool"}]},"runkit_method_redefine":{"desc":"Dynamically changes the code of the given method","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-method-redefine","name":"runkit_method_redefine","params":[{"list":[{"type":"string","var":"$classname","beh":0,"desc":"The class in which to redefine the method"},{"type":"string","var":"$methodname","beh":1,"desc":"The name of the method to redefine"},{"type":"string","var":"$args","beh":1,"desc":"Comma-delimited list of arguments for the redefined method"},{"type":"string","var":"$code","beh":1,"desc":"The new code to be evaluated when methodname is called"},{"type":"int","var":"$flags","beh":1,"desc":"The redefined method can be RUNKIT_ACC_PUBLIC, RUNKIT_ACC_PROTECTED or RUNKIT_ACC_PRIVATE","def":"RUNKIT_ACC_PUBLIC"}],"ret_type":"bool"}]},"runkit_method_remove":{"desc":"Dynamically removes the given method","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-method-remove","name":"runkit_method_remove","params":[{"list":[{"type":"string","var":"$classname","beh":0,"desc":"The class in which to remove the method"},{"type":"string","var":"$methodname","beh":0,"desc":"The name of the method to remove"}],"ret_type":"bool"}]},"runkit_method_rename":{"desc":"Dynamically changes the name of the given method","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.runkit-method-rename","name":"runkit_method_rename","params":[{"list":[{"type":"string","var":"$classname","beh":0,"desc":"The class in which to rename the method"},{"type":"string","var":"$methodname","beh":0,"desc":"The name of the method to rename"},{"type":"string","var":"$newname","beh":1,"desc":"The new name to give to the renamed method"}],"ret_type":"bool"}]},"runkit_return_value_used":{"desc":"Determines if the current functions return value will be used","ver":"PECL runkit >= 0.8.0","ret_desc":"Returns TRUE if the function's return value is used by the calling scope, otherwise FALSE","url":"function.runkit-return-value-used","name":"runkit_return_value_used","params":[{"list":[],"ret_type":"bool"}]},"runkit_sandbox_output_handler":{"desc":"Specify a function to capture and\/or process output from a runkit sandbox","long_desc":"Ordinarily, anything output (such as with echo() or print()) will be output as though it were printed from the parent's scope. Using runkit_sandbox_output_handler() however, output generated by the sandbox (including errors), can be captured by a function outside of the sandbox.","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns the name of the previously defined output handler callback, or FALSE if no handler was previously defined.","url":"function.runkit-sandbox-output-handler","name":"runkit_sandbox_output_handler","params":[{"list":[{"type":"object","var":"$sandbox","beh":0,"desc":"Object instance of Runkit_Sandbox class on which to set output handling."},{"type":"mixed","var":"$callback","beh":1,"desc":"Name of a function which expects one parameter. Output generated by sandbox will be passed to this callback. Anything returned by the callback will be displayed normally. If this parameter is not passed then output handling will not be changed. If a non-truth value is passed, output handling will be disabled and will revert to direct display."}],"ret_type":"mixed"}]},"runkit_superglobals":{"desc":"Return numerically indexed array of registered superglobals","ver":"PECL runkit >= 0.7.0","ret_desc":"Returns a numerically indexed array of the currently registered superglobals. i.e. _GET, _POST, _REQUEST, _COOKIE, _SESSION, _SERVER, _ENV, _FILES","seealso":[],"url":"function.runkit-superglobals","name":"runkit_superglobals","params":[{"list":[],"ret_type":"array"}]},"samconnection":{"name":"SAMConnection","class":"SAMConnection"},"scandir":{"desc":"List files and directories inside the specified path","long_desc":"Returns an array of files and directories from the directory.","ver":"PHP 5","ret_desc":"Returns an array of filenames on success, or FALSE on failure. If directory is not a directory, then boolean FALSE is returned, and an error of level E_WARNING is generated.","seealso":[],"url":"function.scandir","name":"scandir","params":[{"list":[{"type":"string","var":"$directory","beh":1,"desc":"The directory that will be scanned."},{"type":"int","var":"$sorting_order","beh":1,"desc":"By default, the sorted order is alphabetical in ascending order. If the optional sorting_order is set to SCANDIR_SORT_DESCENDING, then the sort order is alphabetical in descending order. If it is set to SCANDIR_SORT_NONE then the result is unsorted.","def":"SCANDIR_SORT_ASCENDING"},{"type":"resource","var":"$context","beh":1,"desc":"For a description of the context parameter, refer to the streams section of the manual."}],"ret_type":"array"}]},"seekableiterator":{"name":"SeekableIterator","class":"SeekableIterator"},"sem_acquire":{"desc":"Acquire a semaphore","long_desc":"sem_acquire() blocks (if necessary) until the semaphore can be acquired. A process attempting to acquire a semaphore which it has already acquired will block forever if acquiring the semaphore would cause its maximum number of semaphore to be exceeded. After processing a request, any semaphores acquired by the process but not explicitly released will be released automatically and a warning will be generated.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sem-acquire","name":"sem_acquire","params":[{"list":[],"ret_type":"bool"}]},"sem_get":{"desc":"Get a semaphore id","long_desc":"sem_get() returns an id that can be used to access the System V semaphore with the given key. A second call to sem_get() for the same key will return a different semaphore identifier, but both identifiers access the same underlying semaphore.","ver":"PHP 4, PHP 5","ret_desc":"Returns a positive semaphore identifier on success, or FALSE on error.","seealso":[],"url":"function.sem-get","name":"sem_get","params":[{"list":[{"type":"int","var":"$key","beh":1,"desc":""},{"type":"int","var":"$max_acquire","beh":1,"desc":"The number of processes that can acquire the semaphore simultaneously is set to max_acquire.","def":1},{"type":"int","var":"$perm","beh":1,"desc":"The semaphore permissions. Actually this value is set only if the process finds it is the only process currently attached to the semaphore.","def":666},{"type":"int","var":"$auto_release","beh":1,"desc":"Specifies if the semaphore should be automatically released on request shutdown.","def":1}],"ret_type":"resource"}]},"sem_release":{"desc":"Release a semaphore","long_desc":"sem_release() releases the semaphore if it is currently acquired by the calling process, otherwise a warning is generated. After releasing the semaphore, sem_acquire() may be called to re-acquire it.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sem-release","name":"sem_release","params":[{"list":[],"ret_type":"bool"}]},"sem_remove":{"desc":"Remove a semaphore","long_desc":"sem_remove() removes the given semaphore. After removing the semaphore, it is no longer accessible.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sem-remove","name":"sem_remove","params":[{"list":[],"ret_type":"bool"}]},"serialize":{"desc":"Generates a storable representation of a value","long_desc":"Generates a storable representation of a value This is useful for storing or passing PHP values around without losing their type and structure. To make the serialized string into a PHP value again, use unserialize().","ver":"PHP 4, PHP 5","ret_desc":"Returns a string containing a byte-stream representation of value that can be stored anywhere.","seealso":[],"url":"function.serialize","name":"serialize","params":[{"list":[],"ret_type":"string"}]},"session_cache_expire":{"desc":"Return current cache expire","long_desc":"session_cache_expire() returns the current setting of session.cache_expire. The cache expire is reset to the default value of 180 stored in session.cache_expire at request startup time. Thus, you need to call session_cache_expire() for every request (and before session_start() is called).","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns the current setting of session.cache_expire. The value returned should be read in minutes, defaults to 180.","seealso":[],"url":"function.session-cache-expire","name":"session_cache_expire","params":[{"list":[],"ret_type":"int"}]},"session_cache_limiter":{"desc":"Get and\/or set the current cache limiter","long_desc":"session_cache_limiter() returns the name of the current cache limiter. The cache limiter defines which cache control HTTP headers are sent to the client. These headers determine the rules by which the page content may be cached by the client and intermediate proxies. Setting the cache limiter to nocache disallows any client\/proxy caching. A value of public permits caching by proxies and the client, whereas private disallows caching by proxies and permits the client to cache the contents. In private mode, the Expire header sent to the client may cause confusion for some browsers, including Mozilla. You can avoid this problem by using private_no_expire mode. The Expire header is never sent to the client in this mode. Setting the cache limiter to '' will turn off automatic sending of cache headers entirely. The cache limiter is reset to the default value stored in session.cache_limiter at request startup time. Thus, you need to call session_cache_limiter() for every request (and before session_start() is called).","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"Returns the name of the current cache limiter.","seealso":[],"url":"function.session-cache-limiter","name":"session_cache_limiter","params":[{"list":[],"ret_type":"string"}]},"session_commit":{"desc":"Alias of session_write_close()","long_desc":"This function is an alias of: session_write_close().","ver":"PHP 4 >= 4.4.0, PHP 5","url":"function.session-commit","name":"session_commit","params":[]},"session_decode":{"desc":"Decodes session data from a session encoded string","long_desc":"session_decode() decodes the serialized session data provided in $data, and populates the $_SESSION superglobal with the result. Please note the unserialization method is not the same as unserialize(). The serialization method is internal to PHP can can be set using session.serialize_handler.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.session-decode","name":"session_decode","params":[{"list":[],"ret_type":"bool"}]},"session_destroy":{"desc":"Destroys all data registered to a session","long_desc":"session_destroy() destroys all of the data associated with the current session. It does not unset any of the global variables associated with the session, or unset the session cookie. To use the session variables again, session_start() has to be called. In order to kill the session altogether, like to log the user out, the session id must also be unset. If a cookie is used to propagate the session id (default behavior), then the session cookie must be deleted. setcookie() may be used for that.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.session-destroy","name":"session_destroy","params":[{"list":[],"ret_type":"bool"}]},"session_encode":{"desc":"Encodes the current session data as a session encoded string","long_desc":"session_encode() returns a serialized string of the contents of the current session data stored in the $_SESSION superglobal. Please note the serialization method is not the same as serialize(). The serialization method is internal to PHP can can be set using session.serialize_handler.","ver":"PHP 4, PHP 5","ret_desc":"Returns the contents of the current session encoded.","seealso":[],"url":"function.session-encode","name":"session_encode","params":[{"list":[],"ret_type":"string"}]},"session_get_cookie_params":{"desc":"Get the session cookie parameters","long_desc":"Gets the session cookie parameters.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array with the current session cookie information, the array contains the following items:","seealso":[],"url":"function.session-get-cookie-params","name":"session_get_cookie_params","params":[{"list":[],"ret_type":"array"}]},"session_id":{"desc":"Get and\/or set the current session id","long_desc":"session_id() is used to get or set the session id for the current session. The constant SID can also be used to retrieve the current name and session id as a string suitable for adding to URLs. See also Session handling.","ver":"PHP 4, PHP 5","ret_desc":"session_id() returns the session id for the current session or the empty string (\"\") if there is no current session (no current session id exists).","seealso":[],"url":"function.session-id","name":"session_id","params":[{"list":[],"ret_type":"string"}]},"session_is_registered":{"desc":"Find out whether a global variable is registered in a session","long_desc":"Finds out whether a global variable is registered in a session.","ver":"PHP 4, PHP 5 < 5.4.0","ret_desc":"session_is_registered() returns TRUE if there is a global variable with the name name registered in the current session, FALSE otherwise.","url":"function.session-is-registered","name":"session_is_registered","params":[{"list":[],"ret_type":"bool"}]},"session_module_name":{"desc":"Get and\/or set the current session module","long_desc":"session_module_name() gets the name of the current session module.","ver":"PHP 4, PHP 5","ret_desc":"Returns the name of the current session module.","url":"function.session-module-name","name":"session_module_name","params":[{"list":[],"ret_type":"string"}]},"session_name":{"desc":"Get and\/or set the current session name","long_desc":"session_name() returns the name of the current session. If name is given, session_name() will update the session name and return the old session name. The session name is reset to the default value stored in session.name at request startup time. Thus, you need to call session_name() for every request (and before session_start() or session_register() are called).","ver":"PHP 4, PHP 5","ret_desc":"Returns the name of the current session.","seealso":[],"url":"function.session-name","name":"session_name","params":[{"list":[],"ret_type":"string"}]},"session_pgsql_add_error":{"desc":"Increments error counts and sets last error message","ver":"PECL session_pgsql SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.session-pgsql-add-error","name":"session_pgsql_add_error","params":[{"list":[{"type":"int","var":"$error_level","beh":0,"desc":""},{"type":"string","var":"$error_message","beh":1,"desc":""}],"ret_type":"bool"}]},"session_pgsql_get_error":{"desc":"Returns number of errors and last error message","long_desc":"Get the number of errors and optional the error messages.","ver":"PECL session_pgsql SVN","ret_desc":"The number of errors are returned as array.","seealso":[],"url":"function.session-pgsql-get-error","name":"session_pgsql_get_error","params":[{"list":[],"ret_type":"array"}]},"session_pgsql_get_field":{"desc":"Get custom field value","ver":"PECL session_pgsql SVN","seealso":[],"url":"function.session-pgsql-get-field","name":"session_pgsql_get_field","params":[{"list":[],"ret_type":"string"}]},"session_pgsql_reset":{"desc":"Reset connection to session database servers","long_desc":"Reset the connection to the session database servers.","ver":"PECL session_pgsql SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.session-pgsql-reset","name":"session_pgsql_reset","params":[{"list":[],"ret_type":"bool"}]},"session_pgsql_set_field":{"desc":"Set custom field value","ver":"PECL session_pgsql SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.session-pgsql-set-field","name":"session_pgsql_set_field","params":[{"list":[],"ret_type":"bool"}]},"session_pgsql_status":{"desc":"Get current save handler status","ver":"PECL session_pgsql SVN","url":"function.session-pgsql-status","name":"session_pgsql_status","params":[{"list":[],"ret_type":"array"}]},"session_regenerate_id":{"desc":"Update the current session id with a newly generated one","long_desc":"session_regenerate_id() will replace the current session id with a new one, and keep the current session information.","ver":"PHP 4 >= 4.3.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.session-regenerate-id","name":"session_regenerate_id","params":[{"list":[],"ret_type":"bool"}]},"session_register":{"desc":"Register one or more global variables with the current session","long_desc":"session_register() accepts a variable number of arguments, any of which can be either a string holding the name of a variable or an array consisting of variable names or other arrays. For each name, session_register() registers the global variable with that name in the current session. You can also create a session variable by simply setting the appropriate member of the $_SESSION or $HTTP_SESSION_VARS (PHP < 4.1.0) array. If session_start() was not called before this function is called, an implicit call to session_start() with no parameters will be made. $_SESSION does not mimic this behavior and requires session_start() before use.","ver":"PHP 4, PHP 5 < 5.4.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.session-register","name":"session_register","params":[{"list":[{"type":"mixed","var":"$name","beh":0,"desc":"A string holding the name of a variable or an array consisting of variable names or other arrays."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"bool"}]},"session_register_shutdown":{"desc":"Session shutdown function","long_desc":"Registers session_write_close() as a shutdown function.","ver":"PHP >=5.4.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.session-register-shutdown","name":"session_register_shutdown","params":[{"list":[],"ret_type":"void"}]},"session_save_path":{"desc":"Get and\/or set the current session save path","long_desc":"session_save_path() returns the path of the current directory used to save session data.","ver":"PHP 4, PHP 5","ret_desc":"Returns the path of the current directory used for data storage.","seealso":[],"url":"function.session-save-path","name":"session_save_path","params":[{"list":[],"ret_type":"string"}]},"session_set_cookie_params":{"desc":"Set the session cookie parameters","long_desc":"Set cookie parameters defined in the php.ini file. The effect of this function only lasts for the duration of the script. Thus, you need to call session_set_cookie_params() for every request and before session_start() is called. This function updates the runtime ini values of the corresponding PHP ini configuration keys which can be retrieved with the ini_get().","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.session-set-cookie-params","name":"session_set_cookie_params","params":[{"list":[{"type":"int","var":"$lifetime","beh":1,"desc":"Lifetime of the session cookie, defined in seconds."},{"type":"string","var":"$path","beh":1,"desc":"Path on the domain where the cookie will work. Use a single slash ('\/') for all paths on the domain."},{"type":"string","var":"$domain","beh":1,"desc":"Cookie domain, for example 'www.php.net'. To make cookies visible on all subdomains then the domain must be prefixed with a dot like '.php.net'."},{"type":"bool","var":"$secure","beh":1,"desc":"If TRUE cookie will only be sent over secure connections.","def":"false"},{"type":"bool","var":"$httponly","beh":1,"desc":"If set to TRUE then PHP will attempt to send the httponly flag when setting the session cookie.","def":"false"}],"ret_type":"void"}]},"session_set_save_handler":{"desc":"Sets user-level session storage functions","long_desc":"Since PHP 5.4 it is possible to register the following prototype: session_set_save_handler() sets the user-level session storage functions which are used for storing and retrieving data associated with a session. This is most useful when a storage method other than those supplied by PHP sessions is preferred. i.e. Storing the session data in a local database.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.session-set-save-handler","name":"session_set_save_handler","params":[{"list":[{"type":"callable","var":"$open","beh":0,"desc":"An instance of a class implementing SessionHandlerInterface, such as SessionHandler, to register as the session handler. Since PHP 5.4 only."},{"type":"callable","var":"$close","beh":0,"desc":"Register session_write_close() as a register_shutdown_function() function."},{"type":"callable","var":"$read","beh":1,"desc":"The open callback works like a constructor in classes and is executed when the session is being opened. It is the first callback function executed when the session is started automatically or manually with session_start(). Return value is TRUE for success, FALSE for failure."},{"type":"callable","var":"$write","beh":1,"desc":"The close callback works like a destructor in classes and is executed after the session write callback has been called. It is also invoked when session_write_close() is called. Return value should be TRUE for success, FALSE for failure."},{"type":"callable","var":"$destroy","beh":1,"desc":"The read callback must always return a session encoded (serialized) string, or an empty string if there is no data to read. This callback is called internally by PHP when the session starts or when session_start() is called. Before this callback is invoked PHP will invoke the open callback. The value this callback returns must be in exactly the same serialized format that was originally passed for storage to the write callback. The value returned will be unserialized automatically by PHP and used to populate the $_SESSION superglobal. While the data looks similar to serialize() please note it is a different format which is speficied in the session.serialize_handler ini setting."},{"type":"callable","var":"$gc","beh":1,"desc":"The write callback is called when the session needs to be saved and closed. This callback receives the current session ID a serialized version the $_SESSION superglobal. The serialization method used internally by PHP is specified in the session.serialize_handler ini setting. The serialized session data passed to this callback should be stored against the passed session ID. When retrieving this data, the read callback must return the exact value that was originally passed to the write callback. This callback is invoked when PHP shuts down or explicitly when session_write_close() is called. Note that after executing this function PHP will internally execute the close callback."}],"ret_type":"bool"},{"list":[{"type":"SessionHandlerInterface","var":"$sessionhandler","beh":0,"desc":"An instance of a class implementing SessionHandlerInterface, such as SessionHandler, to register as the session handler. Since PHP 5.4 only."},{"type":"bool","var":"$register_shutdown","beh":0,"desc":"Register session_write_close() as a register_shutdown_function() function.","def":"true"}],"ret_type":"bool"}]},"session_start":{"desc":"Start new or resume existing session","long_desc":"session_start() creates a session or resumes the current one based on a session identifier passed via a GET or POST request, or passed via a cookie. When session_start() is called or when a session auto starts, PHP will call the open and read session save handlers. These will either be a built-in save handler provided by default or by PHP extensions (such as SQLite or Memcached); or can be custom handler as defined by session_set_save_handler(). The read callback will retrieve any existing session data (stored in a special serialized format) and will be unserialized and used to automatically populate the $_SESSION superglobal when the read callback returns the saved session data back to PHP session handling. To use a named session, call session_name() before calling session_start(). When session.use_trans_sid is enabled, the session_start() function will register an internal output handler for URL rewriting. If a user uses ob_gzhandler or similar with ob_start(), the function order is important for proper output. For example, ob_gzhandler must be registered before starting the session.","ver":"PHP 4, PHP 5","ret_desc":"This function returns TRUE if a session was successfully started, otherwise FALSE.","seealso":[],"url":"function.session-start","name":"session_start","params":[{"list":[],"ret_type":"bool"}]},"session_status":{"desc":"Returns the current session status","long_desc":"session_status() is used to return the current session status.","ver":"PHP >=5.4.0","ret_desc":"","seealso":[],"url":"function.session-status","name":"session_status","params":[{"list":[],"ret_type":"int"}]},"session_unregister":{"desc":"Unregister a global variable from the current session","long_desc":"session_unregister() unregisters the global variable named name from the current session.","ver":"PHP 4, PHP 5 < 5.4.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.session-unregister","name":"session_unregister","params":[{"list":[],"ret_type":"bool"}]},"session_unset":{"desc":"Free all session variables","long_desc":"The session_unset() function frees all session variables currently registered.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","url":"function.session-unset","name":"session_unset","params":[{"list":[],"ret_type":"void"}]},"session_write_close":{"desc":"Write session data and end session","long_desc":"End the current session and store session data. Session data is usually stored after your script terminated without the need to call session_write_close(), but as session data is locked to prevent concurrent writes only one script may operate on a session at any time. When using framesets together with sessions you will experience the frames loading one by one due to this locking. You can reduce the time needed to load all the frames by ending the session as soon as all changes to session variables are done.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.session-write-close","name":"session_write_close","params":[{"list":[],"ret_type":"void"}]},"set_error_handler":{"desc":"Sets a user-defined error handler function","long_desc":"Sets a user function (error_handler) to handle errors in a script. This function can be used for defining your own way of handling errors during runtime, for example in applications in which you need to do cleanup of data\/files when a critical error happens, or when you need to trigger an error under certain conditions (using trigger_error()). It is important to remember that the standard PHP error handler is completely bypassed for the error types specified by error_types unless the callback function returns FALSE. error_reporting() settings will have no effect and your error handler will be called regardless - however you are still able to read the current value of error_reporting and act appropriately. Of particular note is that this value will be 0 if the statement that caused the error was prepended by the @ error-control operator. Also note that it is your responsibility to die() if necessary. If the error-handler function returns, script execution will continue with the next statement after the one that caused an error. The following error types cannot be handled with a user defined function: E_ERROR, E_PARSE, E_CORE_ERROR, E_CORE_WARNING, E_COMPILE_ERROR, E_COMPILE_WARNING, and most of E_STRICT raised in the file where set_error_handler() is called. If errors occur before the script is executed (e.g. on file uploads) the custom error handler cannot be called since it is not registered at that time.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns a string containing the previously defined error handler (if any). If the built-in error handler is used NULL is returned. NULL is also returned in case of an error such as an invalid callback. If the previous error handler was a class method, this function will return an indexed array with the class and the method name.","seealso":[],"url":"function.set-error-handler","name":"set_error_handler","params":[{"list":[{"type":"callable","var":"$error_handler","beh":0,"desc":"The user function needs to accept two parameters: the error code, and a string describing the error. Then there are three optional parameters that may be supplied: the filename in which the error occurred, the line number in which the error occurred, and the context in which the error occurred (an array that points to the active symbol table at the point the error occurred). The function can be shown as: If the function returns FALSE then the normal error handler continues."},{"type":"int","var":"$error_types","beh":0,"desc":"","def":"E_ALL | E_STRICT"}],"ret_type":"mixed"},{"list":[{"type":"int","var":"$errno","beh":1,"desc":"The user function needs to accept two parameters: the error code, and a string describing the error. Then there are three optional parameters that may be supplied: the filename in which the error occurred, the line number in which the error occurred, and the context in which the error occurred (an array that points to the active symbol table at the point the error occurred). The function can be shown as: If the function returns FALSE then the normal error handler continues."},{"type":"string","var":"$errstr","beh":1,"desc":""},{"type":"string","var":"$errfile","beh":1,"desc":""},{"type":"int","var":"$errline","beh":1,"desc":""},{"type":"array","var":"$errcontext","beh":1,"desc":""}]}]},"set_exception_handler":{"desc":"Sets a user-defined exception handler function","long_desc":"Sets the default exception handler if an exception is not caught within a try\/catch block. Execution will stop after the exception_handler is called.","ver":"PHP 5","ret_desc":"Returns the name of the previously defined exception handler, or NULL on error. If no previous handler was defined, NULL is also returned. If NULL is passed, resetting the handler to its default state, TRUE is returned.","seealso":[],"url":"function.set-exception-handler","name":"set_exception_handler","params":[{"list":[],"ret_type":"callable"}]},"set_file_buffer":{"desc":"Alias of stream_set_write_buffer()","long_desc":"This function is an alias of: stream_set_write_buffer().","ver":"PHP 4, PHP 5","url":"function.set-file-buffer","name":"set_file_buffer","params":[]},"set_include_path":{"desc":"Sets the include_path configuration option","long_desc":"Sets the include_path configuration option for the duration of the script.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the old include_path on success or FALSE on failure.","seealso":[],"url":"function.set-include-path","name":"set_include_path","params":[{"list":[],"ret_type":"string"}]},"set_magic_quotes_runtime":{"desc":"Sets the current active configuration setting of magic_quotes_runtime","long_desc":"Set the current active configuration setting of magic_quotes_runtime.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.set-magic-quotes-runtime","name":"set_magic_quotes_runtime","params":[{"list":[],"ret_type":"bool"}]},"set_socket_blocking":{"desc":"Alias of stream_set_blocking()","long_desc":"This function is an alias of: stream_set_blocking()","ver":"PHP 4, PHP 5","url":"function.set-socket-blocking","name":"set_socket_blocking","params":[]},"set_time_limit":{"desc":"Limits the maximum execution time","long_desc":"Set the number of seconds a script is allowed to run. If this is reached, the script returns a fatal error. The default limit is 30 seconds or, if it exists, the max_execution_time value defined in the php.ini. When called, set_time_limit() restarts the timeout counter from zero. In other words, if the timeout is the default 30 seconds, and 25 seconds into script execution a call such as set_time_limit(20) is made, the script will run for a total of 45 seconds before timing out.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.set-time-limit","name":"set_time_limit","params":[{"list":[],"ret_type":"void"}]},"setcookie":{"desc":"Send a cookie","long_desc":"setcookie() defines a cookie to be sent along with the rest of the HTTP headers. Like other headers, cookies must be sent before any output from your script (this is a protocol restriction). This requires that you place calls to this function prior to any output, including <html> and <head> tags as well as any whitespace. Once the cookies have been set, they can be accessed on the next page load with the $_COOKIE or $HTTP_COOKIE_VARS arrays. Note, superglobals such as $_COOKIE became available in PHP 4.1.0. Cookie values also exist in $_REQUEST.","ver":"PHP 4, PHP 5","ret_desc":"If output exists prior to calling this function, setcookie() will fail and return FALSE. If setcookie() successfully runs, it will return TRUE. This does not indicate whether the user accepted the cookie.","seealso":[],"url":"function.setcookie","name":"setcookie","params":[{"list":[{"type":"string","var":"$name","beh":1,"desc":"The name of the cookie."},{"type":"string","var":"$value","beh":1,"desc":"The value of the cookie. This value is stored on the clients computer; do not store sensitive information. Assuming the name is 'cookiename', this value is retrieved through $_COOKIE['cookiename']"},{"type":"int","var":"$expire","beh":1,"desc":"The time the cookie expires. This is a Unix timestamp so is in number of seconds since the epoch. In other words, you'll most likely set this with the time() function plus the number of seconds before you want it to expire. Or you might use mktime(). time()+60*60*24*30 will set the cookie to expire in 30 days. If set to 0, or omitted, the cookie will expire at the end of the session (when the browser closes).","def":0},{"type":"string","var":"$path","beh":1,"desc":"The path on the server in which the cookie will be available on. If set to '\/', the cookie will be available within the entire domain. If set to '\/foo\/', the cookie will only be available within the \/foo\/ directory and all sub-directories such as \/foo\/bar\/ of domain. The default value is the current directory that the cookie is being set in."},{"type":"string","var":"$domain","beh":1,"desc":"The domain that the cookie is available to. Setting the domain to 'www.example.com' will make the cookie available in the www subdomain and higher subdomains. Cookies available to a lower domain, such as 'example.com' will be available to higher subdomains, such as 'www.example.com'. Older browsers still implementing the deprecated \u00bb\u00a0RFC 2109 may require a leading . to match all subdomains."},{"type":"bool","var":"$secure","beh":1,"desc":"Indicates that the cookie should only be transmitted over a secure HTTPS connection from the client. When set to TRUE, the cookie will only be set if a secure connection exists. On the server-side, it's on the programmer to send this kind of cookie only on secure connection (e.g. with respect to $_SERVER[\"HTTPS\"]).","def":"false"},{"type":"bool","var":"$httponly","beh":1,"desc":"When TRUE the cookie will be made accessible only through the HTTP protocol. This means that the cookie won't be accessible by scripting languages, such as JavaScript. It has been suggested that this setting can effectively help to reduce identity theft through XSS attacks (although it is not supported by all browsers), but that claim is often disputed. Added in PHP 5.2.0. TRUE or FALSE","def":"false"}],"ret_type":"bool"}]},"setlocale":{"desc":"Set locale information","long_desc":"Sets locale information.","ver":"PHP 4, PHP 5","ret_desc":"Returns the new current locale, or FALSE if the locale functionality is not implemented on your platform, the specified locale does not exist or the category name is invalid.","url":"function.setlocale","name":"setlocale","params":[{"list":[{"type":"int","var":"$category","beh":0,"desc":"category is a named constant specifying the category of the functions affected by the locale setting:"},{"type":"string","var":"$locale","beh":1,"desc":"If locale is NULL or the empty string \"\", the locale names will be set from the values of environment variables with the same names as the above categories, or from \"LANG\". If locale is \"0\", the locale setting is not affected, only the current setting is returned. If locale is an array or followed by additional parameters then each array element or parameter is tried to be set as new locale until success. This is useful if a locale is known under different names on different systems or for providing a fallback for a possibly not available locale."},{"type":"string","var":"$...","beh":1,"desc":"(Optional string or array parameters to try as locale settings until success.)"}],"ret_type":"string"},{"list":[{"type":"int","var":"$category","beh":0,"desc":"category is a named constant specifying the category of the functions affected by the locale setting:"},{"type":"array","var":"$locale","beh":0,"desc":"If locale is NULL or the empty string \"\", the locale names will be set from the values of environment variables with the same names as the above categories, or from \"LANG\". If locale is \"0\", the locale setting is not affected, only the current setting is returned. If locale is an array or followed by additional parameters then each array element or parameter is tried to be set as new locale until success. This is useful if a locale is known under different names on different systems or for providing a fallback for a possibly not available locale."}],"ret_type":"string"}]},"setproctitle":{"desc":"Set the process title","long_desc":"Sets the process title of the current process.","ver":"PECL proctitle >= 0.1.0","ret_desc":"No value is returned.","seealso":[],"url":"function.setproctitle","name":"setproctitle","params":[{"list":[],"ret_type":"void"}]},"setrawcookie":{"desc":"Send a cookie without urlencoding the cookie value","long_desc":"setrawcookie() is exactly the same as setcookie() except that the cookie value will not be automatically urlencoded when sent to the browser.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.setrawcookie","name":"setrawcookie","params":[{"list":[{"type":"string","var":"$name","beh":1,"desc":""},{"type":"string","var":"$value","beh":1,"desc":""},{"type":"int","var":"$expire","beh":1,"desc":"","def":0},{"type":"string","var":"$path","beh":1,"desc":""},{"type":"string","var":"$domain","beh":1,"desc":""},{"type":"bool","var":"$secure","beh":1,"desc":"","def":"false"},{"type":"bool","var":"$httponly","beh":1,"desc":"","def":"false"}],"ret_type":"bool"}]},"setthreadtitle":{"desc":"Set the thread title","long_desc":"Sets the thread title.","ver":"PECL proctitle >= 0.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.setthreadtitle","name":"setthreadtitle","params":[{"list":[],"ret_type":"bool"}]},"settype":{"desc":"Set the type of a variable","long_desc":"Set the type of variable var to type.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.settype","name":"settype","params":[{"list":[{"type":"mixed","var":"&$var","beh":0,"desc":"The variable being converted."},{"type":"string","var":"$type","beh":0,"desc":"Possibles values of type are:"}],"ret_type":"bool"}]},"sha1":{"desc":"Calculate the sha1 hash of a string","long_desc":"Calculates the sha1 hash of str using the \u00bb\u00a0US Secure Hash Algorithm 1.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the sha1 hash as a string.","seealso":[],"url":"function.sha1","name":"sha1","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The input string."},{"type":"bool","var":"$raw_output","beh":0,"desc":"If the optional raw_output is set to TRUE, then the sha1 digest is instead returned in raw binary format with a length of 20, otherwise the returned value is a 40-character hexadecimal number.","def":"false"}],"ret_type":"string"}]},"sha1_file":{"desc":"Calculate the sha1 hash of a file","long_desc":"Calculates the sha1 hash of the file specified by filename using the \u00bb\u00a0US Secure Hash Algorithm 1, and returns that hash. The hash is a 40-character hexadecimal number.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns a string on success, FALSE otherwise.","seealso":[],"url":"function.sha1-file","name":"sha1_file","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The filename of the file to hash."},{"type":"bool","var":"$raw_output","beh":0,"desc":"When TRUE, returns the digest in raw binary format with a length of 20.","def":"false"}],"ret_type":"string"}]},"shell_exec":{"desc":"Execute command via shell and return the complete output as a string","long_desc":"This function is identical to the backtick operator.","ver":"PHP 4, PHP 5","ret_desc":"The output from the executed command or NULL if an error occurred.","seealso":[],"url":"function.shell-exec","name":"shell_exec","params":[{"list":[],"ret_type":"string"}]},"shm_attach":{"desc":"Creates or open a shared memory segment","long_desc":"shm_attach() returns an id that can be used to access the System V shared memory with the given key, the first call creates the shared memory segment with memsize and the optional perm-bits perm. A second call to shm_attach() for the same key will return a different shared memory identifier, but both identifiers access the same underlying shared memory. memsize and perm will be ignored.","ver":"PHP 4, PHP 5","ret_desc":"Returns a shared memory segment identifier.","seealso":[],"url":"function.shm-attach","name":"shm_attach","params":[{"list":[{"type":"int","var":"$key","beh":1,"desc":"A numeric shared memory segment ID"},{"type":"int","var":"$memsize","beh":1,"desc":"The memory size. If not provided, default to the sysvshm.init_mem in the php.ini, otherwise 10000 bytes."},{"type":"int","var":"$perm","beh":1,"desc":"The optional permission bits. Default to 0666.","def":666}],"ret_type":"resource"}]},"shm_detach":{"desc":"Disconnects from shared memory segment","long_desc":"shm_detach() disconnects from the shared memory given by the shm_identifier created by shm_attach(). Remember, that shared memory still exist in the Unix system and the data is still present.","ver":"PHP 4, PHP 5","ret_desc":"shm_detach() always returns TRUE.","seealso":[],"url":"function.shm-detach","name":"shm_detach","params":[{"list":[],"ret_type":"bool"}]},"shm_get_var":{"desc":"Returns a variable from shared memory","long_desc":"shm_get_var() returns the variable with a given variable_key, in the given shared memory segment. The variable is still present in the shared memory.","ver":"PHP 4, PHP 5","ret_desc":"Returns the variable with the given key.","seealso":[],"url":"function.shm-get-var","name":"shm_get_var","params":[{"list":[{"type":"resource","var":"$shm_identifier","beh":0,"desc":"Shared memory segment, obtained from shm_attach()."},{"type":"int","var":"$variable_key","beh":0,"desc":"The variable key."}],"ret_type":"mixed"}]},"shm_has_var":{"desc":"Check whether a specific entry exists","long_desc":"Checks whether a specific key exists inside a shared memory segment.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE if the entry exists, otherwise FALSE","seealso":[],"url":"function.shm-has-var","name":"shm_has_var","params":[{"list":[{"type":"resource","var":"$shm_identifier","beh":0,"desc":"Shared memory segment, obtained from shm_attach()."},{"type":"int","var":"$variable_key","beh":0,"desc":"The variable key."}],"ret_type":"bool"}]},"shm_put_var":{"desc":"Inserts or updates a variable in shared memory","long_desc":"shm_put_var() inserts or updates the variable with the given variable_key. Warnings (E_WARNING level) will be issued if shm_identifier is not a valid SysV shared memory index or if there was not enough shared memory remaining to complete your request.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.shm-put-var","name":"shm_put_var","params":[{"list":[{"type":"resource","var":"$shm_identifier","beh":0,"desc":"A shared memory resource handle as returned by shm_attach()"},{"type":"int","var":"$variable_key","beh":0,"desc":"The variable key."},{"type":"mixed","var":"$variable","beh":1,"desc":"The variable. All variable types that serialize() supports may be used: generally this means all types except for resources and some internal objects that cannot be serialized."}],"ret_type":"bool"}]},"shm_remove":{"desc":"Removes shared memory from Unix systems","long_desc":"shm_remove() removes the shared memory shm_identifier. All data will be destroyed.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.shm-remove","name":"shm_remove","params":[{"list":[],"ret_type":"bool"}]},"shm_remove_var":{"desc":"Removes a variable from shared memory","long_desc":"Removes a variable with a given variable_key and frees the occupied memory.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.shm-remove-var","name":"shm_remove_var","params":[{"list":[{"type":"resource","var":"$shm_identifier","beh":0,"desc":"The shared memory identifier as returned by shm_attach()"},{"type":"int","var":"$variable_key","beh":0,"desc":"The variable key."}],"ret_type":"bool"}]},"shmop_close":{"desc":"Close shared memory block","long_desc":"shmop_close() is used to close a shared memory block.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.shmop-close","name":"shmop_close","params":[{"list":[],"ret_type":"void"}]},"shmop_delete":{"desc":"Delete shared memory block","long_desc":"shmop_delete() is used to delete a shared memory block.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.shmop-delete","name":"shmop_delete","params":[{"list":[],"ret_type":"bool"}]},"shmop_open":{"desc":"Create or open shared memory block","long_desc":"shmop_open() can create or open a shared memory block.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"On success shmop_open() will return an id that you can use to access the shared memory segment you've created. FALSE is returned on failure.","seealso":[],"url":"function.shmop-open","name":"shmop_open","params":[{"list":[{"type":"int","var":"$key","beh":0,"desc":"System's id for the shared memory block. Can be passed as a decimal or hex."},{"type":"string","var":"$flags","beh":0,"desc":"The flags that you can use:"},{"type":"int","var":"$mode","beh":1,"desc":"The permissions that you wish to assign to your memory segment, those are the same as permission for a file. Permissions need to be passed in octal form, like for example 0644"},{"type":"int","var":"$size","beh":1,"desc":"The size of the shared memory block you wish to create in bytes"}],"ret_type":"int"}]},"shmop_read":{"desc":"Read data from shared memory block","long_desc":"shmop_read() will read a string from shared memory block.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns the data or FALSE on failure.","seealso":[],"url":"function.shmop-read","name":"shmop_read","params":[{"list":[{"type":"int","var":"$shmid","beh":0,"desc":"The shared memory block identifier created by shmop_open()"},{"type":"int","var":"$start","beh":0,"desc":"Offset from which to start reading"},{"type":"int","var":"$count","beh":1,"desc":"The number of bytes to read"}],"ret_type":"string"}]},"shmop_size":{"desc":"Get size of shared memory block","long_desc":"shmop_size() is used to get the size, in bytes of the shared memory block.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"Returns an int, which represents the number of bytes the shared memory block occupies.","url":"function.shmop-size","name":"shmop_size","params":[{"list":[],"ret_type":"int"}]},"shmop_write":{"desc":"Write data into shared memory block","long_desc":"shmop_write() will write a string into shared memory block.","ver":"PHP 4 >= 4.0.4, PHP 5","ret_desc":"The size of the written data, or FALSE on failure.","seealso":[],"url":"function.shmop-write","name":"shmop_write","params":[{"list":[{"type":"int","var":"$shmid","beh":0,"desc":"The shared memory block identifier created by shmop_open()"},{"type":"string","var":"$data","beh":0,"desc":"A string to write into shared memory block"},{"type":"int","var":"$offset","beh":1,"desc":"Specifies where to start writing data inside the shared memory segment."}],"ret_type":"int"}]},"show_source":{"desc":"Alias of highlight_file()","long_desc":"This function is an alias of: highlight_file().","ver":"PHP 4, PHP 5","url":"function.show-source","name":"show_source","params":[]},"shuffle":{"desc":"Shuffle an array","long_desc":"This function shuffles (randomizes the order of the elements in) an array.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.shuffle","name":"shuffle","params":[{"list":[],"ret_type":"bool"}]},"signeurlpaiement":{"desc":"Obtain the payment url (needs 2 arguments)","ver":"PECL spplus >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.signeurlpaiement","name":"signeurlpaiement","params":[{"list":[{"type":"string","var":"$clent","beh":0,"desc":""},{"type":"string","var":"$data","beh":0,"desc":""}],"ret_type":"string"}]},"similar_text":{"desc":"Calculate the similarity between two strings","long_desc":"This calculates the similarity between two strings as described in Oliver [1993]. Note that this implementation does not use a stack as in Oliver's pseudo code, but recursive calls which may or may not speed up the whole process. Note also that the complexity of this algorithm is O(N**3) where N is the length of the longest string.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of matching chars in both strings.","seealso":[],"url":"function.similar-text","name":"similar_text","params":[{"list":[{"type":"string","var":"$first","beh":0,"desc":"The first string."},{"type":"string","var":"$second","beh":1,"desc":"The second string."},{"type":"float","var":"&$percent","beh":1,"desc":"By passing a reference as third argument, similar_text() will calculate the similarity in percent for you."}],"ret_type":"int"}]},"simplexml_import_dom":{"desc":"Get a SimpleXMLElement object from a DOM node.","long_desc":"This function takes a node of a DOM document and makes it into a SimpleXML node. This new object can then be used as a native SimpleXML element.","ver":"PHP 5","ret_desc":"Returns a SimpleXMLElement or FALSE on failure.","seealso":[],"url":"function.simplexml-import-dom","name":"simplexml_import_dom","params":[{"list":[{"type":"DOMNode","var":"$node","beh":0,"desc":"A DOM Element node"},{"type":"string","var":"$class_name","beh":0,"desc":"You may use this optional parameter so that simplexml_import_dom() will return an object of the specified class. That class should extend the SimpleXMLElement class.","def":"\"SimpleXMLElement\""}],"ret_type":"SimpleXMLElement"}]},"simplexml_load_file":{"desc":"Interprets an XML file into an object","long_desc":"Convert the well-formed XML document in the given file to an object.","ver":"PHP 5","ret_desc":"Returns an object of class SimpleXMLElement with properties containing the data held within the XML document, or FALSE on failure.","seealso":[],"url":"function.simplexml-load-file","name":"simplexml_load_file","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"Path to the XML file"},{"type":"string","var":"$class_name","beh":1,"desc":"You may use this optional parameter so that simplexml_load_file() will return an object of the specified class. That class should extend the SimpleXMLElement class.","def":"\"SimpleXMLElement\""},{"type":"int","var":"$options","beh":1,"desc":"Since PHP 5.1.0 and Libxml 2.6.0, you may also use the options parameter to specify additional Libxml parameters.","def":0},{"type":"string","var":"$ns","beh":1,"desc":"Namespace prefix or URI.","def":"\"\""},{"type":"bool","var":"$is_prefix","beh":1,"desc":"TRUE if ns is a prefix, FALSE if it's a URI; defaults to FALSE.","def":"false"}],"ret_type":"SimpleXMLElement"}]},"simplexml_load_string":{"desc":"Interprets a string of XML into an object","long_desc":"Takes a well-formed XML string and returns it as an object.","ver":"PHP 5","ret_desc":"Returns an object of class SimpleXMLElement with properties containing the data held within the xml document, or FALSE on failure.","seealso":[],"url":"function.simplexml-load-string","name":"simplexml_load_string","params":[{"list":[{"type":"string","var":"$data","beh":1,"desc":"A well-formed XML string"},{"type":"string","var":"$class_name","beh":1,"desc":"You may use this optional parameter so that simplexml_load_string() will return an object of the specified class. That class should extend the SimpleXMLElement class.","def":"\"SimpleXMLElement\""},{"type":"int","var":"$options","beh":1,"desc":"Since PHP 5.1.0 and Libxml 2.6.0, you may also use the options parameter to specify additional Libxml parameters.","def":0},{"type":"string","var":"$ns","beh":1,"desc":"Namespace prefix or URI.","def":"\"\""},{"type":"bool","var":"$is_prefix","beh":1,"desc":"TRUE if ns is a prefix, FALSE if it's a URI; defaults to FALSE.","def":"false"}],"ret_type":"SimpleXMLElement"}]},"simplexmlelement":{"name":"SimpleXMLElement","class":"SimpleXMLElement"},"simplexmliterator":{"name":"SimpleXMLIterator","class":"SimpleXMLIterator"},"sin":{"desc":"Sine","long_desc":"sin() returns the sine of the arg parameter. The arg parameter is in radians.","ver":"PHP 4, PHP 5","ret_desc":"The sine of arg","seealso":[],"url":"function.sin","name":"sin","params":[{"list":[],"ret_type":"float"}]},"sinh":{"desc":"Hyperbolic sine","long_desc":"Returns the hyperbolic sine of arg, defined as (exp(arg) - exp(-arg))\/2.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"The hyperbolic sine of arg","seealso":[],"url":"function.sinh","name":"sinh","params":[{"list":[],"ret_type":"float"}]},"sizeof":{"desc":"Alias of count()","long_desc":"This function is an alias of: count().","ver":"PHP 4, PHP 5","url":"function.sizeof","name":"sizeof","params":[]},"sleep":{"desc":"Delay execution","long_desc":"Delays the program execution for the given number of seconds.","ver":"PHP 4, PHP 5","ret_desc":"Returns zero on success, or FALSE on error.","seealso":[],"url":"function.sleep","name":"sleep","params":[{"list":[],"ret_type":"int"}]},"snmp2_get":{"desc":"Fetch an SNMP object","long_desc":"The snmp2_get() function is used to read the value of an SNMP object specified by the object_id.","ver":"PHP 5 >= 5.2.0","ret_desc":"Returns SNMP object value on success or FALSE on error.","seealso":[],"url":"function.snmp2-get","name":"snmp2_get","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The SNMP agent."},{"type":"string","var":"$community","beh":1,"desc":"The read community."},{"type":"string","var":"$object_id","beh":1,"desc":"The SNMP object."},{"type":"string","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"string","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"string"}]},"snmp2_getnext":{"desc":"Fetch the SNMP object which follows the given object id","long_desc":"The snmp2_get_next() function is used to read the value of the SNMP object that follows the specified object_id.","ver":"PHP >= 5.2.0","ret_desc":"Returns SNMP object value on success or FALSE on error. In case of an error, an E_WARNING message is shown.","seealso":[],"url":"function.snmp2-getnext","name":"snmp2_getnext","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The hostname of the SNMP agent (server)."},{"type":"string","var":"$community","beh":1,"desc":"The read community."},{"type":"string","var":"$object_id","beh":1,"desc":"The SNMP object id which precedes the wanted one."},{"type":"string","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"string","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"string"}]},"snmp2_real_walk":{"desc":"Return all objects including their respective object ID within the specified one","long_desc":"The snmp2_real_walk() function is used to traverse over a number of SNMP objects starting from object_id and return not only their values but also their object ids.","ver":"PHP >= 5.2.0","ret_desc":"Returns an associative array of the SNMP object ids and their values on success or FALSE on error. In case of an error, an E_WARNING message is shown.","seealso":[],"url":"function.snmp2-real-walk","name":"snmp2_real_walk","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The hostname of the SNMP agent (server)."},{"type":"string","var":"$community","beh":1,"desc":"The read community."},{"type":"string","var":"$object_id","beh":1,"desc":"The SNMP object id which precedes the wanted one."},{"type":"string","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"string","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"array"}]},"snmp2_set":{"desc":"Set the value of an SNMP object","long_desc":"snmp2_set() is used to set the value of an SNMP object specified by the object_id.","ver":"PHP >= 5.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.snmp2-set","name":"snmp2_set","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The hostname of the SNMP agent (server)."},{"type":"string","var":"$community","beh":1,"desc":"The write community."},{"type":"string","var":"$object_id","beh":1,"desc":"The SNMP object id."},{"type":"string","var":"$type","beh":1,"desc":"The MIB defines the type of each object id. It has to be specified as a single character from the below list. If OPAQUE_SPECIAL_TYPES was defined while compiling the SNMP library, the following are also valid: Most of these will use the obvious corresponding ASN.1 type. 's', 'x', 'd' and 'b' are all different ways of specifying an OCTET STRING value, and the 'u' unsigned type is also used for handling Gauge32 values. If the MIB-Files are loaded by into the MIB Tree with \"snmp_read_mib\" or by specifying it in the libsnmp config, '=' may be used as the type parameter for all object ids as the type can then be automatically read from the MIB. Note that there are two ways to set a variable of the type BITS like e.g. \"SYNTAX BITS {telnet(0), ftp(1), http(2), icmp(3), snmp(4), ssh(5), https(6)}\": See examples section for more details."},{"type":"string","var":"$value","beh":1,"desc":"The new value."},{"type":"string","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"string","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"bool"}]},"snmp2_walk":{"desc":"Fetch all the SNMP objects from an agent","long_desc":"snmp2_walk() function is used to read all the values from an SNMP agent specified by the hostname.","ver":"PHP >= 5.2.0","ret_desc":"Returns an array of SNMP object values starting from the object_id as root or FALSE on error.","seealso":[],"url":"function.snmp2-walk","name":"snmp2_walk","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The SNMP agent (server)."},{"type":"string","var":"$community","beh":1,"desc":"The read community."},{"type":"string","var":"$object_id","beh":1,"desc":"If NULL, object_id is taken as the root of the SNMP objects tree and all objects under that tree are returned as an array. If object_id is specified, all the SNMP objects below that object_id are returned."},{"type":"string","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"string","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"array"}]},"snmp3_get":{"desc":"Fetch an SNMP object","long_desc":"The snmp3_get() function is used to read the value of an SNMP object specified by the object_id.","ver":"PHP 4, PHP 5","ret_desc":"Returns SNMP object value on success or FALSE on error.","seealso":[],"url":"function.snmp3-get","name":"snmp3_get","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The hostname of the SNMP agent (server)."},{"type":"string","var":"$sec_name","beh":1,"desc":"the security name, usually some kind of username"},{"type":"string","var":"$sec_level","beh":1,"desc":"the security level (noAuthNoPriv|authNoPriv|authPriv)"},{"type":"string","var":"$auth_protocol","beh":1,"desc":"the authentication protocol (MD5 or SHA)"},{"type":"string","var":"$auth_passphrase","beh":1,"desc":"the authentication pass phrase"},{"type":"string","var":"$priv_protocol","beh":1,"desc":"the privacy protocol (DES or AES)"},{"type":"string","var":"$priv_passphrase","beh":1,"desc":"the privacy pass phrase"},{"type":"string","var":"$object_id","beh":1,"desc":"The SNMP object id."},{"type":"string","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"string","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"string"}]},"snmp3_getnext":{"desc":"Fetch the SNMP object which follows the given object id","long_desc":"The snmp3_getnext() function is used to read the value of the SNMP object that follows the specified object_id.","ver":"PHP 5","ret_desc":"Returns SNMP object value on success or FALSE on error. In case of an error, an E_WARNING message is shown.","seealso":[],"url":"function.snmp3-getnext","name":"snmp3_getnext","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The hostname of the SNMP agent (server)."},{"type":"string","var":"$sec_name","beh":1,"desc":"the security name, usually some kind of username"},{"type":"string","var":"$sec_level","beh":1,"desc":"the security level (noAuthNoPriv|authNoPriv|authPriv)"},{"type":"string","var":"$auth_protocol","beh":1,"desc":"the authentication protocol (MD5 or SHA)"},{"type":"string","var":"$auth_passphrase","beh":1,"desc":"the authentication pass phrase"},{"type":"string","var":"$priv_protocol","beh":1,"desc":"the privacy protocol (DES or AES)"},{"type":"string","var":"$priv_passphrase","beh":1,"desc":"the privacy pass phrase"},{"type":"string","var":"$object_id","beh":1,"desc":"The SNMP object id."},{"type":"string","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"string","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"string"}]},"snmp3_real_walk":{"desc":"Return all objects including their respective object ID within the specified one","long_desc":"The snmp3_real_walk() function is used to traverse over a number of SNMP objects starting from object_id and return not only their values but also their object ids.","ver":"PHP 4, PHP 5","ret_desc":"Returns an associative array of the SNMP object ids and their values on success or FALSE on error. In case of an error, an E_WARNING message is shown.","seealso":[],"url":"function.snmp3-real-walk","name":"snmp3_real_walk","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The hostname of the SNMP agent (server)."},{"type":"string","var":"$sec_name","beh":1,"desc":"the security name, usually some kind of username"},{"type":"string","var":"$sec_level","beh":1,"desc":"the security level (noAuthNoPriv|authNoPriv|authPriv)"},{"type":"string","var":"$auth_protocol","beh":1,"desc":"the authentication protocol (MD5 or SHA)"},{"type":"string","var":"$auth_passphrase","beh":1,"desc":"the authentication pass phrase"},{"type":"string","var":"$priv_protocol","beh":1,"desc":"the privacy protocol (DES or AES)"},{"type":"string","var":"$priv_passphrase","beh":1,"desc":"the privacy pass phrase"},{"type":"string","var":"$object_id","beh":1,"desc":"The SNMP object id."},{"type":"string","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"string","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"array"}]},"snmp3_set":{"desc":"Set the value of an SNMP object","long_desc":"snmp3_set() is used to set the value of an SNMP object specified by the object_id. Even if the security level does not use an auth or priv protocol\/password valid values have to be specified.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.snmp3-set","name":"snmp3_set","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The hostname of the SNMP agent (server)."},{"type":"string","var":"$sec_name","beh":1,"desc":"the security name, usually some kind of username"},{"type":"string","var":"$sec_level","beh":1,"desc":"the security level (noAuthNoPriv|authNoPriv|authPriv)"},{"type":"string","var":"$auth_protocol","beh":1,"desc":"the authentication protocol (MD5 or SHA)"},{"type":"string","var":"$auth_passphrase","beh":1,"desc":"the authentication pass phrase"},{"type":"string","var":"$priv_protocol","beh":1,"desc":"the privacy protocol (DES or AES)"},{"type":"string","var":"$priv_passphrase","beh":1,"desc":"the privacy pass phrase"},{"type":"string","var":"$object_id","beh":1,"desc":"The SNMP object id."},{"type":"string","var":"$type","beh":1,"desc":"The MIB defines the type of each object id. It has to be specified as a single character from the below list. If OPAQUE_SPECIAL_TYPES was defined while compiling the SNMP library, the following are also valid: Most of these will use the obvious corresponding ASN.1 type. 's', 'x', 'd' and 'b' are all different ways of specifying an OCTET STRING value, and the 'u' unsigned type is also used for handling Gauge32 values. If the MIB-Files are loaded by into the MIB Tree with \"snmp_read_mib\" or by specifying it in the libsnmp config, '=' may be used as the type parameter for all object ids as the type can then be automatically read from the MIB. Note that there are two ways to set a variable of the type BITS like e.g. \"SYNTAX BITS {telnet(0), ftp(1), http(2), icmp(3), snmp(4), ssh(5), https(6)}\": See examples section for more details."},{"type":"string","var":"$value","beh":1,"desc":"The new value"},{"type":"int","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"int","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"bool"}]},"snmp3_walk":{"desc":"Fetch all the SNMP objects from an agent","long_desc":"snmp3_walk() function is used to read all the values from an SNMP agent specified by the hostname. Even if the security level does not use an auth or priv protocol\/password valid values have to be specified.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of SNMP object values starting from the object_id as root or FALSE on error.","seealso":[],"url":"function.snmp3-walk","name":"snmp3_walk","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The hostname of the SNMP agent (server)."},{"type":"string","var":"$sec_name","beh":1,"desc":"the security name, usually some kind of username"},{"type":"string","var":"$sec_level","beh":1,"desc":"the security level (noAuthNoPriv|authNoPriv|authPriv)"},{"type":"string","var":"$auth_protocol","beh":1,"desc":"the authentication protocol (MD5 or SHA)"},{"type":"string","var":"$auth_passphrase","beh":1,"desc":"the authentication pass phrase"},{"type":"string","var":"$priv_protocol","beh":1,"desc":"the privacy protocol (DES or AES)"},{"type":"string","var":"$priv_passphrase","beh":1,"desc":"the privacy pass phrase"},{"type":"string","var":"$object_id","beh":1,"desc":"If NULL, object_id is taken as the root of the SNMP objects tree and all objects under that tree are returned as an array. If object_id is specified, all the SNMP objects below that object_id are returned."},{"type":"string","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"string","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"array"}]},"snmp_get_quick_print":{"desc":"Fetches the current value of the UCD library's quick_print setting","long_desc":"Returns the current value stored in the UCD Library for quick_print. quick_print is off by default.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE if quick_print is on, FALSE otherwise.","seealso":[],"url":"function.snmp-get-quick-print","name":"snmp_get_quick_print","params":[{"list":[],"ret_type":"bool"}]},"snmp_get_valueretrieval":{"desc":"Return the method how the SNMP values will be returned","ver":"PHP 4 >= 4.3.3, PHP 5","ret_desc":"OR-ed combitantion of constants ( SNMP_VALUE_LIBRARY or SNMP_VALUE_PLAIN ) with possible SNMP_VALUE_OBJECT set.","seealso":[],"url":"function.snmp-get-valueretrieval","name":"snmp_get_valueretrieval","params":[{"list":[],"ret_type":"int"}]},"snmp_read_mib":{"desc":"Reads and parses a MIB file into the active MIB tree","long_desc":"This function is used to load additional, e.g. vendor specific, MIBs so that human readable OIDs like VENDOR-MIB::foo.1 instead of error prone numeric OIDs can be used. The order in which the MIBs are loaded does matter as the underlying Net-SNMP libary will print warnings if referenced objects cannot be resolved.","ver":"PHP 5","url":"function.snmp-read-mib","name":"snmp_read_mib","params":[{"list":[],"ret_type":"bool"}]},"snmp_set_enum_print":{"desc":"Return all values that are enums with their enum value instead of the raw integer","long_desc":"This function toggles if snmpwalk\/snmpget etc. should automatically lookup enum values in the MIB and return them together with their human readable string.","ver":"PHP 4 >= 4.3.0, PHP 5","url":"function.snmp-set-enum-print","name":"snmp_set_enum_print","params":[{"list":[],"ret_type":"bool"}]},"snmp_set_oid_numeric_print":{"desc":"Return all objects including their respective object id within the specified one","long_desc":"This function is an alias of: snmp_set_oid_output_format().","ver":"PHP 4 >= 4.3.0, PHP 5","seealso":[],"url":"function.snmp-set-oid-numeric-print","name":"snmp_set_oid_numeric_print","params":[{"list":[],"ret_type":"void"}]},"snmp_set_oid_output_format":{"desc":"Set the OID output format","long_desc":"snmp_set_oid_output_format() sets the output format to be full or numeric.","ver":"PHP 5 >= 5.2.0","ret_desc":"No value is returned.","url":"function.snmp-set-oid-output-format","name":"snmp_set_oid_output_format","params":[{"list":[],"ret_type":"bool"}]},"snmp_set_quick_print":{"desc":"Set the value of quick_print within the UCD SNMP library","long_desc":"Sets the value of quick_print within the UCD SNMP library. When this is set (1), the SNMP library will return 'quick printed' values. This means that just the value will be printed. When quick_print is not enabled (default) the UCD SNMP library prints extra information including the type of the value (i.e. IpAddress or OID). Additionally, if quick_print is not enabled, the library prints additional hex values for all strings of three characters or less. By default the UCD SNMP library returns verbose values, quick_print is used to return only the value. Currently strings are still returned with extra quotes, this will be corrected in a later release.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.snmp-set-quick-print","name":"snmp_set_quick_print","params":[{"list":[],"ret_type":"bool"}]},"snmp_set_valueretrieval":{"desc":"Specify the method how the SNMP values will be returned","ver":"PHP 4 >= 4.3.3, PHP 5","seealso":[],"url":"function.snmp-set-valueretrieval","name":"snmp_set_valueretrieval","params":[{"list":[],"ret_type":"bool"}]},"snmpget":{"desc":"Fetch an SNMP object","long_desc":"The snmpget() function is used to read the value of an SNMP object specified by the object_id.","ver":"PHP 4, PHP 5","ret_desc":"Returns SNMP object value on success or FALSE on error.","seealso":[],"url":"function.snmpget","name":"snmpget","params":[{"list":[{"type":"string","var":"$hostname","beh":1,"desc":"The SNMP agent."},{"type":"string","var":"$community","beh":1,"desc":"The read community."},{"type":"string","var":"$object_id","beh":1,"desc":"The SNMP object."},{"type":"int","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"int","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"string"}]},"snmpgetnext":{"desc":"Fetch the SNMP object which follows the given object id","long_desc":"The snmpgetnext() function is used to read the value of the SNMP object that follows the specified object_id.","ver":"PHP 5","ret_desc":"Returns SNMP object value on success or FALSE on error. In case of an error, an E_WARNING message is shown.","seealso":[],"url":"function.snmpgetnext","name":"snmpgetnext","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The hostname of the SNMP agent (server)."},{"type":"string","var":"$community","beh":1,"desc":"The read community."},{"type":"string","var":"$object_id","beh":1,"desc":"The SNMP object id which precedes the wanted one."},{"type":"int","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"int","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"string"}]},"snmprealwalk":{"desc":"Return all objects including their respective object ID within the specified one","long_desc":"The snmprealwalk() function is used to traverse over a number of SNMP objects starting from object_id and return not only their values but also their object ids.","ver":"PHP 4, PHP 5","ret_desc":"Returns an associative array of the SNMP object ids and their values on success or FALSE on error. In case of an error, an E_WARNING message is shown.","seealso":[],"url":"function.snmprealwalk","name":"snmprealwalk","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The hostname of the SNMP agent (server)."},{"type":"string","var":"$community","beh":1,"desc":"The read community."},{"type":"string","var":"$object_id","beh":1,"desc":"The SNMP object id which precedes the wanted one."},{"type":"int","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"int","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"array"}]},"snmpset":{"desc":"Set the value of an SNMP object","long_desc":"snmpset() is used to set the value of an SNMP object specified by the object_id.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.snmpset","name":"snmpset","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":"The hostname of the SNMP agent (server)."},{"type":"string","var":"$community","beh":1,"desc":"The write community."},{"type":"string","var":"$object_id","beh":1,"desc":"The SNMP object id."},{"type":"string","var":"$type","beh":1,"desc":"The MIB defines the type of each object id. It has to be specified as a single character from the below list. If OPAQUE_SPECIAL_TYPES was defined while compiling the SNMP library, the following are also valid: Most of these will use the obvious corresponding ASN.1 type. 's', 'x', 'd' and 'b' are all different ways of specifying an OCTET STRING value, and the 'u' unsigned type is also used for handling Gauge32 values. If the MIB-Files are loaded by into the MIB Tree with \"snmp_read_mib\" or by specifying it in the libsnmp config, '=' may be used as the type parameter for all object ids as the type can then be automatically read from the MIB. Note that there are two ways to set a variable of the type BITS like e.g. \"SYNTAX BITS {telnet(0), ftp(1), http(2), icmp(3), snmp(4), ssh(5), https(6)}\": See examples section for more details."},{"type":"mixed","var":"$value","beh":1,"desc":"The new value."},{"type":"int","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"int","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"bool"}]},"snmpwalk":{"desc":"Fetch all the SNMP objects from an agent","long_desc":"snmpwalk() function is used to read all the values from an SNMP agent specified by the hostname.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of SNMP object values starting from the object_id as root or FALSE on error.","seealso":[],"url":"function.snmpwalk","name":"snmpwalk","params":[{"list":[{"type":"string","var":"$hostname","beh":1,"desc":"The SNMP agent (server)."},{"type":"string","var":"$community","beh":1,"desc":"The read community."},{"type":"string","var":"$object_id","beh":1,"desc":"If NULL, object_id is taken as the root of the SNMP objects tree and all objects under that tree are returned as an array. If object_id is specified, all the SNMP objects below that object_id are returned."},{"type":"int","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"int","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"array"}]},"snmpwalkoid":{"desc":"Query for a tree of information about a network entity","long_desc":"snmpwalkoid() function is used to read all object ids and their respective values from an SNMP agent specified by hostname. The existence of snmpwalkoid() and snmpwalk() has historical reasons. Both functions are provided for backward compatibility. Use snmprealwalk() instead.","ver":"PHP 4, PHP 5","ret_desc":"Returns an associative array with object ids and their respective object value starting from the object_id as root or FALSE on error.","seealso":[],"url":"function.snmpwalkoid","name":"snmpwalkoid","params":[{"list":[{"type":"string","var":"$hostname","beh":1,"desc":"The SNMP agent."},{"type":"string","var":"$community","beh":1,"desc":"The read community."},{"type":"string","var":"$object_id","beh":1,"desc":"If NULL, object_id is taken as the root of the SNMP objects tree and all objects under that tree are returned as an array. If object_id is specified, all the SNMP objects below that object_id are returned."},{"type":"int","var":"$timeout","beh":1,"desc":"The number of microseconds until the first timeout.","def":1000000},{"type":"int","var":"$retries","beh":1,"desc":"The number of times to retry if timeouts occur.","def":5}],"ret_type":"array"}]},"socket_accept":{"desc":"Accepts a connection on a socket","long_desc":"After the socket socket has been created using socket_create(), bound to a name with socket_bind(), and told to listen for connections with socket_listen(), this function will accept incoming connections on that socket. Once a successful connection is made, a new socket resource is returned, which may be used for communication. If there are multiple connections queued on the socket, the first will be used. If there are no pending connections, socket_accept() will block until a connection becomes present. If socket has been made non-blocking using socket_set_blocking() or socket_set_nonblock(), FALSE will be returned. The socket resource returned by socket_accept() may not be used to accept new connections. The original listening socket socket, however, remains open and may be reused.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns a new socket resource on success, or FALSE on error. The actual error code can be retrieved by calling socket_last_error(). This error code may be passed to socket_strerror() to get a textual explanation of the error.","seealso":[],"url":"function.socket-accept","name":"socket_accept","params":[{"list":[],"ret_type":"resource"}]},"socket_bind":{"desc":"Binds a name to a socket","long_desc":"Binds the name given in address to the socket described by socket. This has to be done before a connection is be established using socket_connect() or socket_listen().","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.socket-bind","name":"socket_bind","params":[{"list":[{"type":"resource","var":"$socket","beh":0,"desc":"A valid socket resource created with socket_create()."},{"type":"string","var":"$address","beh":1,"desc":"If the socket is of the AF_INET family, the address is an IP in dotted-quad notation (e.g. 127.0.0.1). If the socket is of the AF_UNIX family, the address is the path of a Unix-domain socket (e.g. \/tmp\/my.sock)."},{"type":"int","var":"$port","beh":1,"desc":"The port parameter is only used when binding an AF_INET socket, and designates the port on which to listen for connections.","def":0}],"ret_type":"bool"}]},"socket_clear_error":{"desc":"Clears the error on the socket or the last error code","long_desc":"This function clears the error code on the given socket or the global last socket error if no socket is specified. This function allows explicitly resetting the error code value either of a socket or of the extension global last error code. This may be useful to detect within a part of the application if an error occurred or not.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.socket-clear-error","name":"socket_clear_error","params":[{"list":[],"ret_type":"void"}]},"socket_close":{"desc":"Closes a socket resource","long_desc":"socket_close() closes the socket resource given by socket. This function is specific to sockets and cannot be used on any other type of resources.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.socket-close","name":"socket_close","params":[{"list":[],"ret_type":"void"}]},"socket_connect":{"desc":"Initiates a connection on a socket","long_desc":"Initiate a connection to address using the socket resource socket, which must be a valid socket resource created with socket_create().","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. The error code can be retrieved with socket_last_error(). This code may be passed to socket_strerror() to get a textual explanation of the error.","seealso":[],"url":"function.socket-connect","name":"socket_connect","params":[{"list":[{"type":"resource","var":"$socket","beh":0,"desc":""},{"type":"string","var":"$address","beh":1,"desc":"The address parameter is either an IPv4 address in dotted-quad notation (e.g. 127.0.0.1) if socket is AF_INET, a valid IPv6 address (e.g. ::1) if IPv6 support is enabled and socket is AF_INET6 or the pathname of a Unix domain socket, if the socket family is AF_UNIX."},{"type":"int","var":"$port","beh":1,"desc":"The port parameter is only used and is mandatory when connecting to an AF_INET or an AF_INET6 socket, and designates the port on the remote host to which a connection should be made.","def":0}],"ret_type":"bool"}]},"socket_create":{"desc":"Create a socket (endpoint for communication)","long_desc":"Creates and returns a socket resource, also referred to as an endpoint of communication. A typical network connection is made up of 2 sockets, one performing the role of the client, and another performing the role of the server.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"socket_create() returns a socket resource on success, or FALSE on error. The actual error code can be retrieved by calling socket_last_error(). This error code may be passed to socket_strerror() to get a textual explanation of the error.","seealso":[],"url":"function.socket-create","name":"socket_create","params":[{"list":[{"type":"int","var":"$domain","beh":0,"desc":"The domain parameter specifies the protocol family to be used by the socket."},{"type":"int","var":"$type","beh":0,"desc":"The type parameter selects the type of communication to be used by the socket."},{"type":"int","var":"$protocol","beh":1,"desc":"The protocol parameter sets the specific protocol within the specified domain to be used when communicating on the returned socket. The proper value can be retrieved by name by using getprotobyname(). If the desired protocol is TCP, or UDP the corresponding constants SOL_TCP, and SOL_UDP can also be used."}],"ret_type":"resource"}]},"socket_create_listen":{"desc":"Opens a socket on port to accept connections","long_desc":"socket_create_listen() creates a new socket resource of type AF_INET listening on all local interfaces on the given port waiting for new connections. This function is meant to ease the task of creating a new socket which only listens to accept new connections.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"socket_create_listen() returns a new socket resource on success or FALSE on error. The error code can be retrieved with socket_last_error(). This code may be passed to socket_strerror() to get a textual explanation of the error.","seealso":[],"url":"function.socket-create-listen","name":"socket_create_listen","params":[{"list":[{"type":"int","var":"$port","beh":0,"desc":"The port on which to listen on all interfaces."},{"type":"int","var":"$backlog","beh":0,"desc":"The backlog parameter defines the maximum length the queue of pending connections may grow to. SOMAXCONN may be passed as backlog parameter, see socket_listen() for more information.","def":128}],"ret_type":"resource"}]},"socket_create_pair":{"desc":"Creates a pair of indistinguishable sockets and stores them in an array","long_desc":"socket_create_pair() creates two connected and indistinguishable sockets, and stores them in fd. This function is commonly used in IPC (InterProcess Communication).","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.socket-create-pair","name":"socket_create_pair","params":[{"list":[{"type":"int","var":"$domain","beh":0,"desc":"The domain parameter specifies the protocol family to be used by the socket. See socket_create() for the full list."},{"type":"int","var":"$type","beh":0,"desc":"The type parameter selects the type of communication to be used by the socket. See socket_create() for the full list."},{"type":"int","var":"$protocol","beh":1,"desc":"The protocol parameter sets the specific protocol within the specified domain to be used when communicating on the returned socket. The proper value can be retrieved by name by using getprotobyname(). If the desired protocol is TCP, or UDP the corresponding constants SOL_TCP, and SOL_UDP can also be used. See socket_create() for the full list of supported protocols."},{"type":"array","var":"&$fd","beh":1,"desc":"Reference to an array in which the two socket resources will be inserted."}],"ret_type":"bool"}]},"socket_get_option":{"desc":"Gets socket options for the socket","long_desc":"The socket_get_option() function retrieves the value for the option specified by the optname parameter for the specified socket.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the value of the given option, or FALSE on errors.","url":"function.socket-get-option","name":"socket_get_option","params":[{"list":[{"type":"resource","var":"$socket","beh":0,"desc":"A valid socket resource created with socket_create() or socket_accept()."},{"type":"int","var":"$level","beh":0,"desc":"The level parameter specifies the protocol level at which the option resides. For example, to retrieve options at the socket level, a level parameter of SOL_SOCKET would be used. Other levels, such as TCP, can be used by specifying the protocol number of that level. Protocol numbers can be found by using the getprotobyname() function."},{"type":"int","var":"$optname","beh":1,"desc":""}],"ret_type":"mixed"}]},"socket_get_status":{"desc":"Alias of stream_get_meta_data()","long_desc":"This function is an alias of: stream_get_meta_data().","ver":"PHP 4, PHP 5","url":"function.socket-get-status","name":"socket_get_status","params":[]},"socket_getpeername":{"desc":"Queries the remote side of the given socket which may either result in host\/port or in a Unix filesystem path, dependent on its type","long_desc":"Queries the remote side of the given socket which may either result in host\/port or in a Unix filesystem path, dependent on its type.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. socket_getpeername() may also return FALSE if the socket type is not any of AF_INET, AF_INET6, or AF_UNIX, in which case the last socket error code is not updated.","seealso":[],"url":"function.socket-getpeername","name":"socket_getpeername","params":[{"list":[{"type":"resource","var":"$socket","beh":0,"desc":"A valid socket resource created with socket_create() or socket_accept()."},{"type":"string","var":"&$address","beh":1,"desc":"If the given socket is of type AF_INET or AF_INET6, socket_getpeername() will return the peers (remote) IP address in appropriate notation (e.g. 127.0.0.1 or fe80::1) in the address parameter and, if the optional port parameter is present, also the associated port. If the given socket is of type AF_UNIX, socket_getpeername() will return the Unix filesystem path (e.g. \/var\/run\/daemon.sock) in the address parameter."},{"type":"int","var":"&$port","beh":1,"desc":"If given, this will hold the port associated to address."}],"ret_type":"bool"}]},"socket_getsockname":{"desc":"Queries the local side of the given socket which may either result in host\/port or in a Unix filesystem path, dependent on its type","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. socket_getsockname() may also return FALSE if the socket type is not any of AF_INET, AF_INET6, or AF_UNIX, in which case the last socket error code is not updated.","seealso":[],"url":"function.socket-getsockname","name":"socket_getsockname","params":[{"list":[{"type":"resource","var":"$socket","beh":0,"desc":"A valid socket resource created with socket_create() or socket_accept()."},{"type":"string","var":"&$addr","beh":1,"desc":"If the given socket is of type AF_INET or AF_INET6, socket_getsockname() will return the local IP address in appropriate notation (e.g. 127.0.0.1 or fe80::1) in the address parameter and, if the optional port parameter is present, also the associated port. If the given socket is of type AF_UNIX, socket_getsockname() will return the Unix filesystem path (e.g. \/var\/run\/daemon.sock) in the address parameter."},{"type":"int","var":"&$port","beh":1,"desc":"If provided, this will hold the associated port."}],"ret_type":"bool"}]},"socket_import_stream":{"desc":"Import a stream","long_desc":"Imports a stream that encapsulates a socket into a socket extension resource.","ver":"PHP 4 >= 5.4.0","ret_desc":"Returns FALSE or NULL on failure.","seealso":[],"url":"function.socket-import-stream","name":"socket_import_stream","params":[{"list":[],"ret_type":"void"}]},"socket_last_error":{"desc":"Returns the last error on the socket","long_desc":"If a socket resource is passed to this function, the last error which occurred on this particular socket is returned. If the socket resource is omitted, the error code of the last failed socket function is returned. The latter is particularly helpful for functions like socket_create() which don't return a socket on failure and socket_select() which can fail for reasons not directly tied to a particular socket. The error code is suitable to be fed to socket_strerror() which returns a string describing the given error code.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"This function returns a socket error code.","url":"function.socket-last-error","name":"socket_last_error","params":[{"list":[],"ret_type":"int"}]},"socket_listen":{"desc":"Listens for a connection on a socket","long_desc":"After the socket socket has been created using socket_create() and bound to a name with socket_bind(), it may be told to listen for incoming connections on socket. socket_listen() is applicable only to sockets of type SOCK_STREAM or SOCK_SEQPACKET.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. The error code can be retrieved with socket_last_error(). This code may be passed to socket_strerror() to get a textual explanation of the error.","seealso":[],"url":"function.socket-listen","name":"socket_listen","params":[{"list":[{"type":"resource","var":"$socket","beh":0,"desc":"A valid socket resource created with socket_create()."},{"type":"int","var":"$backlog","beh":0,"desc":"A maximum of backlog incoming connections will be queued for processing. If a connection request arrives with the queue full the client may receive an error with an indication of ECONNREFUSED, or, if the underlying protocol supports retransmission, the request may be ignored so that retries may succeed.","def":0}],"ret_type":"bool"}]},"socket_read":{"desc":"Reads a maximum of length bytes from a socket","long_desc":"The function socket_read() reads from the socket resource socket created by the socket_create() or socket_accept() functions.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"socket_read() returns the data as a string on success, or FALSE on error (including if the remote host has closed the connection). The error code can be retrieved with socket_last_error(). This code may be passed to socket_strerror() to get a textual representation of the error.","seealso":[],"url":"function.socket-read","name":"socket_read","params":[{"list":[{"type":"resource","var":"$socket","beh":0,"desc":"A valid socket resource created with socket_create() or socket_accept()."},{"type":"int","var":"$length","beh":1,"desc":"The maximum number of bytes read is specified by the length parameter. Otherwise you can use \\r, \\n, or \\0 to end reading (depending on the type parameter, see below)."},{"type":"int","var":"$type","beh":1,"desc":"Optional type parameter is a named constant:","def":"PHP_BINARY_READ"}],"ret_type":"string"}]},"socket_recv":{"desc":"Receives data from a connected socket","long_desc":"The socket_recv() function receives len bytes of data in buf from socket. socket_recv() can be used to gather data from connected sockets. Additionally, one or more flags can be specified to modify the behaviour of the function. buf is passed by reference, so it must be specified as a variable in the argument list. Data read from socket by socket_recv() will be returned in buf.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"socket_recv() returns the number of bytes received, or FALSE if there was an error. The actual error code can be retrieved by calling socket_last_error(). This error code may be passed to socket_strerror() to get a textual explanation of the error.","url":"function.socket-recv","name":"socket_recv","params":[{"list":[{"type":"resource","var":"$socket","beh":0,"desc":"The socket must be a socket resource previously created by socket_create()."},{"type":"string","var":"&$buf","beh":0,"desc":"The data received will be fetched to the variable specified with buf. If an error occurs, if the connection is reset, or if no data is available, buf will be set to NULL."},{"type":"int","var":"$len","beh":1,"desc":"Up to len bytes will be fetched from remote host."},{"type":"int","var":"$flags","beh":1,"desc":"The value of flags can be any combination of the following flags, joined with the binary OR (|) operator."}],"ret_type":"int"}]},"socket_recvfrom":{"desc":"Receives data from a socket whether or not it is connection-oriented","long_desc":"The socket_recvfrom() function receives len bytes of data in buf from name on port port (if the socket is not of type AF_UNIX) using socket. socket_recvfrom() can be used to gather data from both connected and unconnected sockets. Additionally, one or more flags can be specified to modify the behaviour of the function. The name and port must be passed by reference. If the socket is not connection-oriented, name will be set to the internet protocol address of the remote host or the path to the UNIX socket. If the socket is connection-oriented, name is NULL. Additionally, the port will contain the port of the remote host in the case of an unconnected AF_INET or AF_INET6 socket.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"socket_recvfrom() returns the number of bytes received, or FALSE if there was an error. The actual error code can be retrieved by calling socket_last_error(). This error code may be passed to socket_strerror() to get a textual explanation of the error.","seealso":[],"url":"function.socket-recvfrom","name":"socket_recvfrom","params":[{"list":[{"type":"resource","var":"$socket","beh":0,"desc":"The socket must be a socket resource previously created by socket_create()."},{"type":"string","var":"&$buf","beh":1,"desc":"The data received will be fetched to the variable specified with buf."},{"type":"int","var":"$len","beh":1,"desc":"Up to len bytes will be fetched from remote host."},{"type":"int","var":"$flags","beh":1,"desc":"The value of flags can be any combination of the following flags, joined with the binary OR (|) operator."},{"type":"string","var":"&$name","beh":1,"desc":"If the socket is of the type AF_UNIX type, name is the path to the file. Else, for unconnected sockets, name is the IP address of, the remote host, or NULL if the socket is connection-oriented."},{"type":"int","var":"&$port","beh":1,"desc":"This argument only applies to AF_INET and AF_INET6 sockets, and specifies the remote port from which the data is received. If the socket is connection-oriented, port will be NULL."}],"ret_type":"int"}]},"socket_select":{"desc":"Runs the select() system call on the given arrays of sockets with a specified timeout","long_desc":"socket_select() accepts arrays of sockets and waits for them to change status. Those coming with BSD sockets background will recognize that those socket resource arrays are in fact the so-called file descriptor sets. Three independent arrays of socket resources are watched.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"On success socket_select() returns the number of socket resources contained in the modified arrays, which may be zero if the timeout expires before anything interesting happens. On error FALSE is returned. The error code can be retrieved with socket_last_error().","seealso":[],"url":"function.socket-select","name":"socket_select","params":[{"list":[{"type":"array","var":"&$read","beh":0,"desc":"The sockets listed in the read array will be watched to see if characters become available for reading (more precisely, to see if a read will not block - in particular, a socket resource is also ready on end-of-file, in which case a socket_read() will return a zero length string)."},{"type":"array","var":"&$write","beh":1,"desc":"The sockets listed in the write array will be watched to see if a write will not block."},{"type":"array","var":"&$except","beh":1,"desc":"The sockets listed in the except array will be watched for exceptions."},{"type":"int","var":"$tv_sec","beh":1,"desc":"The tv_sec and tv_usec together form the timeout parameter. The timeout is an upper bound on the amount of time elapsed before socket_select() return. tv_sec may be zero , causing socket_select() to return immediately. This is useful for polling. If tv_sec is NULL (no timeout), socket_select() can block indefinitely."},{"type":"int","var":"$tv_usec","beh":1,"desc":"","def":0}],"ret_type":"int"}]},"socket_send":{"desc":"Sends data to a connected socket","long_desc":"The function socket_send() sends len bytes to the socket socket from buf.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"socket_send() returns the number of bytes sent, or FALSE on error.","seealso":[],"url":"function.socket-send","name":"socket_send","params":[{"list":[{"type":"resource","var":"$socket","beh":0,"desc":"A valid socket resource created with socket_create() or socket_accept()."},{"type":"string","var":"$buf","beh":0,"desc":"A buffer containing the data that will be sent to the remote host."},{"type":"int","var":"$len","beh":1,"desc":"The number of bytes that will be sent to the remote host from buf."},{"type":"int","var":"$flags","beh":1,"desc":"The value of flags can be any combination of the following flags, joined with the binary OR (|) operator."}],"ret_type":"int"}]},"socket_sendto":{"desc":"Sends a message to a socket, whether it is connected or not","long_desc":"The function socket_sendto() sends len bytes from buf through the socket socket to the port at the address addr.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"socket_sendto() returns the number of bytes sent to the remote host, or FALSE if an error occurred.","seealso":[],"url":"function.socket-sendto","name":"socket_sendto","params":[{"list":[{"type":"resource","var":"$socket","beh":0,"desc":"A valid socket resource created using socket_create()."},{"type":"string","var":"$buf","beh":1,"desc":"The sent data will be taken from buffer buf."},{"type":"int","var":"$len","beh":1,"desc":"len bytes from buf will be sent."},{"type":"int","var":"$flags","beh":1,"desc":"The value of flags can be any combination of the following flags, joined with the binary OR (|) operator."},{"type":"string","var":"$addr","beh":1,"desc":"IP address of the remote host."},{"type":"int","var":"$port","beh":1,"desc":"port is the remote port number at which the data will be sent.","def":0}],"ret_type":"int"}]},"socket_set_block":{"desc":"Sets blocking mode on a socket resource","long_desc":"The socket_set_block() function removes the O_NONBLOCK flag on the socket specified by the socket parameter. When an operation (e.g. receive, send, connect, accept, ...) is performed on a blocking socket, the script will pause its execution until it receives a signal or it can perform the operation.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.socket-set-block","name":"socket_set_block","params":[{"list":[],"ret_type":"bool"}]},"socket_set_blocking":{"desc":"Alias of stream_set_blocking()","long_desc":"This function is an alias of: stream_set_blocking().","ver":"PHP 4, PHP 5","url":"function.socket-set-blocking","name":"socket_set_blocking","params":[]},"socket_set_nonblock":{"desc":"Sets nonblocking mode for file descriptor fd","long_desc":"The socket_set_nonblock() function sets the O_NONBLOCK flag on the socket specified by the socket parameter. When an operation (e.g. receive, send, connect, accept, ...) is performed on a non-blocking socket, the script will not pause its execution until it receives a signal or it can perform the operation. Rather, if the operation would result in a block, the called function will fail.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.socket-set-nonblock","name":"socket_set_nonblock","params":[{"list":[],"ret_type":"bool"}]},"socket_set_option":{"desc":"Sets socket options for the socket","long_desc":"The socket_set_option() function sets the option specified by the optname parameter, at the specified protocol level, to the value pointed to by the optval parameter for the socket.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.socket-set-option","name":"socket_set_option","params":[{"list":[{"type":"resource","var":"$socket","beh":0,"desc":"A valid socket resource created with socket_create() or socket_accept()."},{"type":"int","var":"$level","beh":0,"desc":"The level parameter specifies the protocol level at which the option resides. For example, to retrieve options at the socket level, a level parameter of SOL_SOCKET would be used. Other levels, such as TCP, can be used by specifying the protocol number of that level. Protocol numbers can be found by using the getprotobyname() function."},{"type":"int","var":"$optname","beh":1,"desc":"The available socket options are the same as those for the socket_get_option() function."},{"type":"mixed","var":"$optval","beh":1,"desc":"The option value."}],"ret_type":"bool"}]},"socket_set_timeout":{"desc":"Alias of stream_set_timeout()","long_desc":"This function is an alias of: stream_set_timeout().","ver":"PHP 4, PHP 5","url":"function.socket-set-timeout","name":"socket_set_timeout","params":[]},"socket_shutdown":{"desc":"Shuts down a socket for receiving, sending, or both","long_desc":"The socket_shutdown() function allows you to stop incoming, outgoing or all data (the default) from being sent through the socket","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.socket-shutdown","name":"socket_shutdown","params":[{"list":[{"type":"resource","var":"$socket","beh":0,"desc":"A valid socket resource created with socket_create()."},{"type":"int","var":"$how","beh":0,"desc":"The value of how can be one of the following:","def":2}],"ret_type":"bool"}]},"socket_strerror":{"desc":"Return a string describing a socket error","long_desc":"socket_strerror() takes as its errno parameter a socket error code as returned by socket_last_error() and returns the corresponding explanatory text.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns the error message associated with the errno parameter.","seealso":[],"url":"function.socket-strerror","name":"socket_strerror","params":[{"list":[],"ret_type":"string"}]},"socket_write":{"desc":"Write to a socket","long_desc":"The function socket_write() writes to the socket from the given buffer.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns the number of bytes successfully written to the socket or FALSE on failure. The error code can be retrieved with socket_last_error(). This code may be passed to socket_strerror() to get a textual explanation of the error.","seealso":[],"url":"function.socket-write","name":"socket_write","params":[{"list":[{"type":"resource","var":"$socket","beh":0,"desc":""},{"type":"string","var":"$buffer","beh":1,"desc":"The buffer to be written."},{"type":"int","var":"$length","beh":1,"desc":"The optional parameter length can specify an alternate length of bytes written to the socket. If this length is greater then the buffer length, it is silently truncated to the length of the buffer.","def":0}],"ret_type":"int"}]},"solr_get_version":{"desc":"Returns the current version of the Apache Solr extension","long_desc":"This function returns the current version of the extension as a string.","ver":"PECL solr >= 0.9.1","ret_desc":"It returns a string on success and FALSE on failure.","seealso":[],"url":"function.solr-get-version","name":"solr_get_version","params":[{"list":[],"ret_type":"string"}]},"sort":{"desc":"Sort an array","long_desc":"This function sorts an array. Elements will be arranged from lowest to highest when this function has completed.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sort","name":"sort","params":[{"list":[{"type":"array","var":"&$array","beh":0,"desc":"The input array."},{"type":"int","var":"$sort_flags","beh":0,"desc":"The optional second parameter sort_flags may be used to modify the sorting behavior using these values: Sorting type flags:","def":"SORT_REGULAR"}],"ret_type":"bool"}]},"soundex":{"desc":"Calculate the soundex key of a string","long_desc":"Calculates the soundex key of str. Soundex keys have the property that words pronounced similarly produce the same soundex key, and can thus be used to simplify searches in databases where you know the pronunciation but not the spelling. This soundex function returns a string 4 characters long, starting with a letter. This particular soundex function is one described by Donald Knuth in \"The Art Of Computer Programming, vol. 3: Sorting And Searching\", Addison-Wesley (1973), pp. 391-392.","ver":"PHP 4, PHP 5","ret_desc":"Returns the soundex key as a string.","seealso":[],"url":"function.soundex","name":"soundex","params":[{"list":[],"ret_type":"string"}]},"spl_autoload":{"desc":"Default implementation for __autoload()","long_desc":"This function is intended to be used as a default implementation for __autoload(). If nothing else is specified and spl_autoload_register() is called without any parameters then this function will be used for any later call to __autoload().","ver":"PHP 5 >= 5.1.2","ret_desc":"No value is returned.","url":"function.spl-autoload","name":"spl_autoload","params":[{"list":[{"type":"string","var":"$class_name","beh":0,"desc":"The lowercased name of the class (and namespace) being instantiated."},{"type":"string","var":"$file_extensions","beh":0,"desc":"By default it checks all include paths to contain filenames built up by the lowercase class name appended by the filename extensions .inc and .php.","def":"spl_autoload_extensions()"}],"ret_type":"void"}]},"spl_autoload_call":{"desc":"Try all registered __autoload() function to load the requested class","long_desc":"This function can be used to manually search for a class or interface using the registered __autoload functions.","ver":"PHP 5 >= 5.1.2","ret_desc":"No value is returned.","url":"function.spl-autoload-call","name":"spl_autoload_call","params":[{"list":[],"ret_type":"void"}]},"spl_autoload_extensions":{"desc":"Register and return default file extensions for spl_autoload","long_desc":"This function can modify and check the file extensions that the built in __autoload() fallback function spl_autoload() will be using.","ver":"PHP 5 >= 5.1.2","ret_desc":"A comma delimited list of default file extensions for spl_autoload().","url":"function.spl-autoload-extensions","name":"spl_autoload_extensions","params":[{"list":[],"ret_type":"string"}]},"spl_autoload_functions":{"desc":"Return all registered __autoload() functions","long_desc":"Get all registered __autoload() functions.","ver":"PHP 5 >= 5.1.2","ret_desc":"An array of all registered __autoload functions. If the autoload stack is not activated then the return value is FALSE. If no function is registered the return value will be an empty array.","url":"function.spl-autoload-functions","name":"spl_autoload_functions","params":[{"list":[],"ret_type":"array"}]},"spl_autoload_register":{"desc":"Register given function as __autoload() implementation","long_desc":"Register a function with the spl provided __autoload stack. If the stack is not yet activated it will be activated. If your code has an existing __autoload function then this function must be explicitly registered on the __autoload stack. This is because spl_autoload_register() will effectively replace the engine cache for the __autoload function by either spl_autoload() or spl_autoload_call(). If there must be multiple autoload functions, spl_autoload_register() allows for this. It effectively creates a queue of autoload functions, and runs through each of them in the order they are defined. By contrast, __autoload() may only be defined once.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.spl-autoload-register","name":"spl_autoload_register","params":[{"list":[{"type":"callable","var":"$autoload_function","beh":1,"desc":"The autoload function being registered. If no parameter is provided, then the default implementation of spl_autoload() will be registered."},{"type":"bool","var":"$throw","beh":1,"desc":"This parameter specifies whether spl_autoload_register() should throw exceptions when the autoload_function cannot be registered.","def":"true"},{"type":"bool","var":"$prepend","beh":1,"desc":"If true, spl_autoload_register() will prepend the autoloader on the autoload stack instead of appending it.","def":"false"}],"ret_type":"bool"}]},"spl_autoload_unregister":{"desc":"Unregister given function as __autoload() implementation","long_desc":"Unregister a function from the spl provided __autoload stack. If the stack is activated and empty after unregistering the given function then it will be deactivated. When this function results in the autoload stack being deactivated, any __autoload function that previously existed will not be reactivated.","ver":"PHP 5 >= 5.1.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.spl-autoload-unregister","name":"spl_autoload_unregister","params":[{"list":[],"ret_type":"bool"}]},"spl_classes":{"desc":"Return available SPL classes","long_desc":"This function returns an array with the current available SPL classes.","ver":"PHP 5","ret_desc":"Returns an array containing the currently available SPL classes.","url":"function.spl-classes","name":"spl_classes","params":[{"list":[],"ret_type":"array"}]},"spl_object_hash":{"desc":"Return hash id for given object","long_desc":"This function returns a unique identifier for the object. This id can be used as a hash key for storing objects or for identifying an object.","ver":"PHP 5 >= 5.2.0","ret_desc":"A string that is unique for each currently existing object and is always the same for each object.","url":"function.spl-object-hash","name":"spl_object_hash","params":[{"list":[],"ret_type":"string"}]},"spldoublylinkedlist":{"name":"SplDoublyLinkedList","class":"SplDoublyLinkedList"},"splfileinfo":{"name":"SplFileInfo","class":"SplFileInfo"},"splfileobject":{"name":"SplFileObject","class":"SplFileObject"},"splfixedarray":{"name":"SplFixedArray","class":"SplFixedArray"},"splheap":{"name":"SplHeap","class":"SplHeap"},"split":{"desc":"Split string into array by regular expression","long_desc":"Splits a string into array by regular expression.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array of strings, each of which is a substring of string formed by splitting it on boundaries formed by the case-sensitive regular expression pattern.","seealso":[],"url":"function.split","name":"split","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"Case sensitive regular expression. If you want to split on any of the characters which are considered special by regular expressions, you'll need to escape them first. If you think split() (or any other regex function, for that matter) is doing something weird, please read the file regex.7, included in the regex\/ subdirectory of the PHP distribution. It's in manpage format, so you'll want to do something along the lines of man \/usr\/local\/src\/regex\/regex.7 in order to read it."},{"type":"string","var":"$string","beh":1,"desc":"The input string."},{"type":"int","var":"$limit","beh":1,"desc":"If limit is set, the returned array will contain a maximum of limit elements with the last element containing the whole rest of string.","def":-1}],"ret_type":"array"}]},"spliti":{"desc":"Split string into array by regular expression case insensitive","long_desc":"Splits a string into array by regular expression. This function is identical to split() except that this ignores case distinction when matching alphabetic characters.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns an array of strings, each of which is a substring of string formed by splitting it on boundaries formed by the case insensitive regular expression pattern.","seealso":[],"url":"function.spliti","name":"spliti","params":[{"list":[{"type":"string","var":"$pattern","beh":0,"desc":"Case insensitive regular expression. If you want to split on any of the characters which are considered special by regular expressions, you'll need to escape them first. If you think spliti() (or any other regex function, for that matter) is doing something weird, please read the file regex.7, included in the regex\/ subdirectory of the PHP distribution. It's in manpage format, so you'll want to do something along the lines of man \/usr\/local\/src\/regex\/regex.7 in order to read it."},{"type":"string","var":"$string","beh":1,"desc":"The input string."},{"type":"int","var":"$limit","beh":1,"desc":"If limit is set, the returned array will contain a maximum of limit elements with the last element containing the whole rest of string.","def":-1}],"ret_type":"array"}]},"splobjectstorage":{"name":"SplObjectStorage","class":"SplObjectStorage"},"splpriorityqueue":{"name":"SplPriorityQueue","class":"SplPriorityQueue"},"splstack":{"name":"SplStack","class":"SplStack"},"sprintf":{"desc":"Return a formatted string","long_desc":"Returns a string produced according to the formatting string format.","ver":"PHP 4, PHP 5","ret_desc":"Returns a string produced according to the formatting string format.","seealso":[],"url":"function.sprintf","name":"sprintf","params":[{"list":[{"type":"string","var":"$format","beh":1,"desc":"The format string is composed of zero or more directives: ordinary characters (excluding %) that are copied directly to the result, and conversion specifications, each of which results in fetching its own parameter. This applies to both sprintf() and printf(). Each conversion specification consists of a percent sign (%), followed by one or more of these elements, in order: The format string supports argument numbering\/swapping. Here is an example:"},{"type":"mixed","var":"$args","beh":1,"desc":""},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"string"}]},"sql_regcase":{"desc":"Make regular expression for case insensitive match","long_desc":"Creates a regular expression for a case insensitive match.","ver":"PHP 4, PHP 5","ret_desc":"Returns a valid regular expression which will match string, ignoring case. This expression is string with each alphabetic character converted to a bracket expression; this bracket expression contains that character's uppercase and lowercase form. Other characters remain unchanged.","url":"function.sql-regcase","name":"sql_regcase","params":[{"list":[],"ret_type":"string"}]},"sqlite3":{"name":"SQLite3","class":"SQLite3"},"sqlite3result":{"name":"SQLite3Result","class":"SQLite3Result"},"sqlite3stmt":{"name":"SQLite3Stmt","class":"SQLite3Stmt"},"sqlite_array_query":{"desc":"Execute a query against a given database and returns an array","long_desc":"Object oriented style (method): sqlite_array_query() executes the given query and returns an array of the entire result set. It is similar to calling sqlite_query() and then sqlite_fetch_array() for each row in the result set. sqlite_array_query() is significantly faster than the aforementioned.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns an array of the entire result set; FALSE otherwise.","seealso":[],"url":"function.sqlite-array-query","name":"sqlite_array_query","params":[{"list":[{"type":"resource","var":"$dbhandle","beh":1,"desc":"The query to be executed. Data inside the query should be properly escaped."},{"type":"string","var":"$query","beh":1,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"int","var":"$result_type","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"SQLITE_BOTH"},{"type":"bool","var":"$decode_binary","beh":1,"desc":"When the decode_binary parameter is set to TRUE (the default), PHP will decode the binary encoding it applied to the data if it was encoded using the sqlite_escape_string(). You should normally leave this value at its default, unless you are interoperating with databases created by other sqlite capable applications.","def":"true"}],"ret_type":"array"},{"list":[{"type":"string","var":"$query","beh":1,"desc":"The query to be executed. Data inside the query should be properly escaped."},{"type":"resource","var":"$dbhandle","beh":1,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"int","var":"$result_type","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"SQLITE_BOTH"},{"type":"bool","var":"$decode_binary","beh":1,"desc":"When the decode_binary parameter is set to TRUE (the default), PHP will decode the binary encoding it applied to the data if it was encoded using the sqlite_escape_string(). You should normally leave this value at its default, unless you are interoperating with databases created by other sqlite capable applications.","def":"true"}],"ret_type":"array"},{"list":[{"type":"string","var":"$query","beh":1,"desc":"The query to be executed. Data inside the query should be properly escaped."},{"type":"int","var":"$result_type","beh":1,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method.","def":"SQLITE_BOTH"},{"type":"bool","var":"$decode_binary","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"true"}],"ret_type":"array"}]},"sqlite_busy_timeout":{"desc":"Set busy timeout duration, or disable busy handlers","long_desc":"Object oriented style (method): Set the maximum time, in milliseconds, that SQLite will wait for a dbhandle to become ready for use.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"No value is returned.","seealso":[],"url":"function.sqlite-busy-timeout","name":"sqlite_busy_timeout","params":[{"list":[{"type":"resource","var":"$dbhandle","beh":0,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"int","var":"$milliseconds","beh":0,"desc":"The number of milliseconds. When set to 0, busy handlers will be disabled and SQLite will return immediately with a SQLITE_BUSY status code if another process\/thread has the database locked for an update. PHP sets the default busy timeout to be 60 seconds when the database is opened."}],"ret_type":"void"},{"list":[],"ret_type":"void"}]},"sqlite_changes":{"desc":"Returns the number of rows that were changed by the most recent SQL statement","long_desc":"Object oriented style (method): Returns the numbers of rows that were changed by the most recent SQL statement executed against the dbhandle database handle.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns the number of changed rows.","seealso":[],"url":"function.sqlite-changes","name":"sqlite_changes","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"sqlite_close":{"desc":"Closes an open SQLite database","long_desc":"Closes the given db_handle database handle. If the database was persistent, it will be closed and removed from the persistent list.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"No value is returned.","seealso":[],"url":"function.sqlite-close","name":"sqlite_close","params":[{"list":[],"ret_type":"void"}]},"sqlite_column":{"desc":"Fetches a column from the current row of a result set","long_desc":"Fetches the value of a column named index_or_name (if it is a string), or of the ordinal column numbered index_or_name (if it is an integer) from the current row of the query result handle result.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns the column value.","seealso":[],"url":"function.sqlite-column","name":"sqlite_column","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The SQLite result resource. This parameter is not required when using the object-oriented method."},{"type":"mixed","var":"$index_or_name","beh":1,"desc":"The column index or name to fetch."},{"type":"bool","var":"$decode_binary","beh":1,"desc":"When the decode_binary parameter is set to TRUE (the default), PHP will decode the binary encoding it applied to the data if it was encoded using the sqlite_escape_string(). You should normally leave this value at its default, unless you are interoperating with databases created by other sqlite capable applications.","def":"true"}],"ret_type":"mixed"},{"list":[{"type":"mixed","var":"$index_or_name","beh":0,"desc":"The SQLite result resource. This parameter is not required when using the object-oriented method."},{"type":"bool","var":"$decode_binary","beh":0,"desc":"The column index or name to fetch.","def":"true"}],"ret_type":"mixed"},{"list":[{"type":"mixed","var":"$index_or_name","beh":0,"desc":"The SQLite result resource. This parameter is not required when using the object-oriented method."},{"type":"bool","var":"$decode_binary","beh":0,"desc":"The column index or name to fetch.","def":"true"}],"ret_type":"mixed"}]},"sqlite_create_aggregate":{"desc":"Register an aggregating UDF for use in SQL statements","long_desc":"Object oriented style (method): sqlite_create_aggregate() is similar to sqlite_create_function() except that it registers functions that can be used to calculate a result aggregated across all the rows of a query. The key difference between this function and sqlite_create_function() is that two functions are required to manage the aggregate; step_func is called for each row of the result set. Your PHP function should accumulate the result and store it into the aggregation context. Once all the rows have been processed, finalize_func will be called and it should then take the data from the aggregation context and return the result. Callback functions should return a type understood by SQLite (i.e. scalar type).","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"No value is returned.","seealso":[],"url":"function.sqlite-create-aggregate","name":"sqlite_create_aggregate","params":[{"list":[{"type":"resource","var":"$dbhandle","beh":0,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"string","var":"$function_name","beh":1,"desc":"The name of the function used in SQL statements."},{"type":"callable","var":"$step_func","beh":1,"desc":"Callback function called for each row of the result set. Function parameters are &$context, $value, ...."},{"type":"callable","var":"$finalize_func","beh":1,"desc":"Callback function to aggregate the \"stepped\" data from each row. Function parameter is &$context and the function should return the final result of aggregation."},{"type":"int","var":"$num_args","beh":1,"desc":"Hint to the SQLite parser if the callback function accepts a predetermined number of arguments.","def":-1}],"ret_type":"void"},{"list":[{"type":"string","var":"$function_name","beh":0,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"callable","var":"$step_func","beh":1,"desc":"The name of the function used in SQL statements."},{"type":"callable","var":"$finalize_func","beh":1,"desc":"Callback function called for each row of the result set. Function parameters are &$context, $value, ...."},{"type":"int","var":"$num_args","beh":1,"desc":"Callback function to aggregate the \"stepped\" data from each row. Function parameter is &$context and the function should return the final result of aggregation.","def":-1}],"ret_type":"void"}]},"sqlite_create_function":{"desc":"Registers a \"regular\" User Defined Function for use in SQL statements","long_desc":"Object oriented style (method): sqlite_create_function() allows you to register a PHP function with SQLite as an UDF (User Defined Function), so that it can be called from within your SQL statements. The UDF can be used in any SQL statement that can call functions, such as SELECT and UPDATE statements and also in triggers.","ver":"PHP 5 < 5.4.0, sqlite >= 1.0.0","ret_desc":"No value is returned.","seealso":[],"url":"function.sqlite-create-function","name":"sqlite_create_function","params":[{"list":[{"type":"resource","var":"$dbhandle","beh":0,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"string","var":"$function_name","beh":1,"desc":"The name of the function used in SQL statements."},{"type":"callable","var":"$callback","beh":1,"desc":"Callback function to handle the defined SQL function."},{"type":"int","var":"$num_args","beh":1,"desc":"Hint to the SQLite parser if the callback function accepts a predetermined number of arguments.","def":-1}],"ret_type":"void"},{"list":[{"type":"string","var":"$function_name","beh":0,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"callable","var":"$callback","beh":1,"desc":"The name of the function used in SQL statements."},{"type":"int","var":"$num_args","beh":1,"desc":"Callback function to handle the defined SQL function.","def":-1}],"ret_type":"void"}]},"sqlite_current":{"desc":"Fetches the current row from a result set as an array","long_desc":"Object oriented style (method): sqlite_current() is identical to sqlite_fetch_array() except that it does not advance to the next row prior to returning the data; it returns the data from the current position only.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns an array of the current row from a result set; FALSE if the current position is beyond the final row.","seealso":[],"url":"function.sqlite-current","name":"sqlite_current","params":[{"list":[{"type":"resource","var":"$result","beh":1,"desc":"The SQLite result resource. This parameter is not required when using the object-oriented method."},{"type":"int","var":"$result_type","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"SQLITE_BOTH"},{"type":"bool","var":"$decode_binary","beh":1,"desc":"When the decode_binary parameter is set to TRUE (the default), PHP will decode the binary encoding it applied to the data if it was encoded using the sqlite_escape_string(). You should normally leave this value at its default, unless you are interoperating with databases created by other sqlite capable applications.","def":"true"}],"ret_type":"array"},{"list":[{"type":"int","var":"$result_type","beh":0,"desc":"The SQLite result resource. This parameter is not required when using the object-oriented method.","def":"SQLITE_BOTH"},{"type":"bool","var":"$decode_binary","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"true"}],"ret_type":"array"},{"list":[{"type":"int","var":"$result_type","beh":0,"desc":"The SQLite result resource. This parameter is not required when using the object-oriented method.","def":"SQLITE_BOTH"},{"type":"bool","var":"$decode_binary","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"true"}],"ret_type":"array"}]},"sqlite_error_string":{"desc":"Returns the textual description of an error code","long_desc":"Returns a human readable description of the error_code returned from sqlite_last_error().","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns a human readable description of the error_code, as a string.","seealso":[],"url":"function.sqlite-error-string","name":"sqlite_error_string","params":[{"list":[],"ret_type":"string"}]},"sqlite_escape_string":{"desc":"Escapes a string for use as a query parameter","long_desc":"sqlite_escape_string() will correctly quote the string specified by item for use in an SQLite SQL statement. This includes doubling up single-quote characters (') and checking for binary-unsafe characters in the query string. Although the encoding makes it safe to insert the data, it will render simple text comparisons and LIKE clauses in your queries unusable for the columns that contain the binary data. In practice, this shouldn't be a problem, as your schema should be such that you don't use such things on binary columns (in fact, it might be better to store binary data using other means, such as in files).","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns an escaped string for use in an SQLite SQL statement.","seealso":[],"url":"function.sqlite-escape-string","name":"sqlite_escape_string","params":[{"list":[],"ret_type":"string"}]},"sqlite_exec":{"desc":"Executes a result-less query against a given database","long_desc":"Object oriented style (method): Executes an SQL statement given by the query against a given database handle (specified by the dbhandle parameter).","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.3","ret_desc":"This function will return a boolean result; TRUE for success or FALSE for failure. If you need to run a query that returns rows, see sqlite_query().","seealso":[],"url":"function.sqlite-exec","name":"sqlite_exec","params":[{"list":[{"type":"resource","var":"$dbhandle","beh":0,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"string","var":"$query","beh":1,"desc":"The query to be executed. Data inside the query should be properly escaped."},{"type":"string","var":"&$error_msg","beh":1,"desc":"The specified variable will be filled if an error occurs. This is specially important because SQL syntax errors can't be fetched using the sqlite_last_error() function."}],"ret_type":"bool"},{"list":[{"type":"string","var":"$query","beh":0,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"resource","var":"$dbhandle","beh":0,"desc":"The query to be executed. Data inside the query should be properly escaped."}],"ret_type":"bool"},{"list":[{"type":"string","var":"$query","beh":0,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"string","var":"&$error_msg","beh":1,"desc":"The query to be executed. Data inside the query should be properly escaped."}],"ret_type":"bool"}]},"sqlite_factory":{"desc":"Opens an SQLite database and returns an SQLiteDatabase object","long_desc":"sqlite_factory() behaves similarly to sqlite_open() in that it opens an SQLite database or attempts to create it if it does not exist. However, a SQLiteDatabase object is returned rather than a resource. Please see the sqlite_open() reference page for further usage and caveats.","ver":"PHP 5 < 5.4.0","ret_desc":"Returns an SQLiteDatabase object on success, NULL on error.","seealso":[],"url":"function.sqlite-factory","name":"sqlite_factory","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"The filename of the SQLite database."},{"type":"int","var":"$mode","beh":1,"desc":"The mode of the file. Intended to be used to open the database in read-only mode. Presently, this parameter is ignored by the sqlite library. The default value for mode is the octal value 0666 and this is the recommended value.","def":666},{"type":"string","var":"&$error_message","beh":1,"desc":"Passed by reference and is set to hold a descriptive error message explaining why the database could not be opened if there was an error."}],"ret_type":"SQLiteDatabase"}]},"sqlite_fetch_all":{"desc":"Fetches all rows from a result set as an array of arrays","long_desc":"Object oriented style (method): sqlite_fetch_all() returns an array of the entire result set from the result resource. It is similar to calling sqlite_query() (or sqlite_unbuffered_query()) and then sqlite_fetch_array() for each row in the result set.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns an array of the remaining rows in a result set. If called right after sqlite_query(), it returns all rows. If called after sqlite_fetch_array(), it returns the rest. If there are no rows in a result set, it returns an empty array.","seealso":[],"url":"function.sqlite-fetch-all","name":"sqlite_fetch_all","params":[{"list":[{"type":"resource","var":"$result","beh":1,"desc":"The SQLite result resource. This parameter is not required when using the object-oriented method."},{"type":"int","var":"$result_type","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"SQLITE_BOTH"},{"type":"bool","var":"$decode_binary","beh":1,"desc":"When the decode_binary parameter is set to TRUE (the default), PHP will decode the binary encoding it applied to the data if it was encoded using the sqlite_escape_string(). You should normally leave this value at its default, unless you are interoperating with databases created by other sqlite capable applications.","def":"true"}],"ret_type":"array"},{"list":[{"type":"int","var":"$result_type","beh":0,"desc":"The SQLite result resource. This parameter is not required when using the object-oriented method.","def":"SQLITE_BOTH"},{"type":"bool","var":"$decode_binary","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"true"}],"ret_type":"array"},{"list":[{"type":"int","var":"$result_type","beh":0,"desc":"The SQLite result resource. This parameter is not required when using the object-oriented method.","def":"SQLITE_BOTH"},{"type":"bool","var":"$decode_binary","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"true"}],"ret_type":"array"}]},"sqlite_fetch_array":{"desc":"Fetches the next row from a result set as an array","long_desc":"Object oriented style (method): Fetches the next row from the given result handle. If there are no more rows, returns FALSE, otherwise returns an associative array representing the row data.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns an array of the next row from a result set; FALSE if the next position is beyond the final row.","seealso":[],"url":"function.sqlite-fetch-array","name":"sqlite_fetch_array","params":[{"list":[{"type":"resource","var":"$result","beh":1,"desc":"The SQLite result resource. This parameter is not required when using the object-oriented method."},{"type":"int","var":"$result_type","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"SQLITE_BOTH"},{"type":"bool","var":"$decode_binary","beh":1,"desc":"When the decode_binary parameter is set to TRUE (the default), PHP will decode the binary encoding it applied to the data if it was encoded using the sqlite_escape_string(). You should normally leave this value at its default, unless you are interoperating with databases created by other sqlite capable applications.","def":"true"}],"ret_type":"array"},{"list":[{"type":"int","var":"$result_type","beh":0,"desc":"The SQLite result resource. This parameter is not required when using the object-oriented method.","def":"SQLITE_BOTH"},{"type":"bool","var":"$decode_binary","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"true"}],"ret_type":"array"},{"list":[{"type":"int","var":"$result_type","beh":0,"desc":"The SQLite result resource. This parameter is not required when using the object-oriented method.","def":"SQLITE_BOTH"},{"type":"bool","var":"$decode_binary","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"true"}],"ret_type":"array"}]},"sqlite_fetch_column_types":{"desc":"Return an array of column types from a particular table","long_desc":"Object oriented style (method): sqlite_fetch_column_types() returns an array of column data types from the specified table_name table.","ver":"PHP 5 < 5.4.0","ret_desc":"Returns an array of column data types; FALSE on error.","url":"function.sqlite-fetch-column-types","name":"sqlite_fetch_column_types","params":[{"list":[{"type":"string","var":"$table_name","beh":0,"desc":"The table name to query."},{"type":"resource","var":"$dbhandle","beh":1,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"int","var":"$result_type","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_ASSOC is the default for this function.","def":"SQLITE_ASSOC"}],"ret_type":"array"},{"list":[{"type":"string","var":"$table_name","beh":0,"desc":"The table name to query."},{"type":"int","var":"$result_type","beh":0,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method.","def":"SQLITE_ASSOC"}],"ret_type":"array"}]},"sqlite_fetch_object":{"desc":"Fetches the next row from a result set as an object","long_desc":"Object oriented style (method):","ver":"PHP 5 < 5.4.0","url":"function.sqlite-fetch-object","name":"sqlite_fetch_object","params":[{"list":[{"type":"resource","var":"$result","beh":1,"desc":""},{"type":"string","var":"$class_name","beh":1,"desc":""},{"type":"array","var":"$ctor_params","beh":1,"desc":""},{"type":"bool","var":"$decode_binary","beh":1,"desc":"","def":"true"}],"ret_type":"object"},{"list":[{"type":"string","var":"$class_name","beh":1,"desc":""},{"type":"array","var":"$ctor_params","beh":1,"desc":""},{"type":"bool","var":"$decode_binary","beh":1,"desc":"","def":"true"}],"ret_type":"object"},{"list":[{"type":"string","var":"$class_name","beh":1,"desc":""},{"type":"array","var":"$ctor_params","beh":1,"desc":""},{"type":"bool","var":"$decode_binary","beh":1,"desc":"","def":"true"}],"ret_type":"object"}]},"sqlite_fetch_single":{"desc":"Fetches the first column of a result set as a string","long_desc":"Object oriented style (method): sqlite_fetch_single() is identical to sqlite_fetch_array() except that it returns the value of the first column of the rowset. This is the most optimal way to retrieve data when you are only interested in the values from a single column of data.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.1","ret_desc":"Returns the first column value, as a string.","seealso":[],"url":"function.sqlite-fetch-single","name":"sqlite_fetch_single","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The SQLite result resource. This parameter is not required when using the object-oriented method."},{"type":"bool","var":"$decode_binary","beh":0,"desc":"When the decode_binary parameter is set to TRUE (the default), PHP will decode the binary encoding it applied to the data if it was encoded using the sqlite_escape_string(). You should normally leave this value at its default, unless you are interoperating with databases created by other sqlite capable applications.","def":"true"}],"ret_type":"string"},{"list":[],"ret_type":"string"},{"list":[],"ret_type":"string"}]},"sqlite_fetch_string":{"desc":"Alias of sqlite_fetch_single()","long_desc":"This function is an alias of: sqlite_fetch_single().","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","url":"function.sqlite-fetch-string","name":"sqlite_fetch_string","params":[]},"sqlite_field_name":{"desc":"Returns the name of a particular field","long_desc":"Object oriented style (method): Given the ordinal column number, field_index, sqlite_field_name() returns the name of that field in the result set result.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns the name of a field in an SQLite result set, given the ordinal column number; FALSE on error.","url":"function.sqlite-field-name","name":"sqlite_field_name","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The SQLite result resource. This parameter is not required when using the object-oriented method."},{"type":"int","var":"$field_index","beh":0,"desc":"The ordinal column number in the result set."}],"ret_type":"string"},{"list":[],"ret_type":"string"},{"list":[],"ret_type":"string"}]},"sqlite_has_more":{"desc":"Finds whether or not more rows are available","long_desc":"Finds whether more rows are available from the given result set.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns TRUE if there are more rows available from the result handle, or FALSE otherwise.","seealso":[],"url":"function.sqlite-has-more","name":"sqlite_has_more","params":[{"list":[],"ret_type":"bool"}]},"sqlite_has_prev":{"desc":"Returns whether or not a previous row is available","long_desc":"Object oriented style (method): Find whether there are more previous rows from the given result handle.","ver":"PHP 5 < 5.4.0","ret_desc":"Returns TRUE if there are more previous rows available from the result handle, or FALSE otherwise.","seealso":[],"url":"function.sqlite-has-prev","name":"sqlite_has_prev","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"sqlite_key":{"desc":"Returns the current row index","long_desc":"Object oriented style (method): sqlite_key() returns the current row index of the buffered result set result.","ver":"PHP 5 >= 5.1.0 and < 5.4.0","ret_desc":"Returns the current row index of the buffered result set result.","seealso":[],"url":"function.sqlite-key","name":"sqlite_key","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"sqlite_last_error":{"desc":"Returns the error code of the last error for a database","long_desc":"Object oriented style (method): Returns the error code from the last operation performed on dbhandle (the database handle), or 0 when no error occurred. A human readable description of the error code can be retrieved using sqlite_error_string().","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns an error code, or 0 if no error occurred.","seealso":[],"url":"function.sqlite-last-error","name":"sqlite_last_error","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"sqlite_last_insert_rowid":{"desc":"Returns the rowid of the most recently inserted row","long_desc":"Object oriented style (method): Returns the rowid of the row that was most recently inserted into the database dbhandle, if it was created as an auto-increment field.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns the row id, as an integer.","url":"function.sqlite-last-insert-rowid","name":"sqlite_last_insert_rowid","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"sqlite_libencoding":{"desc":"Returns the encoding of the linked SQLite library","long_desc":"The SQLite library may be compiled in either ISO-8859-1 or UTF-8 compatible modes. This function allows you to determine which encoding scheme is used by your version of the library. When compiled with UTF-8 support, sqlite handles encoding and decoding of UTF-8 multi-byte character sequences, but does not yet do a complete job when working with the data (no normalization is performed for example), and some comparison operations may still not be carried out correctly.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns the library encoding.","seealso":[],"url":"function.sqlite-libencoding","name":"sqlite_libencoding","params":[{"list":[],"ret_type":"string"}]},"sqlite_libversion":{"desc":"Returns the version of the linked SQLite library","long_desc":"Returns the version of the linked SQLite library.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns the library version, as a string.","seealso":[],"url":"function.sqlite-libversion","name":"sqlite_libversion","params":[{"list":[],"ret_type":"string"}]},"sqlite_next":{"desc":"Seek to the next row number","long_desc":"Object oriented style (method): sqlite_next() advances the result handle result to the next row.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns TRUE on success, or FALSE if there are no more rows.","seealso":[],"url":"function.sqlite-next","name":"sqlite_next","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"sqlite_num_fields":{"desc":"Returns the number of fields in a result set","long_desc":"Object oriented style (method): Returns the number of fields in the result set.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns the number of fields, as an integer.","seealso":[],"url":"function.sqlite-num-fields","name":"sqlite_num_fields","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"sqlite_num_rows":{"desc":"Returns the number of rows in a buffered result set","long_desc":"Object oriented style (method): Returns the number of rows in the buffered result set.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns the number of rows, as an integer.","seealso":[],"url":"function.sqlite-num-rows","name":"sqlite_num_rows","params":[{"list":[],"ret_type":"int"},{"list":[],"ret_type":"int"}]},"sqlite_open":{"desc":"Opens an SQLite database and create the database if it does not exist","long_desc":"Object oriented style (constructor): Opens an SQLite database or creates the database if it does not exist.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns a resource (database handle) on success, FALSE on error.","seealso":[],"url":"function.sqlite-open","name":"sqlite_open","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"The filename of the SQLite database. If the file does not exist, SQLite will attempt to create it. PHP must have write permissions to the file if data is inserted, the database schema is modified or to create the database if it does not exist."},{"type":"int","var":"$mode","beh":1,"desc":"The mode of the file. Intended to be used to open the database in read-only mode. Presently, this parameter is ignored by the sqlite library. The default value for mode is the octal value 0666 and this is the recommended value.","def":666},{"type":"string","var":"&$error_message","beh":1,"desc":"Passed by reference and is set to hold a descriptive error message explaining why the database could not be opened if there was an error."}],"ret_type":"resource"}]},"sqlite_popen":{"desc":"Opens a persistent handle to an SQLite database and create the database if it does not exist","long_desc":"This function behaves identically to sqlite_open() except that is uses the persistent resource mechanism of PHP. For information about the meaning of the parameters, read the sqlite_open() manual page. sqlite_popen() will first check to see if a persistent handle has already been opened for the given filename. If it finds one, it returns that handle to your script, otherwise it opens a fresh handle to the database. The benefit of this approach is that you don't incur the performance cost of re-reading the database and index schema on each page hit served by persistent web server SAPI's (any SAPI except for regular CGI or CLI).","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns a resource (database handle) on success, FALSE on error.","seealso":[],"url":"function.sqlite-popen","name":"sqlite_popen","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"The filename of the SQLite database. If the file does not exist, SQLite will attempt to create it. PHP must have write permissions to the file if data is inserted, the database schema is modified or to create the database if it does not exist."},{"type":"int","var":"$mode","beh":1,"desc":"The mode of the file. Intended to be used to open the database in read-only mode. Presently, this parameter is ignored by the sqlite library. The default value for mode is the octal value 0666 and this is the recommended value.","def":666},{"type":"string","var":"&$error_message","beh":1,"desc":"Passed by reference and is set to hold a descriptive error message explaining why the database could not be opened if there was an error."}],"ret_type":"resource"}]},"sqlite_prev":{"desc":"Seek to the previous row number of a result set","long_desc":"Object oriented style (method): sqlite_prev() seeks back the result handle to the previous row.","ver":"PHP 5 < 5.4.0","ret_desc":"Returns TRUE on success, or FALSE if there are no more previous rows.","seealso":[],"url":"function.sqlite-prev","name":"sqlite_prev","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"sqlite_query":{"desc":"Executes a query against a given database and returns a result handle","long_desc":"Object oriented style (method): Executes an SQL statement given by the query against a given database handle.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"This function will return a result handle or FALSE on failure. For queries that return rows, the result handle can then be used with functions such as sqlite_fetch_array() and sqlite_seek().","seealso":[],"url":"function.sqlite-query","name":"sqlite_query","params":[{"list":[{"type":"resource","var":"$dbhandle","beh":1,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"string","var":"$query","beh":1,"desc":"The query to be executed. Data inside the query should be properly escaped."},{"type":"int","var":"$result_type","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"SQLITE_BOTH"},{"type":"string","var":"&$error_msg","beh":1,"desc":"The specified variable will be filled if an error occurs. This is specially important because SQL syntax errors can't be fetched using the sqlite_last_error() function."}],"ret_type":"resource"},{"list":[{"type":"string","var":"$query","beh":1,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"resource","var":"$dbhandle","beh":1,"desc":"The query to be executed. Data inside the query should be properly escaped."},{"type":"int","var":"$result_type","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"SQLITE_BOTH"},{"type":"string","var":"&$error_msg","beh":1,"desc":"The specified variable will be filled if an error occurs. This is specially important because SQL syntax errors can't be fetched using the sqlite_last_error() function."}],"ret_type":"resource"},{"list":[{"type":"string","var":"$query","beh":1,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"int","var":"$result_type","beh":1,"desc":"The query to be executed. Data inside the query should be properly escaped.","def":"SQLITE_BOTH"},{"type":"string","var":"&$error_msg","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function."}],"ret_type":"SQLiteResult"}]},"sqlite_rewind":{"desc":"Seek to the first row number","long_desc":"Object oriented style (method): sqlite_rewind() seeks back to the first row in the given result set.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns FALSE if there are no rows in the result set, TRUE otherwise.","seealso":[],"url":"function.sqlite-rewind","name":"sqlite_rewind","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"sqlite_seek":{"desc":"Seek to a particular row number of a buffered result set","long_desc":"Object oriented style (method): sqlite_seek() seeks to the row given by the parameter rownum.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns FALSE if the row does not exist, TRUE otherwise.","seealso":[],"url":"function.sqlite-seek","name":"sqlite_seek","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":"The SQLite result resource. This parameter is not required when using the object-oriented method."},{"type":"int","var":"$rownum","beh":0,"desc":"The ordinal row number to seek to. The row number is zero-based (0 is the first row)."}],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"sqlite_single_query":{"desc":"Executes a query and returns either an array for one single column or the value of the first row","long_desc":"Object oriented style (method):","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.1","url":"function.sqlite-single-query","name":"sqlite_single_query","params":[{"list":[{"type":"resource","var":"$db","beh":1,"desc":""},{"type":"string","var":"$query","beh":1,"desc":""},{"type":"bool","var":"$first_row_only","beh":1,"desc":""},{"type":"bool","var":"$decode_binary","beh":1,"desc":""}],"ret_type":"array"},{"list":[{"type":"string","var":"$query","beh":1,"desc":""},{"type":"bool","var":"$first_row_only","beh":1,"desc":""},{"type":"bool","var":"$decode_binary","beh":1,"desc":""}],"ret_type":"array"}]},"sqlite_udf_decode_binary":{"desc":"Decode binary data passed as parameters to an UDF","long_desc":"Decodes binary data passed as parameters to a UDF. You must call this function on parameters passed to your UDF if you need them to handle binary data, as the binary encoding employed by PHP will obscure the content and of the parameter in its natural, non-coded form. PHP does not perform this encode\/decode operation automatically as it would severely impact performance if it did.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"The decoded string.","seealso":[],"url":"function.sqlite-udf-decode-binary","name":"sqlite_udf_decode_binary","params":[{"list":[],"ret_type":"string"}]},"sqlite_udf_encode_binary":{"desc":"Encode binary data before returning it from an UDF","long_desc":"sqlite_udf_encode_binary() applies a binary encoding to the data so that it can be safely returned from queries (since the underlying libsqlite API is not binary safe). If there is a chance that your data might be binary unsafe (e.g.: it contains a NUL byte in the middle rather than at the end, or if it has and 0x01 byte as the first character) then you must call this function to encode the return value from your UDF. PHP does not perform this encode\/decode operation automatically as it would severely impact performance if it did.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"The encoded string.","seealso":[],"url":"function.sqlite-udf-encode-binary","name":"sqlite_udf_encode_binary","params":[{"list":[],"ret_type":"string"}]},"sqlite_unbuffered_query":{"desc":"Execute a query that does not prefetch and buffer all data","long_desc":"Object oriented style (method): sqlite_unbuffered_query() is identical to sqlite_query() except that the result that is returned is a sequential forward-only result set that can only be used to read each row, one after the other. This function is ideal for generating things such as HTML tables where you only need to process one row at a time and don't need to randomly access the row data.","ver":"PHP 5 < 5.4.0, PECL sqlite >= 1.0.0","ret_desc":"Returns a result handle or FALSE on failure.","seealso":[],"url":"function.sqlite-unbuffered-query","name":"sqlite_unbuffered_query","params":[{"list":[{"type":"resource","var":"$dbhandle","beh":1,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"string","var":"$query","beh":1,"desc":"The query to be executed. Data inside the query should be properly escaped."},{"type":"int","var":"$result_type","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"SQLITE_BOTH"},{"type":"string","var":"&$error_msg","beh":1,"desc":"The specified variable will be filled if an error occurs. This is specially important because SQL syntax errors can't be fetched using the sqlite_last_error() function."}],"ret_type":"resource"},{"list":[{"type":"string","var":"$query","beh":1,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"resource","var":"$dbhandle","beh":1,"desc":"The query to be executed. Data inside the query should be properly escaped."},{"type":"int","var":"$result_type","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function.","def":"SQLITE_BOTH"},{"type":"string","var":"&$error_msg","beh":1,"desc":"The specified variable will be filled if an error occurs. This is specially important because SQL syntax errors can't be fetched using the sqlite_last_error() function."}],"ret_type":"resource"},{"list":[{"type":"string","var":"$query","beh":1,"desc":"The SQLite Database resource; returned from sqlite_open() when used procedurally. This parameter is not required when using the object-oriented method."},{"type":"int","var":"$result_type","beh":1,"desc":"The query to be executed. Data inside the query should be properly escaped.","def":"SQLITE_BOTH"},{"type":"string","var":"&$error_msg","beh":1,"desc":"The optional result_type parameter accepts a constant and determines how the returned array will be indexed. Using SQLITE_ASSOC will return only associative indices (named fields) while SQLITE_NUM will return only numerical indices (ordinal field numbers). SQLITE_BOTH will return both associative and numerical indices. SQLITE_BOTH is the default for this function."}],"ret_type":"SQLiteUnbuffered"}]},"sqlite_valid":{"desc":"Returns whether more rows are available","long_desc":"Object oriented style (method): Finds whether more rows are available from the given result handle.","ver":"PHP 5 < 5.4.0","ret_desc":"Returns TRUE if there are more rows available from the result handle, or FALSE otherwise.","seealso":[],"url":"function.sqlite-valid","name":"sqlite_valid","params":[{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"},{"list":[],"ret_type":"bool"}]},"sqlsrv_begin_transaction":{"desc":"Begins a database transaction","long_desc":"The transaction begun by sqlsrv_begin_transaction() includes all statements that were executed after the call to sqlsrv_begin_transaction() and before calls to sqlsrv_rollback() or sqlsrv_commit(). Explicit transactions should be started and committed or rolled back using these functions instead of executing SQL statements that begin and committ\/roll back transactions. For more information, see \u00bb\u00a0SQLSRV Transactions.","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sqlsrv-begin-transaction","name":"sqlsrv_begin_transaction","params":[{"list":[],"ret_type":"bool"}]},"sqlsrv_cancel":{"desc":"Cancels a statement","long_desc":"Cancels a statement. Any results associated with the statement that have not been consumed are deleted. After sqlsrv_cancel() has been called, the specified statement can be re-executed if it was created with sqlsrv_prepare(). Calling sqlsrv_cancel() is not necessary if all the results associated with the statement have been consumed.","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sqlsrv-cancel","name":"sqlsrv_cancel","params":[{"list":[],"ret_type":"bool"}]},"sqlsrv_client_info":{"desc":"Returns information about the client and specified connection","long_desc":"Returns information about the client and specified connection","ver":"No version information available, might only be in SVN","ret_desc":"Returns an associative array with keys described in the table below. Returns FALSE otherwise.","seealso":[],"url":"function.sqlsrv-client-info","name":"sqlsrv_client_info","params":[{"list":[],"ret_type":"array"}]},"sqlsrv_close":{"desc":"Closes an open connection and releases resourses associated with the connection","long_desc":"Closes an open connection and releases resourses associated with the connection.","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sqlsrv-close","name":"sqlsrv_close","params":[{"list":[],"ret_type":"bool"}]},"sqlsrv_commit":{"desc":"Commits a transaction that was begun with sqlsrv_begin_transaction()","long_desc":"Commits a transaction that was begun with sqlsrv_begin_transaction(). The connection is returned to auto-commit mode after sqlsrv_commit() is called. The transaction that is committed includes all statements that were executed after the call to sqlsrv_begin_transaction(). Explicit transactions should be started and committed or rolled back using these functions instead of executing SQL statements that begin and committ\/roll back transactions. For more information, see \u00bb\u00a0SQLSRV Transactions.","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sqlsrv-commit","name":"sqlsrv_commit","params":[{"list":[],"ret_type":"bool"}]},"sqlsrv_configure":{"desc":"Changes the driver error handling and logging configurations","long_desc":"Changes the driver error handling and logging configurations.","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sqlsrv-configure","name":"sqlsrv_configure","params":[{"list":[{"type":"string","var":"$setting","beh":0,"desc":"The name of the setting to set. The possible values are \"WarningsReturnAsErrors\", \"LogSubsystems\", and \"LogSeverity\"."},{"type":"mixed","var":"$value","beh":0,"desc":"The value of the specified setting. The following table shows possible values:"}],"ret_type":"bool"}]},"sqlsrv_connect":{"desc":"Opens a connection to a Microsoft SQL Server database","long_desc":"Opens a connection to a Microsoft SQL Server database. By default, the connection is attempted using Windows Authentication. To connect using SQL Server Authentication, include \"UID\" and \"PWD\" in the connection options array.","ver":"No version information available, might only be in SVN","ret_desc":"A connection resource. If a connection cannot be successfully opened, FALSE is returned.","seealso":[],"url":"function.sqlsrv-connect","name":"sqlsrv_connect","params":[{"list":[{"type":"string","var":"$serverName","beh":0,"desc":"The name of the server to which a connection is established. To connect to a specific instance, follow the server name with a forward slash and the instance name (e.g. serverName\\sqlexpress)."},{"type":"array","var":"$connectionInfo","beh":1,"desc":"An associative array that specifies options for connecting to the server. If values for the UID and PWD keys are not specified, the connection will be attempted using Windows Authentication. For a complete list of supported keys, see \u00bb\u00a0SQLSRV Connection Options."}],"ret_type":"resource"}]},"sqlsrv_errors":{"desc":"Returns error and warning information about the last SQLSRV operation performed","long_desc":"Returns error and warning information about the last SQLSRV operation performed.","ver":"No version information available, might only be in SVN","ret_desc":"If errors and\/or warnings occured on the last sqlsrv operation, and array of arrays containing error information is returned. If no errors and\/or warnings occured on the last sqlsrv operation, NULL is returned. The following table describes the structure of the returned arrays:","seealso":[],"url":"function.sqlsrv-errors","name":"sqlsrv_errors","params":[{"list":[],"ret_type":"mixed"}]},"sqlsrv_execute":{"desc":"Executes a statement prepared with sqlsrv_prepare()","long_desc":"Executes a statement prepared with sqlsrv_prepare(). This function is ideal for executing a prepared statement multiple times with different parameter values.","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sqlsrv-execute","name":"sqlsrv_execute","params":[{"list":[],"ret_type":"bool"}]},"sqlsrv_fetch":{"desc":"Makes the next row in a result set available for reading","long_desc":"Makes the next row in a result set available for reading. Use sqlsrv_get_field() to read the fields of the row.","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE if the next row of a result set was successfully retrieved, FALSE if an error occurs, and NULL if there are no more rows in the result set.","seealso":[],"url":"function.sqlsrv-fetch","name":"sqlsrv_fetch","params":[{"list":[{"type":"resource","var":"$stmt","beh":1,"desc":"A statement resource created by executing sqlsrv_query() or sqlsrv_execute()."},{"type":"int","var":"$row","beh":1,"desc":"The row to be accessed. This parameter can only be used if the specified statement was prepared with a scrollable cursor. In that case, this parameter can take on one of the following values:"},{"type":"int","var":"$offset","beh":1,"desc":"Specifies the row to be accessed if the row parameter is set to SQLSRV_SCROLL_ABSOLUTE or SQLSRV_SCROLL_RELATIVE. Note that the first row in a result set has index 0."}],"ret_type":"mixed"}]},"sqlsrv_fetch_array":{"desc":"Returns a row as an array","long_desc":"Returns the next available row of data as an associative array, a numeric array, or both (the default).","ver":"No version information available, might only be in SVN","ret_desc":"Returns an array on success, NULL if there are no more rows to return, and FALSE if an error occurs.","seealso":[],"url":"function.sqlsrv-fetch-array","name":"sqlsrv_fetch_array","params":[{"list":[{"type":"resource","var":"$stmt","beh":1,"desc":"A statement resource returned by sqlsrv_query or sqlsrv_execute."},{"type":"int","var":"$fetchType","beh":1,"desc":"A predefined constant specifying the type of array to return. Possible values are SQLSRV_FETCH_ASSOC, SQLSRV_FETCH_NUMERIC, and SQLSRV_FETCH_BOTH (the default). A fetch type of SQLSRV_FETCH_ASSOC should not be used when consuming a result set with multiple columns of the same name."},{"type":"int","var":"$row","beh":1,"desc":"Specifies the row to access in a result set that uses a scrollable cursor. Possible values are SQLSRV_SCROLL_NEXT, SQLSRV_SCROLL_PRIOR, SQLSRV_SCROLL_FIRST, SQLSRV_SCROLL_LAST, SQLSRV_SCROLL_ABSOLUTE and, SQLSRV_SCROLL_RELATIVE (the default). When this parameter is specified, the fetchType must be explicitly defined."},{"type":"int","var":"$offset","beh":1,"desc":""}],"ret_type":"array"}]},"sqlsrv_fetch_object":{"desc":"Retrieves the next row of data in a result set as an object","long_desc":"Retrieves the next row of data in a result set as an instance of the specified class with properties that match the row field names and values that correspond to the row field values.","ver":"No version information available, might only be in SVN","ret_desc":"Returns an object on success, NULL if there are no more rows to return, and FALSE if an error occurs or if the specified class does not exist.","seealso":[],"url":"function.sqlsrv-fetch-object","name":"sqlsrv_fetch_object","params":[{"list":[{"type":"resource","var":"$stmt","beh":1,"desc":"A statement resource created by sqlsrv_query() or sqlsrv_execute()."},{"type":"string","var":"$className","beh":1,"desc":"The name of the class to instantiate. If no class name is specified, stdClass is instantiated."},{"type":"array","var":"$ctorParams","beh":1,"desc":"Values passed to the constructor of the specified class. If the constructor of the specified class takes parameters, the ctorParams array must be supplied."},{"type":"int","var":"$row","beh":1,"desc":"The row to be accessed. This parameter can only be used if the specified statement was prepared with a scrollable cursor. In that case, this parameter can take on one of the following values:"},{"type":"int","var":"$offset","beh":1,"desc":"Specifies the row to be accessed if the row parameter is set to SQLSRV_SCROLL_ABSOLUTE or SQLSRV_SCROLL_RELATIVE. Note that the first row in a result set has index 0."}],"ret_type":"mixed"}]},"sqlsrv_field_metadata":{"desc":"Retrieves metadata for the fields of a statement prepared by sqlsrv_prepare() or sqlsrv_query()","long_desc":"Retrieves metadata for the fields of a statement prepared by sqlsrv_prepare() or sqlsrv_query(). sqlsrv_field_metadata() can be called on a statement before or after statement execution.","ver":"No version information available, might only be in SVN","ret_desc":"Returns an array of arrays is returned on success. Otherwise, FALSE is returned. Each returned array is described by the following table:","seealso":[],"url":"function.sqlsrv-field-metadata","name":"sqlsrv_field_metadata","params":[{"list":[],"ret_type":"mixed"}]},"sqlsrv_free_stmt":{"desc":"Frees all resources for the specified statement","long_desc":"Frees all resources for the specified statement. The statement cannot be used after sqlsrv_free_stmt() has been called on it. If sqlsrv_free_stmt() is called on an in-progress statement that alters server state, statement execution is terminated and the statement is rolled back.","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sqlsrv-free-stmt","name":"sqlsrv_free_stmt","params":[{"list":[],"ret_type":"bool"}]},"sqlsrv_get_config":{"desc":"Returns the value of the specified configuration setting","long_desc":"Returns the value of the specified configuration setting.","ver":"No version information available, might only be in SVN","ret_desc":"Returns the value of the specified setting. If an invalid setting is specified, FALSE is returned.","seealso":[],"url":"function.sqlsrv-get-config","name":"sqlsrv_get_config","params":[{"list":[],"ret_type":"mixed"}]},"sqlsrv_get_field":{"desc":"Gets field data from the currently selected row","long_desc":"Gets field data from the currently selected row. Fields must be accessed in order. Field indices start at 0.","ver":"No version information available, might only be in SVN","ret_desc":"Returns data from the specified field on success. Returns FALSE otherwise.","seealso":[],"url":"function.sqlsrv-get-field","name":"sqlsrv_get_field","params":[{"list":[{"type":"resource","var":"$stmt","beh":0,"desc":"A statement resource returned by sqlsrv_query() or sqlsrv_execute()."},{"type":"int","var":"$fieldIndex","beh":1,"desc":"The index of the field to be retrieved. Field indices start at 0. Fields must be accessed in order. i.e. If you access field index 1, then field index 0 will not be available."},{"type":"int","var":"$getAsType","beh":1,"desc":"The PHP data type for the returned field data. If this parameter is not set, the field data will be returned as its default PHP data type. For information about default PHP data types, see \u00bb\u00a0Default PHP Data Types in the Microsoft SQLSRV documentation."}],"ret_type":"mixed"}]},"sqlsrv_has_rows":{"desc":"Indicates whether the specified statement has rows","long_desc":"Indicates whether the specified statement has rows.","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE if the specified statement has rows and FALSE if the statement does not have rows or if an error occured.","seealso":[],"url":"function.sqlsrv-has-rows","name":"sqlsrv_has_rows","params":[{"list":[],"ret_type":"bool"}]},"sqlsrv_next_result":{"desc":"Makes the next result of the specified statement active","long_desc":"Makes the next result of the specified statement active. Results include result sets, row counts, and output parameters.","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE if the next result was successfully retrieved, FALSE if an error occurred, and NULL if there are no more results to retrieve.","seealso":[],"url":"function.sqlsrv-next-result","name":"sqlsrv_next_result","params":[{"list":[],"ret_type":"mixed"}]},"sqlsrv_num_fields":{"desc":"Retrieves the number of fields (columns) on a statement","long_desc":"Retrieves the number of fields (columns) on a statement.","ver":"No version information available, might only be in SVN","ret_desc":"Returns the number of fields on success. Returns FALSE otherwise.","seealso":[],"url":"function.sqlsrv-num-fields","name":"sqlsrv_num_fields","params":[{"list":[],"ret_type":"mixed"}]},"sqlsrv_num_rows":{"desc":"Retrieves the number of rows in a result set","long_desc":"Retrieves the number of rows in a result set. This function requires that the statment resource be created with a static or keyset cursor. For more information, see sqlsrv_query(), sqlsrv_prepare(), or \u00bb\u00a0Specifying a Cursor Type and Selecting Rows in the Microsoft SQLSRV documentation.","ver":"No version information available, might only be in SVN","ret_desc":"Returns the number of rows retrieved on success and FALSE if an error occured. If a forward cursor (the default) or dynamic cursor is used, FALSE is returned.","seealso":[],"url":"function.sqlsrv-num-rows","name":"sqlsrv_num_rows","params":[{"list":[],"ret_type":"mixed"}]},"sqlsrv_prepare":{"desc":"Prepares a query for execution","long_desc":"Prepares a query for execution. This function is ideal for preparing a query that will be executed multiple times with different parameter values.","ver":"No version information available, might only be in SVN","ret_desc":"Returns a statement resource on success and FALSE if an error occurred.","seealso":[],"url":"function.sqlsrv-prepare","name":"sqlsrv_prepare","params":[{"list":[{"type":"resource","var":"$conn","beh":1,"desc":"A connection resource returned by sqlsrv_connect()."},{"type":"string","var":"$sql","beh":1,"desc":"The string that defines the query to be prepared and executed."},{"type":"array","var":"$params","beh":1,"desc":"An array specifying parameter information when executing a parameterized query. Array elements can be any of the following:"},{"type":"array","var":"$options","beh":1,"desc":"An array specifing query property options. The supported keys are described in the following table:"}],"ret_type":"mixed"}]},"sqlsrv_query":{"desc":"Prepares and executes a query.","long_desc":"Prepares and executes a query.","ver":"No version information available, might only be in SVN","ret_desc":"Returns a statement resource on success and FALSE if an error occurred.","seealso":[],"url":"function.sqlsrv-query","name":"sqlsrv_query","params":[{"list":[{"type":"resource","var":"$conn","beh":1,"desc":"A connection resource returned by sqlsrv_connect()."},{"type":"string","var":"$sql","beh":1,"desc":"The string that defines the query to be prepared and executed."},{"type":"array","var":"$params","beh":1,"desc":"An array specifying parameter information when executing a parameterized query. Array elements can be any of the following:"},{"type":"array","var":"$options","beh":1,"desc":"An array specifing query property options. The supported keys are described in the following table:"}],"ret_type":"mixed"}]},"sqlsrv_rollback":{"desc":"Rolls back a transaction that was begun with sqlsrv_begin_transaction()","long_desc":"Rolls back a transaction that was begun with sqlsrv_begin_transaction() and returns the connection to auto-commit mode.","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sqlsrv-rollback","name":"sqlsrv_rollback","params":[{"list":[],"ret_type":"bool"}]},"sqlsrv_rows_affected":{"desc":"Returns the number of rows modified by the last INSERT, UPDATE, or DELETE query executed","long_desc":"Returns the number of rows modified by the last INSERT, UPDATE, or DELETE query executed. For information about the number of rows returned by a SELECT query, see sqlsrv_num_rows().","ver":"No version information available, might only be in SVN","ret_desc":"Returns the number of rows affected by the last INSERT, UPDATE, or DELETE query. If no rows were affected, 0 is returned. If the number of affected rows cannot be determined, -1 is returned. If an error occured, FALSE is returned.","seealso":[],"url":"function.sqlsrv-rows-affected","name":"sqlsrv_rows_affected","params":[{"list":[],"ret_type":"int"}]},"sqlsrv_send_stream_data":{"desc":"Sends data from parameter streams to the server","long_desc":"Send data from parameter streams to the server. Up to 8 KB of data is sent with each call.","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE if there is more data to send and FALSE if there is not.","seealso":[],"url":"function.sqlsrv-send-stream-data","name":"sqlsrv_send_stream_data","params":[{"list":[],"ret_type":"bool"}]},"sqlsrv_server_info":{"desc":"Returns information about the server","long_desc":"Returns information about the server.","ver":"No version information available, might only be in SVN","ret_desc":"Returns an array as described in the following table:","seealso":[],"url":"function.sqlsrv-server-info","name":"sqlsrv_server_info","params":[{"list":[],"ret_type":"array"}]},"sqrt":{"desc":"Square root","long_desc":"Returns the square root of arg.","ver":"PHP 4, PHP 5","ret_desc":"The square root of arg or the special value NAN for negative numbers.","seealso":[],"url":"function.sqrt","name":"sqrt","params":[{"list":[],"ret_type":"float"}]},"srand":{"desc":"Seed the random number generator","long_desc":"Seeds the random number generator with seed or with a random value if no seed is given.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.srand","name":"srand","params":[{"list":[],"ret_type":"void"}]},"sscanf":{"desc":"Parses input from a string according to a format","long_desc":"The function sscanf() is the input analog of printf(). sscanf() reads from the string str and interprets it according to the specified format, which is described in the documentation for sprintf(). Any whitespace in the format string matches any whitespace in the input string. This means that even a tab \\t in the format string can match a single space character in the input string.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"If only two parameters were passed to this function, the values parsed will be returned as an array. Otherwise, if optional parameters are passed, the function will return the number of assigned values. The optional parameters must be passed by reference.","seealso":[],"url":"function.sscanf","name":"sscanf","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The input string being parsed."},{"type":"string","var":"$format","beh":1,"desc":"The interpreted format for str, which is described in the documentation for sprintf() with following differences:"},{"type":"mixed","var":"&$...","beh":1,"desc":"Optionally pass in variables by reference that will contain the parsed values."}],"ret_type":"mixed"}]},"ssdeep_fuzzy_compare":{"desc":"Calculates the match score between two fuzzy hash signatures","long_desc":"Calculates the match score between signature1 and signature2 using \u00bb\u00a0 context-triggered piecewise hashing, and returns the match score.","ver":"PECL ssdeep >= 1.0.0","ret_desc":"Returns an integer from 0 to 100 on success, FALSE otherwise.","url":"function.ssdeep-fuzzy-compare","name":"ssdeep_fuzzy_compare","params":[{"list":[{"type":"string","var":"$signature1","beh":0,"desc":"The first fuzzy hash signature string."},{"type":"string","var":"$signature2","beh":0,"desc":"The second fuzzy hash signature string."}],"ret_type":"int"}]},"ssdeep_fuzzy_hash":{"desc":"Create a fuzzy hash from a string","long_desc":"ssdeep_fuzzy_hash() calculates the hash of to_hash using \u00bb\u00a0 context-triggered piecewise hashing, and returns that hash.","ver":"PECL ssdeep >= 1.0.0","ret_desc":"Returns a string on success, FALSE otherwise.","url":"function.ssdeep-fuzzy-hash","name":"ssdeep_fuzzy_hash","params":[{"list":[],"ret_type":"string"}]},"ssdeep_fuzzy_hash_filename":{"desc":"Create a fuzzy hash from a file","long_desc":"ssdeep_fuzzy_hash_filename() calculates the hash of the file specified by file_name using \u00bb\u00a0context-triggered piecewise hashing, and returns that hash.","ver":"PECL ssdeep >= 1.0.0","ret_desc":"Returns a string on success, FALSE otherwise.","url":"function.ssdeep-fuzzy-hash-filename","name":"ssdeep_fuzzy_hash_filename","params":[{"list":[],"ret_type":"string"}]},"ssh2_auth_hostbased_file":{"desc":"Authenticate using a public hostkey","long_desc":"Authenticate using a public hostkey read from a file.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ssh2-auth-hostbased-file","name":"ssh2_auth_hostbased_file","params":[{"list":[{"type":"resource","var":"$session","beh":1,"desc":"An SSH connection link identifier, obtained from a call to ssh2_connect()."},{"type":"string","var":"$username","beh":1,"desc":""},{"type":"string","var":"$hostname","beh":1,"desc":""},{"type":"string","var":"$pubkeyfile","beh":1,"desc":""},{"type":"string","var":"$privkeyfile","beh":1,"desc":""},{"type":"string","var":"$passphrase","beh":1,"desc":"If privkeyfile is encrypted (which it should be), the passphrase must be provided."},{"type":"string","var":"$local_username","beh":1,"desc":"If local_username is omitted, then the value for username will be used for it."}],"ret_type":"bool"}]},"ssh2_auth_none":{"desc":"Authenticate as \"none\"","long_desc":"Attempt \"none\" authentication which usually will (and should) fail. As part of the failure, this function will return an array of accepted authentication methods.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns TRUE if the server does accept \"none\" as an authentication method, or an array of accepted authentication methods on failure.","url":"function.ssh2-auth-none","name":"ssh2_auth_none","params":[{"list":[{"type":"resource","var":"$session","beh":0,"desc":"An SSH connection link identifier, obtained from a call to ssh2_connect()."},{"type":"string","var":"$username","beh":0,"desc":"Remote user name."}],"ret_type":"mixed"}]},"ssh2_auth_password":{"desc":"Authenticate over SSH using a plain password","long_desc":"Authenticate over SSH using a plain password","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ssh2-auth-password","name":"ssh2_auth_password","params":[{"list":[{"type":"resource","var":"$session","beh":0,"desc":"An SSH connection link identifier, obtained from a call to ssh2_connect()."},{"type":"string","var":"$username","beh":0,"desc":"Remote user name."},{"type":"string","var":"$password","beh":1,"desc":"Password for username"}],"ret_type":"bool"}]},"ssh2_auth_pubkey_file":{"desc":"Authenticate using a public key","long_desc":"Authenticate using a public key read from a file.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.ssh2-auth-pubkey-file","name":"ssh2_auth_pubkey_file","params":[{"list":[{"type":"resource","var":"$session","beh":0,"desc":"An SSH connection link identifier, obtained from a call to ssh2_connect()."},{"type":"string","var":"$username","beh":1,"desc":""},{"type":"string","var":"$pubkeyfile","beh":1,"desc":""},{"type":"string","var":"$privkeyfile","beh":1,"desc":""},{"type":"string","var":"$passphrase","beh":1,"desc":"If privkeyfile is encrypted (which it should be), the passphrase must be provided."}],"ret_type":"bool"}]},"ssh2_connect":{"desc":"Connect to an SSH server","long_desc":"Establish a connection to a remote SSH server. Once connected, the client should verify the server's hostkey using ssh2_fingerprint(), then authenticate using either password or public key.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns a resource on success, or FALSE on error.","seealso":[],"url":"function.ssh2-connect","name":"ssh2_connect","params":[{"list":[{"type":"string","var":"$host","beh":1,"desc":""},{"type":"int","var":"$port","beh":1,"desc":"","def":22},{"type":"array","var":"$methods","beh":1,"desc":"methods may be an associative array with up to four parameters as described below. * - Supported Values are dependent on methods supported by underlying library. See \u00bb\u00a0libssh2 documentation for additional information."},{"type":"array","var":"$callbacks","beh":1,"desc":"callbacks may be an associative array with any or all of the following parameters."}],"ret_type":"resource"}]},"ssh2_exec":{"desc":"Execute a command on a remote server","long_desc":"Execute a command at the remote end and allocate a channel for it.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns a stream on success or FALSE on failure.","seealso":[],"url":"function.ssh2-exec","name":"ssh2_exec","params":[{"list":[{"type":"resource","var":"$session","beh":1,"desc":"An SSH connection link identifier, obtained from a call to ssh2_connect()."},{"type":"string","var":"$command","beh":1,"desc":""},{"type":"string","var":"$pty","beh":1,"desc":""},{"type":"array","var":"$env","beh":1,"desc":"env may be passed as an associative array of name\/value pairs to set in the target environment."},{"type":"int","var":"$width","beh":1,"desc":"Width of the virtual terminal.","def":80},{"type":"int","var":"$height","beh":1,"desc":"Height of the virtual terminal.","def":25},{"type":"int","var":"$width_height_type","beh":1,"desc":"width_height_type should be one of SSH2_TERM_UNIT_CHARS or SSH2_TERM_UNIT_PIXELS.","def":"SSH2_TERM_UNIT_CHARS"}],"ret_type":"resource"}]},"ssh2_fetch_stream":{"desc":"Fetch an extended data stream","long_desc":"Fetches an alternate substream associated with an SSH2 channel stream. The SSH2 protocol currently defines only one substream, STDERR, which has a substream ID of SSH2_STREAM_STDERR (defined as 1).","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns the requested stream resource.","seealso":[],"url":"function.ssh2-fetch-stream","name":"ssh2_fetch_stream","params":[{"list":[{"type":"resource","var":"$channel","beh":0,"desc":""},{"type":"int","var":"$streamid","beh":0,"desc":"An SSH2 channel stream."}],"ret_type":"resource"}]},"ssh2_fingerprint":{"desc":"Retrieve fingerprint of remote server","long_desc":"Returns a server hostkey hash from an active session.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns the hostkey hash as a string.","url":"function.ssh2-fingerprint","name":"ssh2_fingerprint","params":[{"list":[{"type":"resource","var":"$session","beh":0,"desc":"An SSH connection link identifier, obtained from a call to ssh2_connect()."},{"type":"int","var":"$flags","beh":0,"desc":"flags may be either of SSH2_FINGERPRINT_MD5 or SSH2_FINGERPRINT_SHA1 logically ORed with SSH2_FINGERPRINT_HEX or SSH2_FINGERPRINT_RAW.","def":"SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX"}],"ret_type":"string"}]},"ssh2_methods_negotiated":{"desc":"Return list of negotiated methods","long_desc":"Returns list of negotiated methods.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"","seealso":[],"url":"function.ssh2-methods-negotiated","name":"ssh2_methods_negotiated","params":[{"list":[],"ret_type":"array"}]},"ssh2_publickey_add":{"desc":"Add an authorized publickey","ver":"PECL ssh2 >= 0.10","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ssh2-publickey-add","name":"ssh2_publickey_add","params":[{"list":[{"type":"resource","var":"$pkey","beh":1,"desc":"Publickey Subsystem resource created by ssh2_publickey_init()."},{"type":"string","var":"$algoname","beh":1,"desc":"Publickey algorithm (e.g.): ssh-dss, ssh-rsa"},{"type":"string","var":"$blob","beh":1,"desc":"Publickey blob as raw binary data"},{"type":"bool","var":"$overwrite","beh":1,"desc":"If the specified key already exists, should it be overwritten?","def":"false"},{"type":"array","var":"$attributes","beh":1,"desc":"Associative array of attributes to assign to this public key. Refer to ietf-secsh-publickey-subsystem for a list of supported attributes. To mark an attribute as mandatory, precede its name with an asterisk. If the server is unable to support an attribute marked mandatory, it will abort the add process."}],"ret_type":"bool"}]},"ssh2_publickey_init":{"desc":"Initialize Publickey subsystem","long_desc":"Request the Publickey subsystem from an already connected SSH2 server. The publickey subsystem allows an already connected and authenticated client to manage the list of authorized public keys stored on the target server in an implementation agnostic manner. If the remote server does not support the publickey subsystem, the ssh2_publickey_init() function will return FALSE.","ver":"PECL ssh2 >= 0.10","ret_desc":"Returns an SSH2 Publickey Subsystem resource for use with all other ssh2_publickey_*() methods or FALSE on failure.","seealso":[],"url":"function.ssh2-publickey-init","name":"ssh2_publickey_init","params":[{"list":[],"ret_type":"resource"}]},"ssh2_publickey_list":{"desc":"List currently authorized publickeys","long_desc":"List currently authorized publickeys.","ver":"PECL ssh2 >= 0.10","ret_desc":"Returns a numerically indexed array of keys, each of which is an associative array containing: name, blob, and attrs elements.","seealso":[],"url":"function.ssh2-publickey-list","name":"ssh2_publickey_list","params":[{"list":[],"ret_type":"array"}]},"ssh2_publickey_remove":{"desc":"Remove an authorized publickey","long_desc":"Removes an authorized publickey.","ver":"PECL ssh2 >= 0.10","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ssh2-publickey-remove","name":"ssh2_publickey_remove","params":[{"list":[{"type":"resource","var":"$pkey","beh":0,"desc":"Publickey Subsystem Resource"},{"type":"string","var":"$algoname","beh":0,"desc":"Publickey algorithm (e.g.): ssh-dss, ssh-rsa"},{"type":"string","var":"$blob","beh":1,"desc":"Publickey blob as raw binary data"}],"ret_type":"bool"}]},"ssh2_scp_recv":{"desc":"Request a file via SCP","long_desc":"Copy a file from the remote server to the local filesystem using the SCP protocol.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ssh2-scp-recv","name":"ssh2_scp_recv","params":[{"list":[{"type":"resource","var":"$session","beh":0,"desc":"An SSH connection link identifier, obtained from a call to ssh2_connect()."},{"type":"string","var":"$remote_file","beh":0,"desc":"Path to the remote file."},{"type":"string","var":"$local_file","beh":1,"desc":"Path to the local file."}],"ret_type":"bool"}]},"ssh2_scp_send":{"desc":"Send a file via SCP","long_desc":"Copy a file from the local filesystem to the remote server using the SCP protocol.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ssh2-scp-send","name":"ssh2_scp_send","params":[{"list":[{"type":"resource","var":"$session","beh":0,"desc":"An SSH connection link identifier, obtained from a call to ssh2_connect()."},{"type":"string","var":"$local_file","beh":1,"desc":"Path to the local file."},{"type":"string","var":"$remote_file","beh":1,"desc":"Path to the remote file."},{"type":"int","var":"$create_mode","beh":1,"desc":"The file will be created with the mode specified by create_mode.","def":644}],"ret_type":"bool"}]},"ssh2_sftp":{"desc":"Initialize SFTP subsystem","long_desc":"Request the SFTP subsystem from an already connected SSH2 server.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"This method returns an SSH2 SFTP resource for use with all other ssh2_sftp_*() methods and the ssh2.sftp:\/\/ fopen wrapper.","seealso":[],"url":"function.ssh2-sftp","name":"ssh2_sftp","params":[{"list":[],"ret_type":"resource"}]},"ssh2_sftp_lstat":{"desc":"Stat a symbolic link","long_desc":"Stats a symbolic link on the remote filesystem without following the link. This function is similar to using the lstat() function with the ssh2.sftp:\/\/ wrapper in PHP 5 and returns the same values.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"See the documentation for stat() for details on the values which may be returned.","seealso":[],"url":"function.ssh2-sftp-lstat","name":"ssh2_sftp_lstat","params":[{"list":[{"type":"resource","var":"$sftp","beh":0,"desc":""},{"type":"string","var":"$path","beh":0,"desc":"Path to the remote symbolic link."}],"ret_type":"array"}]},"ssh2_sftp_mkdir":{"desc":"Create a directory","long_desc":"Creates a directory on the remote file server with permissions set to mode. This function is similar to using mkdir() with the ssh2.sftp:\/\/ wrapper.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ssh2-sftp-mkdir","name":"ssh2_sftp_mkdir","params":[{"list":[{"type":"resource","var":"$sftp","beh":1,"desc":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"type":"string","var":"$dirname","beh":1,"desc":"Path of the new directory."},{"type":"int","var":"$mode","beh":1,"desc":"Permissions on the new directory.","def":777},{"type":"bool","var":"$recursive","beh":1,"desc":"If recursive is TRUE any parent directories required for dirname will be automatically created as well.","def":"false"}],"ret_type":"bool"}]},"ssh2_sftp_readlink":{"desc":"Return the target of a symbolic link","long_desc":"Returns the target of a symbolic link.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns the target of the symbolic link.","seealso":[],"url":"function.ssh2-sftp-readlink","name":"ssh2_sftp_readlink","params":[{"list":[{"type":"resource","var":"$sftp","beh":0,"desc":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"type":"string","var":"$link","beh":0,"desc":"Path of the symbolic link."}],"ret_type":"string"}]},"ssh2_sftp_realpath":{"desc":"Resolve the realpath of a provided path string","long_desc":"Translates filename into the effective real path on the remote filesystem.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns the real path as a string.","seealso":[],"url":"function.ssh2-sftp-realpath","name":"ssh2_sftp_realpath","params":[{"list":[{"type":"resource","var":"$sftp","beh":0,"desc":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"type":"string","var":"$filename","beh":0,"desc":""}],"ret_type":"string"}]},"ssh2_sftp_rename":{"desc":"Rename a remote file","long_desc":"Renames a file on the remote filesystem.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ssh2-sftp-rename","name":"ssh2_sftp_rename","params":[{"list":[{"type":"resource","var":"$sftp","beh":0,"desc":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"type":"string","var":"$from","beh":0,"desc":"The current file that is being renamed."},{"type":"string","var":"$to","beh":1,"desc":"The new file name that replaces from."}],"ret_type":"bool"}]},"ssh2_sftp_rmdir":{"desc":"Remove a directory","long_desc":"Removes a directory from the remote file server. This function is similar to using rmdir() with the ssh2.sftp:\/\/ wrapper.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ssh2-sftp-rmdir","name":"ssh2_sftp_rmdir","params":[{"list":[{"type":"resource","var":"$sftp","beh":0,"desc":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"type":"string","var":"$dirname","beh":0,"desc":""}],"ret_type":"bool"}]},"ssh2_sftp_stat":{"desc":"Stat a file on a remote filesystem","long_desc":"Stats a file on the remote filesystem following any symbolic links. This function is similar to using the stat() function with the ssh2.sftp:\/\/ wrapper in PHP 5 and returns the same values.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"See the documentation for stat() for details on the values which may be returned.","seealso":[],"url":"function.ssh2-sftp-stat","name":"ssh2_sftp_stat","params":[{"list":[{"type":"resource","var":"$sftp","beh":0,"desc":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"type":"string","var":"$path","beh":0,"desc":""}],"ret_type":"array"}]},"ssh2_sftp_symlink":{"desc":"Create a symlink","long_desc":"Creates a symbolic link named link on the remote filesystem pointing to target.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ssh2-sftp-symlink","name":"ssh2_sftp_symlink","params":[{"list":[{"type":"resource","var":"$sftp","beh":0,"desc":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"type":"string","var":"$target","beh":0,"desc":"Target of the symbolic link."},{"type":"string","var":"$link","beh":1,"desc":""}],"ret_type":"bool"}]},"ssh2_sftp_unlink":{"desc":"Delete a file","long_desc":"Deletes a file on the remote filesystem.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.ssh2-sftp-unlink","name":"ssh2_sftp_unlink","params":[{"list":[{"type":"resource","var":"$sftp","beh":0,"desc":"An SSH2 SFTP resource opened by ssh2_sftp()."},{"type":"string","var":"$filename","beh":0,"desc":""}],"ret_type":"bool"}]},"ssh2_shell":{"desc":"Request an interactive shell","long_desc":"Open a shell at the remote end and allocate a stream for it.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"","seealso":[],"url":"function.ssh2-shell","name":"ssh2_shell","params":[{"list":[{"type":"resource","var":"$session","beh":1,"desc":"An SSH connection link identifier, obtained from a call to ssh2_connect()."},{"type":"string","var":"$term_type","beh":1,"desc":"term_type should correspond to one of the entries in the target system's \/etc\/termcap file.","def":"\"vanilla\""},{"type":"array","var":"$env","beh":1,"desc":"env may be passed as an associative array of name\/value pairs to set in the target environment."},{"type":"int","var":"$width","beh":1,"desc":"Width of the virtual terminal.","def":80},{"type":"int","var":"$height","beh":1,"desc":"Height of the virtual terminal.","def":25},{"type":"int","var":"$width_height_type","beh":1,"desc":"width_height_type should be one of SSH2_TERM_UNIT_CHARS or SSH2_TERM_UNIT_PIXELS.","def":"SSH2_TERM_UNIT_CHARS"}],"ret_type":"resource"}]},"ssh2_tunnel":{"desc":"Open a tunnel through a remote server","long_desc":"Open a socket stream to an arbitrary host\/port by way of the currently connected SSH server.","ver":"PECL ssh2 >= 0.9.0","ret_desc":"","seealso":[],"url":"function.ssh2-tunnel","name":"ssh2_tunnel","params":[{"list":[{"type":"resource","var":"$session","beh":0,"desc":"An SSH connection link identifier, obtained from a call to ssh2_connect()."},{"type":"string","var":"$host","beh":0,"desc":""},{"type":"int","var":"$port","beh":1,"desc":""}],"ret_type":"resource"}]},"stat":{"desc":"Gives information about a file","long_desc":"Gathers the statistics of the file named by filename. If filename is a symbolic link, statistics are from the file itself, not the symlink. lstat() is identical to stat() except it would instead be based off the symlinks status.","ver":"PHP 4, PHP 5","ret_desc":"","seealso":[],"url":"function.stat","name":"stat","params":[{"list":[],"ret_type":"array"}]},"stats_absolute_deviation":{"desc":"Returns the absolute deviation of an array of values","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-absolute-deviation","name":"stats_absolute_deviation","params":[{"list":[],"ret_type":"float"}]},"stats_cdf_beta":{"desc":"CDF function for BETA Distribution. Calculates any one parameter of the beta distribution given values for the others.","long_desc":"Method Cumulative distribution function (P) is calculated directly by code associated with the following reference. DiDinato, A. R. and Morris, A. H. Algorithm 708: Significant Digit Computation of the Incomplete Beta Function Ratios. ACM Trans. Math. Softw. 18 (1993), 360-373. Computation of other parameters involve a search for a value that produces the desired value of P. The search relies on the monotonicity of P with the other parameter. Note The beta density is proportional to t^(A-1) * (1-t)^(B-1) Arguments P -- The integral from 0 to X of the chi-square distribution. Input range: [0, 1]. Q -- 1-P. Input range: [0, 1]. P + Q = 1.0. X -- Upper limit of integration of beta density. Input range: [0,1]. Search range: [0,1] Y -- 1-X. Input range: [0,1]. Search range: [0,1] X + Y = 1.0. A -- The first parameter of the beta density. Input range: (0, +infinity). Search range: [1D-100,1D100] B -- The second parameter of the beta density. Input range: (0, +infinity). Search range: [1D-100,1D100] STATUS -- 0 if calculation completed correctly -I if input parameter number I is out of range 1 if answer appears to be lower than lowest search bound 2 if answer appears to be higher than greatest search bound 3 if P + Q .ne. 1 4 if X + Y .ne. 1 BOUND -- Undefined if STATUS is 0 Bound exceeded by parameter number I if STATUS is negative. Lower search bound if STATUS is 1. Upper search bound if STATUS is 2.","ver":"PECL stats >= 1.0.0","ret_desc":"STATUS -- 0 if calculation completed correctly -I if input parameter number I is out of range 1 if answer appears to be lower than lowest search bound 2 if answer appears to be higher than greatest search bound 3 if P + Q .ne. 1 4 if X + Y .ne. 1","url":"function.stats-cdf-beta","name":"stats_cdf_beta","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"float","var":"$par3","beh":1,"desc":""},{"type":"int","var":"$which","beh":1,"desc":"Integer indicating which of the next four argument values is to be calculated from the others. Legal range: 1..4 which = 1 : Calculate P and Q from X,Y,A and B which = 2 : Calculate X and Y from P,Q,A and B which = 3 : Calculate A from P,Q,X,Y and B which = 4 : Calculate B from P,Q,X,Y and A"}],"ret_type":"float"}]},"stats_cdf_binomial":{"desc":"Calculates any one parameter of the binomial distribution given values for the others.","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-cdf-binomial","name":"stats_cdf_binomial","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"float","var":"$par3","beh":1,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_cdf_cauchy":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-cdf-cauchy","name":"stats_cdf_cauchy","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"float","var":"$par3","beh":1,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_cdf_chisquare":{"desc":"Calculates any one parameter of the chi-square distribution given values for the others.","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-cdf-chisquare","name":"stats_cdf_chisquare","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_cdf_exponential":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-cdf-exponential","name":"stats_cdf_exponential","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_cdf_f":{"desc":"Calculates any one parameter of the F distribution given values for the others.","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-cdf-f","name":"stats_cdf_f","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"float","var":"$par3","beh":1,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_cdf_gamma":{"desc":"Calculates any one parameter of the gamma distribution given values for the others.","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-cdf-gamma","name":"stats_cdf_gamma","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"float","var":"$par3","beh":1,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_cdf_laplace":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-cdf-laplace","name":"stats_cdf_laplace","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"float","var":"$par3","beh":1,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_cdf_logistic":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-cdf-logistic","name":"stats_cdf_logistic","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"float","var":"$par3","beh":1,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_cdf_negative_binomial":{"desc":"Calculates any one parameter of the negative binomial distribution given values for the others.","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-cdf-negative-binomial","name":"stats_cdf_negative_binomial","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"float","var":"$par3","beh":1,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_cdf_noncentral_chisquare":{"desc":"Calculates any one parameter of the non-central chi-square distribution given values for the others.","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-cdf-noncentral-chisquare","name":"stats_cdf_noncentral_chisquare","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"float","var":"$par3","beh":1,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_cdf_noncentral_f":{"desc":"Calculates any one parameter of the Non-central F distribution given values for the others.","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-cdf-noncentral-f","name":"stats_cdf_noncentral_f","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"float","var":"$par3","beh":1,"desc":""},{"type":"float","var":"$par4","beh":1,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_cdf_poisson":{"desc":"Calculates any one parameter of the Poisson distribution given values for the others.","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-cdf-poisson","name":"stats_cdf_poisson","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_cdf_t":{"desc":"Calculates any one parameter of the T distribution given values for the others.","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-cdf-t","name":"stats_cdf_t","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_cdf_uniform":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-cdf-uniform","name":"stats_cdf_uniform","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"float","var":"$par3","beh":1,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_cdf_weibull":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-cdf-weibull","name":"stats_cdf_weibull","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"float","var":"$par3","beh":1,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_covariance":{"desc":"Computes the covariance of two data sets","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-covariance","name":"stats_covariance","params":[{"list":[{"type":"array","var":"$a","beh":0,"desc":""},{"type":"array","var":"$b","beh":0,"desc":""}],"ret_type":"float"}]},"stats_den_uniform":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-den-uniform","name":"stats_den_uniform","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$a","beh":0,"desc":""},{"type":"float","var":"$b","beh":1,"desc":""}],"ret_type":"float"}]},"stats_dens_beta":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-dens-beta","name":"stats_dens_beta","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$a","beh":0,"desc":""},{"type":"float","var":"$b","beh":1,"desc":""}],"ret_type":"float"}]},"stats_dens_cauchy":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-dens-cauchy","name":"stats_dens_cauchy","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$ave","beh":0,"desc":""},{"type":"float","var":"$stdev","beh":1,"desc":""}],"ret_type":"float"}]},"stats_dens_chisquare":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-dens-chisquare","name":"stats_dens_chisquare","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$dfr","beh":0,"desc":""}],"ret_type":"float"}]},"stats_dens_exponential":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-dens-exponential","name":"stats_dens_exponential","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$scale","beh":0,"desc":""}],"ret_type":"float"}]},"stats_dens_f":{"desc":"","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-dens-f","name":"stats_dens_f","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$dfr1","beh":0,"desc":""},{"type":"float","var":"$dfr2","beh":1,"desc":""}],"ret_type":"float"}]},"stats_dens_gamma":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-dens-gamma","name":"stats_dens_gamma","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$shape","beh":0,"desc":""},{"type":"float","var":"$scale","beh":1,"desc":""}],"ret_type":"float"}]},"stats_dens_laplace":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-dens-laplace","name":"stats_dens_laplace","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$ave","beh":0,"desc":""},{"type":"float","var":"$stdev","beh":1,"desc":""}],"ret_type":"float"}]},"stats_dens_logistic":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-dens-logistic","name":"stats_dens_logistic","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$ave","beh":0,"desc":""},{"type":"float","var":"$stdev","beh":1,"desc":""}],"ret_type":"float"}]},"stats_dens_negative_binomial":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-dens-negative-binomial","name":"stats_dens_negative_binomial","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$n","beh":0,"desc":""},{"type":"float","var":"$pi","beh":1,"desc":""}],"ret_type":"float"}]},"stats_dens_normal":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-dens-normal","name":"stats_dens_normal","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$ave","beh":0,"desc":""},{"type":"float","var":"$stdev","beh":1,"desc":""}],"ret_type":"float"}]},"stats_dens_pmf_binomial":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-dens-pmf-binomial","name":"stats_dens_pmf_binomial","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$n","beh":0,"desc":""},{"type":"float","var":"$pi","beh":1,"desc":""}],"ret_type":"float"}]},"stats_dens_pmf_hypergeometric":{"desc":"","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-dens-pmf-hypergeometric","name":"stats_dens_pmf_hypergeometric","params":[{"list":[{"type":"float","var":"$n1","beh":0,"desc":""},{"type":"float","var":"$n2","beh":0,"desc":""},{"type":"float","var":"$N1","beh":1,"desc":""},{"type":"float","var":"$N2","beh":1,"desc":""}],"ret_type":"float"}]},"stats_dens_pmf_poisson":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-dens-pmf-poisson","name":"stats_dens_pmf_poisson","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$lb","beh":0,"desc":""}],"ret_type":"float"}]},"stats_dens_t":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-dens-t","name":"stats_dens_t","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$dfr","beh":0,"desc":""}],"ret_type":"float"}]},"stats_dens_weibull":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-dens-weibull","name":"stats_dens_weibull","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":""},{"type":"float","var":"$a","beh":0,"desc":""},{"type":"float","var":"$b","beh":1,"desc":""}],"ret_type":"float"}]},"stats_harmonic_mean":{"desc":"Returns the harmonic mean of an array of values","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-harmonic-mean","name":"stats_harmonic_mean","params":[{"list":[],"ret_type":"number"}]},"stats_kurtosis":{"desc":"Computes the kurtosis of the data in the array","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-kurtosis","name":"stats_kurtosis","params":[{"list":[],"ret_type":"float"}]},"stats_rand_gen_beta":{"desc":"Generates beta random deviate","long_desc":"Returns a random deviate from the beta distribution with parameters A and B. The density of the beta is x^(a-1) * (1-x)^(b-1) \/ B(a,b) for 0 < x <. Method R. C. H. Cheng.","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-beta","name":"stats_rand_gen_beta","params":[{"list":[{"type":"float","var":"$a","beh":0,"desc":""},{"type":"float","var":"$b","beh":0,"desc":""}],"ret_type":"float"}]},"stats_rand_gen_chisquare":{"desc":"Generates random deviate from the distribution of a chisquare with \"df\" degrees of freedom random variable.","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-chisquare","name":"stats_rand_gen_chisquare","params":[{"list":[],"ret_type":"float"}]},"stats_rand_gen_exponential":{"desc":"Generates a single random deviate from an exponential distribution with mean \"av\"","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-exponential","name":"stats_rand_gen_exponential","params":[{"list":[],"ret_type":"float"}]},"stats_rand_gen_f":{"desc":"Generates a random deviate","long_desc":"Generates a random deviate from the F (variance ratio) distribution with \"dfn\" degrees of freedom in the numerator and \"dfd\" degrees of freedom in the denominator. Method : directly generates ratio of chisquare variates.","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-f","name":"stats_rand_gen_f","params":[{"list":[{"type":"float","var":"$dfn","beh":0,"desc":""},{"type":"float","var":"$dfd","beh":0,"desc":""}],"ret_type":"float"}]},"stats_rand_gen_funiform":{"desc":"Generates uniform float between low (exclusive) and high (exclusive)","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-funiform","name":"stats_rand_gen_funiform","params":[{"list":[{"type":"float","var":"$low","beh":0,"desc":""},{"type":"float","var":"$high","beh":0,"desc":""}],"ret_type":"float"}]},"stats_rand_gen_gamma":{"desc":"Generates random deviates from a gamma distribution","long_desc":"Generates random deviates from the gamma distribution whose density is (A**R)\/Gamma(R) * X**(R-1) * Exp(-A*X).","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-gamma","name":"stats_rand_gen_gamma","params":[{"list":[{"type":"float","var":"$a","beh":0,"desc":"location parameter of Gamma distribution (a > 0)."},{"type":"float","var":"$r","beh":0,"desc":"shape parameter of Gamma distribution (r > 0)."}],"ret_type":"float"}]},"stats_rand_gen_ibinomial":{"desc":"Generates a single random deviate from a binomial distribution whose number of trials is \"n\" (n >= 0) and whose probability of an event in each trial is \"pp\" ([0;1]). Method : algorithm BTPE","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-ibinomial","name":"stats_rand_gen_ibinomial","params":[{"list":[{"type":"int","var":"$n","beh":0,"desc":""},{"type":"float","var":"$pp","beh":0,"desc":""}],"ret_type":"int"}]},"stats_rand_gen_ibinomial_negative":{"desc":"Generates a single random deviate from a negative binomial distribution. Arguments : n - the number of trials in the negative binomial distribution from which a random deviate is to be generated (n > 0), p - the probability of an event (0 < p < 1)).","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-ibinomial-negative","name":"stats_rand_gen_ibinomial_negative","params":[{"list":[{"type":"int","var":"$n","beh":0,"desc":""},{"type":"float","var":"$p","beh":0,"desc":""}],"ret_type":"int"}]},"stats_rand_gen_int":{"desc":"Generates random integer between 1 and 2147483562","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-int","name":"stats_rand_gen_int","params":[{"list":[],"ret_type":"int"}]},"stats_rand_gen_ipoisson":{"desc":"Generates a single random deviate from a Poisson distribution with mean \"mu\" (mu >= 0.0).","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-ipoisson","name":"stats_rand_gen_ipoisson","params":[{"list":[],"ret_type":"int"}]},"stats_rand_gen_iuniform":{"desc":"Generates integer uniformly distributed between LOW (inclusive) and HIGH (inclusive)","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-iuniform","name":"stats_rand_gen_iuniform","params":[{"list":[{"type":"int","var":"$low","beh":0,"desc":""},{"type":"int","var":"$high","beh":0,"desc":""}],"ret_type":"int"}]},"stats_rand_gen_noncenral_chisquare":{"desc":"Generates random deviate from the distribution of a noncentral chisquare with \"df\" degrees of freedom and noncentrality parameter \"xnonc\". d must be >= 1.0, xnonc must >= 0.0","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-noncenral-chisquare","name":"stats_rand_gen_noncenral_chisquare","params":[{"list":[{"type":"float","var":"$df","beh":0,"desc":""},{"type":"float","var":"$xnonc","beh":0,"desc":""}],"ret_type":"float"}]},"stats_rand_gen_noncentral_f":{"desc":"Generates a random deviate from the noncentral F (variance ratio) distribution with \"dfn\" degrees of freedom in the numerator, and \"dfd\" degrees of freedom in the denominator, and noncentrality parameter \"xnonc\". Method : directly generates ratio of noncentral numerator chisquare variate to central denominator chisquare variate.","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-noncentral-f","name":"stats_rand_gen_noncentral_f","params":[{"list":[{"type":"float","var":"$dfn","beh":0,"desc":""},{"type":"float","var":"$dfd","beh":0,"desc":""},{"type":"float","var":"$xnonc","beh":1,"desc":""}],"ret_type":"float"}]},"stats_rand_gen_noncentral_t":{"desc":"Generates a single random deviate from a noncentral T distribution","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-noncentral-t","name":"stats_rand_gen_noncentral_t","params":[{"list":[{"type":"float","var":"$df","beh":0,"desc":""},{"type":"float","var":"$xnonc","beh":0,"desc":""}],"ret_type":"float"}]},"stats_rand_gen_normal":{"desc":"Generates a single random deviate from a normal distribution with mean, av, and standard deviation, sd (sd >= 0). Method : Renames SNORM from TOMS as slightly modified by BWB to use RANF instead of SUNIF.","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-normal","name":"stats_rand_gen_normal","params":[{"list":[{"type":"float","var":"$av","beh":0,"desc":""},{"type":"float","var":"$sd","beh":0,"desc":""}],"ret_type":"float"}]},"stats_rand_gen_t":{"desc":"Generates a single random deviate from a T distribution","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-gen-t","name":"stats_rand_gen_t","params":[{"list":[],"ret_type":"float"}]},"stats_rand_get_seeds":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-get-seeds","name":"stats_rand_get_seeds","params":[{"list":[],"ret_type":"array"}]},"stats_rand_phrase_to_seeds":{"desc":"generate two seeds for the RGN random number generator","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-phrase-to-seeds","name":"stats_rand_phrase_to_seeds","params":[{"list":[],"ret_type":"array"}]},"stats_rand_ranf":{"desc":"Returns a random floating point number from a uniform distribution over 0 - 1 (endpoints of this interval are not returned) using the current generator","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-ranf","name":"stats_rand_ranf","params":[{"list":[],"ret_type":"float"}]},"stats_rand_setall":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-rand-setall","name":"stats_rand_setall","params":[{"list":[{"type":"int","var":"$iseed1","beh":0,"desc":""},{"type":"int","var":"$iseed2","beh":0,"desc":""}],"ret_type":"void"}]},"stats_skew":{"desc":"Computes the skewness of the data in the array","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-skew","name":"stats_skew","params":[{"list":[],"ret_type":"float"}]},"stats_standard_deviation":{"desc":"Returns the standard deviation","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-standard-deviation","name":"stats_standard_deviation","params":[{"list":[{"type":"array","var":"$a","beh":0,"desc":""},{"type":"bool","var":"$sample","beh":0,"desc":"","def":"false"}],"ret_type":"float"}]},"stats_stat_binomial_coef":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-stat-binomial-coef","name":"stats_stat_binomial_coef","params":[{"list":[{"type":"int","var":"$x","beh":0,"desc":""},{"type":"int","var":"$n","beh":0,"desc":""}],"ret_type":"float"}]},"stats_stat_correlation":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-stat-correlation","name":"stats_stat_correlation","params":[{"list":[{"type":"array","var":"$arr1","beh":0,"desc":""},{"type":"array","var":"$arr2","beh":0,"desc":""}],"ret_type":"float"}]},"stats_stat_gennch":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-stat-gennch","name":"stats_stat_gennch","params":[{"list":[],"ret_type":"float"}]},"stats_stat_independent_t":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-stat-independent-t","name":"stats_stat_independent_t","params":[{"list":[{"type":"array","var":"$arr1","beh":0,"desc":""},{"type":"array","var":"$arr2","beh":0,"desc":""}],"ret_type":"float"}]},"stats_stat_innerproduct":{"desc":"","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-stat-innerproduct","name":"stats_stat_innerproduct","params":[{"list":[{"type":"array","var":"$arr1","beh":0,"desc":""},{"type":"array","var":"$arr2","beh":0,"desc":""}],"ret_type":"float"}]},"stats_stat_noncentral_t":{"desc":"Calculates any one parameter of the noncentral t distribution give values for the others.","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-stat-noncentral-t","name":"stats_stat_noncentral_t","params":[{"list":[{"type":"float","var":"$par1","beh":0,"desc":""},{"type":"float","var":"$par2","beh":0,"desc":""},{"type":"float","var":"$par3","beh":1,"desc":""},{"type":"int","var":"$which","beh":1,"desc":""}],"ret_type":"float"}]},"stats_stat_paired_t":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-stat-paired-t","name":"stats_stat_paired_t","params":[{"list":[{"type":"array","var":"$arr1","beh":0,"desc":""},{"type":"array","var":"$arr2","beh":0,"desc":""}],"ret_type":"float"}]},"stats_stat_percentile":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-stat-percentile","name":"stats_stat_percentile","params":[{"list":[{"type":"float","var":"$df","beh":0,"desc":""},{"type":"float","var":"$xnonc","beh":0,"desc":""}],"ret_type":"float"}]},"stats_stat_powersum":{"desc":"Not documented","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-stat-powersum","name":"stats_stat_powersum","params":[{"list":[{"type":"array","var":"$arr","beh":0,"desc":""},{"type":"float","var":"$power","beh":0,"desc":""}],"ret_type":"float"}]},"stats_variance":{"desc":"Returns the population variance","ver":"PECL stats >= 1.0.0","ret_desc":"","url":"function.stats-variance","name":"stats_variance","params":[{"list":[{"type":"array","var":"$a","beh":0,"desc":""},{"type":"bool","var":"$sample","beh":0,"desc":"","def":"false"}],"ret_type":"float"}]},"stomp_connect_error":{"desc":"Returns a string description of the last connect error","long_desc":"Returns a string description of the last connect error.","ver":"PECL stomp >= 0.3.0","ret_desc":"A string that describes the error, or NULL if no error occurred.","url":"function.stomp-connect-error","name":"stomp_connect_error","params":[{"list":[],"ret_type":"string"}]},"stomp_version":{"desc":"Gets the current stomp extension version","long_desc":"Returns a string containing the version of the current stomp extension.","ver":"PECL stomp >= 0.1.0","ret_desc":"It returns the current stomp extension version","url":"function.stomp-version","name":"stomp_version","params":[{"list":[],"ret_type":"string"}]},"str_getcsv":{"desc":"Parse a CSV string into an array","long_desc":"Parses a string input for fields in CSV format and returns an array containing the fields read.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an indexed array containing the fields read.","seealso":[],"url":"function.str-getcsv","name":"str_getcsv","params":[{"list":[{"type":"string","var":"$input","beh":1,"desc":"The string to parse."},{"type":"string","var":"$delimiter","beh":1,"desc":"Set the field delimiter (one character only).","def":"','"},{"type":"string","var":"$enclosure","beh":1,"desc":"Set the field enclosure character (one character only).","def":"'\"'"},{"type":"string","var":"$escape","beh":1,"desc":"Set the escape character (one character only). Defaults as a backslash (\\)","def":"'\\\\'"}],"ret_type":"array"}]},"str_ireplace":{"desc":"Case-insensitive version of str_replace().","long_desc":"This function returns a string or an array with all occurrences of search in subject (ignoring case) replaced with the given replace value. If you don't need fancy replacing rules, you should generally use this function instead of preg_replace() with the i modifier.","ver":"PHP 5","ret_desc":"Returns a string or an array of replacements.","seealso":[],"url":"function.str-ireplace","name":"str_ireplace","params":[{"list":[{"type":"mixed","var":"$search","beh":0,"desc":"The value being searched for, otherwise known as the needle. An array may be used to designate multiple needles."},{"type":"mixed","var":"$replace","beh":1,"desc":"The replacement value that replaces found search values. An array may be used to designate multiple replacements."},{"type":"mixed","var":"$subject","beh":1,"desc":"The string or array being searched and replaced on, otherwise known as the haystack. If subject is an array, then the search and replace is performed with every entry of subject, and the return value is an array as well."},{"type":"int","var":"&$count","beh":1,"desc":"If passed, this will be set to the number of replacements performed."}],"ret_type":"mixed"}]},"str_pad":{"desc":"Pad a string to a certain length with another string","long_desc":"This functions returns the input string padded on the left, the right, or both sides to the specified padding length. If the optional argument pad_string is not supplied, the input is padded with spaces, otherwise it is padded with characters from pad_string up to the limit.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"Returns the padded string.","url":"function.str-pad","name":"str_pad","params":[{"list":[{"type":"string","var":"$input","beh":1,"desc":"The input string."},{"type":"int","var":"$pad_length","beh":1,"desc":"If the value of pad_length is negative, less than, or equal to the length of the input string, no padding takes place."},{"type":"string","var":"$pad_string","beh":1,"desc":"","def":"\" \""},{"type":"int","var":"$pad_type","beh":1,"desc":"Optional argument pad_type can be STR_PAD_RIGHT, STR_PAD_LEFT, or STR_PAD_BOTH. If pad_type is not specified it is assumed to be STR_PAD_RIGHT.","def":"STR_PAD_RIGHT"}],"ret_type":"string"}]},"str_repeat":{"desc":"Repeat a string","long_desc":"Returns input repeated multiplier times.","ver":"PHP 4, PHP 5","ret_desc":"Returns the repeated string.","seealso":[],"url":"function.str-repeat","name":"str_repeat","params":[{"list":[{"type":"string","var":"$input","beh":0,"desc":"The string to be repeated."},{"type":"int","var":"$multiplier","beh":0,"desc":"Number of time the input string should be repeated. multiplier has to be greater than or equal to 0. If the multiplier is set to 0, the function will return an empty string."}],"ret_type":"string"}]},"str_replace":{"desc":"Replace all occurrences of the search string with the replacement string","long_desc":"This function returns a string or an array with all occurrences of search in subject replaced with the given replace value. If you don't need fancy replacing rules (like regular expressions), you should always use this function instead of preg_replace().","ver":"PHP 4, PHP 5","ret_desc":"This function returns a string or an array with the replaced values.","seealso":[],"url":"function.str-replace","name":"str_replace","params":[{"list":[{"type":"mixed","var":"$search","beh":0,"desc":"The value being searched for, otherwise known as the needle. An array may be used to designate multiple needles."},{"type":"mixed","var":"$replace","beh":1,"desc":"The replacement value that replaces found search values. An array may be used to designate multiple replacements."},{"type":"mixed","var":"$subject","beh":1,"desc":"The string or array being searched and replaced on, otherwise known as the haystack. If subject is an array, then the search and replace is performed with every entry of subject, and the return value is an array as well."},{"type":"int","var":"&$count","beh":1,"desc":"If passed, this will be set to the number of replacements performed."}],"ret_type":"mixed"}]},"str_rot13":{"desc":"Perform the rot13 transform on a string","long_desc":"Performs the ROT13 encoding on the str argument and returns the resulting string. The ROT13 encoding simply shifts every letter by 13 places in the alphabet while leaving non-alpha characters untouched. Encoding and decoding are done by the same function, passing an encoded string as argument will return the original version.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns the ROT13 version of the given string.","url":"function.str-rot13","name":"str_rot13","params":[{"list":[],"ret_type":"string"}]},"str_shuffle":{"desc":"Randomly shuffles a string","long_desc":"str_shuffle() shuffles a string. One permutation of all possible is created.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns the shuffled string.","seealso":[],"url":"function.str-shuffle","name":"str_shuffle","params":[{"list":[],"ret_type":"string"}]},"str_split":{"desc":"Convert a string to an array","long_desc":"Converts a string to an array.","ver":"PHP 5","ret_desc":"If the optional split_length parameter is specified, the returned array will be broken down into chunks with each being split_length in length, otherwise each chunk will be one character in length.","seealso":[],"url":"function.str-split","name":"str_split","params":[{"list":[{"type":"string","var":"$string","beh":0,"desc":"The input string."},{"type":"int","var":"$split_length","beh":0,"desc":"Maximum length of the chunk.","def":1}],"ret_type":"array"}]},"str_word_count":{"desc":"Return information about words used in a string","long_desc":"Counts the number of words inside string. If the optional format is not specified, then the return value will be an integer representing the number of words found. In the event the format is specified, the return value will be an array, content of which is dependent on the format. The possible value for the format and the resultant outputs are listed below. For the purpose of this function, 'word' is defined as a locale dependent string containing alphabetic characters, which also may contain, but not start with \"'\" and \"-\" characters.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns an array or an integer, depending on the format chosen.","seealso":[],"url":"function.str-word-count","name":"str_word_count","params":[{"list":[{"type":"string","var":"$string","beh":1,"desc":"The string"},{"type":"int","var":"$format","beh":1,"desc":"Specify the return value of this function. The current supported values are:","def":0},{"type":"string","var":"$charlist","beh":1,"desc":"A list of additional characters which will be considered as 'word'"}],"ret_type":"mixed"}]},"strcasecmp":{"desc":"Binary safe case-insensitive string comparison","long_desc":"Binary safe case-insensitive string comparison.","ver":"PHP 4, PHP 5","ret_desc":"Returns < 0 if str1 is less than str2; > 0 if str1 is greater than str2, and 0 if they are equal.","seealso":[],"url":"function.strcasecmp","name":"strcasecmp","params":[{"list":[{"type":"string","var":"$str1","beh":0,"desc":"The first string"},{"type":"string","var":"$str2","beh":0,"desc":"The second string"}],"ret_type":"int"}]},"strchr":{"desc":"Alias of strstr()","long_desc":"This function is an alias of: strstr().","ver":"PHP 4, PHP 5","url":"function.strchr","name":"strchr","params":[]},"strcmp":{"desc":"Binary safe string comparison","long_desc":"Note that this comparison is case sensitive.","ver":"PHP 4, PHP 5","ret_desc":"Returns < 0 if str1 is less than str2; > 0 if str1 is greater than str2, and 0 if they are equal.","seealso":[],"url":"function.strcmp","name":"strcmp","params":[{"list":[{"type":"string","var":"$str1","beh":0,"desc":"The first string."},{"type":"string","var":"$str2","beh":0,"desc":"The second string."}],"ret_type":"int"}]},"strcoll":{"desc":"Locale based string comparison","long_desc":"Note that this comparison is case sensitive, and unlike strcmp() this function is not binary safe. strcoll() uses the current locale for doing the comparisons. If the current locale is C or POSIX, this function is equivalent to strcmp().","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns < 0 if str1 is less than str2; > 0 if str1 is greater than str2, and 0 if they are equal.","seealso":[],"url":"function.strcoll","name":"strcoll","params":[{"list":[{"type":"string","var":"$str1","beh":0,"desc":"The first string."},{"type":"string","var":"$str2","beh":0,"desc":"The second string."}],"ret_type":"int"}]},"strcspn":{"desc":"Find length of initial segment not matching mask","long_desc":"Returns the length of the initial segment of str1 which does not contain any of the characters in str2.","ver":"PHP 4, PHP 5","ret_desc":"Returns the length of the segment as an integer.","seealso":[],"url":"function.strcspn","name":"strcspn","params":[{"list":[{"type":"string","var":"$str1","beh":1,"desc":"The first string."},{"type":"string","var":"$str2","beh":1,"desc":"The second string."},{"type":"int","var":"$start","beh":1,"desc":"The start position of the string to examine."},{"type":"int","var":"$length","beh":1,"desc":"The length of the string to examine."}],"ret_type":"int"}]},"stream_bucket_append":{"desc":"Append bucket to brigade","ver":"PHP 5","url":"function.stream-bucket-append","name":"stream_bucket_append","params":[{"list":[{"type":"resource","var":"$brigade","beh":0,"desc":""},{"type":"resource","var":"$bucket","beh":0,"desc":""}],"ret_type":"void"}]},"stream_bucket_make_writeable":{"desc":"Return a bucket object from the brigade for operating on","ver":"PHP 5","url":"function.stream-bucket-make-writeable","name":"stream_bucket_make_writeable","params":[{"list":[],"ret_type":"object"}]},"stream_bucket_new":{"desc":"Create a new bucket for use on the current stream","ver":"PHP 5","url":"function.stream-bucket-new","name":"stream_bucket_new","params":[{"list":[{"type":"resource","var":"$stream","beh":0,"desc":""},{"type":"string","var":"$buffer","beh":0,"desc":""}],"ret_type":"object"}]},"stream_bucket_prepend":{"desc":"Prepend bucket to brigade","ver":"PHP 5","url":"function.stream-bucket-prepend","name":"stream_bucket_prepend","params":[{"list":[{"type":"resource","var":"$brigade","beh":0,"desc":""},{"type":"resource","var":"$bucket","beh":0,"desc":""}],"ret_type":"void"}]},"stream_context_create":{"desc":"Creates a stream context","long_desc":"Creates and returns a stream context with any options supplied in options preset.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"A stream context resource.","seealso":[],"url":"function.stream-context-create","name":"stream_context_create","params":[{"list":[{"type":"array","var":"$options","beh":1,"desc":"Must be an associative array of associative arrays in the format $arr['wrapper']['option'] = $value. Default to an empty array."},{"type":"array","var":"$params","beh":1,"desc":"Must be an associative array in the format $arr['parameter'] = $value. Refer to context parameters for a listing of standard stream parameters."}],"ret_type":"resource"}]},"stream_context_get_default":{"desc":"Retrieve the default stream context","long_desc":"Returns the default stream context which is used whenever file operations (fopen(), file_get_contents(), etc...) are called without a context parameter. Options for the default context can optionally be specified with this function using the same syntax as stream_context_create().","ver":"PHP 5 >= 5.1.0","ret_desc":"A stream context resource.","seealso":[],"url":"function.stream-context-get-default","name":"stream_context_get_default","params":[{"list":[],"ret_type":"resource"}]},"stream_context_get_options":{"desc":"Retrieve options for a stream\/wrapper\/context","long_desc":"Returns an array of options on the specified stream or context.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns an associative array with the options.","url":"function.stream-context-get-options","name":"stream_context_get_options","params":[{"list":[],"ret_type":"array"}]},"stream_context_get_params":{"desc":"Retrieves parameters from a context","long_desc":"Retrieves parameter and options information from the stream or context.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns an associate array containing all context options and parameters.","seealso":[],"url":"function.stream-context-get-params","name":"stream_context_get_params","params":[{"list":[],"ret_type":"array"}]},"stream_context_set_default":{"desc":"Set the default stream context","long_desc":"Set the default stream context which will be used whenever file operations (fopen(), file_get_contents(), etc...) are called without a context parameter. Uses the same syntax as stream_context_create().","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns the default stream context.","seealso":[],"url":"function.stream-context-set-default","name":"stream_context_set_default","params":[{"list":[],"ret_type":"resource"}]},"stream_context_set_option":{"desc":"Sets an option for a stream\/wrapper\/context","long_desc":"Sets an option on the specified context. value is set to option for wrapper","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.stream-context-set-option","name":"stream_context_set_option","params":[{"list":[{"type":"resource","var":"$stream_or_context","beh":0,"desc":"The stream or context resource to apply the options too."},{"type":"string","var":"$wrapper","beh":0,"desc":"The options to set for the default context."},{"type":"string","var":"$option","beh":1,"desc":""},{"type":"mixed","var":"$value","beh":1,"desc":""}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$stream_or_context","beh":0,"desc":"The stream or context resource to apply the options too."},{"type":"array","var":"$options","beh":0,"desc":"The options to set for the default context."}],"ret_type":"bool"}]},"stream_context_set_params":{"desc":"Set parameters for a stream\/wrapper\/context","long_desc":"Sets parameters on the specified context.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.stream-context-set-params","name":"stream_context_set_params","params":[{"list":[{"type":"resource","var":"$stream_or_context","beh":0,"desc":"The stream or context to apply the parameters too."},{"type":"array","var":"$params","beh":0,"desc":"An array of parameters to set."}],"ret_type":"bool"}]},"stream_copy_to_stream":{"desc":"Copies data from one stream to another","long_desc":"Makes a copy of up to maxlength bytes of data from the current position (or from the offset position, if specified) in source to dest. If maxlength is not specified, all remaining content in source will be copied.","ver":"PHP 5","ret_desc":"Returns the total count of bytes copied.","seealso":[],"url":"function.stream-copy-to-stream","name":"stream_copy_to_stream","params":[{"list":[{"type":"resource","var":"$source","beh":1,"desc":"The source stream"},{"type":"resource","var":"$dest","beh":1,"desc":"The destination stream"},{"type":"int","var":"$maxlength","beh":1,"desc":"Maximum bytes to copy","def":-1},{"type":"int","var":"$offset","beh":1,"desc":"The offset where to start to copy data","def":0}],"ret_type":"int"}]},"stream_encoding":{"desc":"Set character set for stream encoding","ver":"No version information available, might only be in SVN","url":"function.stream-encoding","name":"stream_encoding","params":[{"list":[{"type":"resource","var":"$stream","beh":0,"desc":""},{"type":"string","var":"$encoding","beh":1,"desc":""}],"ret_type":"bool"}]},"stream_filter_append":{"desc":"Attach a filter to a stream","long_desc":"Adds filtername to the list of filters attached to stream.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns a resource which can be used to refer to this filter instance during a call to stream_filter_remove().","seealso":[],"url":"function.stream-filter-append","name":"stream_filter_append","params":[{"list":[{"type":"resource","var":"$stream","beh":1,"desc":"The target stream."},{"type":"string","var":"$filtername","beh":1,"desc":"The filter name."},{"type":"int","var":"$read_write","beh":1,"desc":"By default, stream_filter_append() will attach the filter to the read filter chain if the file was opened for reading (i.e. File Mode: r, and\/or +). The filter will also be attached to the write filter chain if the file was opened for writing (i.e. File Mode: w, a, and\/or +). STREAM_FILTER_READ, STREAM_FILTER_WRITE, and\/or STREAM_FILTER_ALL can also be passed to the read_write parameter to override this behavior."},{"type":"mixed","var":"$params","beh":1,"desc":"This filter will be added with the specified params to the end of the list and will therefore be called last during stream operations. To add a filter to the beginning of the list, use stream_filter_prepend()."}],"ret_type":"resource"}]},"stream_filter_prepend":{"desc":"Attach a filter to a stream","long_desc":"Adds filtername to the list of filters attached to stream.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns a resource which can be used to refer to this filter instance during a call to stream_filter_remove().","seealso":[],"url":"function.stream-filter-prepend","name":"stream_filter_prepend","params":[{"list":[{"type":"resource","var":"$stream","beh":1,"desc":"The target stream."},{"type":"string","var":"$filtername","beh":1,"desc":"The filter name."},{"type":"int","var":"$read_write","beh":1,"desc":"By default, stream_filter_prepend() will attach the filter to the read filter chain if the file was opened for reading (i.e. File Mode: r, and\/or +). The filter will also be attached to the write filter chain if the file was opened for writing (i.e. File Mode: w, a, and\/or +). STREAM_FILTER_READ, STREAM_FILTER_WRITE, and\/or STREAM_FILTER_ALL can also be passed to the read_write parameter to override this behavior. See stream_filter_append() for an example of using this parameter."},{"type":"mixed","var":"$params","beh":1,"desc":"This filter will be added with the specified params to the beginning of the list and will therefore be called first during stream operations. To add a filter to the end of the list, use stream_filter_append()."}],"ret_type":"resource"}]},"stream_filter_register":{"desc":"Register a user defined stream filter","long_desc":"stream_filter_register() allows you to implement your own filter on any registered stream used with all the other filesystem functions (such as fopen(), fread() etc.).","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.stream-filter-register","name":"stream_filter_register","params":[{"list":[{"type":"string","var":"$filtername","beh":0,"desc":"The filter name to be registered."},{"type":"string","var":"$classname","beh":0,"desc":"To implement a filter, you need to define a class as an extension of php_user_filter with a number of member functions. When performing read\/write operations on the stream to which your filter is attached, PHP will pass the data through your filter (and any other filters attached to that stream) so that the data may be modified as desired. You must implement the methods exactly as described in php_user_filter - doing otherwise will lead to undefined behaviour."}],"ret_type":"bool"}]},"stream_filter_remove":{"desc":"Remove a filter from a stream","long_desc":"Removes a stream filter previously added to a stream with stream_filter_prepend() or stream_filter_append(). Any data remaining in the filter's internal buffer will be flushed through to the next filter before removing it.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.stream-filter-remove","name":"stream_filter_remove","params":[{"list":[],"ret_type":"bool"}]},"stream_get_contents":{"desc":"Reads remainder of a stream into a string","long_desc":"Identical to file_get_contents(), except that stream_get_contents() operates on an already open stream resource and returns the remaining contents in a string, up to maxlength bytes and starting at the specified offset.","ver":"PHP 5","ret_desc":"Returns a string or FALSE on failure.","seealso":[],"url":"function.stream-get-contents","name":"stream_get_contents","params":[{"list":[{"type":"resource","var":"$handle","beh":1,"desc":"A stream resource (e.g. returned from fopen())"},{"type":"int","var":"$maxlength","beh":1,"desc":"The maximum bytes to read. Defaults to -1 (read all the remaining buffer).","def":-1},{"type":"int","var":"$offset","beh":1,"desc":"Seek to the specified offset before reading. If this number is negative, no seeking will occur and reading will start from the current position.","def":-1}],"ret_type":"string"}]},"stream_get_filters":{"desc":"Retrieve list of registered filters","long_desc":"Retrieve the list of registered filters on the running system.","ver":"PHP 5","ret_desc":"Returns an indexed array containing the name of all stream filters available.","seealso":[],"url":"function.stream-get-filters","name":"stream_get_filters","params":[{"list":[],"ret_type":"array"}]},"stream_get_line":{"desc":"Gets line from stream resource up to a given delimiter","long_desc":"Gets a line from the given handle. Reading ends when length bytes have been read, when the string specified by ending is found (which is not included in the return value), or on EOF (whichever comes first). This function is nearly identical to fgets() except in that it allows end of line delimiters other than the standard \\n, \\r, and \\r\\n, and does not return the delimiter itself.","ver":"PHP 5","ret_desc":"Returns a string of up to length bytes read from the file pointed to by handle.","seealso":[],"url":"function.stream-get-line","name":"stream_get_line","params":[{"list":[{"type":"resource","var":"$handle","beh":0,"desc":"A valid file handle."},{"type":"int","var":"$length","beh":1,"desc":"The number of bytes to read from the handle."},{"type":"string","var":"$ending","beh":1,"desc":"An optional string delimiter."}],"ret_type":"string"}]},"stream_get_meta_data":{"desc":"Retrieves header\/meta data from streams\/file pointers","long_desc":"Returns information about an existing stream.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"The result array contains the following items:","seealso":[],"url":"function.stream-get-meta-data","name":"stream_get_meta_data","params":[{"list":[],"ret_type":"array"}]},"stream_get_transports":{"desc":"Retrieve list of registered socket transports","long_desc":"Returns an indexed array containing the name of all socket transports available on the running system.","ver":"PHP 5","ret_desc":"Returns an indexed array of socket transports names.","seealso":[],"url":"function.stream-get-transports","name":"stream_get_transports","params":[{"list":[],"ret_type":"array"}]},"stream_get_wrappers":{"desc":"Retrieve list of registered streams","long_desc":"Retrieve list of registered streams available on the running system.","ver":"PHP 5","ret_desc":"Returns an indexed array containing the name of all stream wrappers available on the running system.","seealso":[],"url":"function.stream-get-wrappers","name":"stream_get_wrappers","params":[{"list":[],"ret_type":"array"}]},"stream_is_local":{"desc":"Checks if a stream is a local stream","long_desc":"Checks if a stream, or a URL, is a local one or not.","ver":"PHP 5 >= 5.2.4","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.stream-is-local","name":"stream_is_local","params":[{"list":[],"ret_type":"bool"}]},"stream_notification_callback":{"desc":"A callback function for the notification context paramater","long_desc":"A callable function, used by the notification context parameter, called during an event.","ver":"PHP 5 >= 5.2.0","ret_desc":"No value is returned.","seealso":[],"url":"function.stream-notification-callback","name":"stream_notification_callback","params":[{"list":[{"type":"int","var":"$notification_code","beh":0,"desc":"One of the STREAM_NOTIFY_* notification constants."},{"type":"int","var":"$severity","beh":0,"desc":"One of the STREAM_NOTIFY_SEVERITY_* notification constants."},{"type":"string","var":"$message","beh":1,"desc":"Passed if a descriptive message is available for the event."},{"type":"int","var":"$message_code","beh":1,"desc":"Passed if a descriptive message code is available for the event. The meaning of this value is dependent on the specific wrapper in use."},{"type":"int","var":"$bytes_transferred","beh":1,"desc":"If applicable, the bytes_transferred will be populated."},{"type":"int","var":"$bytes_max","beh":1,"desc":"If applicable, the bytes_max will be populated."}],"ret_type":"void"}]},"stream_register_wrapper":{"desc":"Alias of stream_wrapper_register()","long_desc":"This function is an alias of: stream_wrapper_register().","ver":"PHP 4 >= 4.3.0, PHP 5","url":"function.stream-register-wrapper","name":"stream_register_wrapper","params":[]},"stream_resolve_include_path":{"desc":"Resolve filename against the include path","long_desc":"Resolve filename against the include path according to the same rules as fopen()\/include().","ver":"PHP 5 >= 5.3.2","ret_desc":"Returns a string containing the resolved absolute filename, or FALSE on failure.","url":"function.stream-resolve-include-path","name":"stream_resolve_include_path","params":[{"list":[],"ret_type":"string"}]},"stream_select":{"desc":"Runs the equivalent of the select() system call on the given arrays of streams with a timeout specified by tv_sec and tv_usec","long_desc":"The stream_select() function accepts arrays of streams and waits for them to change status. Its operation is equivalent to that of the socket_select() function except in that it acts on streams.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"On success stream_select() returns the number of stream resources contained in the modified arrays, which may be zero if the timeout expires before anything interesting happens. On error FALSE is returned and a warning raised (this can happen if the system call is interrupted by an incoming signal).","seealso":[],"url":"function.stream-select","name":"stream_select","params":[{"list":[{"type":"array","var":"&$read","beh":0,"desc":"The streams listed in the read array will be watched to see if characters become available for reading (more precisely, to see if a read will not block - in particular, a stream resource is also ready on end-of-file, in which case an fread() will return a zero length string)."},{"type":"array","var":"&$write","beh":1,"desc":"The streams listed in the write array will be watched to see if a write will not block."},{"type":"array","var":"&$except","beh":1,"desc":"The streams listed in the except array will be watched for high priority exceptional (\"out-of-band\") data arriving."},{"type":"int","var":"$tv_sec","beh":1,"desc":"The tv_sec and tv_usec together form the timeout parameter, tv_sec specifies the number of seconds while tv_usec the number of microseconds. The timeout is an upper bound on the amount of time that stream_select() will wait before it returns. If tv_sec and tv_usec are both set to 0, stream_select() will not wait for data - instead it will return immediately, indicating the current status of the streams. If tv_sec is NULL stream_select() can block indefinitely, returning only when an event on one of the watched streams occurs (or if a signal interrupts the system call)."},{"type":"int","var":"$tv_usec","beh":1,"desc":"See tv_sec description.","def":0}],"ret_type":"int"}]},"stream_set_blocking":{"desc":"Set blocking\/non-blocking mode on a stream","long_desc":"Sets blocking or non-blocking mode on a stream. This function works for any stream that supports non-blocking mode (currently, regular files and socket streams).","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.stream-set-blocking","name":"stream_set_blocking","params":[{"list":[{"type":"resource","var":"$stream","beh":0,"desc":"The stream."},{"type":"int","var":"$mode","beh":0,"desc":"If mode is 0, the given stream will be switched to non-blocking mode, and if 1, it will be switched to blocking mode. This affects calls like fgets() and fread() that read from the stream. In non-blocking mode an fgets() call will always return right away while in blocking mode it will wait for data to become available on the stream."}],"ret_type":"bool"}]},"stream_set_chunk_size":{"desc":"Set the stream chunk size","long_desc":"Set the stream chunk size.","ver":"PHP 5 >= 5.4.0","ret_desc":"Returns the previous chunk size on success.","url":"function.stream-set-chunk-size","name":"stream_set_chunk_size","params":[{"list":[{"type":"resource","var":"$fp","beh":0,"desc":"The target stream."},{"type":"int","var":"$chunk_size","beh":0,"desc":"The desired new chunk size."}],"ret_type":"int"}]},"stream_set_read_buffer":{"desc":"Set read file buffering on the given stream","long_desc":"Sets the read buffer. It's the equivalent of stream_set_write_buffer(), but for read operations.","ver":"PHP 5 >= 5.3.3","ret_desc":"Returns 0 on success, or EOF if the request cannot be honored.","seealso":[],"url":"function.stream-set-read-buffer","name":"stream_set_read_buffer","params":[{"list":[{"type":"resource","var":"$stream","beh":0,"desc":"The file pointer."},{"type":"int","var":"$buffer","beh":0,"desc":"The number of bytes to buffer. If buffer is 0 then read operations are unbuffered. This ensures that all reads with fread() are completed before other processes are allowed to write to that output stream."}],"ret_type":"int"}]},"stream_set_timeout":{"desc":"Set timeout period on a stream","long_desc":"Sets the timeout value on stream, expressed in the sum of seconds and microseconds. When the stream times out, the 'timed_out' key of the array returned by stream_get_meta_data() is set to TRUE, although no error\/warning is generated.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.stream-set-timeout","name":"stream_set_timeout","params":[{"list":[{"type":"resource","var":"$stream","beh":0,"desc":"The target stream."},{"type":"int","var":"$seconds","beh":1,"desc":"The seconds part of the timeout to be set."},{"type":"int","var":"$microseconds","beh":1,"desc":"The microseconds part of the timeout to be set.","def":0}],"ret_type":"bool"}]},"stream_set_write_buffer":{"desc":"Sets write file buffering on the given stream","long_desc":"Sets the buffering for write operations on the given stream to buffer bytes. Output using fwrite() is normally buffered at 8K. This means that if there are two processes wanting to write to the same output stream (a file), each is paused after 8K of data to allow the other to write.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns 0 on success, or EOF if the request cannot be honored.","seealso":[],"url":"function.stream-set-write-buffer","name":"stream_set_write_buffer","params":[{"list":[{"type":"resource","var":"$stream","beh":0,"desc":"The file pointer."},{"type":"int","var":"$buffer","beh":0,"desc":"The number of bytes to buffer. If buffer is 0 then write operations are unbuffered. This ensures that all writes with fwrite() are completed before other processes are allowed to write to that output stream."}],"ret_type":"int"}]},"stream_socket_accept":{"desc":"Accept a connection on a socket created by stream_socket_server()","long_desc":"Accept a connection on a socket previously created by stream_socket_server().","ver":"PHP 5","ret_desc":"Returns a stream to the accepted socket connection or FALSE on failure.","seealso":[],"url":"function.stream-socket-accept","name":"stream_socket_accept","params":[{"list":[{"type":"resource","var":"$server_socket","beh":1,"desc":"The server socket to accept a connection from."},{"type":"float","var":"$timeout","beh":1,"desc":"Override the default socket accept timeout. Time should be given in seconds.","def":"ini_get(\"default_socket_timeout\")"},{"type":"string","var":"&$peername","beh":1,"desc":"Will be set to the name (address) of the client which connected, if included and available from the selected transport."}],"ret_type":"resource"}]},"stream_socket_client":{"desc":"Open Internet or Unix domain socket connection","long_desc":"Initiates a stream or datagram connection to the destination specified by remote_socket. The type of socket created is determined by the transport specified using standard URL formatting: transport:\/\/target. For Internet Domain sockets (AF_INET) such as TCP and UDP, the target portion of the remote_socket parameter should consist of a hostname or IP address followed by a colon and a port number. For Unix domain sockets, the target portion should point to the socket file on the filesystem.","ver":"PHP 5","ret_desc":"On success a stream resource is returned which may be used together with the other file functions (such as fgets(), fgetss(), fwrite(), fclose(), and feof()), FALSE on failure.","seealso":[],"url":"function.stream-socket-client","name":"stream_socket_client","params":[{"list":[{"type":"string","var":"$remote_socket","beh":1,"desc":"Address to the socket to connect to."},{"type":"int","var":"&$errno","beh":1,"desc":"Will be set to the system level error number if connection fails."},{"type":"string","var":"&$errstr","beh":1,"desc":"Will be set to the system level error message if the connection fails."},{"type":"float","var":"$timeout","beh":1,"desc":"Number of seconds until the connect() system call should timeout.","def":"ini_get(\"default_socket_timeout\")"},{"type":"int","var":"$flags","beh":1,"desc":"Bitmask field which may be set to any combination of connection flags. Currently the select of connection flags is limited to STREAM_CLIENT_CONNECT (default), STREAM_CLIENT_ASYNC_CONNECT and STREAM_CLIENT_PERSISTENT.","def":"STREAM_CLIENT_CONNECT"},{"type":"resource","var":"$context","beh":1,"desc":"A valid context resource created with stream_context_create()."}],"ret_type":"resource"}]},"stream_socket_enable_crypto":{"desc":"Turns encryption on\/off on an already connected socket","long_desc":"Enable or disable encryption on the stream. Once the crypto settings are established, cryptography can be turned on and off dynamically by passing TRUE or FALSE in the enable parameter.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success, FALSE if negotiation has failed or 0 if there isn't enough data and you should try again (only for non-blocking sockets).","seealso":[],"url":"function.stream-socket-enable-crypto","name":"stream_socket_enable_crypto","params":[{"list":[{"type":"resource","var":"$stream","beh":1,"desc":"The stream resource."},{"type":"bool","var":"$enable","beh":1,"desc":"Enable\/disable cryptography on the stream."},{"type":"int","var":"$crypto_type","beh":1,"desc":"Setup encryption on the stream. Valid methods are"},{"type":"resource","var":"$session_stream","beh":1,"desc":"Seed the stream with settings from session_stream."}],"ret_type":"mixed"}]},"stream_socket_get_name":{"desc":"Retrieve the name of the local or remote sockets","long_desc":"Returns the local or remote name of a given socket connection.","ver":"PHP 5","ret_desc":"The name of the socket.","seealso":[],"url":"function.stream-socket-get-name","name":"stream_socket_get_name","params":[{"list":[{"type":"resource","var":"$handle","beh":0,"desc":"The socket to get the name of."},{"type":"bool","var":"$want_peer","beh":0,"desc":"If set to TRUE the remote socket name will be returned, if set to FALSE the local socket name will be returned."}],"ret_type":"string"}]},"stream_socket_pair":{"desc":"Creates a pair of connected, indistinguishable socket streams","long_desc":"stream_socket_pair() creates a pair of connected, indistinguishable socket streams. This function is commonly used in IPC (Inter-Process Communication).","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns an array with the two socket resources on success, or FALSE on failure.","url":"function.stream-socket-pair","name":"stream_socket_pair","params":[{"list":[{"type":"int","var":"$domain","beh":0,"desc":"The protocol family to be used: STREAM_PF_INET, STREAM_PF_INET6 or STREAM_PF_UNIX"},{"type":"int","var":"$type","beh":0,"desc":"The type of communication to be used: STREAM_SOCK_DGRAM, STREAM_SOCK_RAW, STREAM_SOCK_RDM, STREAM_SOCK_SEQPACKET or STREAM_SOCK_STREAM"},{"type":"int","var":"$protocol","beh":1,"desc":"The protocol to be used: STREAM_IPPROTO_ICMP, STREAM_IPPROTO_IP, STREAM_IPPROTO_RAW, STREAM_IPPROTO_TCP or STREAM_IPPROTO_UDP"}],"ret_type":"array"}]},"stream_socket_recvfrom":{"desc":"Receives data from a socket, connected or not","long_desc":"stream_socket_recvfrom() accepts data from a remote socket up to length bytes.","ver":"PHP 5","ret_desc":"Returns the read data, as a string","seealso":[],"url":"function.stream-socket-recvfrom","name":"stream_socket_recvfrom","params":[{"list":[{"type":"resource","var":"$socket","beh":1,"desc":"The remote socket."},{"type":"int","var":"$length","beh":1,"desc":"The number of bytes to receive from the socket."},{"type":"int","var":"$flags","beh":1,"desc":"The value of flags can be any combination of the following:","def":0},{"type":"string","var":"&$address","beh":1,"desc":"If address is provided it will be populated with the address of the remote socket."}],"ret_type":"string"}]},"stream_socket_sendto":{"desc":"Sends a message to a socket, whether it is connected or not","long_desc":"Sends the specified data through the socket.","ver":"PHP 5","ret_desc":"Returns a result code, as an integer.","seealso":[],"url":"function.stream-socket-sendto","name":"stream_socket_sendto","params":[{"list":[{"type":"resource","var":"$socket","beh":1,"desc":"The socket to send data to."},{"type":"string","var":"$data","beh":1,"desc":"The data to be sent."},{"type":"int","var":"$flags","beh":1,"desc":"The value of flags can be any combination of the following:","def":0},{"type":"string","var":"$address","beh":1,"desc":"The address specified when the socket stream was created will be used unless an alternate address is specified in address. If specified, it must be in dotted quad (or [ipv6]) format."}],"ret_type":"int"}]},"stream_socket_server":{"desc":"Create an Internet or Unix domain server socket","long_desc":"Creates a stream or datagram socket on the specified local_socket. This function only creates a socket, to begin accepting connections use stream_socket_accept().","ver":"PHP 5","ret_desc":"Returns the created stream, or FALSE on error.","seealso":[],"url":"function.stream-socket-server","name":"stream_socket_server","params":[{"list":[{"type":"string","var":"$local_socket","beh":1,"desc":"The type of socket created is determined by the transport specified using standard URL formatting: transport:\/\/target. For Internet Domain sockets (AF_INET) such as TCP and UDP, the target portion of the remote_socket parameter should consist of a hostname or IP address followed by a colon and a port number. For Unix domain sockets, the target portion should point to the socket file on the filesystem. Depending on the environment, Unix domain sockets may not be available. A list of available transports can be retrieved using stream_get_transports(). See List of Supported Socket Transports for a list of bulitin transports."},{"type":"int","var":"&$errno","beh":1,"desc":"If the optional errno and errstr arguments are present they will be set to indicate the actual system level error that occurred in the system-level socket(), bind(), and listen() calls. If the value returned in errno is 0 and the function returned FALSE, it is an indication that the error occurred before the bind() call. This is most likely due to a problem initializing the socket. Note that the errno and errstr arguments will always be passed by reference."},{"type":"string","var":"&$errstr","beh":1,"desc":"See errno description."},{"type":"int","var":"$flags","beh":1,"desc":"A bitmask field which may be set to any combination of socket creation flags.","def":"STREAM_SERVER_BIND | STREAM_SERVER_LISTEN"},{"type":"resource","var":"$context","beh":1,"desc":""}],"ret_type":"resource"}]},"stream_socket_shutdown":{"desc":"Shutdown a full-duplex connection","long_desc":"Shutdowns (partially or not) a full-duplex connection.","ver":"PHP 5 >= 5.2.1","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.stream-socket-shutdown","name":"stream_socket_shutdown","params":[{"list":[{"type":"resource","var":"$stream","beh":0,"desc":"An open stream (opened with stream_socket_client(), for example)"},{"type":"int","var":"$how","beh":0,"desc":"One of the following constants: STREAM_SHUT_RD (disable further receptions), STREAM_SHUT_WR (disable further transmissions) or STREAM_SHUT_RDWR (disable further receptions and transmissions)."}],"ret_type":"bool"}]},"stream_supports_lock":{"desc":"Tells whether the stream supports locking.","long_desc":"Tells whether the stream supports locking through flock().","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.stream-supports-lock","name":"stream_supports_lock","params":[{"list":[],"ret_type":"bool"}]},"stream_wrapper_register":{"desc":"Register a URL wrapper implemented as a PHP class","long_desc":"Allows you to implement your own protocol handlers and streams for use with all the other filesystem functions (such as fopen(), fread() etc.).","ver":"PHP 4 >= 4.3.2, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.stream-wrapper-register","name":"stream_wrapper_register","params":[{"list":[{"type":"string","var":"$protocol","beh":0,"desc":"The wrapper name to be registered."},{"type":"string","var":"$classname","beh":1,"desc":"The classname which implements the protocol."},{"type":"int","var":"$flags","beh":1,"desc":"Should be set to STREAM_IS_URL if protocol is a URL protocol. Default is 0, local stream.","def":0}],"ret_type":"bool"}]},"stream_wrapper_restore":{"desc":"Restores a previously unregistered built-in wrapper","long_desc":"Restores a built-in wrapper previously unregistered with stream_wrapper_unregister().","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.stream-wrapper-restore","name":"stream_wrapper_restore","params":[{"list":[],"ret_type":"bool"}]},"stream_wrapper_unregister":{"desc":"Unregister a URL wrapper","long_desc":"Allows you to disable an already defined stream wrapper. Once the wrapper has been disabled you may override it with a user-defined wrapper using stream_wrapper_register() or reenable it later on with stream_wrapper_restore().","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.stream-wrapper-unregister","name":"stream_wrapper_unregister","params":[{"list":[],"ret_type":"bool"}]},"strftime":{"desc":"Format a local time\/date according to locale settings","long_desc":"Format the time and\/or date according to locale settings. Month and weekday names and other language-dependent strings respect the current locale set with setlocale(). Not all conversion specifiers may be supported by your C library, in which case they will not be supported by PHP's strftime(). Additionally, not all platforms support negative timestamps, so your date range may be limited to no earlier than the Unix epoch. This means that %e, %T, %R and, %D (and possibly others) - as well as dates prior to Jan 1, 1970 - will not work on Windows, some Linux distributions, and a few other operating systems. For Windows systems, a complete overview of supported conversion specifiers can be found at \u00bb\u00a0MSDN.","ver":"PHP 4, PHP 5","ret_desc":"Returns a string formatted according format using the given timestamp or the current local time if no timestamp is given. Month and weekday names and other language-dependent strings respect the current locale set with setlocale().","seealso":[],"url":"function.strftime","name":"strftime","params":[{"list":[{"type":"string","var":"$format","beh":0,"desc":"Maximum length of this parameter is 1023 characters."},{"type":"int","var":"$timestamp","beh":0,"desc":"The optional timestamp parameter is an integer Unix timestamp that defaults to the current local time if a timestamp is not given. In other words, it defaults to the value of time().","def":"time()"}],"ret_type":"string"}]},"strip_tags":{"desc":"Strip HTML and PHP tags from a string","long_desc":"This function tries to return a string with all NUL bytes, HTML and PHP tags stripped from a given str. It uses the same tag stripping state machine as the fgetss() function.","ver":"PHP 4, PHP 5","ret_desc":"Returns the stripped string.","seealso":[],"url":"function.strip-tags","name":"strip_tags","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The input string."},{"type":"string","var":"$allowable_tags","beh":1,"desc":"You can use the optional second parameter to specify tags which should not be stripped."}],"ret_type":"string"}]},"stripcslashes":{"desc":"Un-quote string quoted with addcslashes()","long_desc":"Returns a string with backslashes stripped off. Recognizes C-like \\n, \\r ..., octal and hexadecimal representation.","ver":"PHP 4, PHP 5","ret_desc":"Returns the unescaped string.","seealso":[],"url":"function.stripcslashes","name":"stripcslashes","params":[{"list":[],"ret_type":"string"}]},"stripos":{"desc":"Find the position of the first occurrence of a case-insensitive substring in a string","long_desc":"Find the numeric position of the first occurrence of needle in the haystack string. Unlike the strpos(), stripos() is case-insensitive.","ver":"PHP 5","ret_desc":"Returns the position of where the needle exists relative to the beginnning of the haystack string (independent of offset). Also note that string positions start at 0, and not 1.","seealso":[],"url":"function.stripos","name":"stripos","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The string to search in."},{"type":"string","var":"$needle","beh":1,"desc":"Note that the needle may be a string of one or more characters. If needle is not a string, it is converted to an integer and applied as the ordinal value of a character."},{"type":"int","var":"$offset","beh":1,"desc":"If specified, search will start this number of characters counted from the beginning of the string. Unlike strrpos() and strripos(), the offset cannot be negative.","def":0}],"ret_type":"int"}]},"stripslashes":{"desc":"Un-quotes a quoted string","long_desc":"Un-quotes a quoted string. An example use of stripslashes() is when the PHP directive magic_quotes_gpc is on (it's on by default), and you aren't inserting this data into a place (such as a database) that requires escaping. For example, if you're simply outputting data straight from an HTML form.","ver":"PHP 4, PHP 5","ret_desc":"Returns a string with backslashes stripped off. (\\' becomes ' and so on.) Double backslashes (\\\\) are made into a single backslash (\\).","seealso":[],"url":"function.stripslashes","name":"stripslashes","params":[{"list":[],"ret_type":"string"}]},"stristr":{"desc":"Case-insensitive strstr()","long_desc":"Returns all of haystack starting from and including the first occurrence of needle to the end.","ver":"PHP 4, PHP 5","ret_desc":"Returns the matched substring. If needle is not found, returns FALSE.","seealso":[],"url":"function.stristr","name":"stristr","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The string to search in"},{"type":"mixed","var":"$needle","beh":1,"desc":"If needle is not a string, it is converted to an integer and applied as the ordinal value of a character."},{"type":"bool","var":"$before_needle","beh":1,"desc":"If TRUE, stristr() returns the part of the haystack before the first occurrence of the needle (excluding needle).","def":"false"}],"ret_type":"string"}]},"strlen":{"desc":"Get string length","long_desc":"Returns the length of the given string.","ver":"PHP 4, PHP 5","ret_desc":"The length of the string on success, and 0 if the string is empty.","seealso":[],"url":"function.strlen","name":"strlen","params":[{"list":[],"ret_type":"int"}]},"strnatcasecmp":{"desc":"Case insensitive string comparisons using a \"natural order\" algorithm","long_desc":"This function implements a comparison algorithm that orders alphanumeric strings in the way a human being would. The behaviour of this function is similar to strnatcmp(), except that the comparison is not case sensitive. For more information see: Martin Pool's \u00bb\u00a0Natural Order String Comparison page.","ver":"PHP 4, PHP 5","ret_desc":"Similar to other string comparison functions, this one returns < 0 if str1 is less than str2 > 0 if str1 is greater than str2, and 0 if they are equal.","seealso":[],"url":"function.strnatcasecmp","name":"strnatcasecmp","params":[{"list":[{"type":"string","var":"$str1","beh":0,"desc":"The first string."},{"type":"string","var":"$str2","beh":0,"desc":"The second string."}],"ret_type":"int"}]},"strnatcmp":{"desc":"String comparisons using a \"natural order\" algorithm","long_desc":"This function implements a comparison algorithm that orders alphanumeric strings in the way a human being would, this is described as a \"natural ordering\". Note that this comparison is case sensitive.","ver":"PHP 4, PHP 5","ret_desc":"Similar to other string comparison functions, this one returns < 0 if str1 is less than str2; > 0 if str1 is greater than str2, and 0 if they are equal.","seealso":[],"url":"function.strnatcmp","name":"strnatcmp","params":[{"list":[{"type":"string","var":"$str1","beh":0,"desc":"The first string."},{"type":"string","var":"$str2","beh":0,"desc":"The second string."}],"ret_type":"int"}]},"strncasecmp":{"desc":"Binary safe case-insensitive string comparison of the first n characters","long_desc":"This function is similar to strcasecmp(), with the difference that you can specify the (upper limit of the) number of characters from each string to be used in the comparison.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns < 0 if str1 is less than str2; > 0 if str1 is greater than str2, and 0 if they are equal.","seealso":[],"url":"function.strncasecmp","name":"strncasecmp","params":[{"list":[{"type":"string","var":"$str1","beh":0,"desc":"The first string."},{"type":"string","var":"$str2","beh":0,"desc":"The second string."},{"type":"int","var":"$len","beh":1,"desc":"The length of strings to be used in the comparison."}],"ret_type":"int"}]},"strncmp":{"desc":"Binary safe string comparison of the first n characters","long_desc":"This function is similar to strcmp(), with the difference that you can specify the (upper limit of the) number of characters from each string to be used in the comparison. Note that this comparison is case sensitive.","ver":"PHP 4, PHP 5","ret_desc":"Returns < 0 if str1 is less than str2; > 0 if str1 is greater than str2, and 0 if they are equal.","seealso":[],"url":"function.strncmp","name":"strncmp","params":[{"list":[{"type":"string","var":"$str1","beh":0,"desc":"The first string."},{"type":"string","var":"$str2","beh":0,"desc":"The second string."},{"type":"int","var":"$len","beh":1,"desc":"Number of characters to use in the comparison."}],"ret_type":"int"}]},"strpbrk":{"desc":"Search a string for any of a set of characters","long_desc":"strpbrk() searches the haystack string for a char_list.","ver":"PHP 5","ret_desc":"Returns a string starting from the character found, or FALSE if it is not found.","seealso":[],"url":"function.strpbrk","name":"strpbrk","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The string where char_list is looked for."},{"type":"string","var":"$char_list","beh":0,"desc":"This parameter is case sensitive."}],"ret_type":"string"}]},"strpos":{"desc":"Find the position of the first occurrence of a substring in a string","long_desc":"Find the numeric position of the first occurrence of needle in the haystack string.","ver":"PHP 4, PHP 5","ret_desc":"Returns the position of where the needle exists relative to the beginning of the haystack string (independent of offset). Also note that string positions start at 0, and not 1.","seealso":[],"url":"function.strpos","name":"strpos","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The string to search in."},{"type":"mixed","var":"$needle","beh":1,"desc":"If needle is not a string, it is converted to an integer and applied as the ordinal value of a character."},{"type":"int","var":"$offset","beh":1,"desc":"If specified, search will start this number of characters counted from the beginning of the string. Unlike strrpos() and strripos(), the offset cannot be negative.","def":0}],"ret_type":"int"}]},"strptime":{"desc":"Parse a time\/date generated with strftime()","long_desc":"strptime() returns an array with the date parsed, or FALSE on error. Month and weekday names and other language dependent strings respect the current locale set with setlocale() (LC_TIME).","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns an array or FALSE on failure.","seealso":[],"url":"function.strptime","name":"strptime","params":[{"list":[{"type":"string","var":"$date","beh":0,"desc":"The string to parse (e.g. returned from strftime())."},{"type":"string","var":"$format","beh":0,"desc":"The format used in date (e.g. the same as used in strftime()). Note that some of the format options available to strftime() may not have any effect within strptime(); the exact subset that are supported will vary based on the operating system and C library in use. For more information about the format options, read the strftime() page."}],"ret_type":"array"}]},"strrchr":{"desc":"Find the last occurrence of a character in a string","long_desc":"This function returns the portion of haystack which starts at the last occurrence of needle and goes until the end of haystack.","ver":"PHP 4, PHP 5","ret_desc":"This function returns the portion of string, or FALSE if needle is not found.","seealso":[],"url":"function.strrchr","name":"strrchr","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The string to search in"},{"type":"mixed","var":"$needle","beh":0,"desc":"If needle contains more than one character, only the first is used. This behavior is different from that of strstr(). If needle is not a string, it is converted to an integer and applied as the ordinal value of a character."}],"ret_type":"string"}]},"strrev":{"desc":"Reverse a string","long_desc":"Returns string, reversed.","ver":"PHP 4, PHP 5","ret_desc":"Returns the reversed string.","url":"function.strrev","name":"strrev","params":[{"list":[],"ret_type":"string"}]},"strripos":{"desc":"Find the position of the last occurrence of a case-insensitive substring in a string","long_desc":"Find the numeric position of the last occurrence of needle in the haystack string. Unlike the strrpos(), strripos() is case-insensitive.","ver":"PHP 5","ret_desc":"Returns the position where the needle exists relative to the beginnning of the haystack string (independent of search direction or offset). Also note that string positions start at 0, and not 1.","seealso":[],"url":"function.strripos","name":"strripos","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The string to search in."},{"type":"string","var":"$needle","beh":1,"desc":"If needle is not a string, it is converted to an integer and applied as the ordinal value of a character."},{"type":"int","var":"$offset","beh":1,"desc":"If specified, search will start this number of characters counted from the beginning of the string. If the value is negative, search will instead start from that many characters from the end of the string, searching backwards.","def":0}],"ret_type":"int"}]},"strrpos":{"desc":"Find the position of the last occurrence of a substring in a string","long_desc":"Find the numeric position of the last occurrence of needle in the haystack string.","ver":"PHP 4, PHP 5","ret_desc":"Returns the position where the needle exists relative to the beginnning of the haystack string (independent of search direction or offset). Also note that string positions start at 0, and not 1.","seealso":[],"url":"function.strrpos","name":"strrpos","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The string to search in."},{"type":"string","var":"$needle","beh":1,"desc":"If needle is not a string, it is converted to an integer and applied as the ordinal value of a character."},{"type":"int","var":"$offset","beh":1,"desc":"If specified, search will start this number of characters counted from the beginning of the string. If the value is negative, search will instead start from that many characters from the end of the string, searching backwards.","def":0}],"ret_type":"int"}]},"strspn":{"desc":"Finds the length of the initial segment of a string consisting entirely of characters contained within a given mask.","long_desc":"Finds the length of the initial segment of subject that contains only characters from mask. If start and length are omitted, then all of subject will be examined. If they are included, then the effect will be the same as calling strspn(substr($subject, $start, $length), $mask) (see substr for more information). The line of code:","ver":"PHP 4, PHP 5","ret_desc":"Returns the length of the initial segment of subject which consists entirely of characters in mask.","seealso":[],"url":"function.strspn","name":"strspn","params":[{"list":[{"type":"string","var":"$subject","beh":1,"desc":"The string to examine."},{"type":"string","var":"$mask","beh":1,"desc":"The list of allowable characters."},{"type":"int","var":"$start","beh":1,"desc":"The position in subject to start searching. If start is given and is non-negative, then strspn() will begin examining subject at the start'th position. For instance, in the string 'abcdef', the character at position 0 is 'a', the character at position 2 is 'c', and so forth. If start is given and is negative, then strspn() will begin examining subject at the start'th position from the end of subject."},{"type":"int","var":"$length","beh":1,"desc":"The length of the segment from subject to examine. If length is given and is non-negative, then subject will be examined for length characters after the starting position. If lengthis given and is negative, then subject will be examined from the starting position up to length characters from the end of subject."}],"ret_type":"int"}]},"strstr":{"desc":"Find the first occurrence of a string","long_desc":"Returns part of haystack string starting from and including the first occurrence of needle to the end of haystack.","ver":"PHP 4, PHP 5","ret_desc":"Returns the portion of string, or FALSE if needle is not found.","seealso":[],"url":"function.strstr","name":"strstr","params":[{"list":[{"type":"string","var":"$haystack","beh":0,"desc":"The input string."},{"type":"mixed","var":"$needle","beh":1,"desc":"If needle is not a string, it is converted to an integer and applied as the ordinal value of a character."},{"type":"bool","var":"$before_needle","beh":1,"desc":"If TRUE, strstr() returns the part of the haystack before the first occurrence of the needle (excluding the needle).","def":"false"}],"ret_type":"string"}]},"strtok":{"desc":"Tokenize string","long_desc":"strtok() splits a string (str) into smaller strings (tokens), with each token being delimited by any character from token. That is, if you have a string like \"This is an example string\" you could tokenize this string into its individual words by using the space character as the token. Note that only the first call to strtok uses the string argument. Every subsequent call to strtok only needs the token to use, as it keeps track of where it is in the current string. To start over, or to tokenize a new string you simply call strtok with the string argument again to initialize it. Note that you may put multiple tokens in the token parameter. The string will be tokenized when any one of the characters in the argument are found.","ver":"PHP 4, PHP 5","ret_desc":"A string token.","seealso":[],"url":"function.strtok","name":"strtok","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string being split up into smaller strings (tokens)."},{"type":"string","var":"$token","beh":0,"desc":"The delimiter used when splitting up str."}],"ret_type":"string"},{"list":[],"ret_type":"string"}]},"strtolower":{"desc":"Make a string lowercase","long_desc":"Returns string with all alphabetic characters converted to lowercase. Note that 'alphabetic' is determined by the current locale. This means that in i.e. the default \"C\" locale, characters such as umlaut-A (\u00c4) will not be converted.","ver":"PHP 4, PHP 5","ret_desc":"Returns the lowercased string.","seealso":[],"url":"function.strtolower","name":"strtolower","params":[{"list":[],"ret_type":"string"}]},"strtotime":{"desc":"Parse about any English textual datetime description into a Unix timestamp","long_desc":"The function expects to be given a string containing an English date format and will try to parse that format into a Unix timestamp (the number of seconds since January 1 1970 00:00:00 UTC), relative to the timestamp given in now, or the current time if now is not supplied. Each parameter of this function uses the default time zone unless a time zone is specified in that parameter. Be careful not to use different time zones in each parameter unless that is intended. See date_default_timezone_get() on the various ways to define the default time zone.","ver":"PHP 4, PHP 5","ret_desc":"Returns a timestamp on success, FALSE otherwise. Previous to PHP 5.1.0, this function would return -1 on failure.","seealso":[],"url":"function.strtotime","name":"strtotime","params":[{"list":[{"type":"string","var":"$time","beh":0,"desc":"A date\/time string. Valid formats are explained in Date and Time Formats."},{"type":"int","var":"$now","beh":0,"desc":"The timestamp which is used as a base for the calculation of relative dates.","def":"time()"}],"ret_type":"int"}]},"strtoupper":{"desc":"Make a string uppercase","long_desc":"Returns string with all alphabetic characters converted to uppercase. Note that 'alphabetic' is determined by the current locale. For instance, in the default \"C\" locale characters such as umlaut-a (\u00e4) will not be converted.","ver":"PHP 4, PHP 5","ret_desc":"Returns the uppercased string.","seealso":[],"url":"function.strtoupper","name":"strtoupper","params":[{"list":[],"ret_type":"string"}]},"strtr":{"desc":"Translate characters or replace substrings","long_desc":"If given three arguments, this function returns a copy of str where all occurrences of each (single-byte) character in from have been translated to the corresponding character in to, i.e., every occurrence of $from[$n] has been replaced with $to[$n], where $n is a valid offset in both arguments. If from and to have different lengths, the extra characters in the longer of the two are ignored. The length of str will be the same as the return value's. If given two arguments, the second should be an array in the form array('from' => 'to', ...). The return value is a string where all the occurrences of the array keys have been replaced by the corresponding values. The longest keys will be tried first. Once a substring has been replaced, its new value will not be searched again. In this case, the keys and the values may have any length, provided that there is no empty key; additionaly, the length of the return value may differ from that of str. However, this function will be the most efficient when all the keys have the same size.","ver":"PHP 4, PHP 5","ret_desc":"Returns the translated string.","seealso":[],"url":"function.strtr","name":"strtr","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string being translated."},{"type":"string","var":"$from","beh":0,"desc":"The string being translated to to."},{"type":"string","var":"$to","beh":1,"desc":"The string replacing from."}],"ret_type":"string"},{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string being translated."},{"type":"array","var":"$replace_pairs","beh":0,"desc":"The string being translated to to."}],"ret_type":"string"}]},"strval":{"desc":"Get string value of a variable","long_desc":"Get the string value of a variable. See the documentation on string for more information on converting to string. This function performs no formatting on the returned value. If you are looking for a way to format a numeric value as a string, please see sprintf() or number_format().","ver":"PHP 4, PHP 5","ret_desc":"The string value of var.","seealso":[],"url":"function.strval","name":"strval","params":[{"list":[],"ret_type":"string"}]},"substr":{"desc":"Return part of a string","long_desc":"Returns the portion of string specified by the start and length parameters.","ver":"PHP 4, PHP 5","ret_desc":"Returns the extracted part of string; or FALSE on failure, or an empty string.","seealso":[],"url":"function.substr","name":"substr","params":[{"list":[{"type":"string","var":"$string","beh":0,"desc":"The input string. Must be one character or longer."},{"type":"int","var":"$start","beh":1,"desc":"If start is non-negative, the returned string will start at the start'th position in string, counting from zero. For instance, in the string 'abcdef', the character at position 0 is 'a', the character at position 2 is 'c', and so forth. If start is negative, the returned string will start at the start'th character from the end of string. If string is less than or equal to start characters long, FALSE will be returned."},{"type":"int","var":"$length","beh":1,"desc":"If length is given and is positive, the string returned will contain at most length characters beginning from start (depending on the length of string). If length is given and is negative, then that many characters will be omitted from the end of string (after the start position has been calculated when a start is negative). If start denotes the position of this truncation or beyond, false will be returned. If length is given and is 0, FALSE or NULL an empty string will be returned. If length is omitted, the substring starting from start until the end of the string will be returned."}],"ret_type":"string"}]},"substr_compare":{"desc":"Binary safe comparison of two strings from an offset, up to length characters","long_desc":"substr_compare() compares main_str from position offset with str up to length characters.","ver":"PHP 5","ret_desc":"Returns < 0 if main_str from position offset is less than str, > 0 if it is greater than str, and 0 if they are equal. If offset is equal to or greater than the length of main_str or length is set and is less than 1, substr_compare() prints a warning and returns FALSE.","url":"function.substr-compare","name":"substr_compare","params":[{"list":[{"type":"string","var":"$main_str","beh":1,"desc":"The main string being compared."},{"type":"string","var":"$str","beh":1,"desc":"The secondary string being compared."},{"type":"int","var":"$offset","beh":1,"desc":"The start position for the comparison. If negative, it starts counting from the end of the string."},{"type":"int","var":"$length","beh":1,"desc":"The length of the comparison. The default value is the largest of the length of the str compared to the length of main_str less the offset."},{"type":"bool","var":"$case_insensitivity","beh":1,"desc":"If case_insensitivity is TRUE, comparison is case insensitive.","def":"false"}],"ret_type":"int"}]},"substr_count":{"desc":"Count the number of substring occurrences","long_desc":"substr_count() returns the number of times the needle substring occurs in the haystack string. Please note that needle is case sensitive.","ver":"PHP 4, PHP 5","ret_desc":"This function returns an integer.","seealso":[],"url":"function.substr-count","name":"substr_count","params":[{"list":[{"type":"string","var":"$haystack","beh":1,"desc":"The string to search in"},{"type":"string","var":"$needle","beh":1,"desc":"The substring to search for"},{"type":"int","var":"$offset","beh":1,"desc":"The offset where to start counting","def":0},{"type":"int","var":"$length","beh":1,"desc":"The maximum length after the specified offset to search for the substring. It outputs a warning if the offset plus the length is greater than the haystack length."}],"ret_type":"int"}]},"substr_replace":{"desc":"Replace text within a portion of a string","long_desc":"substr_replace() replaces a copy of string delimited by the start and (optionally) length parameters with the string given in replacement.","ver":"PHP 4, PHP 5","ret_desc":"The result string is returned. If string is an array then array is returned.","seealso":[],"url":"function.substr-replace","name":"substr_replace","params":[{"list":[{"type":"mixed","var":"$string","beh":0,"desc":"The input string. An array of strings can be provided, in which case the replacements will occur on each string in turn. In this case, the replacement, start and length parameters may be provided either as scalar values to be applied to each input string in turn, or as arrays, in which case the corresponding array element will be used for each input string."},{"type":"mixed","var":"$replacement","beh":1,"desc":"The replacement string."},{"type":"mixed","var":"$start","beh":1,"desc":"If start is positive, the replacing will begin at the start'th offset into string. If start is negative, the replacing will begin at the start'th character from the end of string."},{"type":"mixed","var":"$length","beh":1,"desc":"If given and is positive, it represents the length of the portion of string which is to be replaced. If it is negative, it represents the number of characters from the end of string at which to stop replacing. If it is not given, then it will default to strlen( string ); i.e. end the replacing at the end of string. Of course, if length is zero then this function will have the effect of inserting replacement into string at the given start offset."}],"ret_type":"mixed"}]},"svn_add":{"desc":"Schedules the addition of an item in a working directory","long_desc":"Adds the file, directory or symbolic link at path to the working directory. The item will be added to the repository the next time you call svn_commit() on the working copy.","ver":"PECL svn >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.svn-add","name":"svn_add","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"Path of item to add."},{"type":"bool","var":"$recursive","beh":1,"desc":"If item is directory, whether or not to recursively add all of its contents. Default is TRUE","def":"true"},{"type":"bool","var":"$force","beh":1,"desc":"If true, Subversion will recurse into already versioned directories in order to add unversioned files that may be hiding in those directories. Default is FALSE","def":"false"}],"ret_type":"bool"}]},"svn_auth_get_parameter":{"desc":"Retrieves authentication parameter","long_desc":"Retrieves authentication parameter at key. For a list of valid keys and their meanings, consult the authentication constants list.","ver":"PECL svn >= 0.1.0","ret_desc":"Returns the string value of the parameter at key; returns NULL if parameter does not exist.","seealso":[],"url":"function.svn-auth-get-parameter","name":"svn_auth_get_parameter","params":[{"list":[],"ret_type":"string"}]},"svn_auth_set_parameter":{"desc":"Sets an authentication parameter","long_desc":"Sets authentication parameter at key to value. For a list of valid keys and their meanings, consult the authentication constants list.","ver":"PECL svn >= 0.1.0","ret_desc":"No value is returned.","seealso":[],"url":"function.svn-auth-set-parameter","name":"svn_auth_set_parameter","params":[{"list":[{"type":"string","var":"$key","beh":0,"desc":"String key name. Use the authentication constants defined by this extension to specify a key."},{"type":"string","var":"$value","beh":0,"desc":"String value to set to parameter at key. Format of value varies with the parameter."}],"ret_type":"void"}]},"svn_blame":{"desc":"Get the SVN blame for a file","long_desc":"Get the SVN blame of a file from a repository URL.","ver":"PECL svn >= 0.3.0","ret_desc":"An array of SVN blame information separated by line which includes the revision number, line number, line of code, author, and date.","seealso":[],"url":"function.svn-blame","name":"svn_blame","params":[{"list":[{"type":"string","var":"$repository_url","beh":0,"desc":"The repository URL."},{"type":"int","var":"$revision_no","beh":0,"desc":"The revision number.","def":"SVN_REVISION_HEAD"}],"ret_type":"array"}]},"svn_cat":{"desc":"Returns the contents of a file in a repository","long_desc":"Returns the contents of the URL repos_url to a file in the repository, optionally at revision number revision_no.","ver":"PECL svn >= 0.1.0","ret_desc":"Returns the string contents of the item from the repository on success, and FALSE on failure.","seealso":[],"url":"function.svn-cat","name":"svn_cat","params":[{"list":[{"type":"string","var":"$repos_url","beh":0,"desc":"String URL path to item in a repository."},{"type":"int","var":"$revision_no","beh":1,"desc":"Integer revision number of item to retrieve, default is the HEAD revision."}],"ret_type":"string"}]},"svn_checkout":{"desc":"Checks out a working copy from the repository","long_desc":"Checks out a working copy from the repository at repos to targetpath at revision revision.","ver":"PECL svn >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.svn-checkout","name":"svn_checkout","params":[{"list":[{"type":"string","var":"$repos","beh":1,"desc":"String URL path to directory in repository to check out."},{"type":"string","var":"$targetpath","beh":1,"desc":"String local path to directory to check out in to"},{"type":"int","var":"$revision","beh":1,"desc":"Integer revision number of repository to check out. Default is HEAD, the most recent revision."},{"type":"int","var":"$flags","beh":1,"desc":"Any combination of SVN_NON_RECURSIVE and SVN_IGNORE_EXTERNALS.","def":0}],"ret_type":"bool"}]},"svn_cleanup":{"desc":"Recursively cleanup a working copy directory, finishing incomplete operations and removing locks","long_desc":"Recursively cleanup working copy directory workingdir, finishing any incomplete operations and removing working copy locks. Use when a working copy is in limbo and needs to be usable again.","ver":"PECL svn >= 0.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.svn-cleanup","name":"svn_cleanup","params":[{"list":[],"ret_type":"bool"}]},"svn_client_version":{"desc":"Returns the version of the SVN client libraries","long_desc":"Returns the version of the SVN client libraries","ver":"PECL svn >= 0.1.0","ret_desc":"String version number, usually in form of x.y.z.","url":"function.svn-client-version","name":"svn_client_version","params":[{"list":[],"ret_type":"string"}]},"svn_commit":{"desc":"Sends changes from the local working copy to the repository","long_desc":"Commits changes made in the local working copy files enumerated in the targets array to the repository, with the log message log. Directories in the targets array will be recursively committed unless dontrecurse is set to true.","ver":"PECL svn >= 0.1.0","ret_desc":"Returns array in form of:","seealso":[],"url":"function.svn-commit","name":"svn_commit","params":[{"list":[{"type":"string","var":"$log","beh":0,"desc":"String log text to commit"},{"type":"array","var":"$targets","beh":1,"desc":"Array of local paths of files to be committed"},{"type":"bool","var":"$dontrecurse","beh":1,"desc":"Boolean flag to disable recursive committing of directories in the targets array. Default is FALSE.","def":"false"}],"ret_type":"array"}]},"svn_delete":{"desc":"Delete items from a working copy or repository.","long_desc":"Deletes the file, directory or symbolic link at path from the working directory. The item will be deleted from the repository the next time you call svn_commit() on the working copy.","ver":"PECL svn >= 0.4.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.svn-delete","name":"svn_delete","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":"Path of item to delete."},{"type":"bool","var":"$force","beh":0,"desc":"If TRUE, the file will be deleted even if it has local modifications. Otherwise, local modifications will result in a failure. Default is FALSE","def":"false"}],"ret_type":"bool"}]},"svn_diff":{"desc":"Recursively diffs two paths","long_desc":"Recursively diffs two paths, path1 and path2.","ver":"PECL svn >= 0.1.0","ret_desc":"Returns an array-list consisting of two streams: the first is the diff output and the second contains error stream output. The streams can be read using fread(). Returns FALSE or NULL on error.","seealso":[],"url":"function.svn-diff","name":"svn_diff","params":[{"list":[{"type":"string","var":"$path1","beh":0,"desc":"First path to diff. This can be a URL to a file\/directory in an SVN repository or a local file\/directory path."},{"type":"int","var":"$rev1","beh":0,"desc":"First path's revision number. Use SVN_REVISION_HEAD to specify the most recent revision."},{"type":"string","var":"$path2","beh":1,"desc":"Second path to diff. See path1 for description."},{"type":"int","var":"$rev2","beh":1,"desc":"Second path's revision number. See rev1 for description."}],"ret_type":"array"}]},"svn_export":{"desc":"Export the contents of a SVN directory","long_desc":"Export the contents of either a working copy or repository into a 'clean' directory.","ver":"PECL svn >= 0.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.svn-export","name":"svn_export","params":[{"list":[{"type":"string","var":"$frompath","beh":1,"desc":"The path to the current repository."},{"type":"string","var":"$topath","beh":1,"desc":"The path to the new repository."},{"type":"bool","var":"$working_copy","beh":1,"desc":"If TRUE, it will export uncommitted files from the working copy.","def":"true"},{"type":"int","var":"$revision_no","beh":1,"desc":"","def":-1}],"ret_type":"bool"}]},"svn_fs_abort_txn":{"desc":"Abort a transaction, returns true if everything is okay, false otherwise","long_desc":"Abort a transaction, returns true if everything is okay, false otherwise","ver":"PECL svn >= 0.2.0","url":"function.svn-fs-abort-txn","name":"svn_fs_abort_txn","params":[{"list":[],"ret_type":"bool"}]},"svn_fs_apply_text":{"desc":"Creates and returns a stream that will be used to replace","long_desc":"Creates and returns a stream that will be used to replace","ver":"PECL svn >= 0.2.0","url":"function.svn-fs-apply-text","name":"svn_fs_apply_text","params":[{"list":[{"type":"resource","var":"$root","beh":0,"desc":""},{"type":"string","var":"$path","beh":0,"desc":""}],"ret_type":"resource"}]},"svn_fs_begin_txn2":{"desc":"Create a new transaction","long_desc":"Create a new transaction","ver":"PECL svn >= 0.2.0","url":"function.svn-fs-begin-txn2","name":"svn_fs_begin_txn2","params":[{"list":[{"type":"resource","var":"$repos","beh":0,"desc":""},{"type":"int","var":"$rev","beh":0,"desc":""}],"ret_type":"resource"}]},"svn_fs_change_node_prop":{"desc":"Return true if everything is ok, false otherwise","long_desc":"Return true if everything is ok, false otherwise","ver":"PECL svn >= 0.2.0","url":"function.svn-fs-change-node-prop","name":"svn_fs_change_node_prop","params":[{"list":[{"type":"resource","var":"$root","beh":0,"desc":""},{"type":"string","var":"$path","beh":0,"desc":""},{"type":"string","var":"$name","beh":1,"desc":""},{"type":"string","var":"$value","beh":1,"desc":""}],"ret_type":"bool"}]},"svn_fs_check_path":{"desc":"Determines what kind of item lives at path in a given repository fsroot","long_desc":"Determines what kind of item lives at path in a given repository fsroot","ver":"PECL svn >= 0.1.0","url":"function.svn-fs-check-path","name":"svn_fs_check_path","params":[{"list":[{"type":"resource","var":"$fsroot","beh":0,"desc":""},{"type":"string","var":"$path","beh":0,"desc":""}],"ret_type":"int"}]},"svn_fs_contents_changed":{"desc":"Return true if content is different, false otherwise","long_desc":"Return true if content is different, false otherwise","ver":"PECL svn >= 0.2.0","url":"function.svn-fs-contents-changed","name":"svn_fs_contents_changed","params":[{"list":[{"type":"resource","var":"$root1","beh":0,"desc":""},{"type":"string","var":"$path1","beh":0,"desc":""},{"type":"resource","var":"$root2","beh":1,"desc":""},{"type":"string","var":"$path2","beh":1,"desc":""}],"ret_type":"bool"}]},"svn_fs_copy":{"desc":"Copies a file or a directory, returns true if all is ok, false otherwise","long_desc":"Copies a file or a directory, returns true if all is ok, false otherwise","ver":"PECL svn >= 0.2.0","url":"function.svn-fs-copy","name":"svn_fs_copy","params":[{"list":[{"type":"resource","var":"$from_root","beh":0,"desc":""},{"type":"string","var":"$from_path","beh":0,"desc":""},{"type":"resource","var":"$to_root","beh":1,"desc":""},{"type":"string","var":"$to_path","beh":1,"desc":""}],"ret_type":"bool"}]},"svn_fs_delete":{"desc":"Deletes a file or a directory, return true if all is ok, false otherwise","long_desc":"Deletes a file or a directory, return true if all is ok, false otherwise","ver":"PECL svn >= 0.2.0","url":"function.svn-fs-delete","name":"svn_fs_delete","params":[{"list":[{"type":"resource","var":"$root","beh":0,"desc":""},{"type":"string","var":"$path","beh":0,"desc":""}],"ret_type":"bool"}]},"svn_fs_dir_entries":{"desc":"Enumerates the directory entries under path; returns a hash of dir names to file type","long_desc":"Enumerates the directory entries under path; returns a hash of dir names to file type","ver":"PECL svn >= 0.1.0","url":"function.svn-fs-dir-entries","name":"svn_fs_dir_entries","params":[{"list":[{"type":"resource","var":"$fsroot","beh":0,"desc":""},{"type":"string","var":"$path","beh":0,"desc":""}],"ret_type":"array"}]},"svn_fs_file_contents":{"desc":"Returns a stream to access the contents of a file from a given version of the fs","long_desc":"Returns a stream to access the contents of a file from a given version of the fs","ver":"PECL svn >= 0.1.0","url":"function.svn-fs-file-contents","name":"svn_fs_file_contents","params":[{"list":[{"type":"resource","var":"$fsroot","beh":0,"desc":""},{"type":"string","var":"$path","beh":0,"desc":""}],"ret_type":"resource"}]},"svn_fs_file_length":{"desc":"Returns the length of a file from a given version of the fs","long_desc":"Returns the length of a file from a given version of the fs","ver":"PECL svn >= 0.1.0","url":"function.svn-fs-file-length","name":"svn_fs_file_length","params":[{"list":[{"type":"resource","var":"$fsroot","beh":0,"desc":""},{"type":"string","var":"$path","beh":0,"desc":""}],"ret_type":"int"}]},"svn_fs_is_dir":{"desc":"Return true if the path points to a directory, false otherwise","long_desc":"Return true if the path points to a directory, false otherwise","ver":"PECL svn >= 0.2.0","url":"function.svn-fs-is-dir","name":"svn_fs_is_dir","params":[{"list":[{"type":"resource","var":"$root","beh":0,"desc":""},{"type":"string","var":"$path","beh":0,"desc":""}],"ret_type":"bool"}]},"svn_fs_is_file":{"desc":"Return true if the path points to a file, false otherwise","long_desc":"Return true if the path points to a file, false otherwise","ver":"PECL svn >= 0.2.0","url":"function.svn-fs-is-file","name":"svn_fs_is_file","params":[{"list":[{"type":"resource","var":"$root","beh":0,"desc":""},{"type":"string","var":"$path","beh":0,"desc":""}],"ret_type":"bool"}]},"svn_fs_make_dir":{"desc":"Creates a new empty directory, returns true if all is ok, false otherwise","long_desc":"Creates a new empty directory, returns true if all is ok, false otherwise","ver":"PECL svn >= 0.2.0","url":"function.svn-fs-make-dir","name":"svn_fs_make_dir","params":[{"list":[{"type":"resource","var":"$root","beh":0,"desc":""},{"type":"string","var":"$path","beh":0,"desc":""}],"ret_type":"bool"}]},"svn_fs_make_file":{"desc":"Creates a new empty file, returns true if all is ok, false otherwise","long_desc":"Creates a new empty file, returns true if all is ok, false otherwise","ver":"PECL svn >= 0.2.0","url":"function.svn-fs-make-file","name":"svn_fs_make_file","params":[{"list":[{"type":"resource","var":"$root","beh":0,"desc":""},{"type":"string","var":"$path","beh":0,"desc":""}],"ret_type":"bool"}]},"svn_fs_node_created_rev":{"desc":"Returns the revision in which path under fsroot was created","long_desc":"Returns the revision in which path under fsroot was created","ver":"PECL svn >= 0.1.0","url":"function.svn-fs-node-created-rev","name":"svn_fs_node_created_rev","params":[{"list":[{"type":"resource","var":"$fsroot","beh":0,"desc":""},{"type":"string","var":"$path","beh":0,"desc":""}],"ret_type":"int"}]},"svn_fs_node_prop":{"desc":"Returns the value of a property for a node","long_desc":"Returns the value of a property for a node","ver":"PECL svn >= 0.1.0","url":"function.svn-fs-node-prop","name":"svn_fs_node_prop","params":[{"list":[{"type":"resource","var":"$fsroot","beh":0,"desc":""},{"type":"string","var":"$path","beh":0,"desc":""},{"type":"string","var":"$propname","beh":1,"desc":""}],"ret_type":"string"}]},"svn_fs_props_changed":{"desc":"Return true if props are different, false otherwise","long_desc":"Return true if props are different, false otherwise","ver":"PECL svn >= 0.2.0","url":"function.svn-fs-props-changed","name":"svn_fs_props_changed","params":[{"list":[{"type":"resource","var":"$root1","beh":0,"desc":""},{"type":"string","var":"$path1","beh":0,"desc":""},{"type":"resource","var":"$root2","beh":1,"desc":""},{"type":"string","var":"$path2","beh":1,"desc":""}],"ret_type":"bool"}]},"svn_fs_revision_prop":{"desc":"Fetches the value of a named property","long_desc":"Fetches the value of a named property","ver":"PECL svn >= 0.1.0","url":"function.svn-fs-revision-prop","name":"svn_fs_revision_prop","params":[{"list":[{"type":"resource","var":"$fs","beh":0,"desc":""},{"type":"int","var":"$revnum","beh":0,"desc":""},{"type":"string","var":"$propname","beh":1,"desc":""}],"ret_type":"string"}]},"svn_fs_revision_root":{"desc":"Get a handle on a specific version of the repository root","long_desc":"Get a handle on a specific version of the repository root","ver":"PECL svn >= 0.1.0","url":"function.svn-fs-revision-root","name":"svn_fs_revision_root","params":[{"list":[{"type":"resource","var":"$fs","beh":0,"desc":""},{"type":"int","var":"$revnum","beh":0,"desc":""}],"ret_type":"resource"}]},"svn_fs_txn_root":{"desc":"Creates and returns a transaction root","long_desc":"Creates and returns a transaction root","ver":"PECL svn >= 0.2.0","url":"function.svn-fs-txn-root","name":"svn_fs_txn_root","params":[{"list":[],"ret_type":"resource"}]},"svn_fs_youngest_rev":{"desc":"Returns the number of the youngest revision in the filesystem","long_desc":"Returns the number of the youngest revision in the filesystem","ver":"PECL svn >= 0.1.0","url":"function.svn-fs-youngest-rev","name":"svn_fs_youngest_rev","params":[{"list":[],"ret_type":"int"}]},"svn_import":{"desc":"Imports an unversioned path into a repository","long_desc":"Commits unversioned path into repository at url. If path is a directory and nonrecursive is FALSE, the directory will be imported recursively.","ver":"PECL svn >= 0.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.svn-import","name":"svn_import","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":"Path of file or directory to import."},{"type":"string","var":"$url","beh":0,"desc":"Repository URL to import into."},{"type":"bool","var":"$nonrecursive","beh":1,"desc":"Whether or not to refrain from recursively processing directories."}],"ret_type":"bool"}]},"svn_log":{"desc":"Returns the commit log messages of a repository URL","long_desc":"svn_log() returns the complete history of the item at the repository URL repos_url, or the history of a specific revision if start_revision is set. This function is equivalent to svn log --verbose -r $start_revision $repos_url.","ver":"PECL svn >= 0.1.0","ret_desc":"On success, this function returns an array file listing in the format of:","seealso":[],"url":"function.svn-log","name":"svn_log","params":[{"list":[{"type":"string","var":"$repos_url","beh":1,"desc":"Repository URL of the item to retrieve log history from."},{"type":"int","var":"$start_revision","beh":1,"desc":"Revision number of the first log to retrieve. Use SVN_REVISION_HEAD to retrieve the log from the most recent revision."},{"type":"int","var":"$end_revision","beh":1,"desc":"Revision number of the last log to retrieve. Defaults to start_revision if specified or to SVN_REVISION_INITIAL otherwise."},{"type":"int","var":"$limit","beh":1,"desc":"Number of logs to retrieve.","def":0},{"type":"int","var":"$flags","beh":1,"desc":"Any combination of SVN_OMIT_MESSAGES, SVN_DISCOVER_CHANGED_PATHS and SVN_STOP_ON_COPY.","def":"SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY"}],"ret_type":"array"}]},"svn_ls":{"desc":"Returns list of directory contents in repository URL, optionally at revision number","long_desc":"This function queries the repository URL and returns a list of files and directories, optionally from a specific revision. This is equivalent to svn list $repos_url[@$revision_no]","ver":"PECL svn >= 0.1.0","ret_desc":"On success, this function returns an array file listing in the format of:","seealso":[],"url":"function.svn-ls","name":"svn_ls","params":[{"list":[{"type":"string","var":"$repos_url","beh":1,"desc":"URL of the repository, eg. http:\/\/www.example.com\/svnroot. To access a local Subversion repository via filesystem, use the file URI scheme, eg. file:\/\/\/home\/user\/svn-repos"},{"type":"int","var":"$revision_no","beh":1,"desc":"Integer revision number to retrieve listing of. When omitted, the HEAD revision is used.","def":"SVN_REVISION_HEAD"},{"type":"bool","var":"$recurse","beh":1,"desc":"Enables recursion.","def":"false"},{"type":"bool","var":"$peg","beh":1,"desc":"","def":"false"}],"ret_type":"array"}]},"svn_mkdir":{"desc":"Creates a directory in a working copy or repository","long_desc":"Creates a directory in a working copy or repository.","ver":"PECL svn >= 0.4.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.svn-mkdir","name":"svn_mkdir","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":"The path to the working copy or repository."},{"type":"string","var":"$log_message","beh":1,"desc":""}],"ret_type":"bool"}]},"svn_repos_create":{"desc":"Create a new subversion repository at path","long_desc":"Create a new subversion repository at path","ver":"PECL svn >= 0.1.0","url":"function.svn-repos-create","name":"svn_repos_create","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":""},{"type":"array","var":"$config","beh":1,"desc":""},{"type":"array","var":"$fsconfig","beh":1,"desc":""}],"ret_type":"resource"}]},"svn_repos_fs":{"desc":"Gets a handle on the filesystem for a repository","long_desc":"Gets a handle on the filesystem for a repository","ver":"PECL svn >= 0.1.0","url":"function.svn-repos-fs","name":"svn_repos_fs","params":[{"list":[],"ret_type":"resource"}]},"svn_repos_fs_begin_txn_for_commit":{"desc":"Create a new transaction","long_desc":"Create a new transaction","ver":"PECL svn >= 0.2.0","url":"function.svn-repos-fs-begin-txn-for-commit","name":"svn_repos_fs_begin_txn_for_commit","params":[{"list":[{"type":"resource","var":"$repos","beh":0,"desc":""},{"type":"int","var":"$rev","beh":0,"desc":""},{"type":"string","var":"$author","beh":1,"desc":""},{"type":"string","var":"$log_msg","beh":1,"desc":""}],"ret_type":"resource"}]},"svn_repos_fs_commit_txn":{"desc":"Commits a transaction and returns the new revision","long_desc":"Commits a transaction and returns the new revision","ver":"PECL svn >= 0.2.0","url":"function.svn-repos-fs-commit-txn","name":"svn_repos_fs_commit_txn","params":[{"list":[],"ret_type":"int"}]},"svn_repos_hotcopy":{"desc":"Make a hot-copy of the repos at repospath; copy it to destpath","long_desc":"Make a hot-copy of the repos at repospath; copy it to destpath","ver":"PECL svn >= 0.1.0","url":"function.svn-repos-hotcopy","name":"svn_repos_hotcopy","params":[{"list":[{"type":"string","var":"$repospath","beh":0,"desc":""},{"type":"string","var":"$destpath","beh":0,"desc":""},{"type":"bool","var":"$cleanlogs","beh":1,"desc":""}],"ret_type":"bool"}]},"svn_repos_open":{"desc":"Open a shared lock on a repository.","long_desc":"Open a shared lock on a repository.","ver":"PECL svn >= 0.1.0","url":"function.svn-repos-open","name":"svn_repos_open","params":[{"list":[],"ret_type":"resource"}]},"svn_repos_recover":{"desc":"Run recovery procedures on the repository located at path.","long_desc":"Run recovery procedures on the repository located at path.","ver":"PECL svn >= 0.1.0","url":"function.svn-repos-recover","name":"svn_repos_recover","params":[{"list":[],"ret_type":"bool"}]},"svn_revert":{"desc":"Revert changes to the working copy","long_desc":"Revert any local changes to the path in a working copy.","ver":"PECL svn >= 0.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.svn-revert","name":"svn_revert","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":"The path to the working repository."},{"type":"bool","var":"$recursive","beh":0,"desc":"Optionally make recursive changes.","def":"false"}],"ret_type":"bool"}]},"svn_status":{"desc":"Returns the status of working copy files and directories","long_desc":"Returns the status of working copy files and directories, giving modifications, additions, deletions and other changes to items in the working copy.","ver":"PECL svn >= 0.1.0","ret_desc":"Returns a numerically indexed array of associative arrays detailing the status of items in the repository:","seealso":[],"url":"function.svn-status","name":"svn_status","params":[{"list":[{"type":"string","var":"$path","beh":0,"desc":"Local path to file or directory to retrieve status of."},{"type":"int","var":"$flags","beh":0,"desc":"Any combination of SVN_NON_RECURSIVE, SVN_ALL (regardless of modification status), SVN_SHOW_UPDATES (entries will be added for items that are out-of-date), SVN_NO_IGNORE (disregard svn:ignore properties when scanning for new files) and SVN_IGNORE_EXTERNALS.","def":0}],"ret_type":"array"}]},"svn_update":{"desc":"Update working copy","long_desc":"Update working copy at path to revision revno. If recurse is true, directories will be recursively updated.","ver":"PECL svn >= 0.1.0","ret_desc":"Returns new revision number on success, returns FALSE on failure.","seealso":[],"url":"function.svn-update","name":"svn_update","params":[{"list":[{"type":"string","var":"$path","beh":1,"desc":"Path to local working copy."},{"type":"int","var":"$revno","beh":1,"desc":"Revision number to update to, default is SVN_REVISION_HEAD.","def":"SVN_REVISION_HEAD"},{"type":"bool","var":"$recurse","beh":1,"desc":"Whether or not to recursively update directories.","def":"true"}],"ret_type":"int"}]},"swf_actiongeturl":{"desc":"Get a URL from a Shockwave Flash movie","long_desc":"Gets the URL specified by the parameter url with the given target.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-actiongeturl","name":"swf_actiongeturl","params":[{"list":[{"type":"string","var":"$url","beh":0,"desc":"The URL, as a string."},{"type":"string","var":"$target","beh":0,"desc":"The target, as a string."}],"ret_type":"void"}]},"swf_actiongotoframe":{"desc":"Play a frame and then stop","long_desc":"The swf_actiongotoframe() function will go to the frame specified by framenumber, play it, and then stop.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-actiongotoframe","name":"swf_actiongotoframe","params":[{"list":[],"ret_type":"void"}]},"swf_actiongotolabel":{"desc":"Display a frame with the specified label","long_desc":"The swf_actiongotolabel() function displays the frame with the label given by the label parameter and then stops.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-actiongotolabel","name":"swf_actiongotolabel","params":[{"list":[],"ret_type":"void"}]},"swf_actionnextframe":{"desc":"Go forward one frame","long_desc":"Go forward one frame.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-actionnextframe","name":"swf_actionnextframe","params":[{"list":[],"ret_type":"void"}]},"swf_actionplay":{"desc":"Start playing the flash movie from the current frame","long_desc":"Start playing the flash movie from the current frame.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-actionplay","name":"swf_actionplay","params":[{"list":[],"ret_type":"void"}]},"swf_actionprevframe":{"desc":"Go backwards one frame","long_desc":"Go backwards one frame.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-actionprevframe","name":"swf_actionprevframe","params":[{"list":[],"ret_type":"void"}]},"swf_actionsettarget":{"desc":"Set the context for actions","long_desc":"Sets the context for all actions. You can use this to control other flash movies that are currently playing.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-actionsettarget","name":"swf_actionsettarget","params":[{"list":[],"ret_type":"void"}]},"swf_actionstop":{"desc":"Stop playing the flash movie at the current frame","long_desc":"Stop playing the flash movie at the current frame.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-actionstop","name":"swf_actionstop","params":[{"list":[],"ret_type":"void"}]},"swf_actiontogglequality":{"desc":"Toggle between low and high quality","long_desc":"Toggle the flash movie between high and low quality.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-actiontogglequality","name":"swf_actiontogglequality","params":[{"list":[],"ret_type":"void"}]},"swf_actionwaitforframe":{"desc":"Skip actions if a frame has not been loaded","long_desc":"The swf_actionwaitforframe() function will check to see if the frame, specified by the framenumber parameter has been loaded, if not it will skip the number of actions specified by the skipcount parameter. This can be useful for \"Loading...\" type animations.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-actionwaitforframe","name":"swf_actionwaitforframe","params":[{"list":[{"type":"int","var":"$framenumber","beh":0,"desc":"The frame number."},{"type":"int","var":"$skipcount","beh":0,"desc":"The number of actions to skip."}],"ret_type":"void"}]},"swf_addbuttonrecord":{"desc":"Controls location, appearance and active area of the current button","long_desc":"Allow you to define the specifics of using a button.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-addbuttonrecord","name":"swf_addbuttonrecord","params":[{"list":[{"type":"int","var":"$states","beh":0,"desc":"Defines what states the button can have, these can be any or all of the following constants: BSHitTest, BSDown, BSOver or BSUp."},{"type":"int","var":"$shapeid","beh":0,"desc":"The second parameter, the shapeid is the look of the button, this is usually the object id of the shape of the button."},{"type":"int","var":"$depth","beh":1,"desc":"This parameter is the placement of the button in the current frame."}],"ret_type":"void"}]},"swf_addcolor":{"desc":"Set the global add color to the rgba value specified","long_desc":"Sets the global add color to the specified color. This color is then implicitly used by the swf_placeobject(), swf_modifyobject() and swf_addbuttonrecord() functions. The color of the object will be add by the given values when the object is written to the screen.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-addcolor","name":"swf_addcolor","params":[{"list":[{"type":"float","var":"$r","beh":0,"desc":"Red value"},{"type":"float","var":"$g","beh":0,"desc":"Green value"},{"type":"float","var":"$b","beh":1,"desc":"Blue value"},{"type":"float","var":"$a","beh":1,"desc":"Alpha value"}],"ret_type":"void"}]},"swf_closefile":{"desc":"Close the current Shockwave Flash file","long_desc":"Close a file that was opened by the swf_openfile() function.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-closefile","name":"swf_closefile","params":[{"list":[],"ret_type":"void"}]},"swf_definebitmap":{"desc":"Define a bitmap","long_desc":"The swf_definebitmap() function defines a bitmap given an image.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-definebitmap","name":"swf_definebitmap","params":[{"list":[{"type":"int","var":"$objid","beh":0,"desc":"An SWF object id."},{"type":"string","var":"$image_name","beh":0,"desc":"A GIF, JPEG, RGB or FI image. The image will be converted into a Flash JPEG or Flash color map format."}],"ret_type":"void"}]},"swf_definefont":{"desc":"Defines a font","long_desc":"The swf_definefont() function defines a font parameter and gives it the specified id. It then sets the font given by fontname to the current font.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-definefont","name":"swf_definefont","params":[{"list":[{"type":"int","var":"$fontid","beh":0,"desc":"The id to be given to the font."},{"type":"string","var":"$fontname","beh":0,"desc":"The font so be set as current font."}],"ret_type":"void"}]},"swf_defineline":{"desc":"Define a line","long_desc":"Defines a line.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-defineline","name":"swf_defineline","params":[{"list":[{"type":"int","var":"$objid","beh":0,"desc":"The object id."},{"type":"float","var":"$x1","beh":0,"desc":"x-coordinate of start point."},{"type":"float","var":"$y1","beh":1,"desc":"y-coordinate of start point."},{"type":"float","var":"$x2","beh":1,"desc":"x-coordinate of end point."},{"type":"float","var":"$y2","beh":1,"desc":"y-coordinate of end point."},{"type":"float","var":"$width","beh":1,"desc":"The line width."}],"ret_type":"void"}]},"swf_definepoly":{"desc":"Define a polygon","long_desc":"Defines a polygon given an array of x, y coordinates.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-definepoly","name":"swf_definepoly","params":[{"list":[{"type":"int","var":"$objid","beh":0,"desc":"The object id."},{"type":"array","var":"$coords","beh":0,"desc":"An array of x, y coordinates."},{"type":"int","var":"$npoints","beh":1,"desc":"The number of overall points that are contained in the array given by coords"},{"type":"float","var":"$width","beh":1,"desc":"The width of the polygon's border, if set to 0.0 the polygon is filled."}],"ret_type":"void"}]},"swf_definerect":{"desc":"Define a rectangle","long_desc":"Defines a rectangle with an upper left hand coordinate and a lower right hand coordinate.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-definerect","name":"swf_definerect","params":[{"list":[{"type":"int","var":"$objid","beh":0,"desc":"The object id."},{"type":"float","var":"$x1","beh":0,"desc":"x-coordinate of upper left point."},{"type":"float","var":"$y1","beh":1,"desc":"y-coordinate of upper left point."},{"type":"float","var":"$x2","beh":1,"desc":"x-coordinate of lower right point."},{"type":"float","var":"$y2","beh":1,"desc":"y-coordinate of lower right point."},{"type":"float","var":"$width","beh":1,"desc":"Width of the rectangles border, if the width is 0.0 then the rectangle is filled."}],"ret_type":"void"}]},"swf_definetext":{"desc":"Define a text string","long_desc":"Defines a text string using the current font and font size.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-definetext","name":"swf_definetext","params":[{"list":[{"type":"int","var":"$objid","beh":0,"desc":"The object id."},{"type":"string","var":"$str","beh":0,"desc":"The text, as a string."},{"type":"int","var":"$docenter","beh":1,"desc":"The docenter is where the word is centered, if docenter is 1, then the word is centered in x."}],"ret_type":"void"}]},"swf_endbutton":{"desc":"End the definition of the current button","long_desc":"The swf_endbutton() function ends the definition of the current button.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-endbutton","name":"swf_endbutton","params":[{"list":[],"ret_type":"void"}]},"swf_enddoaction":{"desc":"End the current action","long_desc":"Ends the current action started by the swf_startdoaction() function.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-enddoaction","name":"swf_enddoaction","params":[{"list":[],"ret_type":"void"}]},"swf_endshape":{"desc":"Completes the definition of the current shape","long_desc":"The swf_endshape() completes the definition of the current shape.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-endshape","name":"swf_endshape","params":[{"list":[],"ret_type":"void"}]},"swf_endsymbol":{"desc":"End the definition of a symbol","long_desc":"Ends the definition of a symbol that was started by the swf_startsymbol() function.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-endsymbol","name":"swf_endsymbol","params":[{"list":[],"ret_type":"void"}]},"swf_fontsize":{"desc":"Change the font size","long_desc":"Changes the font size to the value given by the size parameter.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-fontsize","name":"swf_fontsize","params":[{"list":[],"ret_type":"void"}]},"swf_fontslant":{"desc":"Set the font slant","long_desc":"Set the current font slant to the angle indicated by the slant parameter.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-fontslant","name":"swf_fontslant","params":[{"list":[],"ret_type":"void"}]},"swf_fonttracking":{"desc":"Set the current font tracking","long_desc":"Set the font tracking to the value specified by the tracking parameter. This function is used to increase the spacing between letters and text, positive values increase the space and negative values decrease the space between letters.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-fonttracking","name":"swf_fonttracking","params":[{"list":[],"ret_type":"void"}]},"swf_getbitmapinfo":{"desc":"Get information about a bitmap","long_desc":"Returns information about a bitmap.","ver":"PHP 4","ret_desc":"Returns an array with the following elements:","url":"function.swf-getbitmapinfo","name":"swf_getbitmapinfo","params":[{"list":[],"ret_type":"array"}]},"swf_getfontinfo":{"desc":"Gets font information","long_desc":"Gets information about the font by giving the height in pixels of a capital A and a lowercase x.","ver":"PHP 4","ret_desc":"Returns an associative array with the following parameters:","url":"function.swf-getfontinfo","name":"swf_getfontinfo","params":[{"list":[],"ret_type":"array"}]},"swf_getframe":{"desc":"Get the frame number of the current frame","long_desc":"The swf_getframe() function gets the number of the current frame.","ver":"PHP 4","ret_desc":"Returns the current frame number, as an integer.","seealso":[],"url":"function.swf-getframe","name":"swf_getframe","params":[{"list":[],"ret_type":"int"}]},"swf_labelframe":{"desc":"Label the current frame","long_desc":"Labels the current frame with the given name.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-labelframe","name":"swf_labelframe","params":[{"list":[],"ret_type":"void"}]},"swf_lookat":{"desc":"Define a viewing transformation","long_desc":"Defines a viewing transformation by giving the viewing position and the coordinates of a reference point in the scene.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-lookat","name":"swf_lookat","params":[{"list":[{"type":"float","var":"$view_x","beh":0,"desc":"x-coordinate for the viewing position"},{"type":"float","var":"$view_y","beh":0,"desc":"y-coordinate for the viewing position"},{"type":"float","var":"$view_z","beh":1,"desc":"z-coordinate for the viewing position"},{"type":"float","var":"$reference_x","beh":1,"desc":"x-coordinate for the reference point"},{"type":"float","var":"$reference_y","beh":1,"desc":"y-coordinate for the reference point"},{"type":"float","var":"$reference_z","beh":1,"desc":"z-coordinate for the reference point"},{"type":"float","var":"$twist","beh":1,"desc":"Controls the rotation along with viewer's z axis."}],"ret_type":"void"}]},"swf_modifyobject":{"desc":"Modify an object","long_desc":"Updates the position and\/or color of the object at the specified depth.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-modifyobject","name":"swf_modifyobject","params":[{"list":[{"type":"int","var":"$depth","beh":0,"desc":"The depth, as an integer."},{"type":"int","var":"$how","beh":0,"desc":"Determines what is updated. how can either be the constant MOD_MATRIX or MOD_COLOR or it can be a combination of both. MOD_COLOR uses the current mulcolor (specified by the function swf_mulcolor()) and addcolor (specified by the function swf_addcolor()) to color the object. MOD_MATRIX uses the current matrix to position the object."}],"ret_type":"void"}]},"swf_mulcolor":{"desc":"Sets the global multiply color to the rgba value specified","long_desc":"Sets the global multiply color to the given one. This color is then implicitly used by the swf_placeobject(), swf_modifyobject() and swf_addbuttonrecord() functions. The color of the object will be multiplied by the given color values when the object is written to the screen.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-mulcolor","name":"swf_mulcolor","params":[{"list":[{"type":"float","var":"$r","beh":0,"desc":"Red value"},{"type":"float","var":"$g","beh":0,"desc":"Green value"},{"type":"float","var":"$b","beh":1,"desc":"Blue value"},{"type":"float","var":"$a","beh":1,"desc":"Alpha value"}],"ret_type":"void"}]},"swf_nextid":{"desc":"Returns the next free object id","long_desc":"The swf_nextid() function returns the next available object id.","ver":"PHP 4","ret_desc":"Returns the id, as an integer.","url":"function.swf-nextid","name":"swf_nextid","params":[{"list":[],"ret_type":"int"}]},"swf_oncondition":{"desc":"Describe a transition used to trigger an action list","long_desc":"The swf_oncondition() function describes a transition that will trigger an action list.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-oncondition","name":"swf_oncondition","params":[{"list":[],"ret_type":"void"}]},"swf_openfile":{"desc":"Open a new Shockwave Flash file","long_desc":"Opens a new file. This must be the first function you call, otherwise your script will not work.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-openfile","name":"swf_openfile","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The path to the SWF file. If you want to send your output to the screen, set this to php:\/\/stdout."},{"type":"float","var":"$width","beh":0,"desc":"The movie width"},{"type":"float","var":"$height","beh":1,"desc":"The movie height"},{"type":"float","var":"$framerate","beh":1,"desc":"The frame rate."},{"type":"float","var":"$r","beh":1,"desc":"Red value for the background."},{"type":"float","var":"$g","beh":1,"desc":"Green value for the background."},{"type":"float","var":"$b","beh":1,"desc":"Blue value for the background."}],"ret_type":"void"}]},"swf_ortho":{"desc":"Defines an orthographic mapping of user coordinates onto the current viewport","long_desc":"Defines an 3D orthographic mapping of user coordinates onto the current viewport.","ver":"PHP 4 >= 4.0.1","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-ortho","name":"swf_ortho","params":[{"list":[{"type":"float","var":"$xmin","beh":0,"desc":""},{"type":"float","var":"$xmax","beh":0,"desc":""},{"type":"float","var":"$ymin","beh":1,"desc":""},{"type":"float","var":"$ymax","beh":1,"desc":""},{"type":"float","var":"$zmin","beh":1,"desc":""},{"type":"float","var":"$zmax","beh":1,"desc":""}],"ret_type":"void"}]},"swf_ortho2":{"desc":"Defines 2D orthographic mapping of user coordinates onto the current viewport","long_desc":"Defines a two dimensional orthographic mapping of user coordinates onto the current viewport, this defaults to one to one mapping of the area of the Flash movie. If a perspective transformation is desired, swf_perspective() can be used.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-ortho2","name":"swf_ortho2","params":[{"list":[{"type":"float","var":"$xmin","beh":0,"desc":""},{"type":"float","var":"$xmax","beh":0,"desc":""},{"type":"float","var":"$ymin","beh":1,"desc":""},{"type":"float","var":"$ymax","beh":1,"desc":""}],"ret_type":"void"}]},"swf_perspective":{"desc":"Define a perspective projection transformation","long_desc":"Defines a perspective projection transformation.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-perspective","name":"swf_perspective","params":[{"list":[{"type":"float","var":"$fovy","beh":0,"desc":"A field-of-view angle in the y direction."},{"type":"float","var":"$aspect","beh":0,"desc":"The aspect ratio of the viewport that is being drawn onto."},{"type":"float","var":"$near","beh":1,"desc":"The near clipping plane."},{"type":"float","var":"$far","beh":1,"desc":"The far clipping plane."}],"ret_type":"void"}]},"swf_placeobject":{"desc":"Place an object onto the screen","long_desc":"Places the object in the current frame at a specified depth. This uses the current mulcolor (specified by swf_mulcolor()) and the current addcolor (specified by swf_addcolor()) to color the object and it uses the current matrix to position the object.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-placeobject","name":"swf_placeobject","params":[{"list":[{"type":"int","var":"$objid","beh":0,"desc":"The object id."},{"type":"int","var":"$depth","beh":0,"desc":"Must be between 1 and 65535."}],"ret_type":"void"}]},"swf_polarview":{"desc":"Define the viewer's position with polar coordinates","long_desc":"The swf_polarview() function defines the viewer's position in polar coordinates.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-polarview","name":"swf_polarview","params":[{"list":[{"type":"float","var":"$dist","beh":0,"desc":"The distance between the viewpoint to the world space origin."},{"type":"float","var":"$azimuth","beh":0,"desc":"Defines the azimuthal angle in the x,y coordinate plane, measured in distance from the y axis."},{"type":"float","var":"$incidence","beh":1,"desc":"Defines the angle of incidence in the y,z plane, measured in distance from the z axis. The incidence angle is defined as the angle of the viewport relative to the z axis."},{"type":"float","var":"$twist","beh":1,"desc":"Specifies the amount that the viewpoint is to be rotated about the line of sight using the right hand rule."}],"ret_type":"void"}]},"swf_popmatrix":{"desc":"Restore a previous transformation matrix","long_desc":"Restores a previous transformation matrix.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-popmatrix","name":"swf_popmatrix","params":[{"list":[],"ret_type":"void"}]},"swf_posround":{"desc":"Enables or Disables the rounding of the translation when objects are placed or moved","long_desc":"Enables or disables the rounding of the translation when objects are placed or moved, there are times when text becomes more readable because rounding has been enabled.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-posround","name":"swf_posround","params":[{"list":[],"ret_type":"void"}]},"swf_pushmatrix":{"desc":"Push the current transformation matrix back onto the stack","long_desc":"Pushes the current transformation matrix back onto the stack.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-pushmatrix","name":"swf_pushmatrix","params":[{"list":[],"ret_type":"void"}]},"swf_removeobject":{"desc":"Remove an object","long_desc":"Removes the last object drawn at the depth specified by depth.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-removeobject","name":"swf_removeobject","params":[{"list":[],"ret_type":"void"}]},"swf_rotate":{"desc":"Rotate the current transformation","long_desc":"Rotates the current transformation by a given angle around the given axis.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-rotate","name":"swf_rotate","params":[{"list":[{"type":"float","var":"$angle","beh":0,"desc":"The rotation angle."},{"type":"string","var":"$axis","beh":0,"desc":"The axis. Valid values axis are x (the x axis), y (the y axis) or z (the z axis)."}],"ret_type":"void"}]},"swf_scale":{"desc":"Scale the current transformation","long_desc":"The swf_scale() scales curve coordinates by the given value.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-scale","name":"swf_scale","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":"x scale factor."},{"type":"float","var":"$y","beh":0,"desc":"y scale factor."},{"type":"float","var":"$z","beh":1,"desc":"z scale factor."}],"ret_type":"void"}]},"swf_setfont":{"desc":"Change the current font","long_desc":"The swf_setfont() sets the current font to the value given by the fontid parameter.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-setfont","name":"swf_setfont","params":[{"list":[],"ret_type":"void"}]},"swf_setframe":{"desc":"Switch to a specified frame","long_desc":"Changes the active frame to the specified on.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-setframe","name":"swf_setframe","params":[{"list":[],"ret_type":"void"}]},"swf_shapearc":{"desc":"Draw a circular arc","long_desc":"Draws a circular arc.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-shapearc","name":"swf_shapearc","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":"x-coordinate of the center."},{"type":"float","var":"$y","beh":0,"desc":"y-coordinate of the center."},{"type":"float","var":"$r","beh":1,"desc":"The arc radius."},{"type":"float","var":"$ang1","beh":1,"desc":"The start angle."},{"type":"float","var":"$ang2","beh":1,"desc":"The end angle."}],"ret_type":"void"}]},"swf_shapecurveto":{"desc":"Draw a quadratic bezier curve between two points","long_desc":"Draws a quadratic bezier curve from the current location, though the two given points. The current position is then set to the point defined by the x2 and y2 parameters.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-shapecurveto","name":"swf_shapecurveto","params":[{"list":[{"type":"float","var":"$x1","beh":0,"desc":"x-coordinate of the first point."},{"type":"float","var":"$y1","beh":0,"desc":"y-coordinate of the first point."},{"type":"float","var":"$x2","beh":1,"desc":"x-coordinate of the second point."},{"type":"float","var":"$y2","beh":1,"desc":"y-coordinate of the second point."}],"ret_type":"void"}]},"swf_shapecurveto3":{"desc":"Draw a cubic bezier curve","long_desc":"Draw a cubic bezier curve using the given coordinates. The current position is then set to the x3,y3 coordinate.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-shapecurveto3","name":"swf_shapecurveto3","params":[{"list":[{"type":"float","var":"$x1","beh":0,"desc":"x-coordinate of the first off curve control point."},{"type":"float","var":"$y1","beh":0,"desc":"y-coordinate of the first off curve control point."},{"type":"float","var":"$x2","beh":1,"desc":"x-coordinate of the second off curve control point."},{"type":"float","var":"$y2","beh":1,"desc":"y-coordinate of the second off curve control point."},{"type":"float","var":"$x3","beh":1,"desc":"x-coordinate of the endpoint."},{"type":"float","var":"$y3","beh":1,"desc":"y-coordinate of the endpoint."}],"ret_type":"void"}]},"swf_shapefillbitmapclip":{"desc":"Set current fill mode to clipped bitmap","long_desc":"Sets the fill to bitmap clipped, empty spaces will be filled by the bitmap.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-shapefillbitmapclip","name":"swf_shapefillbitmapclip","params":[{"list":[],"ret_type":"void"}]},"swf_shapefillbitmaptile":{"desc":"Set current fill mode to tiled bitmap","long_desc":"Sets the fill to bitmap tile, empty spaces will be filled by the bitmap.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-shapefillbitmaptile","name":"swf_shapefillbitmaptile","params":[{"list":[],"ret_type":"void"}]},"swf_shapefilloff":{"desc":"Turns off filling","long_desc":"Turns off filling for the current shape.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-shapefilloff","name":"swf_shapefilloff","params":[{"list":[],"ret_type":"void"}]},"swf_shapefillsolid":{"desc":"Set the current fill style to the specified color","long_desc":"Sets the current fill style to solid, and then sets the fill color to the given color.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-shapefillsolid","name":"swf_shapefillsolid","params":[{"list":[{"type":"float","var":"$r","beh":0,"desc":"Red value"},{"type":"float","var":"$g","beh":0,"desc":"Green value"},{"type":"float","var":"$b","beh":1,"desc":"Blue value"},{"type":"float","var":"$a","beh":1,"desc":"Alpha value"}],"ret_type":"void"}]},"swf_shapelinesolid":{"desc":"Set the current line style","long_desc":"Sets the current line style to the given color and width.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-shapelinesolid","name":"swf_shapelinesolid","params":[{"list":[{"type":"float","var":"$r","beh":0,"desc":"Red value"},{"type":"float","var":"$g","beh":0,"desc":"Green value"},{"type":"float","var":"$b","beh":1,"desc":"Blue value"},{"type":"float","var":"$a","beh":1,"desc":"Alpha value"},{"type":"float","var":"$width","beh":1,"desc":"The line width. If 0.0 is given then no lines are drawn."}],"ret_type":"void"}]},"swf_shapelineto":{"desc":"Draw a line","long_desc":"Draws a line to the x and y coordinates. The current position is then set to that point.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-shapelineto","name":"swf_shapelineto","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":"x-coordinate of the target."},{"type":"float","var":"$y","beh":0,"desc":"y-coordinate of the target."}],"ret_type":"void"}]},"swf_shapemoveto":{"desc":"Move the current position","long_desc":"Moves the current position to the given point.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-shapemoveto","name":"swf_shapemoveto","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":"x-coordinate of the target."},{"type":"float","var":"$y","beh":0,"desc":"y-coordinate of the target."}],"ret_type":"void"}]},"swf_showframe":{"desc":"Display the current frame","long_desc":"Outputs the current frame.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-showframe","name":"swf_showframe","params":[{"list":[],"ret_type":"void"}]},"swf_startbutton":{"desc":"Start the definition of a button","long_desc":"Starts the definition of a button.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-startbutton","name":"swf_startbutton","params":[{"list":[{"type":"int","var":"$objid","beh":0,"desc":"The object id."},{"type":"int","var":"$type","beh":0,"desc":"Can either be TYPE_MENUBUTTON or TYPE_PUSHBUTTON. The TYPE_MENUBUTTON constant allows the focus to travel from the button when the mouse is down, TYPE_PUSHBUTTON does not allow the focus to travel when the mouse is down."}],"ret_type":"void"}]},"swf_startdoaction":{"desc":"Start a description of an action list for the current frame","long_desc":"Starts the description of an action list for the current frame. This must be called before actions are defined for the current frame.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-startdoaction","name":"swf_startdoaction","params":[{"list":[],"ret_type":"void"}]},"swf_startshape":{"desc":"Start a complex shape","long_desc":"Starts a complex shape.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-startshape","name":"swf_startshape","params":[{"list":[],"ret_type":"void"}]},"swf_startsymbol":{"desc":"Define a symbol","long_desc":"Defines an object id as a symbol. Symbols are tiny flash movies that can be played simultaneously.","ver":"PHP 4","ret_desc":"No value is returned.","seealso":[],"url":"function.swf-startsymbol","name":"swf_startsymbol","params":[{"list":[],"ret_type":"void"}]},"swf_textwidth":{"desc":"Get the width of a string","long_desc":"Gives the width of the string in pixels, using the current font and font size.","ver":"PHP 4","ret_desc":"Returns the line width, as a float.","url":"function.swf-textwidth","name":"swf_textwidth","params":[{"list":[],"ret_type":"float"}]},"swf_translate":{"desc":"Translate the current transformations","long_desc":"Translates the current transformation by the given values.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-translate","name":"swf_translate","params":[{"list":[{"type":"float","var":"$x","beh":0,"desc":"x value."},{"type":"float","var":"$y","beh":0,"desc":"y value."},{"type":"float","var":"$z","beh":1,"desc":"z value."}],"ret_type":"void"}]},"swf_viewport":{"desc":"Select an area for future drawing","long_desc":"Selects an area for future drawing for xmin to xmax and ymin to ymax, if this function is not called the area defaults to the size of the screen.","ver":"PHP 4","ret_desc":"No value is returned.","url":"function.swf-viewport","name":"swf_viewport","params":[{"list":[{"type":"float","var":"$xmin","beh":0,"desc":""},{"type":"float","var":"$xmax","beh":0,"desc":""},{"type":"float","var":"$ymin","beh":1,"desc":""},{"type":"float","var":"$ymax","beh":1,"desc":""}],"ret_type":"void"}]},"swfsound":{"name":"SWFSound","class":"SWFSound"},"sybase_affected_rows":{"desc":"Gets number of affected rows in last query","long_desc":"sybase_affected_rows() returns the number of rows affected by the last INSERT, UPDATE or DELETE query on the server associated with the specified link identifier. This command is not effective for SELECT statements, only on statements which modify records. To retrieve the number of rows returned from a SELECT, use sybase_num_rows().","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of affected rows, as an integer.","seealso":[],"url":"function.sybase-affected-rows","name":"sybase_affected_rows","params":[{"list":[],"ret_type":"int"}]},"sybase_close":{"desc":"Closes a Sybase connection","long_desc":"sybase_close() closes the link to a Sybase database that's associated with the specified link link_identifier. Note that this isn't usually necessary, as non-persistent open links are automatically closed at the end of the script's execution. sybase_close() will not close persistent links generated by sybase_pconnect().","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sybase-close","name":"sybase_close","params":[{"list":[],"ret_type":"bool"}]},"sybase_connect":{"desc":"Opens a Sybase server connection","long_desc":"sybase_connect() establishes a connection to a Sybase server. In case a second call is made to sybase_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned. The link to the server will be closed as soon as the execution of the script ends, unless it's closed earlier by explicitly calling sybase_close().","ver":"PHP 4, PHP 5","ret_desc":"Returns a positive Sybase link identifier on success, or FALSE on failure.","seealso":[],"url":"function.sybase-connect","name":"sybase_connect","params":[{"list":[{"type":"string","var":"$servername","beh":1,"desc":"The servername argument has to be a valid servername that is defined in the 'interfaces' file."},{"type":"string","var":"$username","beh":1,"desc":"Sybase user name"},{"type":"string","var":"$password","beh":1,"desc":"Password associated with username."},{"type":"string","var":"$charset","beh":1,"desc":"Specifies the charset for the connection"},{"type":"string","var":"$appname","beh":1,"desc":"Specifies an appname for the Sybase connection. This allow you to make separate connections in the same script to the same database. This may come handy when you have started a transaction in your current connection, and you need to be able to do a separate query which cannot be performed inside this transaction."},{"type":"bool","var":"$new","beh":1,"desc":"Whether to open a new connection or use the existing one.","def":"false"}],"ret_type":"resource"}]},"sybase_data_seek":{"desc":"Moves internal row pointer","long_desc":"sybase_data_seek() moves the internal row pointer of the Sybase result associated with the specified result identifier to pointer to the specified row number. The next call to sybase_fetch_row() would return that row.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sybase-data-seek","name":"sybase_data_seek","params":[{"list":[{"type":"resource","var":"$result_identifier","beh":0,"desc":""},{"type":"int","var":"$row_number","beh":0,"desc":""}],"ret_type":"bool"}]},"sybase_deadlock_retry_count":{"desc":"Sets the deadlock retry count","long_desc":"Using sybase_deadlock_retry_count(), the number of retries can be defined in cases of deadlocks. By default, every deadlock is retried an infinite number of times or until the process is killed by Sybase, the executing script is killed (for instance, by set_time_limit()) or the query succeeds.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"No value is returned.","url":"function.sybase-deadlock-retry-count","name":"sybase_deadlock_retry_count","params":[{"list":[],"ret_type":"void"}]},"sybase_fetch_array":{"desc":"Fetch row as array","long_desc":"sybase_fetch_array() is an extended version of sybase_fetch_row(). In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys. An important thing to note is that using sybase_fetch_array() is NOT significantly slower than using sybase_fetch_row(), while it provides a significant added value.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array that corresponds to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.sybase-fetch-array","name":"sybase_fetch_array","params":[{"list":[],"ret_type":"array"}]},"sybase_fetch_assoc":{"desc":"Fetch a result row as an associative array","long_desc":"sybase_fetch_assoc() is a version of sybase_fetch_row() that uses column names instead of integers for indices in the result array. Columns from different tables with the same names are returned as name, name1, name2, ..., nameN. An important thing to note is that using sybase_fetch_assoc() is NOT significantly slower than using sybase_fetch_row(), while it provides a significant added value.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns an array that corresponds to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.sybase-fetch-assoc","name":"sybase_fetch_assoc","params":[{"list":[],"ret_type":"array"}]},"sybase_fetch_field":{"desc":"Get field information from a result","long_desc":"sybase_fetch_field() can be used in order to obtain information about fields in a certain query result.","ver":"PHP 4, PHP 5","ret_desc":"Returns an object containing field information.","seealso":[],"url":"function.sybase-fetch-field","name":"sybase_fetch_field","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":""},{"type":"int","var":"$field_offset","beh":0,"desc":"If the field offset isn't specified, the next field that wasn't yet retrieved by sybase_fetch_field() is retrieved.","def":-1}],"ret_type":"object"}]},"sybase_fetch_object":{"desc":"Fetch a row as an object","long_desc":"sybase_fetch_object() is similar to sybase_fetch_assoc(), with one difference - an object is returned, instead of an array. Speed-wise, the function is identical to sybase_fetch_array(), and almost as quick as sybase_fetch_row() (the difference is insignificant).","ver":"PHP 4, PHP 5","ret_desc":"Returns an object with properties that correspond to the fetched row, or FALSE if there are no more rows.","seealso":[],"url":"function.sybase-fetch-object","name":"sybase_fetch_object","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":""},{"type":"mixed","var":"$object","beh":1,"desc":"Use the second object to specify the type of object you want to return. If this parameter is omitted, the object will be of type stdClass."}],"ret_type":"object"}]},"sybase_fetch_row":{"desc":"Get a result row as an enumerated array","long_desc":"sybase_fetch_row() fetches one row of data from the result associated with the specified result identifier. Subsequent call to sybase_fetch_row() would return the next row in the result set, or FALSE if there are no more rows.","ver":"PHP 4, PHP 5","ret_desc":"Returns an array that corresponds to the fetched row, or FALSE if there are no more rows. Each result column is stored in an array offset, starting at offset 0.","seealso":[],"url":"function.sybase-fetch-row","name":"sybase_fetch_row","params":[{"list":[],"ret_type":"array"}]},"sybase_field_seek":{"desc":"Sets field offset","long_desc":"Seeks to the specified field offset. If the next call to sybase_fetch_field() won't include a field offset, this field would be returned.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sybase-field-seek","name":"sybase_field_seek","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":""},{"type":"int","var":"$field_offset","beh":0,"desc":""}],"ret_type":"bool"}]},"sybase_free_result":{"desc":"Frees result memory","long_desc":"sybase_free_result() only needs to be called if you are worried about using too much memory while your script is running. All result memory will automatically be freed when the script ends. You may call sybase_free_result() with the result identifier as an argument and the associated result memory will be freed.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.sybase-free-result","name":"sybase_free_result","params":[{"list":[],"ret_type":"bool"}]},"sybase_get_last_message":{"desc":"Returns the last message from the server","long_desc":"sybase_get_last_message() returns the last message reported by the server.","ver":"PHP 4, PHP 5","ret_desc":"Returns the message as a string.","seealso":[],"url":"function.sybase-get-last-message","name":"sybase_get_last_message","params":[{"list":[],"ret_type":"string"}]},"sybase_min_client_severity":{"desc":"Sets minimum client severity","long_desc":"sybase_min_client_severity() sets the minimum client severity level.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.sybase-min-client-severity","name":"sybase_min_client_severity","params":[{"list":[],"ret_type":"void"}]},"sybase_min_error_severity":{"desc":"Sets minimum error severity","long_desc":"sybase_min_error_severity() sets the minimum error severity level.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.sybase-min-error-severity","name":"sybase_min_error_severity","params":[{"list":[],"ret_type":"void"}]},"sybase_min_message_severity":{"desc":"Sets minimum message severity","long_desc":"sybase_min_message_severity() sets the minimum message severity level.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.sybase-min-message-severity","name":"sybase_min_message_severity","params":[{"list":[],"ret_type":"void"}]},"sybase_min_server_severity":{"desc":"Sets minimum server severity","long_desc":"sybase_min_server_severity() sets the minimum server severity level.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.sybase-min-server-severity","name":"sybase_min_server_severity","params":[{"list":[],"ret_type":"void"}]},"sybase_num_fields":{"desc":"Gets the number of fields in a result set","long_desc":"sybase_num_fields() returns the number of fields in a result set.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of fields as an integer.","seealso":[],"url":"function.sybase-num-fields","name":"sybase_num_fields","params":[{"list":[],"ret_type":"int"}]},"sybase_num_rows":{"desc":"Get number of rows in a result set","long_desc":"sybase_num_rows() returns the number of rows in a result set.","ver":"PHP 4, PHP 5","ret_desc":"Returns the number of rows as an integer.","seealso":[],"url":"function.sybase-num-rows","name":"sybase_num_rows","params":[{"list":[],"ret_type":"int"}]},"sybase_pconnect":{"desc":"Open persistent Sybase connection","long_desc":"sybase_pconnect() acts very much like sybase_connect() with two major differences. First, when connecting, the function would first try to find a (persistent) link that's already open with the same host, username and password. If one is found, an identifier for it will be returned instead of opening a new connection. Second, the connection to the SQL server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (sybase_close() will not close links established by sybase_pconnect()). This type of links is therefore called 'persistent'.","ver":"PHP 4, PHP 5","ret_desc":"Returns a positive Sybase persistent link identifier on success, or FALSE on error.","seealso":[],"url":"function.sybase-pconnect","name":"sybase_pconnect","params":[{"list":[{"type":"string","var":"$servername","beh":1,"desc":"The servername argument has to be a valid servername that is defined in the 'interfaces' file."},{"type":"string","var":"$username","beh":1,"desc":"Sybase user name"},{"type":"string","var":"$password","beh":1,"desc":"Password associated with username."},{"type":"string","var":"$charset","beh":1,"desc":"Specifies the charset for the connection"},{"type":"string","var":"$appname","beh":1,"desc":"Specifies an appname for the Sybase connection. This allow you to make separate connections in the same script to the same database. This may come handy when you have started a transaction in your current connection, and you need to be able to do a separate query which cannot be performed inside this transaction."}],"ret_type":"resource"}]},"sybase_query":{"desc":"Sends a Sybase query","long_desc":"sybase_query() sends a query to the currently active database on the server that's associated with the specified link identifier.","ver":"PHP 4, PHP 5","ret_desc":"Returns a positive Sybase result identifier on success, FALSE on error, or TRUE if the query was successful but didn't return any columns.","seealso":[],"url":"function.sybase-query","name":"sybase_query","params":[{"list":[{"type":"string","var":"$query","beh":0,"desc":""},{"type":"resource","var":"$link_identifier","beh":1,"desc":"If the link identifier isn't specified, the last opened link is assumed. If no link is open, the function tries to establish a link as if sybase_connect() was called, and use it."}],"ret_type":"mixed"}]},"sybase_result":{"desc":"Get result data","long_desc":"Returns the contents of the cell at the row and offset in the specified Sybase result set. When working on large result sets, you should consider using one of the functions that fetch an entire row (specified below). As these functions return the contents of multiple cells in one function call, they're MUCH quicker than sybase_result(). Also, note that specifying a numeric offset for the field argument is much quicker than specifying a fieldname or tablename.fieldname argument. Recommended high-performance alternatives: sybase_fetch_row(), sybase_fetch_array() and sybase_fetch_object().","ver":"PHP 4, PHP 5","ret_desc":"sybase_result() returns the contents of one cell from a Sybase result set.","url":"function.sybase-result","name":"sybase_result","params":[{"list":[{"type":"resource","var":"$result","beh":0,"desc":""},{"type":"int","var":"$row","beh":0,"desc":""},{"type":"mixed","var":"$field","beh":1,"desc":"The field argument can be the field's offset, or the field's name, or the field's table dot field's name (tablename.fieldname). If the column name has been aliased ('select foo as bar from...'), use the alias instead of the column name."}],"ret_type":"string"}]},"sybase_select_db":{"desc":"Selects a Sybase database","long_desc":"sybase_select_db() sets the current active database on the server that's associated with the specified link identifier. Every subsequent call to sybase_query() will be made on the active database.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.sybase-select-db","name":"sybase_select_db","params":[{"list":[{"type":"string","var":"$database_name","beh":0,"desc":""},{"type":"resource","var":"$link_identifier","beh":1,"desc":"If no link identifier is specified, the last opened link is assumed. If no link is open, the function will try to establish a link as if sybase_connect() was called, and use it."}],"ret_type":"bool"}]},"sybase_set_message_handler":{"desc":"Sets the handler called when a server message is raised","long_desc":"sybase_set_message_handler() sets a user function to handle messages generated by the server. You may specify the name of a global function, or use an array to specify an object reference and a method name.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.sybase-set-message-handler","name":"sybase_set_message_handler","params":[{"list":[{"type":"callable","var":"$handler","beh":0,"desc":"The handler expects five arguments in the following order: message number, severity, state, line number and description. The first four are integers. The last is a string. If the function returns FALSE, PHP generates an ordinary error message."},{"type":"resource","var":"$link_identifier","beh":1,"desc":"If the link identifier isn't specified, the last opened link is assumed."}],"ret_type":"bool"}]},"sybase_unbuffered_query":{"desc":"Send a Sybase query and do not block","long_desc":"sybase_unbuffered_query() sends a query to the currently active database on the server that's associated with the specified link identifier. If the link identifier isn't specified, the last opened link is assumed. If no link is open, the function tries to establish a link as if sybase_connect() was called, and use it. Unlike sybase_query(), sybase_unbuffered_query() reads only the first row of the result set. sybase_fetch_array() and similar function read more rows as needed. sybase_data_seek() reads up to the target row. The behavior may produce better performance for large result sets. sybase_num_rows() will only return the correct number of rows if all result sets have been read. To Sybase, the number of rows is not known and is therefore computed by the client implementation.","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns a positive Sybase result identifier on success, or FALSE on error.","seealso":[],"url":"function.sybase-unbuffered-query","name":"sybase_unbuffered_query","params":[{"list":[{"type":"string","var":"$query","beh":0,"desc":""},{"type":"resource","var":"$link_identifier","beh":1,"desc":""},{"type":"bool","var":"$store_result","beh":1,"desc":"The optional store_result can be FALSE to indicate the resultsets shouldn't be fetched into memory, thus minimizing memory usage which is particularly interesting with very large resultsets."}],"ret_type":"resource"}]},"symlink":{"desc":"Creates a symbolic link","long_desc":"symlink() creates a symbolic link to the existing target with the specified name link.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.symlink","name":"symlink","params":[{"list":[{"type":"string","var":"$target","beh":0,"desc":"Target of the link."},{"type":"string","var":"$link","beh":0,"desc":"The link name."}],"ret_type":"bool"}]},"sys_get_temp_dir":{"desc":"Returns directory path used for temporary files","long_desc":"Returns the path of the directory PHP stores temporary files in by default.","ver":"PHP 5 >= 5.2.1","ret_desc":"Returns the path of the temporary directory.","seealso":[],"url":"function.sys-get-temp-dir","name":"sys_get_temp_dir","params":[{"list":[],"ret_type":"string"}]},"sys_getloadavg":{"desc":"Gets system load average","long_desc":"Returns three samples representing the average system load (the number of processes in the system run queue) over the last 1, 5 and 15 minutes, respectively.","ver":"PHP 5 >= 5.1.3","ret_desc":"Returns an array with three samples (last 1, 5 and 15 minutes).","url":"function.sys-getloadavg","name":"sys_getloadavg","params":[{"list":[],"ret_type":"array"}]},"syslog":{"desc":"Generate a system log message","long_desc":"syslog() generates a log message that will be distributed by the system logger. For information on setting up a user defined log handler, see the syslog.conf (5) Unix manual page. More information on the syslog facilities and option can be found in the man pages for syslog (3) on Unix machines.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.syslog","name":"syslog","params":[{"list":[{"type":"int","var":"$priority","beh":0,"desc":"priority is a combination of the facility and the level. Possible values are:"},{"type":"string","var":"$message","beh":0,"desc":"The message to send, except that the two characters %m will be replaced by the error message string (strerror) corresponding to the present value of errno."}],"ret_type":"bool"}]},"system":{"desc":"Execute an external program and display the output","long_desc":"system() is just like the C version of the function in that it executes the given command and outputs the result. The system() call also tries to automatically flush the web server's output buffer after each line of output if PHP is running as a server module. If you need to execute a command and have all the data from the command passed directly back without any interference, use the passthru() function.","ver":"PHP 4, PHP 5","ret_desc":"Returns the last line of the command output on success, and FALSE on failure.","seealso":[],"url":"function.system","name":"system","params":[{"list":[{"type":"string","var":"$command","beh":0,"desc":"The command that will be executed."},{"type":"int","var":"&$return_var","beh":1,"desc":"If the return_var argument is present, then the return status of the executed command will be written to this variable."}],"ret_type":"string"}]},"taint":{"desc":"Taint a string","long_desc":"Make a string tainted. this is used for testing purpose only.","ver":"PECL taint >=0.1.0","ret_desc":"Return TURE if the transform done. and always Return TRUE if the taint extension is not enabled.","url":"function.taint","name":"taint","params":[{"list":[{"type":"string","var":"$string","beh":0,"desc":""},{"type":"string","var":"$...","beh":1,"desc":""}],"ret_type":"ReturnType"}]},"tan":{"desc":"Tangent","long_desc":"tan() returns the tangent of the arg parameter. The arg parameter is in radians.","ver":"PHP 4, PHP 5","ret_desc":"The tangent of arg","seealso":[],"url":"function.tan","name":"tan","params":[{"list":[],"ret_type":"float"}]},"tanh":{"desc":"Hyperbolic tangent","long_desc":"Returns the hyperbolic tangent of arg, defined as sinh(arg)\/cosh(arg).","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"The hyperbolic tangent of arg","seealso":[],"url":"function.tanh","name":"tanh","params":[{"list":[],"ret_type":"float"}]},"tcpwrap_check":{"desc":"Performs a tcpwrap check","long_desc":"This function consults the \/etc\/hosts.allow and \/etc\/hosts.deny files to check if access to service daemon should be granted or denied for a client.","ver":"PECL tcpwrap >= 0.1.0","ret_desc":"This function returns TRUE if access should be granted, FALSE otherwise.","seealso":[],"url":"function.tcpwrap-check","name":"tcpwrap_check","params":[{"list":[{"type":"string","var":"$daemon","beh":1,"desc":"The service name."},{"type":"string","var":"$address","beh":1,"desc":"The client remote address. Can be either an IP address or a domain name."},{"type":"string","var":"$user","beh":1,"desc":"An optional user name."},{"type":"bool","var":"$nodns","beh":1,"desc":"If address looks like domain name then DNS is used to resolve it to IP address; set nodns to TRUE to avoid this.","def":"false"}],"ret_type":"bool"}]},"tempnam":{"desc":"Create file with unique file name","long_desc":"Creates a file with a unique filename, with access permission set to 0600, in the specified directory. If the directory does not exist, tempnam() may generate a file in the system's temporary directory, and return the name of that.","ver":"PHP 4, PHP 5","ret_desc":"Returns the new temporary filename, or FALSE on failure.","seealso":[],"url":"function.tempnam","name":"tempnam","params":[{"list":[{"type":"string","var":"$dir","beh":0,"desc":"The directory where the temporary filename will be created."},{"type":"string","var":"$prefix","beh":0,"desc":"The prefix of the generated temporary filename."}],"ret_type":"string"}]},"textdomain":{"desc":"Sets the default domain","long_desc":"This function sets the domain to search within when calls are made to gettext(), usually the named after an application.","ver":"PHP 4, PHP 5","ret_desc":"If successful, this function returns the current message domain, after possibly changing it.","url":"function.textdomain","name":"textdomain","params":[{"list":[],"ret_type":"string"}]},"tidy_access_count":{"desc":"Returns the Number of Tidy accessibility warnings encountered for specified document","long_desc":"tidy_access_count() returns the number of accessibility warnings found for the specified document.","ver":"PHP 5, PECL tidy >= 0.5.2","ret_desc":"Returns the number of warnings.","seealso":[],"url":"function.tidy-access-count","name":"tidy_access_count","params":[{"list":[],"ret_type":"int"}]},"tidy_config_count":{"desc":"Returns the Number of Tidy configuration errors encountered for specified document","long_desc":"Returns the number of errors encountered in the configuration of the specified tidy object.","ver":"PHP 5, PECL tidy >= 0.5.2","ret_desc":"Returns the number of errors.","url":"function.tidy-config-count","name":"tidy_config_count","params":[{"list":[],"ret_type":"int"}]},"tidy_error_count":{"desc":"Returns the Number of Tidy errors encountered for specified document","long_desc":"Returns the number of Tidy errors encountered for the specified document.","ver":"PHP 5, PECL tidy >= 0.5.2","ret_desc":"Returns the number of errors.","seealso":[],"url":"function.tidy-error-count","name":"tidy_error_count","params":[{"list":[],"ret_type":"int"}]},"tidy_get_output":{"desc":"Return a string representing the parsed tidy markup","long_desc":"Gets a string with the repaired html.","ver":"PHP 5, PECL tidy >= 0.5.2","ret_desc":"Returns the parsed tidy markup.","url":"function.tidy-get-output","name":"tidy_get_output","params":[{"list":[],"ret_type":"string"}]},"tidy_load_config":{"desc":"Load an ASCII Tidy configuration file with the specified encoding","long_desc":"Loads a Tidy configuration file, with the specified encoding.","ver":"PECL tidy >= 0.5.2","ret_desc":"No value is returned.","url":"function.tidy-load-config","name":"tidy_load_config","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":""},{"type":"string","var":"$encoding","beh":0,"desc":""}],"ret_type":"void"}]},"tidy_reset_config":{"desc":"Restore Tidy configuration to default values","long_desc":"This function restores the Tidy configuration to the default values.","ver":"PECL tidy >= 0.7.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.tidy-reset-config","name":"tidy_reset_config","params":[{"list":[],"ret_type":"bool"}]},"tidy_save_config":{"desc":"Save current settings to named file","long_desc":"Saves current settings to the specified file. Only non-default values are written.","ver":"PECL tidy >= 0.5.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.tidy-save-config","name":"tidy_save_config","params":[{"list":[],"ret_type":"bool"}]},"tidy_set_encoding":{"desc":"Set the input\/output character encoding for parsing markup","long_desc":"Sets the encoding for input\/output documents.","ver":"PECL tidy >= 0.5.2","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.tidy-set-encoding","name":"tidy_set_encoding","params":[{"list":[],"ret_type":"bool"}]},"tidy_setopt":{"desc":"Updates the configuration settings for the specified tidy document","long_desc":"tidy_setopt() updates the specified option with a new value.","ver":"PECL tidy >= 0.5.2","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.tidy-setopt","name":"tidy_setopt","params":[{"list":[{"type":"string","var":"$option","beh":0,"desc":"The tidy option name. A list of available configuration options may be found at: \u00bb\u00a0http:\/\/tidy.sourceforge.net\/docs\/quickref.html."},{"type":"mixed","var":"$value","beh":0,"desc":"The tidy option name."}],"ret_type":"bool"}]},"tidy_warning_count":{"desc":"Returns the Number of Tidy warnings encountered for specified document","long_desc":"Returns the number of Tidy warnings encountered for the specified document.","ver":"PHP 5, PECL tidy >= 0.5.2","ret_desc":"Returns the number of warnings.","seealso":[],"url":"function.tidy-warning-count","name":"tidy_warning_count","params":[{"list":[],"ret_type":"int"}]},"time":{"desc":"Return current Unix timestamp","long_desc":"Returns the current time measured in the number of seconds since the Unix Epoch (January 1 1970 00:00:00 GMT).","ver":"PHP 4, PHP 5","seealso":[],"url":"function.time","name":"time","params":[{"list":[],"ret_type":"int"}]},"time_nanosleep":{"desc":"Delay for a number of seconds and nanoseconds","long_desc":"Delays program execution for the given number of seconds and nanoseconds.","ver":"PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.time-nanosleep","name":"time_nanosleep","params":[{"list":[{"type":"int","var":"$seconds","beh":0,"desc":"Must be a non-negative integer."},{"type":"int","var":"$nanoseconds","beh":0,"desc":"Must be a non-negative integer less than 1 billion."}],"ret_type":"mixed"}]},"time_sleep_until":{"desc":"Make the script sleep until the specified time","long_desc":"Makes the script sleep until the specified timestamp.","ver":"PHP 5 >= 5.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.time-sleep-until","name":"time_sleep_until","params":[{"list":[],"ret_type":"bool"}]},"timezone_abbreviations_list":{"desc":"Alias of DateTimeZone::listAbbreviations()","long_desc":"This function is an alias of: DateTimeZone::listAbbreviations()","ver":"PHP 5 >= 5.2.0","url":"function.timezone-abbreviations-list","name":"timezone_abbreviations_list","params":[]},"timezone_identifiers_list":{"desc":"Alias of DateTimeZone::listIdentifiers()","long_desc":"This function is an alias of: DateTimeZone::listIdentifiers()","ver":"PHP 5 >= 5.2.0","url":"function.timezone-identifiers-list","name":"timezone_identifiers_list","params":[]},"timezone_location_get":{"desc":"Alias of DateTimeZone::getLocation()","long_desc":"This function is an alias of: DateTimeZone::getLocation()","ver":"PHP 5 >= 5.3.0","url":"function.timezone-location-get","name":"timezone_location_get","params":[]},"timezone_name_from_abbr":{"desc":"Returns the timezone name from abbreviation","ver":"PHP 5 >= 5.1.3","ret_desc":"Returns time zone name on success or FALSE on failure.","seealso":[],"url":"function.timezone-name-from-abbr","name":"timezone_name_from_abbr","params":[{"list":[{"type":"string","var":"$abbr","beh":1,"desc":"Time zone abbreviation."},{"type":"int","var":"$gmtOffset","beh":1,"desc":"Offset from GMT in seconds. Defaults to -1 which means that first found time zone corresponding to abbr is returned. Otherwise exact offset is searched and only if not found then the first time zone with any offset is returned.","def":-1},{"type":"int","var":"$isdst","beh":1,"desc":"Daylight saving time indicator. Defaults to -1, which means that whether the time zone has daylight saving or not is not taken into consideration when searching. If this is set to 1, then the gmtOffset is assumed to be an offset with daylight saving in effect; if 0, then gmtOffset is assumed to be an offset without daylight saving in effect. If abbr doesn't exist then the time zone is searched solely by the gmtOffset and isdst.","def":-1}],"ret_type":"string"}]},"timezone_name_get":{"desc":"Alias of DateTimeZone::getName()","long_desc":"This function is an alias of: DateTimeZone::getName()","ver":"PHP 5 >= 5.2.0","url":"function.timezone-name-get","name":"timezone_name_get","params":[]},"timezone_offset_get":{"desc":"Alias of DateTimeZone::getOffset()","long_desc":"This function is an alias of: DateTimeZone::getOffset()","ver":"PHP 5 >= 5.2.0","url":"function.timezone-offset-get","name":"timezone_offset_get","params":[]},"timezone_open":{"desc":"Alias of DateTimeZone::__construct()","long_desc":"This function is an alias of: DateTimeZone::__construct()","ver":"PHP 5 >= 5.2.0","url":"function.timezone-open","name":"timezone_open","params":[]},"timezone_transitions_get":{"desc":"Alias of DateTimeZone::getTransitions()","long_desc":"This function is an alias of: DateTimeZone::getTransitions()","ver":"PHP 5 >= 5.2.0","url":"function.timezone-transitions-get","name":"timezone_transitions_get","params":[]},"timezone_version_get":{"desc":"Gets the version of the timezonedb","long_desc":"Returns the current version of the timezonedb.","ver":"PHP 5 >= 5.3.0","ret_desc":"Returns a string.","seealso":[],"url":"function.timezone-version-get","name":"timezone_version_get","params":[{"list":[],"ret_type":"string"}]},"tmpfile":{"desc":"Creates a temporary file","long_desc":"Creates a temporary file with a unique name in read-write (w+) mode and returns a file handle . The file is automatically removed when closed (using fclose()), or when the script ends. For details, consult your system documentation on the tmpfile(3) function, as well as the stdio.h header file.","ver":"PHP 4, PHP 5","ret_desc":"Returns a file handle, similar to the one returned by fopen(), for the new file or FALSE on failure.","seealso":[],"url":"function.tmpfile","name":"tmpfile","params":[{"list":[],"ret_type":"resource"}]},"token_get_all":{"desc":"Split given source into PHP tokens","long_desc":"token_get_all() parses the given source string into PHP language tokens using the Zend engine's lexical scanner. For a list of parser tokens, see List of Parser Tokens, or use token_name() to translate a token value into its string representation.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"An array of token identifiers. Each individual token identifier is either a single character (i.e.: ;, ., >, !, etc...), or a three element array containing the token index in element 0, the string content of the original token in element 1 and the line number in element 2.","url":"function.token-get-all","name":"token_get_all","params":[{"list":[],"ret_type":"array"}]},"token_name":{"desc":"Get the symbolic name of a given PHP token","long_desc":"token_name() gets the symbolic name for a PHP token value.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"The symbolic name of the given token.","seealso":[],"url":"function.token-name","name":"token_name","params":[{"list":[],"ret_type":"string"}]},"touch":{"desc":"Sets access and modification time of file","long_desc":"Attempts to set the access and modification times of the file named in the filename parameter to the value given in time. Note that the access time is always modified, regardless of the number of parameters. If the file does not exist, it will be created.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.touch","name":"touch","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"The name of the file being touched."},{"type":"int","var":"$time","beh":1,"desc":"The touch time. If time is not supplied, the current system time is used.","def":"time()"},{"type":"int","var":"$atime","beh":1,"desc":"If present, the access time of the given filename is set to the value of atime. Otherwise, it is set to the value passed to the time parameter. If neither are present, the current system time is used."}],"ret_type":"bool"}]},"trait_exists":{"desc":"Checks if the trait exists","long_desc":"","ver":"No version information available, might only be in SVN","ret_desc":"Returns TRUE if trait exists, FALSE if not, NULL in case of an error.","url":"function.trait-exists","name":"trait_exists","params":[{"list":[{"type":"string","var":"$traitname","beh":0,"desc":"Name of the trait to check"},{"type":"bool","var":"$autoload","beh":1,"desc":"Whether to autoload if not already loaded."}],"ret_type":"bool"}]},"trigger_error":{"desc":"Generates a user-level error\/warning\/notice message","long_desc":"Used to trigger a user error condition, it can be used by in conjunction with the built-in error handler, or with a user defined function that has been set as the new error handler (set_error_handler()). This function is useful when you need to generate a particular response to an exception at runtime.","ver":"PHP 4 >= 4.0.1, PHP 5","ret_desc":"This function returns FALSE if wrong error_type is specified, TRUE otherwise.","seealso":[],"url":"function.trigger-error","name":"trigger_error","params":[{"list":[{"type":"string","var":"$error_msg","beh":0,"desc":"The designated error message for this error. It's limited to 1024 characters in length. Any additional characters beyond 1024 will be truncated."},{"type":"int","var":"$error_type","beh":0,"desc":"The designated error type for this error. It only works with the E_USER family of constants, and will default to E_USER_NOTICE.","def":"E_USER_NOTICE"}],"ret_type":"bool"}]},"trim":{"desc":"Strip whitespace (or other characters) from the beginning and end of a string","long_desc":"This function returns a string with whitespace stripped from the beginning and end of str. Without the second parameter, trim() will strip these characters:","ver":"PHP 4, PHP 5","ret_desc":"The trimmed string.","seealso":[],"url":"function.trim","name":"trim","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The string that will be trimmed."},{"type":"string","var":"$charlist","beh":1,"desc":"Optionally, the stripped characters can also be specified using the charlist parameter. Simply list all characters that you want to be stripped. With .. you can specify a range of characters."}],"ret_type":"string"}]},"uasort":{"desc":"Sort an array with a user-defined comparison function and maintain index association","long_desc":"This function sorts an array such that array indices maintain their correlation with the array elements they are associated with, using a user-defined comparison function. This is used mainly when sorting associative arrays where the actual element order is significant.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.uasort","name":"uasort","params":[{"list":[{"type":"array","var":"&$array","beh":0,"desc":"The input array."},{"type":"callable","var":"$cmp_function","beh":0,"desc":"See usort() and uksort() for examples of user-defined comparison functions."}],"ret_type":"bool"}]},"ucfirst":{"desc":"Make a string's first character uppercase","long_desc":"Returns a string with the first character of str capitalized, if that character is alphabetic. Note that 'alphabetic' is determined by the current locale. For instance, in the default \"C\" locale characters such as umlaut-a (\u00e4) will not be converted.","ver":"PHP 4, PHP 5","ret_desc":"Returns the resulting string.","seealso":[],"url":"function.ucfirst","name":"ucfirst","params":[{"list":[],"ret_type":"string"}]},"ucwords":{"desc":"Uppercase the first character of each word in a string","long_desc":"Returns a string with the first character of each word in str capitalized, if that character is alphabetic. The definition of a word is any string of characters that is immediately after a whitespace (These are: space, form-feed, newline, carriage return, horizontal tab, and vertical tab).","ver":"PHP 4, PHP 5","ret_desc":"Returns the modified string.","seealso":[],"url":"function.ucwords","name":"ucwords","params":[{"list":[],"ret_type":"string"}]},"udm_add_search_limit":{"desc":"Add various search limits","long_desc":"udm_add_search_limit() adds search restrictions.","ver":"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.udm-add-search-limit","name":"udm_add_search_limit","params":[{"list":[{"type":"resource","var":"$agent","beh":0,"desc":"A link to Agent, received after call to udm_alloc_agent()."},{"type":"int","var":"$var","beh":0,"desc":"Defines the parameter, indicating limits. Possible var values:"},{"type":"string","var":"$val","beh":1,"desc":"Defines the value of the current parameter."}],"ret_type":"bool"}]},"udm_alloc_agent":{"desc":"Allocate mnoGoSearch session","long_desc":"Allocate a mnoGoSearch session.","ver":"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"Returns a mnogosearch agent identifier on success, FALSE on failure. This function creates a session with database parameters.","url":"function.udm-alloc-agent","name":"udm_alloc_agent","params":[{"list":[{"type":"string","var":"$dbaddr","beh":0,"desc":"dbaddr - URL-style database description, with options (type, host, database name, port, user and password) to connect to SQL database. Do not matter for built-in text files support. Format for dbaddr: DBType:[\/\/[DBUser[:DBPass]@]DBHost[:DBPort]]\/DBName\/. Currently supported DBType values are: mysql, pgsql, msql, solid, mssql, oracle, and ibase. Actually, it does not matter for native libraries support, but ODBC users should specify one of the supported values. If your database type is not supported, you may use unknown instead."},{"type":"string","var":"$dbmode","beh":1,"desc":"dbmode - You may select the SQL database mode of words storage. Possible values of dbmode are: single, multi, crc, or crc-multi. When single is specified, all words are stored in the same table. If multi is selected, words will be located in different tables depending of their lengths. \"multi\" mode is usually faster, but requires more tables in the database. If \"crc\" mode is selected, mnoGoSearch will store 32 bit integer word IDs calculated by CRC32 algorithm instead of words. This mode requires less disk space and it is faster comparing with \"single\" and \"multi\" modes. crc-multi uses the same storage structure with the \"crc\" mode, but also stores words in different tables depending on words lengths like in \"multi\" mode."}],"ret_type":"resource"}]},"udm_alloc_agent_array":{"desc":"Allocate mnoGoSearch session","long_desc":"udm_alloc_agent_array() will create an agent with multiple database connections.","ver":"PHP 4 >= 4.3.3, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"Returns a resource link identifier on success or FALSE on failure.","seealso":[],"url":"function.udm-alloc-agent-array","name":"udm_alloc_agent_array","params":[{"list":[],"ret_type":"resource"}]},"udm_api_version":{"desc":"Get mnoGoSearch API version","long_desc":"Gets the mnoGoSearch API version. This function allows the user to identify which API functions are available, e.g. udm_get_doc_count() function is only available in mnoGoSearch 3.1.11 or later.","ver":"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"udm_api_version() returns the mnoGoSearch API version number. E.g. if mnoGoSearch 3.1.10 API is used, this function will return 30110.","url":"function.udm-api-version","name":"udm_api_version","params":[{"list":[],"ret_type":"int"}]},"udm_cat_list":{"desc":"Get all the categories on the same level with the current one","long_desc":"Gets all the categories on the same level with the current one. The function can be useful for developing categories tree browser.","ver":"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"Returns an array listing all categories of the same level as the current category in the categories tree.","seealso":[],"url":"function.udm-cat-list","name":"udm_cat_list","params":[{"list":[{"type":"resource","var":"$agent","beh":0,"desc":"A link to Agent, received after call to udm_alloc_agent()."},{"type":"string","var":"$category","beh":0,"desc":""}],"ret_type":"array"}]},"udm_cat_path":{"desc":"Get the path to the current category","long_desc":"Returns an array describing the path in the categories tree from the tree root to the current one, specified by category.","ver":"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"The returned array consists of pairs. Elements with even index numbers contain the category paths, odd elements contain the corresponding category names.","seealso":[],"url":"function.udm-cat-path","name":"udm_cat_path","params":[{"list":[{"type":"resource","var":"$agent","beh":0,"desc":"A link to Agent, received after call to udm_alloc_agent()."},{"type":"string","var":"$category","beh":0,"desc":""}],"ret_type":"array"}]},"udm_check_charset":{"desc":"Check if the given charset is known to mnogosearch","long_desc":"","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","url":"function.udm-check-charset","name":"udm_check_charset","params":[{"list":[{"type":"resource","var":"$agent","beh":0,"desc":""},{"type":"string","var":"$charset","beh":0,"desc":""}],"ret_type":"bool"}]},"udm_check_stored":{"desc":"Check connection to stored","long_desc":"","ver":"PHP 4 >= 4.2.0","url":"function.udm-check-stored","name":"udm_check_stored","params":[{"list":[{"type":"resource","var":"$agent","beh":0,"desc":""},{"type":"int","var":"$link","beh":0,"desc":""},{"type":"string","var":"$doc_id","beh":1,"desc":""}],"ret_type":"int"}]},"udm_clear_search_limits":{"desc":"Clear all mnoGoSearch search restrictions","long_desc":"udm_clear_search_limits() resets defined search limitations.","ver":"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"Returns TRUE.","seealso":[],"url":"function.udm-clear-search-limits","name":"udm_clear_search_limits","params":[{"list":[],"ret_type":"bool"}]},"udm_close_stored":{"desc":"Close connection to stored","long_desc":"","ver":"PHP 4 >= 4.2.0","url":"function.udm-close-stored","name":"udm_close_stored","params":[{"list":[{"type":"resource","var":"$agent","beh":0,"desc":""},{"type":"int","var":"$link","beh":0,"desc":""}],"ret_type":"int"}]},"udm_crc32":{"desc":"Return CRC32 checksum of given string","long_desc":"","ver":"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","url":"function.udm-crc32","name":"udm_crc32","params":[{"list":[{"type":"resource","var":"$agent","beh":0,"desc":""},{"type":"string","var":"$str","beh":0,"desc":""}],"ret_type":"int"}]},"udm_errno":{"desc":"Get mnoGoSearch error number","long_desc":"Receiving numeric agent error code.","ver":"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"Returns the mnoGoSearch error number, zero if no error.","url":"function.udm-errno","name":"udm_errno","params":[{"list":[],"ret_type":"int"}]},"udm_error":{"desc":"Get mnoGoSearch error message","long_desc":"Gets the agent error message.","ver":"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"udm_error() returns mnoGoSearch error message, empty string if no error.","url":"function.udm-error","name":"udm_error","params":[{"list":[],"ret_type":"string"}]},"udm_find":{"desc":"Perform search","long_desc":"Performs a search. The search itself. The first argument - session, the next one - query itself. To find something just type words you want to find and press SUBMIT button. For example, \"mysql odbc\". You should not use quotes \" in query, they are written here only to divide a query from other text. mnoGoSearch will find all documents that contain word \"mysql\" and\/or word \"odbc\". Best documents having bigger weights will be displayed first. If you use search mode ALL, search will return documents that contain both (or more) words you entered. In case you use mode ANY, the search will return list of documents that contain any of the words you entered. If you want more advanced results you may use query language. You should select \"bool\" match mode in the search from.","ver":"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"Returns a result link identifier on success or FALSE on failure.","url":"function.udm-find","name":"udm_find","params":[{"list":[{"type":"resource","var":"$agent","beh":0,"desc":"A link to Agent, received after call to udm_alloc_agent()."},{"type":"string","var":"$query","beh":0,"desc":"mnoGoSearch understands the following boolean operators: & - logical AND. For example, \"mysql & odbc\". mnoGoSearch will find any URLs that contain both \"mysql\" and \"odbc\". | - logical OR. For example \"mysql|odbc\". mnoGoSearch will find any URLs, that contain word \"mysql\" or word \"odbc\". ~ - logical NOT. For example \"mysql & ~odbc\". mnoGoSearch will find URLs that contain word \"mysql\" and do not contain word \"odbc\" at the same time. Note that ~ just excludes given word from results. Query \"~odbc\" will find nothing! () - group command to compose more complex queries. For example \"(mysql | msql) & ~postgres\". Query language is simple and powerful at the same time. Just consider query as usual boolean expression."}],"ret_type":"resource"}]},"udm_free_agent":{"desc":"Free mnoGoSearch session","long_desc":"Freeing up memory allocated for agent session.","ver":"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.udm-free-agent","name":"udm_free_agent","params":[{"list":[],"ret_type":"int"}]},"udm_free_ispell_data":{"desc":"Free memory allocated for ispell data","long_desc":"Frees the memory allocated for ispell data.","ver":"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"udm_free_ispell_data() always returns TRUE.","url":"function.udm-free-ispell-data","name":"udm_free_ispell_data","params":[{"list":[],"ret_type":"bool"}]},"udm_free_res":{"desc":"Free mnoGoSearch result","long_desc":"Freeing up memory allocated for results.","ver":"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.udm-free-res","name":"udm_free_res","params":[{"list":[],"ret_type":"bool"}]},"udm_get_doc_count":{"desc":"Get total number of documents in database","long_desc":"udm_get_doc_count() returns the number of documents in the database.","ver":"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"Returns the number of documents.","url":"function.udm-get-doc-count","name":"udm_get_doc_count","params":[{"list":[],"ret_type":"int"}]},"udm_get_res_field":{"desc":"Fetch a result field","long_desc":"Fetch a mnoGoSearch result field.","ver":"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"udm_get_res_field() returns result field value on success, FALSE on error.","url":"function.udm-get-res-field","name":"udm_get_res_field","params":[{"list":[{"type":"resource","var":"$res","beh":0,"desc":"res - a link to result identifier, received after call to udm_find()."},{"type":"int","var":"$row","beh":0,"desc":"row - the number of the link on the current page. May have values from 0 to UDM_PARAM_NUM_ROWS-1."},{"type":"int","var":"$field","beh":1,"desc":"field - field identifier, may have the following values:"}],"ret_type":"string"}]},"udm_get_res_param":{"desc":"Get mnoGoSearch result parameters","long_desc":"Gets the mnoGoSearch result parameters.","ver":"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"udm_get_res_param() returns result parameter value on success, FALSE on error.","url":"function.udm-get-res-param","name":"udm_get_res_param","params":[{"list":[{"type":"resource","var":"$res","beh":0,"desc":"res - a link to result identifier, received after call to udm_find()."},{"type":"int","var":"$param","beh":0,"desc":"param - parameter identifier, may have the following values:"}],"ret_type":"string"}]},"udm_hash32":{"desc":"Return Hash32 checksum of gived string","long_desc":"udm_hash32() will take a string str and return a quite unique 32-bit hash number from it.","ver":"PHP 4 >= 4.3.3, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"Returns a 32-bit hash number.","seealso":[],"url":"function.udm-hash32","name":"udm_hash32","params":[{"list":[{"type":"resource","var":"$agent","beh":0,"desc":"A link to Agent, received after call to udm_alloc_agent()."},{"type":"string","var":"$str","beh":0,"desc":"The input string."}],"ret_type":"int"}]},"udm_load_ispell_data":{"desc":"Load ispell data","long_desc":"udm_load_ispell_data() loads ispell data. After using this function to free memory allocated for ispell data, please use udm_free_ispell_data(), even if you use UDM_ISPELL_TYPE_SERVER mode.","ver":"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.udm-load-ispell-data","name":"udm_load_ispell_data","params":[{"list":[{"type":"resource","var":"$agent","beh":0,"desc":"A link to Agent, received after call to udm_alloc_agent()."},{"type":"int","var":"$var","beh":0,"desc":"Indicates the source for ispell data. May have the following values: The fastest mode is UDM_ISPELL_TYPE_SERVER. UDM_ISPELL_TYPE_TEXT is slower and UDM_ISPELL_TYPE_DB is the slowest. The above pattern is TRUE for mnoGoSearch 3.1.10 - 3.1.11. It is planned to speed up DB mode in future versions and it is going to be faster than TEXT mode."},{"type":"string","var":"$val1","beh":1,"desc":""},{"type":"string","var":"$val2","beh":1,"desc":""},{"type":"int","var":"$flag","beh":1,"desc":""}],"ret_type":"bool"}]},"udm_open_stored":{"desc":"Open connection to stored","long_desc":"","ver":"PHP 4 >= 4.2.0","url":"function.udm-open-stored","name":"udm_open_stored","params":[{"list":[{"type":"resource","var":"$agent","beh":0,"desc":""},{"type":"string","var":"$storedaddr","beh":0,"desc":""}],"ret_type":"int"}]},"udm_set_agent_param":{"desc":"Set mnoGoSearch agent session parameters","long_desc":"Defines mnoGoSearch session parameters.","ver":"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.udm-set-agent-param","name":"udm_set_agent_param","params":[{"list":[{"type":"resource","var":"$agent","beh":0,"desc":"A link to Agent, received after call to udm_alloc_agent()."},{"type":"int","var":"$var","beh":0,"desc":"The following parameters and their values are available:"},{"type":"string","var":"$val","beh":1,"desc":""}],"ret_type":"bool"}]},"uksort":{"desc":"Sort an array by keys using a user-defined comparison function","long_desc":"uksort() will sort the keys of an array using a user-supplied comparison function. If the array you wish to sort needs to be sorted by some non-trivial criteria, you should use this function.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.uksort","name":"uksort","params":[{"list":[{"type":"array","var":"&$array","beh":0,"desc":"The input array."},{"type":"callable","var":"$cmp_function","beh":0,"desc":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}],"ret_type":"bool"},{"list":[{"type":"mixed","var":"$a","beh":0,"desc":"The input array."},{"type":"mixed","var":"$b","beh":0,"desc":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}],"ret_type":"int"}]},"umask":{"desc":"Changes the current umask","long_desc":"umask() sets PHP's umask to mask & 0777 and returns the old umask. When PHP is being used as a server module, the umask is restored when each request is finished.","ver":"PHP 4, PHP 5","ret_desc":"umask() without arguments simply returns the current umask otherwise the old umask is returned.","url":"function.umask","name":"umask","params":[{"list":[],"ret_type":"int"}]},"uniqid":{"desc":"Generate a unique ID","long_desc":"Gets a prefixed unique identifier based on the current time in microseconds.","ver":"PHP 4, PHP 5","ret_desc":"Returns the unique identifier, as a string.","url":"function.uniqid","name":"uniqid","params":[{"list":[{"type":"string","var":"$prefix","beh":0,"desc":"Can be useful, for instance, if you generate identifiers simultaneously on several hosts that might happen to generate the identifier at the same microsecond. With an empty prefix, the returned string will be 13 characters long. If more_entropy is TRUE, it will be 23 characters.","def":"\"\""},{"type":"bool","var":"$more_entropy","beh":1,"desc":"If set to TRUE, uniqid() will add additional entropy (using the combined linear congruential generator) at the end of the return value, which increases the likelihood that the result will be unique.","def":"false"}],"ret_type":"string"}]},"unixtojd":{"desc":"Convert Unix timestamp to Julian Day","long_desc":"Return the Julian Day for a Unix timestamp (seconds since 1.1.1970), or for the current day if no timestamp is given.","ver":"PHP 4, PHP 5","ret_desc":"A julian day number as integer.","seealso":[],"url":"function.unixtojd","name":"unixtojd","params":[{"list":[],"ret_type":"int"}]},"unlink":{"desc":"Deletes a file","long_desc":"Deletes filename. Similar to the Unix C unlink() function. A E_WARNING level error will be generated on failure.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.unlink","name":"unlink","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"Path to the file."},{"type":"resource","var":"$context","beh":1,"desc":""}],"ret_type":"bool"}]},"unpack":{"desc":"Unpack data from binary string","long_desc":"Unpacks from a binary string into an array according to the given format. The unpacked data is stored in an associative array. To accomplish this you have to name the different format codes and separate them by a slash \/. If a repeater argument is present, then each of the array keys will have a sequence number behind the given name.","ver":"PHP 4, PHP 5","ret_desc":"Returns an associative array containing unpacked elements of binary string.","seealso":[],"url":"function.unpack","name":"unpack","params":[{"list":[{"type":"string","var":"$format","beh":0,"desc":"See pack() for an explanation of the format codes."},{"type":"string","var":"$data","beh":0,"desc":"The packed data."}],"ret_type":"array"}]},"unregister_tick_function":{"desc":"De-register a function for execution on each tick","long_desc":"De-registers the function named by function_name so it is no longer executed when a tick is called.","ver":"PHP 4 >= 4.0.3, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.unregister-tick-function","name":"unregister_tick_function","params":[{"list":[],"ret_type":"void"}]},"unserialize":{"desc":"Creates a PHP value from a stored representation","long_desc":"unserialize() takes a single serialized variable and converts it back into a PHP value.","ver":"PHP 4, PHP 5","ret_desc":"The converted value is returned, and can be a boolean, integer, float, string, array or object.","seealso":[],"url":"function.unserialize","name":"unserialize","params":[{"list":[],"ret_type":"mixed"}]},"unset":{"desc":"Unset a given variable","long_desc":"unset() destroys the specified variables. The behavior of unset() inside of a function can vary depending on what type of variable you are attempting to destroy. If a globalized variable is unset() inside of a function, only the local variable is destroyed. The variable in the calling environment will retain the same value as before unset() was called. The above example will output: To unset() a global variable inside of a function, then use the $GLOBALS array to do so: If a variable that is PASSED BY REFERENCE is unset() inside of a function, only the local variable is destroyed. The variable in the calling environment will retain the same value as before unset() was called. The above example will output: If a static variable is unset() inside of a function, unset() destroys the variable only in the context of the rest of a function. Following calls will restore the previous value of a variable. The above example will output:","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.unset","name":"unset","params":[{"list":[{"type":"mixed","var":"$var","beh":0,"desc":"The variable to be unset."},{"type":"mixed","var":"$...","beh":1,"desc":"Another variable ..."}],"ret_type":"void"}]},"untaint":{"desc":"Untaint strings","long_desc":"Untaint strings","ver":"PECL taint >=0.1.0","ret_desc":"","url":"function.untaint","name":"untaint","params":[{"list":[{"type":"string","var":"$string","beh":0,"desc":""},{"type":"string","var":"$...","beh":1,"desc":""}],"ret_type":"bool"}]},"urldecode":{"desc":"Decodes URL-encoded string","long_desc":"Decodes any %## encoding in the given string. Plus symbols ('+') are decoded to a space character.","ver":"PHP 4, PHP 5","ret_desc":"Returns the decoded string.","seealso":[],"url":"function.urldecode","name":"urldecode","params":[{"list":[],"ret_type":"string"}]},"urlencode":{"desc":"URL-encodes string","long_desc":"This function is convenient when encoding a string to be used in a query part of a URL, as a convenient way to pass variables to the next page.","ver":"PHP 4, PHP 5","ret_desc":"Returns a string in which all non-alphanumeric characters except -_. have been replaced with a percent (%) sign followed by two hex digits and spaces encoded as plus (+) signs. It is encoded the same way that the posted data from a WWW form is encoded, that is the same way as in application\/x-www-form-urlencoded media type. This differs from the \u00bb\u00a0RFC 3986 encoding (see rawurlencode()) in that for historical reasons, spaces are encoded as plus (+) signs.","seealso":[],"url":"function.urlencode","name":"urlencode","params":[{"list":[],"ret_type":"string"}]},"use_soap_error_handler":{"desc":"Set whether to use the SOAP error handler","long_desc":"This function sets whether or not to use the SOAP error handler in the SOAP server. It will return the previous value. If set to TRUE, details of errors in a SoapServer application will be sent to the clients. If FALSE, no information will be sent.","ver":"Unknown","ret_desc":"Returns the original value.","seealso":[],"url":"function.use-soap-error-handler","name":"use_soap_error_handler","params":[{"list":[],"ret_type":"bool"}]},"user_error":{"desc":"Alias of trigger_error()","long_desc":"This function is an alias of: trigger_error().","ver":"PHP 4, PHP 5","url":"function.user-error","name":"user_error","params":[]},"usleep":{"desc":"Delay execution in microseconds","long_desc":"Delays program execution for the given number of micro seconds.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.usleep","name":"usleep","params":[{"list":[],"ret_type":"void"}]},"usort":{"desc":"Sort an array by values using a user-defined comparison function","long_desc":"This function will sort an array by its values using a user-supplied comparison function. If the array you wish to sort needs to be sorted by some non-trivial criteria, you should use this function.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.usort","name":"usort","params":[{"list":[{"type":"array","var":"&$array","beh":0,"desc":"The input array."},{"type":"callable","var":"$cmp_function","beh":0,"desc":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}],"ret_type":"bool"},{"list":[{"type":"mixed","var":"$a","beh":0,"desc":"The input array."},{"type":"mixed","var":"$b","beh":0,"desc":"The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second."}],"ret_type":"int"}]},"utf8_decode":{"desc":"Converts a string with ISO-8859-1 characters encoded with UTF-8 to single-byte ISO-8859-1","long_desc":"This function decodes data, assumed to be UTF-8 encoded, to ISO-8859-1.","ver":"PHP 4, PHP 5","ret_desc":"Returns the ISO-8859-1 translation of data.","seealso":[],"url":"function.utf8-decode","name":"utf8_decode","params":[{"list":[],"ret_type":"string"}]},"utf8_encode":{"desc":"Encodes an ISO-8859-1 string to UTF-8","long_desc":"This function encodes the string data to UTF-8, and returns the encoded version. UTF-8 is a standard mechanism used by Unicode for encoding wide character values into a byte stream. UTF-8 is transparent to plain ASCII characters, is self-synchronized (meaning it is possible for a program to figure out where in the bytestream characters start) and can be used with normal string comparison functions for sorting and such. PHP encodes UTF-8 characters in up to four bytes, like this:","ver":"PHP 4, PHP 5","ret_desc":"Returns the UTF-8 translation of data.","url":"function.utf8-encode","name":"utf8_encode","params":[{"list":[],"ret_type":"string"}]},"var_dump":{"desc":"Dumps information about a variable","long_desc":"This function displays structured information about one or more expressions that includes its type and value. Arrays and objects are explored recursively with values indented to show structure. In PHP 5 all public, private and protected properties of objects will be returned in the output.","ver":"PHP 4, PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.var-dump","name":"var_dump","params":[{"list":[{"type":"mixed","var":"$expression","beh":0,"desc":"The variable you want to dump."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"void"}]},"var_export":{"desc":"Outputs or returns a parsable string representation of a variable","long_desc":"var_export() gets structured information about the given variable. It is similar to var_dump() with one exception: the returned representation is valid PHP code.","ver":"PHP 4 >= 4.2.0, PHP 5","ret_desc":"Returns the variable representation when the return parameter is used and evaluates to TRUE. Otherwise, this function will return NULL.","seealso":[],"url":"function.var-export","name":"var_export","params":[{"list":[{"type":"mixed","var":"$expression","beh":0,"desc":"The variable you want to export."},{"type":"bool","var":"$return","beh":0,"desc":"If used and set to TRUE, var_export() will return the variable representation instead of outputing it.","def":"false"}],"ret_type":"mixed"}]},"variant_abs":{"desc":"Returns the absolute value of a variant","long_desc":"Returns the absolute value of a variant.","ver":"PHP 5","ret_desc":"Returns the absolute value of val.","seealso":[],"url":"function.variant-abs","name":"variant_abs","params":[{"list":[],"ret_type":"mixed"}]},"variant_add":{"desc":"\"Adds\" two variant values together and returns the result","long_desc":"Adds left to right using the following rules (taken from the MSDN library), which correspond to those of Visual Basic:","ver":"PHP 5","ret_desc":"Returns the result.","seealso":[],"url":"function.variant-add","name":"variant_add","params":[{"list":[{"type":"mixed","var":"$left","beh":0,"desc":"The left operand."},{"type":"mixed","var":"$right","beh":0,"desc":"The right operand."}],"ret_type":"mixed"}]},"variant_and":{"desc":"Performs a bitwise AND operation between two variants","long_desc":"Performs a bitwise AND operation. Note that this is slightly different from a regular AND operation.","ver":"PHP 5","ret_desc":"","seealso":[],"url":"function.variant-and","name":"variant_and","params":[{"list":[{"type":"mixed","var":"$left","beh":0,"desc":"The left operand."},{"type":"mixed","var":"$right","beh":0,"desc":"The right operand."}],"ret_type":"mixed"}]},"variant_cast":{"desc":"Convert a variant into a new variant object of another type","long_desc":"This function makes a copy of variant and then performs a variant cast operation to force the copy to have the type given by type. This function wraps VariantChangeType() in the COM library; consult MSDN for more information.","ver":"PHP 5","ret_desc":"Returns a VT_DATE variant.","seealso":[],"url":"function.variant-cast","name":"variant_cast","params":[{"list":[{"type":"variant","var":"$variant","beh":0,"desc":"The variant."},{"type":"int","var":"$type","beh":0,"desc":"type should be one of the VT_XXX constants."}],"ret_type":"variant"}]},"variant_cat":{"desc":"concatenates two variant values together and returns the result","long_desc":"Concatenates left with right and returns the result. This function is notionally equivalent to $left . $right.","ver":"PHP 5","ret_desc":"Returns the result of the concatenation.","seealso":[],"url":"function.variant-cat","name":"variant_cat","params":[{"list":[{"type":"mixed","var":"$left","beh":0,"desc":"The left operand."},{"type":"mixed","var":"$right","beh":0,"desc":"The right operand."}],"ret_type":"mixed"}]},"variant_cmp":{"desc":"Compares two variants","long_desc":"Compares left with right. This function will only compare scalar values, not arrays or variant records.","ver":"PHP 5","ret_desc":"Returns one of the following:","url":"function.variant-cmp","name":"variant_cmp","params":[{"list":[{"type":"mixed","var":"$left","beh":1,"desc":"The left operand."},{"type":"mixed","var":"$right","beh":1,"desc":"The right operand."},{"type":"int","var":"$lcid","beh":1,"desc":"A valid Locale Identifier to use when comparing strings (this affects string collation)."},{"type":"int","var":"$flags","beh":1,"desc":"flags can be one or more of the following values OR'd together, and affects string comparisons:"}],"ret_type":"int"}]},"variant_date_from_timestamp":{"desc":"Returns a variant date representation of a Unix timestamp","long_desc":"Converts timestamp from a unix timestamp value into a variant of type VT_DATE. This allows easier interopability between the unix-ish parts of PHP and COM.","ver":"PHP 5","ret_desc":"Returns a VT_DATE variant.","seealso":[],"url":"function.variant-date-from-timestamp","name":"variant_date_from_timestamp","params":[{"list":[],"ret_type":"variant"}]},"variant_date_to_timestamp":{"desc":"Converts a variant date\/time value to Unix timestamp","long_desc":"Converts variant from a VT_DATE (or similar) value into a Unix timestamp. This allows easier interopability between the Unix-ish parts of PHP and COM.","ver":"PHP 5","ret_desc":"Returns a unix timestamp.","seealso":[],"url":"function.variant-date-to-timestamp","name":"variant_date_to_timestamp","params":[{"list":[],"ret_type":"int"}]},"variant_div":{"desc":"Returns the result from dividing two variants","long_desc":"Divides left by right and returns the result.","ver":"PHP 5","ret_desc":"","seealso":[],"url":"function.variant-div","name":"variant_div","params":[{"list":[{"type":"mixed","var":"$left","beh":0,"desc":"The left operand."},{"type":"mixed","var":"$right","beh":0,"desc":"The right operand."}],"ret_type":"mixed"}]},"variant_eqv":{"desc":"Performs a bitwise equivalence on two variants","long_desc":"Performs a bitwise equivalence on two variants.","ver":"PHP 5","ret_desc":"If each bit in left is equal to the corresponding bit in right then TRUE is returned, otherwise FALSE is returned.","url":"function.variant-eqv","name":"variant_eqv","params":[{"list":[{"type":"mixed","var":"$left","beh":0,"desc":"The left operand."},{"type":"mixed","var":"$right","beh":0,"desc":"The right operand."}],"ret_type":"mixed"}]},"variant_fix":{"desc":"Returns the integer portion of a variant","long_desc":"Gets the integer portion of a variant.","ver":"PHP 5","ret_desc":"If variant is negative, then the first negative integer greater than or equal to the variant is returned, otherwise returns the integer portion of the value of variant.","seealso":[],"url":"function.variant-fix","name":"variant_fix","params":[{"list":[],"ret_type":"mixed"}]},"variant_get_type":{"desc":"Returns the type of a variant object","long_desc":"Returns the type of a variant object.","ver":"PHP 5","ret_desc":"This function returns an integer value that indicates the type of variant, which can be an instance of COM, DOTNET or VARIANT classes. The return value can be compared to one of the VT_XXX constants.","url":"function.variant-get-type","name":"variant_get_type","params":[{"list":[],"ret_type":"int"}]},"variant_idiv":{"desc":"Converts variants to integers and then returns the result from dividing them","long_desc":"Converts left and right to integer values, and then performs integer division.","ver":"PHP 5","ret_desc":"","seealso":[],"url":"function.variant-idiv","name":"variant_idiv","params":[{"list":[{"type":"mixed","var":"$left","beh":0,"desc":"The left operand."},{"type":"mixed","var":"$right","beh":0,"desc":"The right operand."}],"ret_type":"mixed"}]},"variant_imp":{"desc":"Performs a bitwise implication on two variants","long_desc":"Performs a bitwise implication operation.","ver":"PHP 5","ret_desc":"","url":"function.variant-imp","name":"variant_imp","params":[{"list":[{"type":"mixed","var":"$left","beh":0,"desc":"The left operand."},{"type":"mixed","var":"$right","beh":0,"desc":"The right operand."}],"ret_type":"mixed"}]},"variant_int":{"desc":"Returns the integer portion of a variant","long_desc":"Gets the integer portion of a variant.","ver":"PHP 5","ret_desc":"If variant is negative, then the first negative integer greater than or equal to the variant is returned, otherwise returns the integer portion of the value of variant.","seealso":[],"url":"function.variant-int","name":"variant_int","params":[{"list":[],"ret_type":"mixed"}]},"variant_mod":{"desc":"Divides two variants and returns only the remainder","long_desc":"Divides left by right and returns the remainder.","ver":"PHP 5","ret_desc":"Returns the remainder of the division.","seealso":[],"url":"function.variant-mod","name":"variant_mod","params":[{"list":[{"type":"mixed","var":"$left","beh":0,"desc":"The left operand."},{"type":"mixed","var":"$right","beh":0,"desc":"The right operand."}],"ret_type":"mixed"}]},"variant_mul":{"desc":"Multiplies the values of the two variants","long_desc":"Multiplies left by right.","ver":"PHP 5","ret_desc":"","seealso":[],"url":"function.variant-mul","name":"variant_mul","params":[{"list":[{"type":"mixed","var":"$left","beh":0,"desc":"The left operand."},{"type":"mixed","var":"$right","beh":0,"desc":"The right operand."}],"ret_type":"mixed"}]},"variant_neg":{"desc":"Performs logical negation on a variant","long_desc":"Performs logical negation of variant.","ver":"PHP 5","ret_desc":"Returns the result of the logical negation.","url":"function.variant-neg","name":"variant_neg","params":[{"list":[],"ret_type":"mixed"}]},"variant_not":{"desc":"Performs bitwise not negation on a variant","long_desc":"Performs bitwise not negation on variant and returns the result.","ver":"PHP 5","ret_desc":"Returns the bitwise not negation. If variant is NULL, the result will also be NULL.","url":"function.variant-not","name":"variant_not","params":[{"list":[],"ret_type":"mixed"}]},"variant_or":{"desc":"Performs a logical disjunction on two variants","long_desc":"Performs a bitwise OR operation. Note that this is slightly different from a regular OR operation.","ver":"PHP 5","ret_desc":"","seealso":[],"url":"function.variant-or","name":"variant_or","params":[{"list":[{"type":"mixed","var":"$left","beh":0,"desc":"The left operand."},{"type":"mixed","var":"$right","beh":0,"desc":"The right operand."}],"ret_type":"mixed"}]},"variant_pow":{"desc":"Returns the result of performing the power function with two variants","long_desc":"Returns the result of left to the power of right.","ver":"PHP 5","ret_desc":"Returns the result of left to the power of right.","seealso":[],"url":"function.variant-pow","name":"variant_pow","params":[{"list":[{"type":"mixed","var":"$left","beh":0,"desc":"The left operand."},{"type":"mixed","var":"$right","beh":0,"desc":"The right operand."}],"ret_type":"mixed"}]},"variant_round":{"desc":"Rounds a variant to the specified number of decimal places","long_desc":"Returns the value of variant rounded to decimals decimal places.","ver":"PHP 5","ret_desc":"Returns the rounded value.","seealso":[],"url":"function.variant-round","name":"variant_round","params":[{"list":[{"type":"mixed","var":"$variant","beh":0,"desc":"The variant."},{"type":"int","var":"$decimals","beh":0,"desc":"Number of decimal places."}],"ret_type":"mixed"}]},"variant_set":{"desc":"Assigns a new value for a variant object","long_desc":"Converts value to a variant and assigns it to the variant object; no new variant object is created, and the old value of variant is freed\/released.","ver":"PHP 5","ret_desc":"No value is returned.","url":"function.variant-set","name":"variant_set","params":[{"list":[{"type":"variant","var":"$variant","beh":0,"desc":"The variant."},{"type":"mixed","var":"$value","beh":0,"desc":""}],"ret_type":"void"}]},"variant_set_type":{"desc":"Convert a variant into another type \"in-place\"","long_desc":"This function is similar to variant_cast() except that the variant is modified \"in-place\"; no new variant is created. The parameters for this function have identical meaning to those of variant_cast().","ver":"PHP 5","ret_desc":"No value is returned.","seealso":[],"url":"function.variant-set-type","name":"variant_set_type","params":[{"list":[{"type":"variant","var":"$variant","beh":0,"desc":"The variant."},{"type":"int","var":"$type","beh":0,"desc":""}],"ret_type":"void"}]},"variant_sub":{"desc":"Subtracts the value of the right variant from the left variant value","long_desc":"Subtracts right from left.","ver":"PHP 5","ret_desc":"","seealso":[],"url":"function.variant-sub","name":"variant_sub","params":[{"list":[{"type":"mixed","var":"$left","beh":0,"desc":"The left operand."},{"type":"mixed","var":"$right","beh":0,"desc":"The right operand."}],"ret_type":"mixed"}]},"variant_xor":{"desc":"Performs a logical exclusion on two variants","long_desc":"Performs a logical exclusion.","ver":"PHP 5","ret_desc":"","seealso":[],"url":"function.variant-xor","name":"variant_xor","params":[{"list":[{"type":"mixed","var":"$left","beh":0,"desc":"The left operand."},{"type":"mixed","var":"$right","beh":0,"desc":"The right operand."}],"ret_type":"mixed"}]},"version_compare":{"desc":"Compares two \"PHP-standardized\" version number strings","long_desc":"version_compare() compares two \"PHP-standardized\" version number strings. This is useful if you would like to write programs working only on some versions of PHP. The function first replaces _, - and + with a dot . in the version strings and also inserts dots . before and after any non number so that for example '4.3.2RC1' becomes '4.3.2.RC.1'. Then it splits the results like if you were using explode('.', $ver). Then it compares the parts starting from left to right. If a part contains special version strings these are handled in the following order: any string not found in this list < dev < alpha = a < beta = b < RC = rc < # < pl = p. This way not only versions with different levels like '4.1' and '4.1.2' can be compared but also any PHP specific version containing development state.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"By default, version_compare() returns -1 if the first version is lower than the second, 0 if they are equal, and 1 if the second is lower.","seealso":[],"url":"function.version-compare","name":"version_compare","params":[{"list":[{"type":"string","var":"$version1","beh":0,"desc":"First version number."},{"type":"string","var":"$version2","beh":1,"desc":"Second version number."},{"type":"string","var":"$operator","beh":1,"desc":"If you specify the third optional operator argument, you can test for a particular relationship. The possible operators are: <, lt, <=, le, >, gt, >=, ge, ==, =, eq, !=, <>, ne respectively. This parameter is case-sensitive, so values should be lowercase."}],"ret_type":"mixed"}]},"vfprintf":{"desc":"Write a formatted string to a stream","long_desc":"Write a string produced according to format to the stream resource specified by handle. Operates as fprintf() but accepts an array of arguments, rather than a variable number of arguments.","ver":"PHP 5","ret_desc":"Returns the length of the outputted string.","seealso":[],"url":"function.vfprintf","name":"vfprintf","params":[{"list":[{"type":"resource","var":"$handle","beh":0,"desc":""},{"type":"string","var":"$format","beh":0,"desc":"See sprintf() for a description of format."},{"type":"array","var":"$args","beh":1,"desc":""}],"ret_type":"int"}]},"virtual":{"desc":"Perform an Apache sub-request","long_desc":"virtual() is an Apache-specific function which is similar to <!--#include virtual...--> in mod_include. It performs an Apache sub-request. It is useful for including CGI scripts or .shtml files, or anything else that you would parse through Apache. Note that for a CGI script, the script must generate valid CGI headers. At the minimum that means it must generate a Content-Type header. To run the sub-request, all buffers are terminated and flushed to the browser, pending headers are sent too. This function is only supported when PHP is installed as an Apache module.","ver":"PHP 4, PHP 5","ret_desc":"Performs the virtual command on success, or returns FALSE on failure.","seealso":[],"url":"function.virtual","name":"virtual","params":[{"list":[],"ret_type":"bool"}]},"vpopmail_add_alias_domain":{"desc":"Add an alias for a virtual domain","ver":"PHP 4 >= 4.0.5, PECL vpopmail >= 0.2","url":"function.vpopmail-add-alias-domain","name":"vpopmail_add_alias_domain","params":[{"list":[{"type":"string","var":"$domain","beh":0,"desc":""},{"type":"string","var":"$aliasdomain","beh":0,"desc":""}],"ret_type":"bool"}]},"vpopmail_add_alias_domain_ex":{"desc":"Add alias to an existing virtual domain","ver":"PHP 4 >= 4.0.5, PECL vpopmail >= 0.2","url":"function.vpopmail-add-alias-domain-ex","name":"vpopmail_add_alias_domain_ex","params":[{"list":[{"type":"string","var":"$olddomain","beh":0,"desc":""},{"type":"string","var":"$newdomain","beh":0,"desc":""}],"ret_type":"bool"}]},"vpopmail_add_domain":{"desc":"Add a new virtual domain","ver":"PHP 4 >= 4.0.5, PECL vpopmail >= 0.2","url":"function.vpopmail-add-domain","name":"vpopmail_add_domain","params":[{"list":[{"type":"string","var":"$domain","beh":0,"desc":""},{"type":"string","var":"$dir","beh":0,"desc":""},{"type":"int","var":"$uid","beh":1,"desc":""},{"type":"int","var":"$gid","beh":1,"desc":""}],"ret_type":"bool"}]},"vpopmail_add_domain_ex":{"desc":"Add a new virtual domain","ver":"PHP 4 >= 4.0.5, PECL vpopmail >= 0.2","url":"function.vpopmail-add-domain-ex","name":"vpopmail_add_domain_ex","params":[{"list":[{"type":"string","var":"$domain","beh":1,"desc":""},{"type":"string","var":"$passwd","beh":1,"desc":""},{"type":"string","var":"$quota","beh":1,"desc":""},{"type":"string","var":"$bounce","beh":1,"desc":""},{"type":"bool","var":"$apop","beh":1,"desc":""}],"ret_type":"bool"}]},"vpopmail_add_user":{"desc":"Add a new user to the specified virtual domain","ver":"PHP 4 >= 4.0.5, PECL vpopmail >= 0.2","url":"function.vpopmail-add-user","name":"vpopmail_add_user","params":[{"list":[{"type":"string","var":"$user","beh":1,"desc":""},{"type":"string","var":"$domain","beh":1,"desc":""},{"type":"string","var":"$password","beh":1,"desc":""},{"type":"string","var":"$gecos","beh":1,"desc":""},{"type":"bool","var":"$apop","beh":1,"desc":""}],"ret_type":"bool"}]},"vpopmail_alias_add":{"desc":"Insert a virtual alias","ver":"PHP 4 >= 4.0.7, PECL vpopmail >= 0.2","url":"function.vpopmail-alias-add","name":"vpopmail_alias_add","params":[{"list":[{"type":"string","var":"$user","beh":0,"desc":""},{"type":"string","var":"$domain","beh":0,"desc":""},{"type":"string","var":"$alias","beh":1,"desc":""}],"ret_type":"bool"}]},"vpopmail_alias_del":{"desc":"Deletes all virtual aliases of a user","ver":"PHP 4 >= 4.0.7, PECL vpopmail >= 0.2","url":"function.vpopmail-alias-del","name":"vpopmail_alias_del","params":[{"list":[{"type":"string","var":"$user","beh":0,"desc":""},{"type":"string","var":"$domain","beh":0,"desc":""}],"ret_type":"bool"}]},"vpopmail_alias_del_domain":{"desc":"Deletes all virtual aliases of a domain","ver":"PHP 4 >= 4.0.7, PECL vpopmail >= 0.2","url":"function.vpopmail-alias-del-domain","name":"vpopmail_alias_del_domain","params":[{"list":[],"ret_type":"bool"}]},"vpopmail_alias_get":{"desc":"Get all lines of an alias for a domain","ver":"PHP 4 >= 4.0.7, PECL vpopmail >= 0.2","url":"function.vpopmail-alias-get","name":"vpopmail_alias_get","params":[{"list":[{"type":"string","var":"$alias","beh":0,"desc":""},{"type":"string","var":"$domain","beh":0,"desc":""}],"ret_type":"array"}]},"vpopmail_alias_get_all":{"desc":"Get all lines of an alias for a domain","ver":"PHP 4 >= 4.0.7, PECL vpopmail >= 0.2","url":"function.vpopmail-alias-get-all","name":"vpopmail_alias_get_all","params":[{"list":[],"ret_type":"array"}]},"vpopmail_auth_user":{"desc":"Attempt to validate a username\/domain\/password","ver":"PHP 4 >= 4.0.5, PECL vpopmail >= 0.2","url":"function.vpopmail-auth-user","name":"vpopmail_auth_user","params":[{"list":[{"type":"string","var":"$user","beh":0,"desc":""},{"type":"string","var":"$domain","beh":1,"desc":""},{"type":"string","var":"$password","beh":1,"desc":""},{"type":"string","var":"$apop","beh":1,"desc":""}],"ret_type":"bool"}]},"vpopmail_del_domain":{"desc":"Delete a virtual domain","ver":"PHP 4 >= 4.0.5, PECL vpopmail >= 0.2","url":"function.vpopmail-del-domain","name":"vpopmail_del_domain","params":[{"list":[],"ret_type":"bool"}]},"vpopmail_del_domain_ex":{"desc":"Delete a virtual domain","ver":"PHP 4 >= 4.0.5, PECL vpopmail >= 0.2","url":"function.vpopmail-del-domain-ex","name":"vpopmail_del_domain_ex","params":[{"list":[],"ret_type":"bool"}]},"vpopmail_del_user":{"desc":"Delete a user from a virtual domain","ver":"PHP 4 >= 4.0.5, PECL vpopmail >= 0.2","url":"function.vpopmail-del-user","name":"vpopmail_del_user","params":[{"list":[{"type":"string","var":"$user","beh":0,"desc":""},{"type":"string","var":"$domain","beh":0,"desc":""}],"ret_type":"bool"}]},"vpopmail_error":{"desc":"Get text message for last vpopmail error","ver":"PHP 4 >= 4.0.5, PECL vpopmail >= 0.2","url":"function.vpopmail-error","name":"vpopmail_error","params":[{"list":[],"ret_type":"string"}]},"vpopmail_passwd":{"desc":"Change a virtual user's password","ver":"PHP 4 >= 4.0.5, PECL vpopmail >= 0.2","url":"function.vpopmail-passwd","name":"vpopmail_passwd","params":[{"list":[{"type":"string","var":"$user","beh":0,"desc":""},{"type":"string","var":"$domain","beh":1,"desc":""},{"type":"string","var":"$password","beh":1,"desc":""},{"type":"bool","var":"$apop","beh":1,"desc":""}],"ret_type":"bool"}]},"vpopmail_set_user_quota":{"desc":"Sets a virtual user's quota","ver":"PHP 4 >= 4.0.5, PECL vpopmail >= 0.2","url":"function.vpopmail-set-user-quota","name":"vpopmail_set_user_quota","params":[{"list":[{"type":"string","var":"$user","beh":0,"desc":""},{"type":"string","var":"$domain","beh":0,"desc":""},{"type":"string","var":"$quota","beh":1,"desc":""}],"ret_type":"bool"}]},"vprintf":{"desc":"Output a formatted string","long_desc":"Display array values as a formatted string according to format (which is described in the documentation for sprintf()). Operates as printf() but accepts an array of arguments, rather than a variable number of arguments.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns the length of the outputted string.","seealso":[],"url":"function.vprintf","name":"vprintf","params":[{"list":[{"type":"string","var":"$format","beh":0,"desc":"See sprintf() for a description of format."},{"type":"array","var":"$args","beh":0,"desc":""}],"ret_type":"int"}]},"vsprintf":{"desc":"Return a formatted string","long_desc":"Operates as sprintf() but accepts an array of arguments, rather than a variable number of arguments.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Return array values as a formatted string according to format (which is described in the documentation for sprintf()).","seealso":[],"url":"function.vsprintf","name":"vsprintf","params":[{"list":[{"type":"string","var":"$format","beh":0,"desc":"See sprintf() for a description of format."},{"type":"array","var":"$args","beh":0,"desc":""}],"ret_type":"string"}]},"w32api_deftype":{"desc":"Defines a type for use with other w32api_functions","long_desc":"You need to call this function if you would like to define a type for a w32api call.","ver":"PHP 4 >= 4.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.w32api-deftype","name":"w32api_deftype","params":[{"list":[{"type":"string","var":"$typename","beh":1,"desc":"The name of the type."},{"type":"string","var":"$member1_type","beh":1,"desc":"A member type can be a user defined type. All the type names are case sensitive. Built in type names should be provided in lowercase."},{"type":"string","var":"$member1_name","beh":1,"desc":"The member name of member1_type."},{"type":"string","var":"$...","beh":1,"desc":""},{"type":"string","var":"$...","beh":1,"desc":""}],"ret_type":"bool"}]},"w32api_init_dtype":{"desc":"Creates an instance of the data type typename and fills it with the values passed","long_desc":"This function creates an instance of the data type named typename, filling in the values of the data type.","ver":"PHP 4 >= 4.2.0","ret_desc":"Returns a dynaparm resource.","url":"function.w32api-init-dtype","name":"w32api_init_dtype","params":[{"list":[{"type":"string","var":"$typename","beh":0,"desc":"The typename parameter is case sensitive."},{"type":"mixed","var":"$value","beh":1,"desc":"You should give the values in the same order as you defined the data type with w32api_deftype()."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"resource"}]},"w32api_invoke_function":{"desc":"Invokes function funcname with the arguments passed after the function name","long_desc":"w32api_invoke_function() tries to find the previously registered function, passing the parameters you provided.","ver":"PHP 4 >= 4.2.0","ret_desc":"The return type is the one you set when you registered the function, the value is the one returned by the function itself.","url":"function.w32api-invoke-function","name":"w32api_invoke_function","params":[{"list":[{"type":"string","var":"$funcname","beh":0,"desc":"The function name."},{"type":"mixed","var":"$argument","beh":1,"desc":"Any of the arguments can be of any PHP type or w32api_deftype() defined type, as needed."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"mixed"}]},"w32api_register_function":{"desc":"Registers function function_name from library with PHP","long_desc":"This function tries to find the function_name function in library, and tries to import it into PHP.","ver":"PHP 4 >= 4.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.w32api-register-function","name":"w32api_register_function","params":[{"list":[{"type":"string","var":"$library","beh":0,"desc":"The library name, as a string."},{"type":"string","var":"$function_name","beh":0,"desc":"The function name, as a string."},{"type":"string","var":"$return_type","beh":1,"desc":"The function will be registered with the given return_type. This type can be a generic PHP type, or a type defined with w32api_deftype(). All type names are case sensitive. Built in type names should be provided in lowercase."}],"ret_type":"bool"}]},"w32api_set_call_method":{"desc":"Sets the calling method used","long_desc":"This function sets the method call type.","ver":"PHP 4 >= 4.2.0","ret_desc":"No value is returned.","url":"function.w32api-set-call-method","name":"w32api_set_call_method","params":[{"list":[],"ret_type":"void"}]},"wddx_add_vars":{"desc":"Add variables to a WDDX packet with the specified ID","long_desc":"Serializes the passed variables and add the result to the given packet.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.wddx-add-vars","name":"wddx_add_vars","params":[{"list":[{"type":"resource","var":"$packet_id","beh":0,"desc":"A WDDX packet, returned by wddx_packet_start()."},{"type":"mixed","var":"$var_name","beh":1,"desc":"Can be either a string naming a variable or an array containing strings naming the variables or another array, etc."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"bool"}]},"wddx_deserialize":{"desc":"Unserializes a WDDX packet","long_desc":"Unserializes a WDDX packet.","ver":"PHP 4, PHP 5","ret_desc":"Returns the deserialized value which can be a string, a number or an array. Note that structures are deserialized into associative arrays.","url":"function.wddx-deserialize","name":"wddx_deserialize","params":[{"list":[],"ret_type":"mixed"}]},"wddx_packet_end":{"desc":"Ends a WDDX packet with the specified ID","long_desc":"Ends and returns the given WDDX packet.","ver":"PHP 4, PHP 5","ret_desc":"Returns the string containing the WDDX packet.","url":"function.wddx-packet-end","name":"wddx_packet_end","params":[{"list":[],"ret_type":"string"}]},"wddx_packet_start":{"desc":"Starts a new WDDX packet with structure inside it","long_desc":"Start a new WDDX packet for incremental addition of variables. It automatically creates a structure definition inside the packet to contain the variables.","ver":"PHP 4, PHP 5","ret_desc":"Returns a packet ID for use in later functions, or FALSE on error.","url":"function.wddx-packet-start","name":"wddx_packet_start","params":[{"list":[],"ret_type":"resource"}]},"wddx_serialize_value":{"desc":"Serialize a single value into a WDDX packet","long_desc":"Creates a WDDX packet from a single given value.","ver":"PHP 4, PHP 5","ret_desc":"Returns the WDDX packet, or FALSE on error.","url":"function.wddx-serialize-value","name":"wddx_serialize_value","params":[{"list":[{"type":"mixed","var":"$var","beh":0,"desc":"The value to be serialized"},{"type":"string","var":"$comment","beh":1,"desc":"An optional comment string that appears in the packet header."}],"ret_type":"string"}]},"wddx_serialize_vars":{"desc":"Serialize variables into a WDDX packet","long_desc":"Creates a WDDX packet with a structure that contains the serialized representation of the passed variables.","ver":"PHP 4, PHP 5","ret_desc":"Returns the WDDX packet, or FALSE on error.","url":"function.wddx-serialize-vars","name":"wddx_serialize_vars","params":[{"list":[{"type":"mixed","var":"$var_name","beh":0,"desc":"Can be either a string naming a variable or an array containing strings naming the variables or another array, etc."},{"type":"mixed","var":"$...","beh":1,"desc":""}],"ret_type":"string"}]},"win32_continue_service":{"desc":"Resumes a paused service","long_desc":"Resumes a paused, named service. Requires administrative privileges.","ver":"PECL win32service SVN","ret_desc":"Returns WIN32_NO_ERROR on success, FALSE if there is a problem with the parameters or a Win32 Error Code on failure.","seealso":[],"url":"function.win32-continue-service","name":"win32_continue_service","params":[{"list":[{"type":"string","var":"$servicename","beh":0,"desc":"The short name of the service."},{"type":"string","var":"$machine","beh":1,"desc":"Optional machine name. If omitted, the local machine is used."}],"ret_type":"int"}]},"win32_create_service":{"desc":"Creates a new service entry in the SCM database","ver":"PECL win32service SVN","ret_desc":"Returns WIN32_NO_ERROR on success, FALSE if there is a problem with the parameters or a Win32 Error Code on failure.","seealso":[],"url":"function.win32-create-service","name":"win32_create_service","params":[{"list":[{"type":"array","var":"$details","beh":0,"desc":"An array of service details:"},{"type":"string","var":"$machine","beh":1,"desc":"The short name of the service. This is the name that you will use to control the service using the net command. The service must be unique (no two services can share the same name), and, ideally, should avoid having spaces in the name."}],"ret_type":"mixed"}]},"win32_delete_service":{"desc":"Deletes a service entry from the SCM database","long_desc":"Attempts to delete a service from the SCM database. Administrative privileges are required for this to succeed. This function really just marks the service for deletion. If other processes (such as the Services Applet) are open, then the deletion will be deferred until those applications are closed. If a service is marked for deletion, further attempts to delete it will fail, and attempts to create a new service with that name will also fail.","ver":"PECL win32service SVN","ret_desc":"Returns WIN32_NO_ERROR on success, FALSE if there is a problem with the parameters or a Win32 Error Code on failure.","seealso":[],"url":"function.win32-delete-service","name":"win32_delete_service","params":[{"list":[{"type":"string","var":"$servicename","beh":0,"desc":"The short name of the service."},{"type":"string","var":"$machine","beh":1,"desc":"The optional machine name. If omitted, the local machine will be used."}],"ret_type":"mixed"}]},"win32_get_last_control_message":{"desc":"Returns the last control message that was sent to this service","long_desc":"Returns the control code that was last sent to this service process. When running as a service you should periodically check this to determine if your service needs to stop running.","ver":"PECL win32service SVN","ret_desc":"Returns a control constant which will be one of the Win32Service Service Control Message Constants: WIN32_SERVICE_CONTROL_CONTINUE, WIN32_SERVICE_CONTROL_INTERROGATE, WIN32_SERVICE_CONTROL_PAUSE, WIN32_SERVICE_CONTROL_PRESHUTDOWN, WIN32_SERVICE_CONTROL_SHUTDOWN, WIN32_SERVICE_CONTROL_STOP.","seealso":[],"url":"function.win32-get-last-control-message","name":"win32_get_last_control_message","params":[{"list":[],"ret_type":"int"}]},"win32_pause_service":{"desc":"Pauses a service","long_desc":"Pauses a named service. Requires administrative privileges.","ver":"PECL win32service SVN","ret_desc":"Returns WIN32_NO_ERROR on success, FALSE if there is a problem with the parameters or a Win32 Error Code on failure.","seealso":[],"url":"function.win32-pause-service","name":"win32_pause_service","params":[{"list":[{"type":"string","var":"$servicename","beh":0,"desc":"The short name of the service."},{"type":"string","var":"$machine","beh":1,"desc":"Optional machine name. If omitted, the local machine is used."}],"ret_type":"int"}]},"win32_ps_list_procs":{"desc":"List running processes","long_desc":"Retrieves statistics about all running processes.","ver":"PECL win32ps >= 1.0.1","ret_desc":"Returns FALSE on failure, or an array consisting of process statistics like win32_ps_stat_proc() returns for all running processes on success.","seealso":[],"url":"function.win32-ps-list-procs","name":"win32_ps_list_procs","params":[{"list":[],"ret_type":"array"}]},"win32_ps_stat_mem":{"desc":"Stat memory utilization","long_desc":"Retrieves statistics about the global memory utilization.","ver":"PECL win32ps >= 1.0.1","ret_desc":"Returns FALSE on failure, or an array consisting of the following information on success:","url":"function.win32-ps-stat-mem","name":"win32_ps_stat_mem","params":[{"list":[],"ret_type":"array"}]},"win32_ps_stat_proc":{"desc":"Stat process","long_desc":"Retrieves statistics about the process with the process id pid.","ver":"PECL win32ps >= 1.0.1","ret_desc":"Returns FALSE on failure, or an array consisting of the following information on success:","seealso":[],"url":"function.win32-ps-stat-proc","name":"win32_ps_stat_proc","params":[{"list":[],"ret_type":"array"}]},"win32_query_service_status":{"desc":"Queries the status of a service","long_desc":"Queries the current status for a service, returning an array of information.","ver":"PECL win32service SVN","ret_desc":"Returns an array consisting of the following information on success, FALSE if there is a problem with the parameters or a Win32 Error Code on failure.","seealso":[],"url":"function.win32-query-service-status","name":"win32_query_service_status","params":[{"list":[{"type":"string","var":"$servicename","beh":0,"desc":"The short name of the service."},{"type":"string","var":"$machine","beh":1,"desc":"The optional machine name. If omitted, the local machine will be used."}],"ret_type":"mixed"}]},"win32_set_service_status":{"desc":"Update the service status","long_desc":"Informs the SCM of the current status of a running service. This call is only valid for a running service process.","ver":"PECL win32service SVN","ret_desc":"Returns TRUE on success, FALSE if there is a problem with the parameters or a Win32 Error Code on failure.","seealso":[],"url":"function.win32-set-service-status","name":"win32_set_service_status","params":[{"list":[{"type":"int","var":"$status","beh":0,"desc":"The service status code, one of WIN32_SERVICE_RUNNING, WIN32_SERVICE_STOPPED, WIN32_SERVICE_STOP_PENDING, WIN32_SERVICE_START_PENDING, WIN32_SERVICE_CONTINUE_PENDING, WIN32_SERVICE_PAUSE_PENDING, WIN32_SERVICE_PAUSED."},{"type":"int","var":"$checkpoint","beh":0,"desc":"The checkpoint value the service increments periodically to report its progress during a lengthy start, stop, pause, or continue operation. For example, the service should increment this value as it completes each step of its initialization when it is starting up. The checkpoint is only valid when the status is one of WIN32_SERVICE_STOP_PENDING, WIN32_SERVICE_START_PENDING, WIN32_SERVICE_CONTINUE_PENDING or WIN32_SERVICE_PAUSE_PENDING.","def":0}],"ret_type":"bool"}]},"win32_start_service":{"desc":"Starts a service","long_desc":"Attempts to start the named service. Usually requires administrative privileges.","ver":"PECL win32service SVN","ret_desc":"Returns WIN32_NO_ERROR on success, FALSE if there is a problem with the parameters or a Win32 Error Code on failure.","seealso":[],"url":"function.win32-start-service","name":"win32_start_service","params":[{"list":[{"type":"string","var":"$servicename","beh":0,"desc":"The short name of the service."},{"type":"string","var":"$machine","beh":1,"desc":"Optional machine name. If omitted, the local machine is used."}],"ret_type":"int"}]},"win32_start_service_ctrl_dispatcher":{"desc":"Registers the script with the SCM, so that it can act as the service with the given name","long_desc":"When launched via the Service Control Manager, a service process is required to \"check-in\" with it to establish service monitoring and communication facilities. This function performs the check-in by spawning a thread to handle the lower-level communication with the service control manager. Once started, the service process should do 2 things. The first is to tell the Service Control Manager that the service is running. This is achieved by calling win32_set_service_status() with the WIN32_SERVICE_RUNNING constant. If you need to perform some lengthy process before the service is actually running, then you can use the WIN32_SERVICE_START_PENDING constant. The second is to continue to check-in with the service control manager so that it can determine if it should terminate. This is achieved by periodically calling win32_get_last_control_message() and handling the return code appropriately.","ver":"PECL win32service SVN","ret_desc":"Returns TRUE on success, FALSE if there is a problem with the parameters or a Win32 Error Code on failure.","seealso":[],"url":"function.win32-start-service-ctrl-dispatcher","name":"win32_start_service_ctrl_dispatcher","params":[{"list":[],"ret_type":"mixed"}]},"win32_stop_service":{"desc":"Stops a service","long_desc":"Stops a named service. Requires administrative privileges.","ver":"PECL win32service SVN","ret_desc":"Returns WIN32_NO_ERROR on success, FALSE if there is a problem with the parameters or a Win32 Error Code on failure.","seealso":[],"url":"function.win32-stop-service","name":"win32_stop_service","params":[{"list":[{"type":"string","var":"$servicename","beh":0,"desc":"The short name of the service."},{"type":"string","var":"$machine","beh":1,"desc":"Optional machine name. If omitted, the local machine is used."}],"ret_type":"int"}]},"wincache_fcache_fileinfo":{"desc":"Retrieves information about files cached in the file cache","long_desc":"Retrieves information about file cache content and its usage.","ver":"PECL wincache >= 1.0.0","ret_desc":"Array of meta data about file cache or FALSE on failure","seealso":[],"url":"function.wincache-fcache-fileinfo","name":"wincache_fcache_fileinfo","params":[{"list":[],"ret_type":"array"}]},"wincache_fcache_meminfo":{"desc":"Retrieves information about file cache memory usage","long_desc":"Retrieves information about memory usage by file cache.","ver":"PECL wincache >= 1.0.0","ret_desc":"Array of meta data about file cache memory usage or FALSE on failure","seealso":[],"url":"function.wincache-fcache-meminfo","name":"wincache_fcache_meminfo","params":[{"list":[],"ret_type":"array"}]},"wincache_lock":{"desc":"Acquires an exclusive lock on a given key","long_desc":"Obtains an exclusive lock on a given key. The execution of the current script will be blocked until the lock can be obtained. Once the lock is obtained, the other scripts that try to request the lock by using the same key will be blocked, until the current script releases the lock by using wincache_unlock().","ver":"PECL wincache >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.wincache-lock","name":"wincache_lock","params":[{"list":[{"type":"string","var":"$key","beh":0,"desc":"Name of the key in the cache to get the lock on."},{"type":"bool","var":"$isglobal","beh":0,"desc":"Controls whether the scope of the lock is system-wide or local. Local locks are scoped to the application pool in IIS FastCGI case or to all php processes that have the same parent process identifier.","def":"false"}],"ret_type":"bool"}]},"wincache_ocache_fileinfo":{"desc":"Retrieves information about files cached in the opcode cache","long_desc":"Retrieves information about opcode cache content and its usage.","ver":"PECL wincache >= 1.0.0","ret_desc":"Array of meta data about opcode cache or FALSE on failure","seealso":[],"url":"function.wincache-ocache-fileinfo","name":"wincache_ocache_fileinfo","params":[{"list":[],"ret_type":"array"}]},"wincache_ocache_meminfo":{"desc":"Retrieves information about opcode cache memory usage","long_desc":"Retrieves information about memory usage by opcode cache.","ver":"PECL wincache >= 1.0.0","ret_desc":"Array of meta data about opcode cache memory usage or FALSE on failure","seealso":[],"url":"function.wincache-ocache-meminfo","name":"wincache_ocache_meminfo","params":[{"list":[],"ret_type":"array"}]},"wincache_refresh_if_changed":{"desc":"Refreshes the cache entries for the cached files","long_desc":"Refreshes the cache entries for the files, whose names were passed in the input argument. If no argument is specified then refreshes all the entries in the cache.","ver":"PECL wincache >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.wincache-refresh-if-changed","name":"wincache_refresh_if_changed","params":[{"list":[],"ret_type":"bool"}]},"wincache_rplist_fileinfo":{"desc":"Retrieves information about resolve file path cache","long_desc":"Retrieves information about cached mappings between relative file paths and corresponding absolute file paths.","ver":"PECL wincache >= 1.0.0","ret_desc":"Array of meta data about the resolve file path cache or FALSE on failure","seealso":[],"url":"function.wincache-rplist-fileinfo","name":"wincache_rplist_fileinfo","params":[{"list":[],"ret_type":"array"}]},"wincache_rplist_meminfo":{"desc":"Retrieves information about memory usage by the resolve file path cache","long_desc":"Retrieves information about memory usage by resolve file path cache.","ver":"PECL wincache >= 1.0.0","ret_desc":"Array of meta data that describes memory usage by resolve file path cache. or FALSE on failure","seealso":[],"url":"function.wincache-rplist-meminfo","name":"wincache_rplist_meminfo","params":[{"list":[],"ret_type":"array"}]},"wincache_scache_info":{"desc":"Retrieves information about files cached in the session cache","long_desc":"Retrieves information about session cache content and its usage.","ver":"PECL wincache >= 1.1.0","ret_desc":"Array of meta data about session cache or FALSE on failure","seealso":[],"url":"function.wincache-scache-info","name":"wincache_scache_info","params":[{"list":[],"ret_type":"array"}]},"wincache_scache_meminfo":{"desc":"Retrieves information about session cache memory usage","long_desc":"Retrieves information about memory usage by session cache.","ver":"PECL wincache >= 1.1.0","ret_desc":"Array of meta data about session cache memory usage or FALSE on failure","seealso":[],"url":"function.wincache-scache-meminfo","name":"wincache_scache_meminfo","params":[{"list":[],"ret_type":"array"}]},"wincache_ucache_add":{"desc":"Adds a variable in user cache only if variable does not already exist in the cache","long_desc":"Adds a variable in user cache, only if this variable doesn't already exist in the cache. The added variable remains in the user cache unless its time to live expires or it is deleted by using wincache_ucache_delete() or wincache_ucache_clear() functions.","ver":"PECL wincache >= 1.1.0","ret_desc":"If key is string, the function returns TRUE on success and FALSE on failure.","seealso":[],"url":"function.wincache-ucache-add","name":"wincache_ucache_add","params":[{"list":[{"type":"string","var":"$key","beh":0,"desc":"Store the variable using this key name. If a variable with same key is already present the function will fail and return FALSE. key is case sensitive. To override the value even if key is present use wincache_ucache_set() function instad. key can also take array of name => value pairs where names will be used as keys. This can be used to add multiple values in the cache in one operation, thus avoiding race condition."},{"type":"mixed","var":"$value","beh":1,"desc":"Value of a variable to store. Value supports all data types except resources, such as file handles. This paramter is ignored if first argument is an array. A general guidance is to pass NULL as value while using array as key. If value is an object, or an array containing objects, then the objects will be serialized. See __sleep() for details on serializing objects."},{"type":"int","var":"$ttl","beh":1,"desc":"Associative array of keys and values.","def":0}],"ret_type":"bool"},{"list":[{"type":"array","var":"$values","beh":1,"desc":"Store the variable using this key name. If a variable with same key is already present the function will fail and return FALSE. key is case sensitive. To override the value even if key is present use wincache_ucache_set() function instad. key can also take array of name => value pairs where names will be used as keys. This can be used to add multiple values in the cache in one operation, thus avoiding race condition."},{"type":"mixed","var":"$unused","beh":1,"desc":"Value of a variable to store. Value supports all data types except resources, such as file handles. This paramter is ignored if first argument is an array. A general guidance is to pass NULL as value while using array as key. If value is an object, or an array containing objects, then the objects will be serialized. See __sleep() for details on serializing objects."},{"type":"int","var":"$ttl","beh":1,"desc":"Associative array of keys and values.","def":0}],"ret_type":"bool"}]},"wincache_ucache_cas":{"desc":"Compares the variable with old value and assigns new value to it","long_desc":"Compares the variable associated with the key with old_value and if it matches then assigns the new_value to it.","ver":"PECL wincache >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.wincache-ucache-cas","name":"wincache_ucache_cas","params":[{"list":[{"type":"string","var":"$key","beh":0,"desc":"The key that is used to store the variable in the cache. key is case sensitive."},{"type":"int","var":"$old_value","beh":0,"desc":"Old value of the variable pointed by key in the user cache. The value should be of type long, otherwise the function returns FALSE."},{"type":"int","var":"$new_value","beh":1,"desc":"New value which will get assigned to variable pointer by key if a match is found. The value should be of type long, otherwise the function returns FALSE."}],"ret_type":"bool"}]},"wincache_ucache_clear":{"desc":"Deletes entire content of the user cache","long_desc":"Clears\/deletes all the values stored in the user cache.","ver":"PECL wincache >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.wincache-ucache-clear","name":"wincache_ucache_clear","params":[{"list":[],"ret_type":"bool"}]},"wincache_ucache_dec":{"desc":"Decrements the value associated with the key","long_desc":"Decrements the value associated with the key by 1 or as specified by dec_by.","ver":"PECL wincache >= 1.1.0","ret_desc":"Returns the decremented value on success and FALSE on failure.","seealso":[],"url":"function.wincache-ucache-dec","name":"wincache_ucache_dec","params":[{"list":[{"type":"string","var":"$key","beh":1,"desc":"The key that was used to store the variable in the cache. key is case sensitive."},{"type":"int","var":"$dec_by","beh":1,"desc":"The value by which the variable associated with the key will get decremented. If the argument is a floating point number it will be truncated to nearest integer. The variable associated with the key should be of type long, otherwise the function fails and returns FALSE.","def":1},{"type":"bool","var":"&$success","beh":1,"desc":"Will be set to TRUE on success and FALSE on failure."}],"ret_type":"mixed"}]},"wincache_ucache_delete":{"desc":"Deletes variables from the user cache","long_desc":"Deletes the elements in the user cache pointed by key.","ver":"PECL wincache >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.wincache-ucache-delete","name":"wincache_ucache_delete","params":[{"list":[],"ret_type":"bool"}]},"wincache_ucache_exists":{"desc":"Checks if a variable exists in the user cache","long_desc":"Checks if a variable with the key exists in the user cache or not.","ver":"PECL wincache >= 1.1.0","ret_desc":"Returns TRUE if variable with the key exitsts, otherwise returns FALSE.","seealso":[],"url":"function.wincache-ucache-exists","name":"wincache_ucache_exists","params":[{"list":[],"ret_type":"bool"}]},"wincache_ucache_get":{"desc":"Gets a variable stored in the user cache","long_desc":"Gets a variable stored in the user cache.","ver":"PECL wincache >= 1.1.0","ret_desc":"If key is a string, the function returns the value of the variable stored with that key. The success is set to TRUE on success and to FALSE on failure.","seealso":[],"url":"function.wincache-ucache-get","name":"wincache_ucache_get","params":[{"list":[{"type":"mixed","var":"$key","beh":0,"desc":"The key that was used to store the variable in the cache. key is case sensitive. key can be an array of keys. In this case the return value will be an array of values of each element in the key array. If an object, or an array containing objects, is returned, then the objects will be unserialized. See __wakeup() for details on unserializing objects."},{"type":"bool","var":"&$success","beh":1,"desc":"Will be set to TRUE on success and FALSE on failure."}],"ret_type":"mixed"}]},"wincache_ucache_inc":{"desc":"Increments the value associated with the key","long_desc":"Increments the value associated with the key by 1 or as specified by inc_by.","ver":"PECL wincache >= 1.1.0","ret_desc":"Returns the incremented value on success and FALSE on failure.","seealso":[],"url":"function.wincache-ucache-inc","name":"wincache_ucache_inc","params":[{"list":[{"type":"string","var":"$key","beh":1,"desc":"The key that was used to store the variable in the cache. key is case sensitive."},{"type":"int","var":"$inc_by","beh":1,"desc":"The value by which the variable associated with the key will get incremented. If the argument is a floating point number it will be truncated to nearest integer. The variable associated with the key should be of type long, otherwise the function fails and returns FALSE.","def":1},{"type":"bool","var":"&$success","beh":1,"desc":"Will be set to TRUE on success and FALSE on failure."}],"ret_type":"mixed"}]},"wincache_ucache_info":{"desc":"Retrieves information about data stored in the user cache","long_desc":"Retrieves information about data stored in the user cache.","ver":"PECL wincache >= 1.1.0","ret_desc":"Array of meta data about user cache or FALSE on failure","seealso":[],"url":"function.wincache-ucache-info","name":"wincache_ucache_info","params":[{"list":[{"type":"bool","var":"$summaryonly","beh":0,"desc":"Controls whether the returned array will contain information about individual cache entries along with the user cache summary.","def":"false"},{"type":"string","var":"$key","beh":1,"desc":"The key of an entry in the user cache. If specified then the returned array will contain information only about that cache entry. If not specified and summaryonly is set to FALSE then the returned array will contain information about all entries in the cache."}],"ret_type":"array"}]},"wincache_ucache_meminfo":{"desc":"Retrieves information about user cache memory usage","long_desc":"Retrieves information about memory usage by user cache.","ver":"PECL wincache >= 1.1.0","ret_desc":"Array of meta data about user cache memory usage or FALSE on failure","seealso":[],"url":"function.wincache-ucache-meminfo","name":"wincache_ucache_meminfo","params":[{"list":[],"ret_type":"array"}]},"wincache_ucache_set":{"desc":"Adds a variable in user cache and overwrites a variable if it already exists in the cache","long_desc":"Adds a variable in user cache. Overwrites a variable if it already exists in the cache. The added or updated variable remains in the user cache unless its time to live expires or it is deleted by using wincache_ucache_delete() or wincache_ucache_clear() functions.","ver":"PECL wincache >= 1.1.0","ret_desc":"If key is string, the function returns TRUE on success and FALSE on failure.","seealso":[],"url":"function.wincache-ucache-set","name":"wincache_ucache_set","params":[{"list":[{"type":"mixed","var":"$key","beh":0,"desc":"Store the variable using this key name. If a variable with same key is already present the function will overwrite the previous value with the new one. key is case sensitive. key can also take array of name => value pairs where names will be used as keys. This can be used to add multiple values in the cache in one operation, thus avoiding race condition."},{"type":"mixed","var":"$value","beh":1,"desc":"Value of a variable to store. Value supports all data types except resources, such as file handles. This paramter is ignored if first argument is an array. A general guidance is to pass NULL as value while using array as key. If value is an object, or an array containing objects, then the objects will be serialized. See __sleep() for details on serializing objects."},{"type":"int","var":"$ttl","beh":1,"desc":"Associative array of keys and values.","def":0}],"ret_type":"bool"},{"list":[{"type":"array","var":"$values","beh":1,"desc":"Store the variable using this key name. If a variable with same key is already present the function will overwrite the previous value with the new one. key is case sensitive. key can also take array of name => value pairs where names will be used as keys. This can be used to add multiple values in the cache in one operation, thus avoiding race condition."},{"type":"mixed","var":"$unused","beh":1,"desc":"Value of a variable to store. Value supports all data types except resources, such as file handles. This paramter is ignored if first argument is an array. A general guidance is to pass NULL as value while using array as key. If value is an object, or an array containing objects, then the objects will be serialized. See __sleep() for details on serializing objects."},{"type":"int","var":"$ttl","beh":1,"desc":"Associative array of keys and values.","def":0}],"ret_type":"bool"}]},"wincache_unlock":{"desc":"Releases an exclusive lock on a given key","long_desc":"Releases an exclusive lock that was obtained on a given key by using wincache_lock(). If any other process was blocked waiting for the lock on this key, that process will be able to obtain the lock.","ver":"PECL wincache >= 1.1.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.wincache-unlock","name":"wincache_unlock","params":[{"list":[],"ret_type":"bool"}]},"wordwrap":{"desc":"Wraps a string to a given number of characters","long_desc":"Wraps a string to a given number of characters using a string break character.","ver":"PHP 4 >= 4.0.2, PHP 5","ret_desc":"Returns the given string wrapped at the specified column.","seealso":[],"url":"function.wordwrap","name":"wordwrap","params":[{"list":[{"type":"string","var":"$str","beh":1,"desc":"The input string."},{"type":"int","var":"$width","beh":1,"desc":"The column width.","def":75},{"type":"string","var":"$break","beh":1,"desc":"The line is broken using the optional break parameter.","def":"\"\\n\""},{"type":"bool","var":"$cut","beh":1,"desc":"If the cut is set to TRUE, the string is always wrapped at or before the specified width. So if you have a word that is larger than the given width, it is broken apart. (See second example).","def":"false"}],"ret_type":"string"}]},"xattr_get":{"desc":"Get an extended attribute","long_desc":"This function gets the value of an extended attribute of a file. Extended attributes have two different namespaces: user and root. The user namespace is available to all users, while the root namespace is available only to users with root privileges. xattr operates on the user namespace by default, but this can be changed with the flags parameter.","ver":"PECL xattr >= 0.9.0","ret_desc":"Returns a string containing the value or FALSE if the attribute doesn't exist.","seealso":[],"url":"function.xattr-get","name":"xattr_get","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The file from which we get the attribute."},{"type":"string","var":"$name","beh":1,"desc":"The name of the attribute."},{"type":"int","var":"$flags","beh":1,"desc":"","def":0}],"ret_type":"string"}]},"xattr_list":{"desc":"Get a list of extended attributes","long_desc":"This functions gets a list of names of extended attributes of a file. Extended attributes have two different namespaces: user and root. The user namespace is available to all users, while the root namespace is available only to users with root privileges. xattr operates on the user namespace by default, but this can be changed with the flags parameter.","ver":"PECL xattr >= 0.9.0","ret_desc":"This function returns an array with names of extended attributes.","seealso":[],"url":"function.xattr-list","name":"xattr_list","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The path of the file."},{"type":"int","var":"$flags","beh":0,"desc":"","def":0}],"ret_type":"array"}]},"xattr_remove":{"desc":"Remove an extended attribute","long_desc":"This function removes an extended attribute of a file. Extended attributes have two different namespaces: user and root. The user namespace is available to all users, while the root namespace is available only to users with root privileges. xattr operates on the user namespace by default, but this can be changed with the flags parameter.","ver":"PECL xattr >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xattr-remove","name":"xattr_remove","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The file from which we remove the attribute."},{"type":"string","var":"$name","beh":1,"desc":"The name of the attribute to remove."},{"type":"int","var":"$flags","beh":1,"desc":"","def":0}],"ret_type":"bool"}]},"xattr_set":{"desc":"Set an extended attribute","long_desc":"This function sets the value of an extended attribute of a file. Extended attributes have two different namespaces: user and root. The user namespace is available to all users, while the root namespace is available only to users with root privileges. xattr operates on the user namespace by default, but this can be changed with the flags parameter.","ver":"PECL xattr >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xattr-set","name":"xattr_set","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The file in which we set the attribute."},{"type":"string","var":"$name","beh":1,"desc":"The name of the extended attribute. This attribute will be created if it doesn't exist or replaced otherwise. You can change this behaviour by using the flags parameter."},{"type":"string","var":"$value","beh":1,"desc":"The value of the attribute."},{"type":"int","var":"$flags","beh":1,"desc":"","def":0}],"ret_type":"bool"}]},"xattr_supported":{"desc":"Check if filesystem supports extended attributes","long_desc":"This functions checks if the filesystem holding the given file supports extended attributes. Read access to the file is required.","ver":"PECL xattr >= 1.0.0","ret_desc":"This function returns TRUE if filesystem supports extended attributes, FALSE if it doesn't and NULL if it can't be determined (for example wrong path or lack of permissions to file).","seealso":[],"url":"function.xattr-supported","name":"xattr_supported","params":[{"list":[{"type":"string","var":"$filename","beh":0,"desc":"The path of the tested file."},{"type":"int","var":"$flags","beh":0,"desc":"","def":0}],"ret_type":"bool"}]},"xdiff_file_bdiff":{"desc":"Make binary diff of two files","long_desc":"Makes a binary diff of two files and stores the result in a patch file. This function works with both text and binary files. Resulting patch file can be later applied using xdiff_file_bpatch()\/xdiff_string_bpatch().","ver":"PECL xdiff >= 1.5.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xdiff-file-bdiff","name":"xdiff_file_bdiff","params":[{"list":[{"type":"string","var":"$old_file","beh":0,"desc":"Path to the first file. This file acts as \"old\" file."},{"type":"string","var":"$new_file","beh":0,"desc":"Path to the second file. This file acts as \"new\" file."},{"type":"string","var":"$dest","beh":1,"desc":"Path of the resulting patch file. Resulting file contains differences between \"old\" and \"new\" files. It is in binary format and is human-unreadable."}],"ret_type":"bool"}]},"xdiff_file_bdiff_size":{"desc":"Read a size of file created by applying a binary diff","long_desc":"Returns a size of a result file that would be created after applying binary patch from file file to the original file.","ver":"PECL xdiff >= 1.5.0","ret_desc":"Returns the size of file that would be created.","seealso":[],"url":"function.xdiff-file-bdiff-size","name":"xdiff_file_bdiff_size","params":[{"list":[],"ret_type":"int"}]},"xdiff_file_bpatch":{"desc":"Patch a file with a binary diff","long_desc":"Patches a file with a binary patch and stores the result in a file dest. This function accepts patches created both via xdiff_file_bdiff() and xdiff_file_rabdiff() functions or their string counterparts.","ver":"PECL xdiff >= 1.5.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xdiff-file-bpatch","name":"xdiff_file_bpatch","params":[{"list":[{"type":"string","var":"$file","beh":0,"desc":"The original file."},{"type":"string","var":"$patch","beh":0,"desc":"The binary patch file."},{"type":"string","var":"$dest","beh":1,"desc":"Path of the resulting file."}],"ret_type":"bool"}]},"xdiff_file_diff":{"desc":"Make unified diff of two files","long_desc":"Makes an unified diff containing differences between old_file and new_file and stores it in dest file. The resulting file is human-readable. An optional context parameter specifies how many lines of context should be added around each change. Setting minimal parameter to true will result in outputting the shortest patch file possible (can take a long time).","ver":"PECL xdiff >= 0.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xdiff-file-diff","name":"xdiff_file_diff","params":[{"list":[{"type":"string","var":"$old_file","beh":1,"desc":"Path to the first file. This file acts as \"old\" file."},{"type":"string","var":"$new_file","beh":1,"desc":"Path to the second file. This file acts as \"new\" file."},{"type":"string","var":"$dest","beh":1,"desc":"Path of the resulting patch file."},{"type":"int","var":"$context","beh":1,"desc":"Indicates how many lines of context you want to include in diff result.","def":3},{"type":"bool","var":"$minimal","beh":1,"desc":"Set this parameter to TRUE if you want to minimalize size of the result (can take a long time).","def":"false"}],"ret_type":"bool"}]},"xdiff_file_diff_binary":{"desc":"Alias of xdiff_file_bdiff","long_desc":"Makes a binary diff of two files and stores the result in a patch file. This function works with both text and binary files. Resulting patch file can be later applied using xdiff_file_bpatch(). Starting with version 1.5.0 this function is an alias of xdiff_file_bdiff().","ver":"PECL xdiff >= 0.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xdiff-file-diff-binary","name":"xdiff_file_diff_binary","params":[{"list":[{"type":"string","var":"$old_file","beh":0,"desc":"Path to the first file. This file acts as \"old\" file."},{"type":"string","var":"$new_file","beh":0,"desc":"Path to the second file. This file acts as \"new\" file."},{"type":"string","var":"$dest","beh":1,"desc":"Path of the resulting patch file. Resulting file contains differences between \"old\" and \"new\" files. It is in binary format and is human-unreadable."}],"ret_type":"bool"}]},"xdiff_file_merge3":{"desc":"Merge 3 files into one","long_desc":"Merges three files into one and stores the result in a file dest. The old_file is an original version while new_file1 and new_file2 are modified versions of an original.","ver":"PECL xdiff >= 0.2.0","ret_desc":"Returns TRUE if merge was successful, string with rejected chunks if it was not or FALSE if an internal error happened.","seealso":[],"url":"function.xdiff-file-merge3","name":"xdiff_file_merge3","params":[{"list":[{"type":"string","var":"$old_file","beh":0,"desc":"Path to the first file. It acts as \"old\" file."},{"type":"string","var":"$new_file1","beh":0,"desc":"Path to the second file. It acts as modified version of old_file."},{"type":"string","var":"$new_file2","beh":1,"desc":"Path to the third file. It acts as modified version of old_file."},{"type":"string","var":"$dest","beh":1,"desc":"Path of the resulting file, containing merged changed from both new_file1 and new_file2."}],"ret_type":"mixed"}]},"xdiff_file_patch":{"desc":"Patch a file with an unified diff","long_desc":"Patches a file with a patch and stores the result in a file. patch has to be an unified diff created by xdiff_file_diff()\/xdiff_string_diff() function. An optional flags parameter specifies mode of operation.","ver":"PECL xdiff >= 0.2.0","ret_desc":"Returns FALSE if an internal error happened, string with rejected chunks if patch couldn't be applied or TRUE if patch has been successfully applied.","seealso":[],"url":"function.xdiff-file-patch","name":"xdiff_file_patch","params":[{"list":[{"type":"string","var":"$file","beh":0,"desc":"The original file."},{"type":"string","var":"$patch","beh":1,"desc":"The unified patch file. It has to be created using xdiff_string_diff(), xdiff_file_diff() functions or compatible tools."},{"type":"string","var":"$dest","beh":1,"desc":"Path of the resulting file."},{"type":"int","var":"$flags","beh":1,"desc":"Can be either XDIFF_PATCH_NORMAL (default mode, normal patch) or XDIFF_PATCH_REVERSE (reversed patch). Starting from version 1.5.0, you can also use binary OR to enable XDIFF_PATCH_IGNORESPACE flag.","def":"DIFF_PATCH_NORMAL"}],"ret_type":"mixed"}]},"xdiff_file_patch_binary":{"desc":"Alias of xdiff_file_bpatch","long_desc":"Patches a file with a binary patch and stores the result in a file dest. This function accepts patches created both via xdiff_file_bdiff() or xdiff_file_rabdiff() functions or their string counterparts. Starting with version 1.5.0 this function is an alias of xdiff_file_bpatch().","ver":"PECL xdiff >= 0.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xdiff-file-patch-binary","name":"xdiff_file_patch_binary","params":[{"list":[{"type":"string","var":"$file","beh":0,"desc":"The original file."},{"type":"string","var":"$patch","beh":0,"desc":"The binary patch file."},{"type":"string","var":"$dest","beh":1,"desc":"Path of the resulting file."}],"ret_type":"bool"}]},"xdiff_file_rabdiff":{"desc":"Make binary diff of two files using the Rabin's polynomial fingerprinting algorithm","long_desc":"Makes a binary diff of two files and stores the result in a patch file. The difference between this function and xdiff_file_bdiff() is different algorithm used which should result in faster execution and smaller diff produced. This function works with both text and binary files. Resulting patch file can be later applied using xdiff_file_bpatch()\/xdiff_string_bpatch(). For more details about differences between algorithm used please check \u00bb\u00a0libxdiff website.","ver":"PECL xdiff >= 1.5.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xdiff-file-rabdiff","name":"xdiff_file_rabdiff","params":[{"list":[{"type":"string","var":"$old_file","beh":0,"desc":"Path to the first file. This file acts as \"old\" file."},{"type":"string","var":"$new_file","beh":0,"desc":"Path to the second file. This file acts as \"new\" file."},{"type":"string","var":"$dest","beh":1,"desc":"Path of the resulting patch file. Resulting file contains differences between \"old\" and \"new\" files. It is in binary format and is human-unreadable."}],"ret_type":"bool"}]},"xdiff_string_bdiff":{"desc":"Make binary diff of two strings","long_desc":"Makes a binary diff of two strings and returns the result. This function works with both text and binary data. Resulting patch can be later applied using xdiff_string_bpatch()\/xdiff_file_bpatch().","ver":"PECL xdiff >= 1.5.0","ret_desc":"Returns string with binary diff containing differences between \"old\" and \"new\" data or FALSE if an internal error occurred.","seealso":[],"url":"function.xdiff-string-bdiff","name":"xdiff_string_bdiff","params":[{"list":[{"type":"string","var":"$old_data","beh":0,"desc":"First string with binary data. It acts as \"old\" data."},{"type":"string","var":"$new_data","beh":0,"desc":"Second string with binary data. It acts as \"new\" data."}],"ret_type":"string"}]},"xdiff_string_bdiff_size":{"desc":"Read a size of file created by applying a binary diff","long_desc":"Returns a size of a result file that would be created after applying binary patch to the original file.","ver":"PECL xdiff >= 1.5.0","ret_desc":"Returns the size of file that would be created.","seealso":[],"url":"function.xdiff-string-bdiff-size","name":"xdiff_string_bdiff_size","params":[{"list":[],"ret_type":"int"}]},"xdiff_string_bpatch":{"desc":"Patch a string with a binary diff","long_desc":"Patches a string str with a binary patch. This function accepts patches created both via xdiff_string_bdiff() and xdiff_string_rabdiff() functions or their file counterparts.","ver":"PECL xdiff >= 1.5.0","ret_desc":"Returns the patched string, or FALSE on error.","seealso":[],"url":"function.xdiff-string-bpatch","name":"xdiff_string_bpatch","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The original binary string."},{"type":"string","var":"$patch","beh":0,"desc":"The binary patch string."}],"ret_type":"string"}]},"xdiff_string_diff":{"desc":"Make unified diff of two strings","long_desc":"Makes an unified diff containing differences between old_data string and new_data string and returns it. The resulting diff is human-readable. An optional context parameter specifies how many lines of context should be added around each change. Setting minimal parameter to true will result in outputting the shortest patch file possible (can take a long time).","ver":"PECL xdiff >= 0.2.0","ret_desc":"Returns string with resulting diff or FALSE if an internal error happened.","seealso":[],"url":"function.xdiff-string-diff","name":"xdiff_string_diff","params":[{"list":[{"type":"string","var":"$old_data","beh":1,"desc":"First string with data. It acts as \"old\" data."},{"type":"string","var":"$new_data","beh":1,"desc":"Second string with data. It acts as \"new\" data."},{"type":"int","var":"$context","beh":1,"desc":"Indicates how many lines of context you want to include in the diff result.","def":3},{"type":"bool","var":"$minimal","beh":1,"desc":"Set this parameter to TRUE if you want to minimalize the size of the result (can take a long time).","def":"false"}],"ret_type":"string"}]},"xdiff_string_diff_binary":{"desc":"Alias of xdiff_string_bdiff","long_desc":"Makes a binary diff of two strings and returns the result. This function works with both text and binary data. Resulting patch can be later applied using xdiff_string_bpatch()\/xdiff_file_bpatch(). Starting with version 1.5.0 this function is an alias of xdiff_string_bdiff().","ver":"PECL xdiff >= 0.2.0","ret_desc":"Returns string with result or FALSE if an internal error happened.","seealso":[],"url":"function.xdiff-string-diff-binary","name":"xdiff_string_diff_binary","params":[{"list":[{"type":"string","var":"$old_data","beh":0,"desc":"First string with binary data. It acts as \"old\" data."},{"type":"string","var":"$new_data","beh":0,"desc":"Second string with binary data. It acts as \"new\" data."}],"ret_type":"string"}]},"xdiff_string_merge3":{"desc":"Merge 3 strings into one","long_desc":"Merges three strings into one and returns the result. The old_data is an original version of data while new_file1 and new_file2 are modified versions of an original. An optional error is used to pass any rejected parts during merging process.","ver":"PECL xdiff >= 0.2.0","ret_desc":"Returns the merged string, FALSE if an internal error happened, or TRUE if merged string is empty.","seealso":[],"url":"function.xdiff-string-merge3","name":"xdiff_string_merge3","params":[{"list":[{"type":"string","var":"$old_data","beh":0,"desc":"First string with data. It acts as \"old\" data."},{"type":"string","var":"$new_data1","beh":1,"desc":"Second string with data. It acts as modified version of old_data."},{"type":"string","var":"$new_data2","beh":1,"desc":"Third string with data. It acts as modified version of old_data."},{"type":"string","var":"&$error","beh":1,"desc":"If provided then rejected parts are stored inside this variable."}],"ret_type":"mixed"}]},"xdiff_string_patch":{"desc":"Patch a string with an unified diff","long_desc":"Patches a str string with an unified patch in patch parameter and returns the result. patch has to be an unified diff created by xdiff_file_diff()\/xdiff_string_diff() function. An optional flags parameter specifies mode of operation. Any rejected parts of the patch will be stored inside error variable if it is provided.","ver":"PECL xdiff >= 0.2.0","ret_desc":"Returns the patched string, or FALSE on error.","seealso":[],"url":"function.xdiff-string-patch","name":"xdiff_string_patch","params":[{"list":[{"type":"string","var":"$str","beh":1,"desc":"The original string."},{"type":"string","var":"$patch","beh":1,"desc":"The unified patch string. It has to be created using xdiff_string_diff(), xdiff_file_diff() functions or compatible tools."},{"type":"int","var":"$flags","beh":1,"desc":"flags can be either XDIFF_PATCH_NORMAL (default mode, normal patch) or XDIFF_PATCH_REVERSE (reversed patch). Starting from version 1.5.0, you can also use binary OR to enable XDIFF_PATCH_IGNORESPACE flag."},{"type":"string","var":"&$error","beh":1,"desc":"If provided then rejected parts are stored inside this variable."}],"ret_type":"string"}]},"xdiff_string_patch_binary":{"desc":"Alias of xdiff_string_bpatch","long_desc":"Patches a string str with a binary patch. This function accepts patches created both via xdiff_string_bdiff() and xdiff_string_rabdiff() functions or their file counterparts. Starting with version 1.5.0 this function is an alias of xdiff_string_bpatch().","ver":"PECL xdiff >= 0.2.0","ret_desc":"Returns the patched string, or FALSE on error.","seealso":[],"url":"function.xdiff-string-patch-binary","name":"xdiff_string_patch_binary","params":[{"list":[{"type":"string","var":"$str","beh":0,"desc":"The original binary string."},{"type":"string","var":"$patch","beh":0,"desc":"The binary patch string."}],"ret_type":"string"}]},"xdiff_string_rabdiff":{"desc":"Make binary diff of two strings using the Rabin's polynomial fingerprinting algorithm","long_desc":"Makes a binary diff of two strings and returns the result. The difference between this function and xdiff_string_bdiff() is different algorithm used which should result in faster execution and smaller diff produced. This function works with both text and binary data. Resulting patch can be later applied using xdiff_string_bpatch()\/xdiff_file_bpatch(). For more details about differences between algorithm used please check \u00bb\u00a0libxdiff website.","ver":"PECL xdiff >= 1.5.0","ret_desc":"Returns string with binary diff containing differences between \"old\" and \"new\" data or FALSE if an internal error occurred.","seealso":[],"url":"function.xdiff-string-rabdiff","name":"xdiff_string_rabdiff","params":[{"list":[{"type":"string","var":"$old_data","beh":0,"desc":"First string with binary data. It acts as \"old\" data."},{"type":"string","var":"$new_data","beh":0,"desc":"Second string with binary data. It acts as \"new\" data."}],"ret_type":"string"}]},"xhprof_disable":{"desc":"Stops xhprof profiler","long_desc":"Stops the profiler, and returns xhprof data from the run.","ver":"PECL xhprof >= 0.9.0","ret_desc":"An array of xhprof data, from the run.","url":"function.xhprof-disable","name":"xhprof_disable","params":[{"list":[],"ret_type":"array"}]},"xhprof_enable":{"desc":"Start xhprof profiler","long_desc":"Start xhprof profiling.","ver":"PECL xhprof >= 0.9.0","ret_desc":"NULL","seealso":[],"url":"function.xhprof-enable","name":"xhprof_enable","params":[{"list":[{"type":"int","var":"$flags","beh":0,"desc":"Optional flags to add additional information to the profiling. See the XHprof constants for further information about these flags, e.g., XHPROF_FLAGS_MEMORY to enable memory profiling.","def":0},{"type":"array","var":"$options","beh":1,"desc":"An array of optional options, namely, the 'ignored_functions' option to pass in functions to be ignored during profiling."}],"ret_type":"void"}]},"xhprof_sample_disable":{"desc":"Stops xhprof sample profiler","long_desc":"Stops the sample mode xhprof profiler, and","ver":"PECL xhprof >= 0.9.0","ret_desc":"An array of xhprof sample data, from the run.","url":"function.xhprof-sample-disable","name":"xhprof_sample_disable","params":[{"list":[],"ret_type":"array"}]},"xhprof_sample_enable":{"desc":"Description","long_desc":"Starts profiling in sample mode, which is a lighter weight version of xhprof_enable(). The sampling interval is 0.1 seconds, and samples record the full function call stack. The main use case is when lower overhead is required when doing performance monitoring and diagnostics.","ver":"PECL xhprof >= 0.9.0","ret_desc":"NULL","seealso":[],"url":"function.xhprof-sample-enable","name":"xhprof_sample_enable","params":[{"list":[],"ret_type":"void"}]},"xml_error_string":{"desc":"Get XML parser error string","long_desc":"Gets the XML parser error string associated with the given code.","ver":"PHP 4, PHP 5","ret_desc":"Returns a string with a textual description of the error code, or FALSE if no description was found.","seealso":[],"url":"function.xml-error-string","name":"xml_error_string","params":[{"list":[],"ret_type":"string"}]},"xml_get_current_byte_index":{"desc":"Get current byte index for an XML parser","long_desc":"Gets the current byte index of the given XML parser.","ver":"PHP 4, PHP 5","ret_desc":"This function returns FALSE if parser does not refer to a valid parser, or else it returns which byte index the parser is currently at in its data buffer (starting at 0).","seealso":[],"url":"function.xml-get-current-byte-index","name":"xml_get_current_byte_index","params":[{"list":[],"ret_type":"int"}]},"xml_get_current_column_number":{"desc":"Get current column number for an XML parser","long_desc":"Gets the current column number of the given XML parser.","ver":"PHP 4, PHP 5","ret_desc":"This function returns FALSE if parser does not refer to a valid parser, or else it returns which column on the current line (as given by xml_get_current_line_number()) the parser is currently at.","seealso":[],"url":"function.xml-get-current-column-number","name":"xml_get_current_column_number","params":[{"list":[],"ret_type":"int"}]},"xml_get_current_line_number":{"desc":"Get current line number for an XML parser","long_desc":"Gets the current line number for the given XML parser.","ver":"PHP 4, PHP 5","ret_desc":"This function returns FALSE if parser does not refer to a valid parser, or else it returns which line the parser is currently at in its data buffer.","seealso":[],"url":"function.xml-get-current-line-number","name":"xml_get_current_line_number","params":[{"list":[],"ret_type":"int"}]},"xml_get_error_code":{"desc":"Get XML parser error code","long_desc":"Gets the XML parser error code.","ver":"PHP 4, PHP 5","ret_desc":"This function returns FALSE if parser does not refer to a valid parser, or else it returns one of the error codes listed in the error codes section.","seealso":[],"url":"function.xml-get-error-code","name":"xml_get_error_code","params":[{"list":[],"ret_type":"int"}]},"xml_parse":{"desc":"Start parsing an XML document","long_desc":"xml_parse() parses an XML document. The handlers for the configured events are called as many times as necessary.","ver":"PHP 4, PHP 5","ret_desc":"Returns 1 on success or 0 on failure.","url":"function.xml-parse","name":"xml_parse","params":[{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to use."},{"type":"string","var":"$data","beh":1,"desc":"Chunk of data to parse. A document may be parsed piece-wise by calling xml_parse() several times with new data, as long as the is_final parameter is set and TRUE when the last data is parsed."},{"type":"bool","var":"$is_final","beh":1,"desc":"If set and TRUE, data is the last piece of data sent in this parse.","def":"false"}],"ret_type":"int"}]},"xml_parse_into_struct":{"desc":"Parse XML data into an array structure","long_desc":"This function parses an XML string into 2 parallel array structures, one (index) containing pointers to the location of the appropriate values in the values array. These last two parameters must be passed by reference.","ver":"PHP 4, PHP 5","ret_desc":"xml_parse_into_struct() returns 0 for failure and 1 for success. This is not the same as FALSE and TRUE, be careful with operators such as ===.","url":"function.xml-parse-into-struct","name":"xml_parse_into_struct","params":[{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser."},{"type":"string","var":"$data","beh":1,"desc":"A string containing the XML data."},{"type":"array","var":"&$values","beh":1,"desc":"An array containing the values of the XML data"},{"type":"array","var":"&$index","beh":1,"desc":"An array containing pointers to the location of the appropriate values in the $values."}],"ret_type":"int"}]},"xml_parser_create":{"desc":"Create an XML parser","long_desc":"xml_parser_create() creates a new XML parser and returns a resource handle referencing it to be used by the other XML functions.","ver":"PHP 4, PHP 5","ret_desc":"Returns a resource handle for the new XML parser.","seealso":[],"url":"function.xml-parser-create","name":"xml_parser_create","params":[{"list":[],"ret_type":"resource"}]},"xml_parser_create_ns":{"desc":"Create an XML parser with namespace support","long_desc":"xml_parser_create_ns() creates a new XML parser with XML namespace support and returns a resource handle referencing it to be used by the other XML functions.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns a resource handle for the new XML parser.","seealso":[],"url":"function.xml-parser-create-ns","name":"xml_parser_create_ns","params":[{"list":[{"type":"string","var":"$encoding","beh":1,"desc":"The optional encoding specifies the character encoding for the input\/output in PHP 4. Starting from PHP 5, the input encoding is automatically detected, so that the encoding parameter specifies only the output encoding. In PHP 4, the default output encoding is the same as the input charset. In PHP 5.0.0 and 5.0.1, the default output charset is ISO-8859-1, while in PHP 5.0.2 and upper is UTF-8. The supported encodings are ISO-8859-1, UTF-8 and US-ASCII."},{"type":"string","var":"$separator","beh":1,"desc":"With a namespace aware parser tag parameters passed to the various handler functions will consist of namespace and tag name separated by the string specified in seperator.","def":"':'"}],"ret_type":"resource"}]},"xml_parser_free":{"desc":"Free an XML parser","long_desc":"Frees the given XML parser.","ver":"PHP 4, PHP 5","ret_desc":"This function returns FALSE if parser does not refer to a valid parser, or else it frees the parser and returns TRUE.","url":"function.xml-parser-free","name":"xml_parser_free","params":[{"list":[],"ret_type":"bool"}]},"xml_parser_get_option":{"desc":"Get options from an XML parser","long_desc":"Gets an option value from an XML parser.","ver":"PHP 4, PHP 5","ret_desc":"This function returns FALSE if parser does not refer to a valid parser or if option isn't valid (generates also a E_WARNING). Else the option's value is returned.","url":"function.xml-parser-get-option","name":"xml_parser_get_option","params":[{"list":[{"type":"resource","var":"$parser","beh":0,"desc":""},{"type":"int","var":"$option","beh":0,"desc":""}],"ret_type":"mixed"}]},"xml_parser_set_option":{"desc":"Set options in an XML parser","long_desc":"Sets an option in an XML parser.","ver":"PHP 4, PHP 5","ret_desc":"This function returns FALSE if parser does not refer to a valid parser, or if the option could not be set. Else the option is set and TRUE is returned.","url":"function.xml-parser-set-option","name":"xml_parser_set_option","params":[{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set an option in."},{"type":"int","var":"$option","beh":0,"desc":"Which option to set. See below. The following options are available:"},{"type":"mixed","var":"$value","beh":1,"desc":"The option's new value."}],"ret_type":"bool"}]},"xml_set_character_data_handler":{"desc":"Set up character data handler","long_desc":"Sets the character data handler function for the XML parser parser.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.xml-set-character-data-handler","name":"xml_set_character_data_handler","params":[{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set up character data handler function."},{"type":"callable","var":"$handler","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept two parameters: Character data handler is called for every piece of a text in the XML document. It can be called multiple times inside each fragment (e.g. for non-ASCII strings). If a handler function is set to an empty string, or FALSE, the handler in question is disabled."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set up character data handler function."},{"type":"string","var":"$data","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept two parameters: Character data handler is called for every piece of a text in the XML document. It can be called multiple times inside each fragment (e.g. for non-ASCII strings). If a handler function is set to an empty string, or FALSE, the handler in question is disabled."}]}]},"xml_set_default_handler":{"desc":"Set up default handler","long_desc":"Sets the default handler function for the XML parser parser.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.xml-set-default-handler","name":"xml_set_default_handler","params":[{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set up default handler function."},{"type":"callable","var":"$handler","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept two parameters: If a handler function is set to an empty string, or FALSE, the handler in question is disabled."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set up default handler function."},{"type":"string","var":"$data","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept two parameters: If a handler function is set to an empty string, or FALSE, the handler in question is disabled."}]}]},"xml_set_element_handler":{"desc":"Set up start and end element handlers","long_desc":"Sets the element handler functions for the XML parser. start_element_handler and end_element_handler are strings containing the names of functions that must exist when xml_parse() is called for parser.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.xml-set-element-handler","name":"xml_set_element_handler","params":[{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set up start and end element handler functions."},{"type":"callable","var":"$start_element_handler","beh":0,"desc":"The function named by start_element_handler must accept three parameters:"},{"type":"callable","var":"$end_element_handler","beh":1,"desc":""}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set up start and end element handler functions."},{"type":"string","var":"$name","beh":0,"desc":"The function named by start_element_handler must accept three parameters:"},{"type":"array","var":"$attribs","beh":1,"desc":""}]},{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set up start and end element handler functions."},{"type":"string","var":"$name","beh":0,"desc":"The function named by start_element_handler must accept three parameters:"}]}]},"xml_set_end_namespace_decl_handler":{"desc":"Set up end namespace declaration handler","long_desc":"Set a handler to be called when leaving the scope of a namespace declaration. This will be called, for each namespace declaration, after the handler for the end tag of the element in which the namespace was declared.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xml-set-end-namespace-decl-handler","name":"xml_set_end_namespace_decl_handler","params":[{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser."},{"type":"callable","var":"$handler","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept two parameters, and should return an integer value. If the value returned from the handler is FALSE (which it will be if no value is returned), the XML parser will stop parsing and xml_get_error_code() will return XML_ERROR_EXTERNAL_ENTITY_HANDLING. If a handler function is set to an empty string, or FALSE, the handler in question is disabled."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser."},{"type":"string","var":"$prefix","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept two parameters, and should return an integer value. If the value returned from the handler is FALSE (which it will be if no value is returned), the XML parser will stop parsing and xml_get_error_code() will return XML_ERROR_EXTERNAL_ENTITY_HANDLING. If a handler function is set to an empty string, or FALSE, the handler in question is disabled."}]}]},"xml_set_external_entity_ref_handler":{"desc":"Set up external entity reference handler","long_desc":"Sets the external entity reference handler function for the XML parser parser.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.xml-set-external-entity-ref-handler","name":"xml_set_external_entity_ref_handler","params":[{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set up external entity reference handler function."},{"type":"callable","var":"$handler","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept five parameters, and should return an integer value.If the value returned from the handler is FALSE (which it will be if no value is returned), the XML parser will stop parsing and xml_get_error_code() will return XML_ERROR_EXTERNAL_ENTITY_HANDLING. If a handler function is set to an empty string, or FALSE, the handler in question is disabled."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set up external entity reference handler function."},{"type":"string","var":"$open_entity_names","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept five parameters, and should return an integer value.If the value returned from the handler is FALSE (which it will be if no value is returned), the XML parser will stop parsing and xml_get_error_code() will return XML_ERROR_EXTERNAL_ENTITY_HANDLING. If a handler function is set to an empty string, or FALSE, the handler in question is disabled."},{"type":"string","var":"$base","beh":1,"desc":""},{"type":"string","var":"$system_id","beh":1,"desc":""},{"type":"string","var":"$public_id","beh":1,"desc":""}]}]},"xml_set_notation_decl_handler":{"desc":"Set up notation declaration handler","long_desc":"Sets the notation declaration handler function for the XML parser parser. A notation declaration is part of the document's DTD and has the following format:","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.xml-set-notation-decl-handler","name":"xml_set_notation_decl_handler","params":[{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set up notation declaration handler function."},{"type":"callable","var":"$handler","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept five parameters: If a handler function is set to an empty string, or FALSE, the handler in question is disabled."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set up notation declaration handler function."},{"type":"string","var":"$notation_name","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept five parameters: If a handler function is set to an empty string, or FALSE, the handler in question is disabled."},{"type":"string","var":"$base","beh":1,"desc":""},{"type":"string","var":"$system_id","beh":1,"desc":""},{"type":"string","var":"$public_id","beh":1,"desc":""}]}]},"xml_set_object":{"desc":"Use XML Parser within an object","long_desc":"This function allows to use parser inside object. All callback functions could be set with xml_set_element_handler() etc and assumed to be methods of object.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.xml-set-object","name":"xml_set_object","params":[{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to use inside the object."},{"type":"object","var":"&$object","beh":0,"desc":"The object where to use the XML parser."}],"ret_type":"bool"}]},"xml_set_processing_instruction_handler":{"desc":"Set up processing instruction (PI) handler","long_desc":"Sets the processing instruction (PI) handler function for the XML parser parser. A processing instruction has the following format:","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.xml-set-processing-instruction-handler","name":"xml_set_processing_instruction_handler","params":[{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set up processing instruction (PI) handler function."},{"type":"callable","var":"$handler","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept three parameters: If a handler function is set to an empty string, or FALSE, the handler in question is disabled."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set up processing instruction (PI) handler function."},{"type":"string","var":"$target","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept three parameters: If a handler function is set to an empty string, or FALSE, the handler in question is disabled."},{"type":"string","var":"$data","beh":1,"desc":""}]}]},"xml_set_start_namespace_decl_handler":{"desc":"Set up start namespace declaration handler","long_desc":"Set a handler to be called when a namespace is declared. Namespace declarations occur inside start tags. But the namespace declaration start handler is called before the start tag handler for each namespace declared in that start tag.","ver":"PHP 4 >= 4.0.5, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xml-set-start-namespace-decl-handler","name":"xml_set_start_namespace_decl_handler","params":[{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser."},{"type":"callable","var":"$handler","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept three parameters, and should return an integer value. If the value returned from the handler is FALSE (which it will be if no value is returned), the XML parser will stop parsing and xml_get_error_code() will return XML_ERROR_EXTERNAL_ENTITY_HANDLING. If a handler function is set to an empty string, or FALSE, the handler in question is disabled."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser."},{"type":"string","var":"$prefix","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept three parameters, and should return an integer value. If the value returned from the handler is FALSE (which it will be if no value is returned), the XML parser will stop parsing and xml_get_error_code() will return XML_ERROR_EXTERNAL_ENTITY_HANDLING. If a handler function is set to an empty string, or FALSE, the handler in question is disabled."},{"type":"string","var":"$uri","beh":1,"desc":""}]}]},"xml_set_unparsed_entity_decl_handler":{"desc":"Set up unparsed entity declaration handler","long_desc":"Sets the unparsed entity declaration handler function for the XML parser parser. The handler will be called if the XML parser encounters an external entity declaration with an NDATA declaration, like the following: See \u00bb\u00a0section 4.2.2 of the XML 1.0 spec for the definition of notation declared external entities.","ver":"PHP 4, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.xml-set-unparsed-entity-decl-handler","name":"xml_set_unparsed_entity_decl_handler","params":[{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set up unparsed entity declaration handler function."},{"type":"callable","var":"$handler","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept six parameters: If a handler function is set to an empty string, or FALSE, the handler in question is disabled."}],"ret_type":"bool"},{"list":[{"type":"resource","var":"$parser","beh":0,"desc":"A reference to the XML parser to set up unparsed entity declaration handler function."},{"type":"string","var":"$entity_name","beh":0,"desc":"handler is a string containing the name of a function that must exist when xml_parse() is called for parser. The function named by handler must accept six parameters: If a handler function is set to an empty string, or FALSE, the handler in question is disabled."},{"type":"string","var":"$base","beh":1,"desc":""},{"type":"string","var":"$system_id","beh":1,"desc":""},{"type":"string","var":"$public_id","beh":1,"desc":""},{"type":"string","var":"$notation_name","beh":1,"desc":""}]}]},"xmlreader":{"name":"XMLReader","class":"XMLReader"},"xmlrpc_decode":{"desc":"Decodes XML into native PHP types","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns either an array, or an integer, or a string, or a boolean according to the response returned by the XMLRPC method.","seealso":[],"url":"function.xmlrpc-decode","name":"xmlrpc_decode","params":[{"list":[{"type":"string","var":"$xml","beh":0,"desc":"XML response returned by XMLRPC method."},{"type":"string","var":"$encoding","beh":0,"desc":"Input encoding supported by iconv.","def":"\"iso-8859-1\""}],"ret_type":"mixed"}]},"xmlrpc_decode_request":{"desc":"Decodes XML into native PHP types","ver":"PHP 4 >= 4.1.0, PHP 5","url":"function.xmlrpc-decode-request","name":"xmlrpc_decode_request","params":[{"list":[{"type":"string","var":"$xml","beh":0,"desc":""},{"type":"string","var":"&$method","beh":1,"desc":""},{"type":"string","var":"$encoding","beh":1,"desc":""}],"ret_type":"mixed"}]},"xmlrpc_encode":{"desc":"Generates XML for a PHP value","ver":"PHP 4 >= 4.1.0, PHP 5","url":"function.xmlrpc-encode","name":"xmlrpc_encode","params":[{"list":[],"ret_type":"string"}]},"xmlrpc_encode_request":{"desc":"Generates XML for a method request","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns a string containing the XML representation of the request.","seealso":[],"url":"function.xmlrpc-encode-request","name":"xmlrpc_encode_request","params":[{"list":[{"type":"string","var":"$method","beh":0,"desc":"Name of the method to call."},{"type":"mixed","var":"$params","beh":1,"desc":"Method parameters compatible with method signature."},{"type":"array","var":"$output_options","beh":1,"desc":"Array specifying output options may contain (default values are emphasised):"}],"ret_type":"string"}]},"xmlrpc_get_type":{"desc":"Gets xmlrpc type for a PHP value","long_desc":"This function is especially useful for base64 and datetime strings.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns the XML-RPC type.","seealso":[],"url":"function.xmlrpc-get-type","name":"xmlrpc_get_type","params":[{"list":[],"ret_type":"string"}]},"xmlrpc_is_fault":{"desc":"Determines if an array value represents an XMLRPC fault","ver":"PHP 4 >= 4.3.0, PHP 5","ret_desc":"Returns TRUE if the argument means fault, FALSE otherwise. Fault description is available in $arg[\"faultString\"], fault code is in $arg[\"faultCode\"].","seealso":[],"url":"function.xmlrpc-is-fault","name":"xmlrpc_is_fault","params":[{"list":[],"ret_type":"bool"}]},"xmlrpc_parse_method_descriptions":{"desc":"Decodes XML into a list of method descriptions","ver":"PHP 4 >= 4.1.0, PHP 5","url":"function.xmlrpc-parse-method-descriptions","name":"xmlrpc_parse_method_descriptions","params":[{"list":[],"ret_type":"array"}]},"xmlrpc_server_add_introspection_data":{"desc":"Adds introspection documentation","ver":"PHP 4 >= 4.1.0, PHP 5","url":"function.xmlrpc-server-add-introspection-data","name":"xmlrpc_server_add_introspection_data","params":[{"list":[{"type":"resource","var":"$server","beh":0,"desc":""},{"type":"array","var":"$desc","beh":0,"desc":""}],"ret_type":"int"}]},"xmlrpc_server_call_method":{"desc":"Parses XML requests and call methods","ver":"PHP 4 >= 4.1.0, PHP 5","url":"function.xmlrpc-server-call-method","name":"xmlrpc_server_call_method","params":[{"list":[{"type":"resource","var":"$server","beh":0,"desc":""},{"type":"string","var":"$xml","beh":1,"desc":""},{"type":"mixed","var":"$user_data","beh":1,"desc":""},{"type":"array","var":"$output_options","beh":1,"desc":""}],"ret_type":"string"}]},"xmlrpc_server_create":{"desc":"Creates an xmlrpc server","ver":"PHP 4 >= 4.1.0, PHP 5","url":"function.xmlrpc-server-create","name":"xmlrpc_server_create","params":[{"list":[],"ret_type":"resource"}]},"xmlrpc_server_destroy":{"desc":"Destroys server resources","ver":"PHP 4 >= 4.1.0, PHP 5","url":"function.xmlrpc-server-destroy","name":"xmlrpc_server_destroy","params":[{"list":[],"ret_type":"int"}]},"xmlrpc_server_register_introspection_callback":{"desc":"Register a PHP function to generate documentation","ver":"PHP 4 >= 4.1.0, PHP 5","url":"function.xmlrpc-server-register-introspection-callback","name":"xmlrpc_server_register_introspection_callback","params":[{"list":[{"type":"resource","var":"$server","beh":0,"desc":""},{"type":"string","var":"$function","beh":0,"desc":""}],"ret_type":"bool"}]},"xmlrpc_server_register_method":{"desc":"Register a PHP function to resource method matching method_name","ver":"PHP 4 >= 4.1.0, PHP 5","url":"function.xmlrpc-server-register-method","name":"xmlrpc_server_register_method","params":[{"list":[{"type":"resource","var":"$server","beh":0,"desc":""},{"type":"string","var":"$method_name","beh":0,"desc":""},{"type":"string","var":"$function","beh":1,"desc":""}],"ret_type":"bool"}]},"xmlrpc_set_type":{"desc":"Sets xmlrpc type, base64 or datetime, for a PHP string value","long_desc":"Sets xmlrpc type, base64 or datetime, for a PHP string value.","ver":"PHP 4 >= 4.1.0, PHP 5","ret_desc":"Returns TRUE on success or FALSE on failure. If successful, value is converted to an object.","url":"function.xmlrpc-set-type","name":"xmlrpc_set_type","params":[{"list":[{"type":"string","var":"&$value","beh":0,"desc":"Value to set the type"},{"type":"string","var":"$type","beh":0,"desc":"'base64' or 'datetime'"}],"ret_type":"bool"}]},"xmlwriter":{"name":"XMLWriter","class":"XMLWriter"},"xpath_eval":{"desc":"Evaluates the XPath Location Path in the given string","ver":"PHP 4","url":"function.xpath-eval","name":"xpath_eval","params":[{"list":[{"type":"string","var":"$xpath_expression","beh":0,"desc":""},{"type":"domnode","var":"$contextnode","beh":1,"desc":""}],"ret_type":"XPathObject"},{"list":[{"type":"XPathContext","var":"$xpath_context","beh":0,"desc":""},{"type":"string","var":"$xpath_expression","beh":1,"desc":""},{"type":"domnode","var":"$contextnode","beh":1,"desc":""}],"ret_type":"XPathObject"}]},"xpath_eval_expression":{"desc":"Evaluates the XPath Location Path in the given string","ver":"PHP 4","url":"function.xpath-eval-expression","name":"xpath_eval_expression","params":[{"list":[{"type":"string","var":"$expression","beh":0,"desc":""},{"type":"domnode","var":"$contextnode","beh":1,"desc":""}],"ret_type":"XPathObject"},{"list":[{"type":"XPathContext","var":"$xpath_context","beh":0,"desc":""},{"type":"string","var":"$expression","beh":1,"desc":""},{"type":"domnode","var":"$contextnode","beh":1,"desc":""}],"ret_type":"XPathObject"}]},"xpath_new_context":{"desc":"Creates new xpath context","long_desc":"Creates a new xpath context.","ver":"PHP 4","seealso":[],"url":"function.xpath-new-context","name":"xpath_new_context","params":[{"list":[],"ret_type":"XPathContext"}]},"xpath_register_ns":{"desc":"Register the given namespace in the passed XPath context","ver":"PHP 4 >= 4.2.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xpath-register-ns","name":"xpath_register_ns","params":[{"list":[{"type":"XPathContext","var":"$xpath_context","beh":0,"desc":""},{"type":"string","var":"$prefix","beh":0,"desc":""},{"type":"string","var":"$uri","beh":1,"desc":""}],"ret_type":"bool"}]},"xpath_register_ns_auto":{"desc":"Register the given namespace in the passed XPath context","ver":"PHP 4 >= 4.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.xpath-register-ns-auto","name":"xpath_register_ns_auto","params":[{"list":[{"type":"XPathContext","var":"$xpath_context","beh":0,"desc":""},{"type":"object","var":"$context_node","beh":1,"desc":""}],"ret_type":"bool"}]},"xptr_eval":{"desc":"Evaluate the XPtr Location Path in the given string","ver":"PHP 4","url":"function.xptr-eval","name":"xptr_eval","params":[{"list":[{"type":"string","var":"$eval_str","beh":0,"desc":""},{"type":"domnode","var":"$contextnode","beh":1,"desc":""}],"ret_type":"int"},{"list":[{"type":"XPathContext","var":"$xpath_context","beh":0,"desc":""},{"type":"string","var":"$eval_str","beh":1,"desc":""},{"type":"domnode","var":"$contextnode","beh":1,"desc":""}],"ret_type":"int"}]},"xptr_new_context":{"desc":"Create new XPath Context","long_desc":"","ver":"PHP 4","url":"function.xptr-new-context","name":"xptr_new_context","params":[{"list":[],"ret_type":"XPathContext"}]},"xslt_backend_info":{"desc":"Returns the information on the compilation settings of the backend","long_desc":"xslt_backend_info() gets information about the compilation settings of the backend.","ver":"PHP 4 >= 4.3.0","ret_desc":"Returns a string with information about the compilation setting of the backend or an error string when no information available.","seealso":[],"url":"function.xslt-backend-info","name":"xslt_backend_info","params":[{"list":[],"ret_type":"string"}]},"xslt_backend_name":{"desc":"Returns the name of the backend","long_desc":"xslt_backend_name() gets the name of the backend.","ver":"PHP 4 >= 4.3.0","ret_desc":"Returns Sablotron.","seealso":[],"url":"function.xslt-backend-name","name":"xslt_backend_name","params":[{"list":[],"ret_type":"string"}]},"xslt_backend_version":{"desc":"Returns the version number of Sablotron","long_desc":"xslt_backend_version() gets the version number of Sablotron.","ver":"PHP 4 >= 4.3.0","ret_desc":"Returns the version number, or FALSE if not available.","seealso":[],"url":"function.xslt-backend-version","name":"xslt_backend_version","params":[{"list":[],"ret_type":"string"}]},"xslt_create":{"desc":"Create a new XSLT processor","long_desc":"Create and return a new XSLT processor resource for manipulation by the other XSLT functions.","ver":"PHP 4 >= 4.0.3","ret_desc":"Returns an XSLT processor link identifier on success, or FALSE on error.","seealso":[],"url":"function.xslt-create","name":"xslt_create","params":[{"list":[],"ret_type":"resource"}]},"xslt_errno":{"desc":"Returns an error number","long_desc":"Returns an error code describing the last error that occurred on the passed XSLT processor.","ver":"PHP 4 >= 4.0.3","ret_desc":"Returns the error code, as an integer.","seealso":[],"url":"function.xslt-errno","name":"xslt_errno","params":[{"list":[],"ret_type":"int"}]},"xslt_error":{"desc":"Returns an error string","long_desc":"Returns a string describing the last error that occurred on the passed XSLT processor.","ver":"PHP 4 >= 4.0.3","ret_desc":"Returns the error message, as a string.","seealso":[],"url":"function.xslt-error","name":"xslt_error","params":[{"list":[],"ret_type":"string"}]},"xslt_free":{"desc":"Free XSLT processor","long_desc":"Free the XSLT processor identified by the given handle.","ver":"PHP 4 >= 4.0.3","ret_desc":"No value is returned.","seealso":[],"url":"function.xslt-free","name":"xslt_free","params":[{"list":[],"ret_type":"void"}]},"xslt_getopt":{"desc":"Get options on a given xsl processor","long_desc":"xslt_getopt() returns the options on the given processor.","ver":"PHP 4 >= 4.3.0","ret_desc":"Returns the options, a bitmask constructed with the XSLT_SABOPT_XXX constants.","seealso":[],"url":"function.xslt-getopt","name":"xslt_getopt","params":[{"list":[],"ret_type":"int"}]},"xslt_process":{"desc":"Perform an XSLT transformation","long_desc":"The xslt_process() function is the crux of the XSLT extension. It allows you to perform an XSLT transformation using almost any type of input source - the containers. This is accomplished through the use of argument buffers -- a concept taken from the Sablotron XSLT processor (currently the only XSLT processor this extension supports). The input containers default to a filename 'containing' the document to be processed.","ver":"PHP 4 >= 4.0.3","ret_desc":"Returns TRUE on success or FALSE on failure. If the result container is not specified - i.e. NULL - than the result is returned.","url":"function.xslt-process","name":"xslt_process","params":[{"list":[{"type":"resource","var":"$xh","beh":1,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"string","var":"$xmlcontainer","beh":1,"desc":"Path to XML file or placeholder for the XML argument."},{"type":"string","var":"$xslcontainer","beh":1,"desc":"Path to XSL file or placeholder for the XML argument."},{"type":"string","var":"$resultcontainer","beh":1,"desc":"The result container defaults to a filename for the transformed document. If the result container is not specified - i.e. NULL - than the result is returned."},{"type":"array","var":"$arguments","beh":1,"desc":"Instead of files as the XML and XSLT arguments to the xslt_process() function, you can specify \"argument place holders\" which are then substituted by values given in the arguments array."},{"type":"array","var":"$parameters","beh":1,"desc":"An array for any top-level parameters that will be passed to the XSLT document. These parameters can then be accessed within your XSL files using the <xsl:param name=\"parameter_name\"> instruction. The parameters must be UTF-8 encoded and their values will be interpreted as strings by the Sablotron processor. In other words - you cannot pass node-sets as parameters to the XSLT document."}],"ret_type":"mixed"}]},"xslt_set_base":{"desc":"Set the base URI for all XSLT transformations","long_desc":"Sets the base URI for all XSLT transformations, the base URI is used with Xpath instructions to resolve document() and other commands which access external resources. It is also used to resolve URIs for the <xsl:include> and <xsl:import> elements.","ver":"PHP 4 >= 4.0.5","ret_desc":"No value is returned.","url":"function.xslt-set-base","name":"xslt_set_base","params":[{"list":[{"type":"resource","var":"$xh","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"string","var":"$uri","beh":0,"desc":"The base URI to be used."}],"ret_type":"void"}]},"xslt_set_encoding":{"desc":"Set the encoding for the parsing of XML documents","long_desc":"Set the output encoding for the XSLT transformations. When using the Sablotron backend, this option is only available when you compile Sablotron with encoding support.","ver":"PHP 4 >= 4.0.5","ret_desc":"No value is returned.","url":"function.xslt-set-encoding","name":"xslt_set_encoding","params":[{"list":[{"type":"resource","var":"$xh","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"string","var":"$encoding","beh":0,"desc":"An output encoding, e.g iso-8859-1."}],"ret_type":"void"}]},"xslt_set_error_handler":{"desc":"Set an error handler for a XSLT processor","long_desc":"Set an error handler function for the XSLT processor given by xh, this function will be called whenever an error occurs in the XSLT transformation (this function is also called for notices).","ver":"PHP 4 >= 4.0.4","ret_desc":"No value is returned.","seealso":[],"url":"function.xslt-set-error-handler","name":"xslt_set_error_handler","params":[{"list":[{"type":"resource","var":"$xh","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"mixed","var":"$handler","beh":0,"desc":"The user function needs to accept four parameters: the XSLT processor, the error level, the error code and an array of messages. The function can be shown as:"}],"ret_type":"void"},{"list":[{"type":"resource","var":"$xh","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"int","var":"$error_level","beh":0,"desc":"The user function needs to accept four parameters: the XSLT processor, the error level, the error code and an array of messages. The function can be shown as:"},{"type":"int","var":"$error_code","beh":1,"desc":""},{"type":"array","var":"$messages","beh":1,"desc":""}]}]},"xslt_set_log":{"desc":"Set the log file to write log messages to","long_desc":"This function allows you to set the file in which you want XSLT log messages to, XSLT log messages are different than error messages, in that log messages are not actually error messages but rather messages related to the state of the XSLT processor. They are useful for debugging XSLT, when something goes wrong. By default logging is disabled, in order to enable logging you must first call xslt_set_log() with a boolean parameter which enables logging, then if you want to set the log file to debug to, you must then pass it a string containing the filename.","ver":"PHP 4 >= 4.0.6","ret_desc":"No value is returned.","url":"function.xslt-set-log","name":"xslt_set_log","params":[{"list":[{"type":"resource","var":"$xh","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"mixed","var":"$log","beh":1,"desc":"This parameter is either a boolean value which toggles logging on and off, or a string containing the logfile in which log errors too."}],"ret_type":"void"}]},"xslt_set_object":{"desc":"Sets the object in which to resolve callback functions","long_desc":"This function allows to use the processor inside an object and to resolve all callback functions in it. The callback functions can be declared with xslt_set_sax_handlers(), xslt_set_scheme_handlers() or xslt_set_error_handler() and are assumed to be methods of object.","ver":"PHP 4 >= 4.3.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.xslt-set-object","name":"xslt_set_object","params":[{"list":[{"type":"resource","var":"$processor","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"object","var":"&$obj","beh":0,"desc":"An object."}],"ret_type":"bool"}]},"xslt_set_sax_handler":{"desc":"Set SAX handlers for a XSLT processor","long_desc":"Set SAX handlers on the resource handle given by xh.","ver":"PHP 4 >= 4.0.3","ret_desc":"No value is returned.","url":"function.xslt-set-sax-handler","name":"xslt_set_sax_handler","params":[{"list":[{"type":"resource","var":"$xh","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"array","var":"$handlers","beh":0,"desc":"SAX handlers should be a two dimensional array with the format (all top level elements are optional):"}],"ret_type":"void"}]},"xslt_set_sax_handlers":{"desc":"Set the SAX handlers to be called when the XML document gets processed","long_desc":"xslt_set_sax_handlers() registers the SAX handlers for the document, given a XSLT processor resource. Using xslt_set_sax_handlers() doesn't look very different than running a SAX parser like xml_parse() on the result of an xslt_process() transformation.","ver":"PHP 4 >= 4.0.6","ret_desc":"No value is returned.","url":"function.xslt-set-sax-handlers","name":"xslt_set_sax_handlers","params":[{"list":[{"type":"resource","var":"$processor","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"array","var":"$handlers","beh":0,"desc":"handlers should be an array in the following format: Each of the individual SAX handler functions are in the format below:"}],"ret_type":"void"},{"list":[]},{"list":[]},{"list":[{"type":"resource","var":"$processor","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"string","var":"$name","beh":0,"desc":"handlers should be an array in the following format: Each of the individual SAX handler functions are in the format below:"},{"type":"array","var":"$attributes","beh":1,"desc":""}]},{"list":[{"type":"resource","var":"$processor","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"string","var":"$name","beh":0,"desc":"handlers should be an array in the following format: Each of the individual SAX handler functions are in the format below:"}]},{"list":[{"type":"resource","var":"$processor","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"string","var":"$prefix","beh":0,"desc":"handlers should be an array in the following format: Each of the individual SAX handler functions are in the format below:"},{"type":"string","var":"$uri","beh":1,"desc":""}]},{"list":[{"type":"resource","var":"$processor","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"string","var":"$prefix","beh":0,"desc":"handlers should be an array in the following format: Each of the individual SAX handler functions are in the format below:"}]},{"list":[{"type":"resource","var":"$processor","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"string","var":"$contents","beh":0,"desc":"handlers should be an array in the following format: Each of the individual SAX handler functions are in the format below:"}]},{"list":[{"type":"resource","var":"$processor","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"string","var":"$target","beh":0,"desc":"handlers should be an array in the following format: Each of the individual SAX handler functions are in the format below:"},{"type":"string","var":"$contents","beh":1,"desc":""}]},{"list":[{"type":"resource","var":"$processor","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"string","var":"$contents","beh":0,"desc":"handlers should be an array in the following format: Each of the individual SAX handler functions are in the format below:"}]}]},"xslt_set_scheme_handler":{"desc":"Set Scheme handlers for a XSLT processor","long_desc":"Set Scheme handlers on the resource handle given by xh.","ver":"PHP 4 >= 4.0.5","ret_desc":"No value is returned.","url":"function.xslt-set-scheme-handler","name":"xslt_set_scheme_handler","params":[{"list":[{"type":"resource","var":"$xh","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"array","var":"$handlers","beh":0,"desc":"Scheme handlers should be an array with the format (all elements are optional):"}],"ret_type":"void"}]},"xslt_set_scheme_handlers":{"desc":"Set the scheme handlers for the XSLT processor","long_desc":"Registers the scheme handlers (XPath handlers) for the document.","ver":"PHP 4 >= 4.0.6","ret_desc":"No value is returned.","seealso":[],"url":"function.xslt-set-scheme-handlers","name":"xslt_set_scheme_handlers","params":[{"list":[{"type":"resource","var":"$xh","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"array","var":"$handlers","beh":0,"desc":"An array with the following keys: \"get_all\", \"open\", \"get\", \"put\", and \"close\". Every entry must be a function name or an array in the following format: array($obj, \"method\"). Note that the given array does not need to contain all of the different scheme handler elements (although it can), but it only needs to conform to the \"handler\" => \"fonction\" format described above. Each of the individual scheme handler functions called are in the formats below:"}],"ret_type":"void"}]},"xslt_setopt":{"desc":"Set options on a given XSLT processor","long_desc":"xslt_setopt() sets the options specified by newmask on the given processor.","ver":"PHP 4 >= 4.3.0","ret_desc":"Returns the number of previous mask is possible, TRUE otherwise, FALSE in case of an error.","seealso":[],"url":"function.xslt-setopt","name":"xslt_setopt","params":[{"list":[{"type":"resource","var":"$processor","beh":0,"desc":"The XSLT processor link identifier, created with xslt_create()."},{"type":"int","var":"$newmask","beh":0,"desc":"newmask is a bitmask constructed with the following constants:"}],"ret_type":"mixed"}]},"yaml_emit":{"desc":"Returns the YAML representation of a value","long_desc":"Generate a YAML representation of the provided data.","ver":"PECL yaml >= 0.5.0","ret_desc":"Returns a YAML encoded string on success.","seealso":[],"url":"function.yaml-emit","name":"yaml_emit","params":[{"list":[{"type":"mixed","var":"$data","beh":1,"desc":"The data being encoded. Can be any type except a resource."},{"type":"int","var":"$encoding","beh":1,"desc":"Output character encoding chosen from YAML_ANY_ENCODING, YAML_UTF8_ENCODING, YAML_UTF16LE_ENCODING, YAML_UTF16BE_ENCODING. Defaults to YAML_ANY_ENCODING.","def":"YAML_ANY_ENCODING"},{"type":"int","var":"$linebreak","beh":1,"desc":"Output linebreak style chosen from YAML_ANY_BREAK, YAML_CR_BREAK, YAML_LN_BREAK, YAML_CRLN_BREAK. Defaults to YAML_ANY_BREAK.","def":"YAML_ANY_BREAK"},{"type":"array","var":"$callbacks","beh":1,"desc":"Content handlers for emitting YAML nodes. Associative array of classname => callable mappings. See emit callbacks for more details."}],"ret_type":"string"}]},"yaml_emit_file":{"desc":"Send the YAML representation of a value to a file","long_desc":"Generate a YAML representation of the provided data in the filename.","ver":"PECL yaml >= 0.5.0","ret_desc":"Returns TRUE on success.","seealso":[],"url":"function.yaml-emit-file","name":"yaml_emit_file","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"Path to the file."},{"type":"mixed","var":"$data","beh":1,"desc":"The data being encoded. Can be any type except a resource."},{"type":"int","var":"$encoding","beh":1,"desc":"Output character encoding chosen from YAML_ANY_ENCODING, YAML_UTF8_ENCODING, YAML_UTF16LE_ENCODING, YAML_UTF16BE_ENCODING. Defaults to YAML_ANY_ENCODING.","def":"YAML_ANY_ENCODING"},{"type":"int","var":"$linebreak","beh":1,"desc":"Output linebreak style chosen from YAML_ANY_BREAK, YAML_CR_BREAK, YAML_LN_BREAK, YAML_CRLN_BREAK. Defaults to YAML_ANY_BREAK.","def":"YAML_ANY_BREAK"},{"type":"array","var":"$callbacks","beh":1,"desc":"Content handlers for emitting YAML nodes. Associative array of classname => callable mappings. See emit callbacks for more details."}],"ret_type":"bool"}]},"yaml_parse":{"desc":"Parse a YAML stream","long_desc":"Convert all or part of a YAML document stream to a PHP variable.","ver":"PECL yaml >= 0.4.0","ret_desc":"Returns the value encoded in input in appropriate PHP type or FALSE on failure. If pos is -1 an array will be returned with one entry for each document found in the stream.","seealso":[],"url":"function.yaml-parse","name":"yaml_parse","params":[{"list":[{"type":"string","var":"$input","beh":1,"desc":"The string to parse as a YAML document stream."},{"type":"int","var":"$pos","beh":1,"desc":"Document to extract from stream (-1 for all documents, 0 for first document, ...).","def":0},{"type":"int","var":"&$ndocs","beh":1,"desc":"If ndocs is provided, then it is filled with the number of documents found in stream."},{"type":"array","var":"$callbacks","beh":1,"desc":"Content handlers for YAML nodes. Associative array of YAML tag => callable mappings. See parse callbacks for more details."}],"ret_type":"mixed"}]},"yaml_parse_file":{"desc":"Parse a YAML stream from a file","long_desc":"Convert all or part of a YAML document stream read from a file to a PHP variable.","ver":"PECL yaml >= 0.4.0","ret_desc":"Returns the value encoded in input in appropriate PHP type or FALSE on failure. If pos is -1 an array will be returned with one entry for each document found in the stream.","seealso":[],"url":"function.yaml-parse-file","name":"yaml_parse_file","params":[{"list":[{"type":"string","var":"$filename","beh":1,"desc":"Path to the file."},{"type":"int","var":"$pos","beh":1,"desc":"Document to extract from stream (-1 for all documents, 0 for first document, ...).","def":0},{"type":"int","var":"&$ndocs","beh":1,"desc":"If ndocs is provided, then it is filled with the number of documents found in stream."},{"type":"array","var":"$callbacks","beh":1,"desc":"Content handlers for YAML nodes. Associative array of YAML tag => callable mappings. See parse callbacks for more details."}],"ret_type":"mixed"}]},"yaml_parse_url":{"desc":"Parse a Yaml stream from a URL","long_desc":"Convert all or part of a YAML document stream read from a URL to a PHP variable.","ver":"PECL yaml >= 0.4.0","ret_desc":"Returns the value encoded in input in appropriate PHP type or FALSE on failure. If pos is -1 an array will be returned with one entry for each document found in the stream.","seealso":[],"url":"function.yaml-parse-url","name":"yaml_parse_url","params":[{"list":[{"type":"string","var":"$url","beh":1,"desc":"url should be of the form \"scheme:\/\/...\". PHP will search for a protocol handler (also known as a wrapper) for that scheme. If no wrappers for that protocol are registered, PHP will emit a notice to help you track potential problems in your script and then continue as though filename specifies a regular file."},{"type":"int","var":"$pos","beh":1,"desc":"Document to extract from stream (-1 for all documents, 0 for first document, ...).","def":0},{"type":"int","var":"&$ndocs","beh":1,"desc":"If ndocs is provided, then it is filled with the number of documents found in stream."},{"type":"array","var":"$callbacks","beh":1,"desc":"Content handlers for YAML nodes. Associative array of YAML tag => callable mappings. See parse callbacks for more"}],"ret_type":"mixed"}]},"yaz_addinfo":{"desc":"Returns additional error information","long_desc":"Returns additional error information for the last request on the server. With some servers, this function may return the same string as yaz_error().","ver":"PHP 4 >= 4.0.1, PECL yaz >= 0.9.0","ret_desc":"A string containing additional error information or an empty string if the last operation was successful or if no additional information was provided by the server.","seealso":[],"url":"function.yaz-addinfo","name":"yaz_addinfo","params":[{"list":[],"ret_type":"string"}]},"yaz_ccl_conf":{"desc":"Configure CCL parser","long_desc":"This function configures the CCL query parser for a server with definitions of access points (CCL qualifiers) and their mapping to RPN. To map a specific CCL query to RPN afterwards call the yaz_ccl_parse() function.","ver":"PHP 4 >= 4.0.5, PECL yaz >= 0.9.0","ret_desc":"No value is returned.","seealso":[],"url":"function.yaz-ccl-conf","name":"yaz_ccl_conf","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"array","var":"$config","beh":0,"desc":"An array of configuration. Each key of the array is the name of a CCL field and the corresponding value holds a string that specifies a mapping to RPN. The mapping is a sequence of attribute-type, attribute-value pairs. Attribute-type and attribute-value is separated by an equal sign (=). Each pair is separated by white space. Additional information can be found on the \u00bb\u00a0CCL page."}],"ret_type":"void"}]},"yaz_ccl_parse":{"desc":"Invoke CCL Parser","long_desc":"This function invokes a CCL parser. It converts a given CCL FIND query to an RPN query which may be passed to the yaz_search() function to perform a search. To define a set of valid CCL fields call yaz_ccl_conf() prior to this function.","ver":"PHP 4 >= 4.0.5, PECL yaz >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.yaz-ccl-parse","name":"yaz_ccl_parse","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"string","var":"$query","beh":0,"desc":"The CCL FIND query."},{"type":"array","var":"&$result","beh":1,"desc":"If the function was executed successfully, this will be an array containing the valid RPN query under the key rpn. Upon failure, three indexes are set in this array to indicate the cause of failure:"}],"ret_type":"bool"}]},"yaz_close":{"desc":"Close YAZ connection","long_desc":"Closes the connection given by parameter id.","ver":"PHP 4 >= 4.0.1, PECL yaz >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.yaz-close","name":"yaz_close","params":[{"list":[],"ret_type":"bool"}]},"yaz_connect":{"desc":"Prepares for a connection to a Z39.50 server","long_desc":"This function returns a connection resource on success, zero on failure. yaz_connect() prepares for a connection to a Z39.50 server. This function is non-blocking and does not attempt to establish a connection - it merely prepares a connect to be performed later when yaz_wait() is called.","ver":"PHP 4 >= 4.0.1, PECL yaz >= 0.9.0","ret_desc":"A connection resource on success, FALSE on error.","seealso":[],"url":"function.yaz-connect","name":"yaz_connect","params":[{"list":[{"type":"string","var":"$zurl","beh":0,"desc":"A string that takes the form host[:port][\/database]. If port is omitted, port 210 is used. If database is omitted Default is used."},{"type":"mixed","var":"$options","beh":1,"desc":"If given as a string, it is treated as the Z39.50 V2 authentication string (OpenAuth). If given as an array, the contents of the array serves as options."}],"ret_type":"mixed"}]},"yaz_database":{"desc":"Specifies the databases within a session","long_desc":"This function allows you to change databases within a session by specifying one or more databases to be used in search, retrieval, etc. - overriding databases specified in call to yaz_connect().","ver":"PHP 4 >= 4.0.6, PECL yaz >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.yaz-database","name":"yaz_database","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"string","var":"$databases","beh":0,"desc":"A string containing one or more databases. Multiple databases are separated by a plus sign +."}],"ret_type":"bool"}]},"yaz_element":{"desc":"Specifies Element-Set Name for retrieval","long_desc":"This function sets the element set name for retrieval. Call this function before yaz_search() or yaz_present() to specify the element set name for records to be retrieved.","ver":"PHP 4 >= 4.0.1, PECL yaz >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.yaz-element","name":"yaz_element","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"string","var":"$elementset","beh":0,"desc":"Most servers support F (for full records) and B (for brief records)."}],"ret_type":"bool"}]},"yaz_errno":{"desc":"Returns error number","long_desc":"Returns an error number for the server (last request) identified by id. yaz_errno() should be called after network activity for each server - (after yaz_wait() returns) to determine the success or failure of the last operation (e.g. search).","ver":"PHP 4 >= 4.0.1, PECL yaz >= 0.9.0","ret_desc":"Returns an error code. The error code is either a Z39.50 diagnostic code (usually a Bib-1 diagnostic) or a client side error code which is generated by PHP\/YAZ itself, such as \"Connect failed\", \"Init Rejected\", etc.","seealso":[],"url":"function.yaz-errno","name":"yaz_errno","params":[{"list":[],"ret_type":"int"}]},"yaz_error":{"desc":"Returns error description","long_desc":"yaz_error() returns an English text message corresponding to the last error number as returned by yaz_errno().","ver":"PHP 4 >= 4.0.1, PECL yaz >= 0.9.0","ret_desc":"Returns an error text message for server (last request), identified by parameter id. An empty string is returned if the last operation was successful.","seealso":[],"url":"function.yaz-error","name":"yaz_error","params":[{"list":[],"ret_type":"string"}]},"yaz_es":{"desc":"Prepares for an Extended Service Request","long_desc":"This function prepares for an Extended Service Request. Extended Services is family of various Z39.50 facilities, such as Record Update, Item Order, Database administration etc. The yaz_es() creates an Extended Service Request packages and puts it into a queue of operations. Use yaz_wait() to send the request(s) to the server. After completion of yaz_wait() the result of the Extended Service operation should be expected with a call to yaz_es_result().","ver":"PECL yaz >= 0.9.0","ret_desc":"No value is returned.","seealso":[],"url":"function.yaz-es","name":"yaz_es","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"string","var":"$type","beh":0,"desc":"A string which represents the type of the Extended Service: itemorder (Item Order), create (Create Database), drop (Drop Database), commit (Commit Operation), update (Update Record), xmlupdate (XML Update). Each type is specified in the following section."},{"type":"array","var":"$args","beh":1,"desc":"An array with extended service options plus package specific options. The options are identical to those offered in the C API of ZOOM C. Refer to the ZOOM \u00bb\u00a0Extended Services."}],"ret_type":"void"}]},"yaz_es_result":{"desc":"Inspects Extended Services Result","long_desc":"This function inspects the last returned Extended Service result from a server. An Extended Service is initiated by either yaz_item_order() or yaz_es().","ver":"PHP 4 >= 4.2.0, PECL yaz >= 0.9.0","ret_desc":"Returns array with element targetReference for the reference for the extended service operation (generated and returned from the server).","seealso":[],"url":"function.yaz-es-result","name":"yaz_es_result","params":[{"list":[],"ret_type":"array"}]},"yaz_get_option":{"desc":"Returns value of option for connection","long_desc":"Returns the value of the option specified with name.","ver":"PECL yaz >= 0.9.0","ret_desc":"Returns the value of the specified option or an empty string if the option wasn't set.","seealso":[],"url":"function.yaz-get-option","name":"yaz_get_option","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"string","var":"$name","beh":0,"desc":"The option name."}],"ret_type":"string"}]},"yaz_hits":{"desc":"Returns number of hits for last search","long_desc":"yaz_hits() returns the number of hits for the last search.","ver":"PHP 4 >= 4.0.1, PECL yaz >= 0.9.0","ret_desc":"Returns the number of hits for the last search or 0 if no search was performed.","url":"function.yaz-hits","name":"yaz_hits","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"array","var":"&$searchresult","beh":1,"desc":"Result array for detailed search result information."}],"ret_type":"int"}]},"yaz_itemorder":{"desc":"Prepares for Z39.50 Item Order with an ILL-Request package","long_desc":"This function prepares for an Extended Services request using the Profile for the Use of Z39.50 Item Order Extended Service to Transport ILL (Profile\/1). See \u00bb\u00a0this and the \u00bb\u00a0specification.","ver":"PHP 4 >= 4.0.5, PECL yaz >= 0.9.0","ret_desc":"No value is returned.","url":"function.yaz-itemorder","name":"yaz_itemorder","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"array","var":"$args","beh":0,"desc":"Must be an associative array with information about the Item Order request to be sent. The key of the hash is the name of the corresponding ASN.1 tag path. For example, the ISBN below the Item-ID has the key item-id,ISBN. The ILL-Request parameters are: There are also a few parameters that are part of the Extended Services Request package and the ItemOrder package:"}],"ret_type":"void"}]},"yaz_present":{"desc":"Prepares for retrieval (Z39.50 present)","long_desc":"This function prepares for retrieval of records after a successful search. The yaz_range() function should be called prior to this function to specify the range of records to be retrieved.","ver":"PHP 4 >= 4.0.5, PECL yaz >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.yaz-present","name":"yaz_present","params":[{"list":[],"ret_type":"bool"}]},"yaz_range":{"desc":"Specifies a range of records to retrieve","long_desc":"Specifies a range of records to retrieve. This function should be called before yaz_search() or yaz_present().","ver":"PHP 4 >= 4.0.1, PECL yaz >= 0.9.0","ret_desc":"No value is returned.","url":"function.yaz-range","name":"yaz_range","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"int","var":"$start","beh":0,"desc":"Specifies the position of the first record to be retrieved. The records numbers goes from 1 to yaz_hits()."},{"type":"int","var":"$number","beh":1,"desc":"Specifies the number of records to be retrieved."}],"ret_type":"void"}]},"yaz_record":{"desc":"Returns a record","long_desc":"The yaz_record() function inspects a record in the current result set at the position specified by parameter pos.","ver":"PHP 4 >= 4.0.1, PECL yaz >= 0.9.0","ret_desc":"Returns the record at position pos or an empty string if no record exists at the given position.","url":"function.yaz-record","name":"yaz_record","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"int","var":"$pos","beh":0,"desc":"The record position. Records positions in a result set are numbered 1, 2, ... $hits where $hits is the count returned by yaz_hits()."},{"type":"string","var":"$type","beh":1,"desc":"The type specifies the form of the returned record. Besides conversion of the transfer record to a string\/array, PHP\/YAZ it is also possible to perform a character set conversion of the record. Especially for USMARC\/MARC21 that is recommended since these are typically returned in the character set MARC-8 that is not supported by browsers, etc. To specify a conversion, add ; charset=from, to where from is the original character set of the record and to is the resulting character set (as seen by PHP)."}],"ret_type":"string"}]},"yaz_scan":{"desc":"Prepares for a scan","long_desc":"This function prepares for a Z39.50 Scan Request on the specified connection. To actually transfer the Scan Request to the server and receive the Scan Response, yaz_wait() must be called. Upon completion of yaz_wait() call yaz_error() and yaz_scan_result() to handle the response.","ver":"PHP 4 >= 4.0.5, PECL yaz >= 0.9.0","ret_desc":"No value is returned.","url":"function.yaz-scan","name":"yaz_scan","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"string","var":"$type","beh":1,"desc":"Currently only type rpn is supported."},{"type":"string","var":"$startterm","beh":1,"desc":"Starting term point for the scan. The form in which the starting term is specified is given by parameter type. The syntax this parameter is similar to the RPN query as described in yaz_search(). It consists of zero or more @attr-operator specifications, then followed by exactly one token."},{"type":"array","var":"$flags","beh":1,"desc":"This optional parameter specifies additional information to control the behaviour of the scan request. Three indexes are currently read from the flags array: number (number of terms requested), position (preferred position of term) and stepSize (preferred step size)."}],"ret_type":"void"}]},"yaz_scan_result":{"desc":"Returns Scan Response result","long_desc":"yaz_scan_result() returns terms and associated information as received from the server in the last performed yaz_scan().","ver":"PHP 4 >= 4.0.5, PECL yaz >= 0.9.0","ret_desc":"Returns an array (0..n-1) where n is the number of terms returned. Each value is a pair where the first item is the term, and the second item is the result-count.","url":"function.yaz-scan-result","name":"yaz_scan_result","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"array","var":"&$result","beh":1,"desc":"If given, this array will be modified to hold additional information taken from the Scan Response:"}],"ret_type":"array"}]},"yaz_schema":{"desc":"Specifies schema for retrieval","long_desc":"yaz_schema() specifies the schema for retrieval. This function should be called before yaz_search() or yaz_present().","ver":"PHP 4 >= 4.2.0, PECL yaz >= 0.9.0","ret_desc":"No value is returned.","url":"function.yaz-schema","name":"yaz_schema","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"string","var":"$schema","beh":0,"desc":"Must be specified as an OID (Object Identifier) in a raw dot-notation (like 1.2.840.10003.13.4) or as one of the known registered schemas: GILS-schema, Holdings, Zthes, ..."}],"ret_type":"void"}]},"yaz_search":{"desc":"Prepares for a search","long_desc":"yaz_search() prepares for a search on the given connection. Like yaz_connect() this function is non-blocking and only prepares for a search to be executed later when yaz_wait() is called.","ver":"PHP 4 >= 4.0.1, PECL yaz >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure.","url":"function.yaz-search","name":"yaz_search","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"string","var":"$type","beh":0,"desc":"This parameter represents the query type - only \"rpn\" is supported now in which case the third argument specifies a Type-1 query in prefix query notation."},{"type":"string","var":"$query","beh":1,"desc":"The RPN query is a textual representation of the Type-1 query as defined by the Z39.50 standard. However, in the text representation as used by YAZ a prefix notation is used, that is the operator precedes the operands. The query string is a sequence of tokens where white space is ignored unless surrounded by double quotes. Tokens beginning with an at-character (@) are considered operators, otherwise they are treated as search terms. You can find information about attributes at the \u00bb\u00a0Z39.50 Maintenance Agency site."}],"ret_type":"bool"}]},"yaz_set_option":{"desc":"Sets one or more options for connection","long_desc":"Sets one or more options on the given connection.","ver":"PECL yaz >= 0.9.0","ret_desc":"No value is returned.","url":"function.yaz-set-option","name":"yaz_set_option","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"string","var":"$name","beh":0,"desc":"May be either a string or an array. If given as a string, this will be the name of the option to set. You'll need to give it's value. If given as an array, this will be an associative array (option name => option value)."},{"type":"string","var":"$value","beh":1,"desc":"The new value of the option. Use this only if the previous argument is a string."}],"ret_type":"void"},{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"array","var":"$options","beh":0,"desc":"May be either a string or an array. If given as a string, this will be the name of the option to set. You'll need to give it's value. If given as an array, this will be an associative array (option name => option value)."}],"ret_type":"void"}]},"yaz_sort":{"desc":"Sets sorting criteria","long_desc":"This function sets sorting criteria and enables Z39.50 Sort. Call this function before yaz_search(). Using this function alone does not have any effect. When used in conjunction with yaz_search(), a Z39.50 Sort will be sent after a search response has been received and before any records are retrieved with Z39.50 Present (yaz_present().","ver":"PHP 4 >= 4.0.7, PECL yaz >= 0.9.0","ret_desc":"No value is returned.","url":"function.yaz-sort","name":"yaz_sort","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"string","var":"$criteria","beh":0,"desc":"A string that takes the form field1 flags1 field2 flags2 where field1 specifies the primary attributes for sort, field2 seconds, etc.. The field specifies either a numerical attribute combinations consisting of type=value pairs separated by comma (e.g. 1=4,2=1) ; or the field may specify a plain string criteria (e.g. title. The flags is a sequence of the following characters which may not be separated by any white space."}],"ret_type":"void"}]},"yaz_syntax":{"desc":"Specifies the preferred record syntax for retrieval","long_desc":"yaz_syntax() specifies the preferred record syntax for retrieval This function should be called before yaz_search() or yaz_present().","ver":"PHP 4 >= 4.0.1, PECL yaz >= 0.9.0","ret_desc":"No value is returned.","url":"function.yaz-syntax","name":"yaz_syntax","params":[{"list":[{"type":"resource","var":"$id","beh":0,"desc":"The connection resource returned by yaz_connect()."},{"type":"string","var":"$syntax","beh":0,"desc":"The syntax must be specified as an OID (Object Identifier) in a raw dot-notation (like 1.2.840.10003.5.10) or as one of the known registered record syntaxes (sutrs, usmarc, grs1, xml, etc.)."}],"ret_type":"void"}]},"yaz_wait":{"desc":"Wait for Z39.50 requests to complete","long_desc":"This function carries out networked (blocked) activity for outstanding requests which have been prepared by the functions yaz_connect(), yaz_search(), yaz_present(), yaz_scan() and yaz_itemorder(). yaz_wait() returns when all servers have either completed all requests or aborted (in case of errors).","ver":"PHP 4 >= 4.0.1, PECL yaz >= 0.9.0","ret_desc":"Returns TRUE on success or FALSE on failure. In event mode, returns resource or FALSE on failure.","url":"function.yaz-wait","name":"yaz_wait","params":[{"list":[],"ret_type":"mixed"}]},"yp_all":{"desc":"Traverse the map and call a function on each entry","long_desc":"","ver":"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5","ret_desc":"No value is returned.","url":"function.yp-all","name":"yp_all","params":[{"list":[{"type":"string","var":"$domain","beh":0,"desc":"The NIS domain name."},{"type":"string","var":"$map","beh":0,"desc":"The NIS map."},{"type":"string","var":"$callback","beh":1,"desc":""}],"ret_type":"void"}]},"yp_cat":{"desc":"Return an array containing the entire map","long_desc":"Returns all map entries.","ver":"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5","ret_desc":"Returns an array of all map entries, the maps key values as array indices and the maps entries as array data.","url":"function.yp-cat","name":"yp_cat","params":[{"list":[{"type":"string","var":"$domain","beh":0,"desc":"The NIS domain name."},{"type":"string","var":"$map","beh":0,"desc":"The NIS map."}],"ret_type":"array"}]},"yp_err_string":{"desc":"Returns the error string associated with the given error code","long_desc":"Returns the error message associated with the given error code. Useful to indicate what exactly went wrong.","ver":"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5","ret_desc":"Returns the error message, as a string.","seealso":[],"url":"function.yp-err-string","name":"yp_err_string","params":[{"list":[],"ret_type":"string"}]},"yp_errno":{"desc":"Returns the error code of the previous operation","long_desc":"Returns the error code of the previous operation.","ver":"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5","ret_desc":"Returns one of the YPERR_XXX error constants.","seealso":[],"url":"function.yp-errno","name":"yp_errno","params":[{"list":[],"ret_type":"int"}]},"yp_first":{"desc":"Returns the first key-value pair from the named map","long_desc":"Gets the first key-value pair from the named map in the named domain.","ver":"PHP 4, PHP 5 <= 5.0.5","ret_desc":"Returns the first key-value pair as an array on success, or FALSE on errors.","seealso":[],"url":"function.yp-first","name":"yp_first","params":[{"list":[{"type":"string","var":"$domain","beh":0,"desc":"The NIS domain name."},{"type":"string","var":"$map","beh":0,"desc":"The NIS map."}],"ret_type":"array"}]},"yp_get_default_domain":{"desc":"Fetches the machine's default NIS domain","long_desc":"Returns the default domain of the node. Can be used as the domain parameter for successive NIS calls. A NIS domain can be described a group of NIS maps. Every host that needs to look up information binds itself to a certain domain. Refer to the documents mentioned at the beginning for more detailed information.","ver":"PHP 4, PHP 5 <= 5.0.5","ret_desc":"Returns the default domain of the node or FALSE. Can be used as the domain parameter for successive NIS calls.","url":"function.yp-get-default-domain","name":"yp_get_default_domain","params":[{"list":[],"ret_type":"string"}]},"yp_master":{"desc":"Returns the machine name of the master NIS server for a map","long_desc":"Returns the machine name of the master NIS server for a map.","ver":"PHP 4, PHP 5 <= 5.0.5","ret_desc":"","seealso":[],"url":"function.yp-master","name":"yp_master","params":[{"list":[{"type":"string","var":"$domain","beh":0,"desc":"The NIS domain name."},{"type":"string","var":"$map","beh":0,"desc":"The NIS map."}],"ret_type":"string"}]},"yp_match":{"desc":"Returns the matched line","long_desc":"Returns the value associated with the passed key out of the specified map.","ver":"PHP 4, PHP 5 <= 5.0.5","ret_desc":"Returns the value, or FALSE on errors.","seealso":[],"url":"function.yp-match","name":"yp_match","params":[{"list":[{"type":"string","var":"$domain","beh":0,"desc":"The NIS domain name."},{"type":"string","var":"$map","beh":0,"desc":"The NIS map."},{"type":"string","var":"$key","beh":1,"desc":"This key must be exact."}],"ret_type":"string"}]},"yp_next":{"desc":"Returns the next key-value pair in the named map","long_desc":"Returns the next key-value pair in the named map after the specified key.","ver":"PHP 4, PHP 5 <= 5.0.5","ret_desc":"Returns the next key-value pair as an array, or FALSE on errors.","seealso":[],"url":"function.yp-next","name":"yp_next","params":[{"list":[{"type":"string","var":"$domain","beh":0,"desc":""},{"type":"string","var":"$map","beh":0,"desc":""},{"type":"string","var":"$key","beh":1,"desc":""}],"ret_type":"array"}]},"yp_order":{"desc":"Returns the order number for a map","long_desc":"Gets the order number for a map.","ver":"PHP 4, PHP 5 <= 5.0.5","ret_desc":"Returns the order number for a map or FALSE on error.","seealso":[],"url":"function.yp-order","name":"yp_order","params":[{"list":[{"type":"string","var":"$domain","beh":0,"desc":""},{"type":"string","var":"$map","beh":0,"desc":""}],"ret_type":"int"}]},"zend_logo_guid":{"desc":"Gets the Zend guid","long_desc":"This function returns the ID which can be used to display the Zend logo using the built-in image.","ver":"PHP 4, PHP 5","ret_desc":"Returns PHPE9568F35-D428-11d2-A769-00AA001ACF42.","seealso":[],"url":"function.zend-logo-guid","name":"zend_logo_guid","params":[{"list":[],"ret_type":"string"}]},"zend_thread_id":{"desc":"Returns a unique identifier for the current thread","long_desc":"This function returns a unique identifier for the current thread.","ver":"PHP 5","ret_desc":"Returns the thread id as an integer.","url":"function.zend-thread-id","name":"zend_thread_id","params":[{"list":[],"ret_type":"int"}]},"zend_version":{"desc":"Gets the version of the current Zend engine","long_desc":"Returns a string containing the version of the currently running Zend Engine.","ver":"PHP 4, PHP 5","ret_desc":"Returns the Zend Engine version number, as a string.","seealso":[],"url":"function.zend-version","name":"zend_version","params":[{"list":[],"ret_type":"string"}]},"zip_close":{"desc":"Close a ZIP file archive","long_desc":"Closes the given ZIP file archive.","ver":"PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0","ret_desc":"No value is returned.","seealso":[],"url":"function.zip-close","name":"zip_close","params":[{"list":[],"ret_type":"void"}]},"zip_entry_close":{"desc":"Close a directory entry","long_desc":"Closes the specified directory entry.","ver":"PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.zip-entry-close","name":"zip_entry_close","params":[{"list":[],"ret_type":"bool"}]},"zip_entry_compressedsize":{"desc":"Retrieve the compressed size of a directory entry","long_desc":"Returns the compressed size of the specified directory entry.","ver":"PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0","ret_desc":"The compressed size.","seealso":[],"url":"function.zip-entry-compressedsize","name":"zip_entry_compressedsize","params":[{"list":[],"ret_type":"int"}]},"zip_entry_compressionmethod":{"desc":"Retrieve the compression method of a directory entry","long_desc":"Returns the compression method of the directory entry specified by zip_entry.","ver":"PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0","ret_desc":"The compression method.","seealso":[],"url":"function.zip-entry-compressionmethod","name":"zip_entry_compressionmethod","params":[{"list":[],"ret_type":"string"}]},"zip_entry_filesize":{"desc":"Retrieve the actual file size of a directory entry","long_desc":"Returns the actual size of the specified directory entry.","ver":"PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0","ret_desc":"The size of the directory entry.","seealso":[],"url":"function.zip-entry-filesize","name":"zip_entry_filesize","params":[{"list":[],"ret_type":"int"}]},"zip_entry_name":{"desc":"Retrieve the name of a directory entry","long_desc":"Returns the name of the specified directory entry.","ver":"PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0","ret_desc":"The name of the directory entry.","seealso":[],"url":"function.zip-entry-name","name":"zip_entry_name","params":[{"list":[],"ret_type":"string"}]},"zip_entry_open":{"desc":"Open a directory entry for reading","long_desc":"Opens a directory entry in a zip file for reading.","ver":"PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0","ret_desc":"Returns TRUE on success or FALSE on failure.","seealso":[],"url":"function.zip-entry-open","name":"zip_entry_open","params":[{"list":[{"type":"resource","var":"$zip","beh":0,"desc":"A valid resource handle returned by zip_open()."},{"type":"resource","var":"$zip_entry","beh":1,"desc":"A directory entry returned by zip_read()."},{"type":"string","var":"$mode","beh":1,"desc":"Any of the modes specified in the documentation of fopen()."}],"ret_type":"bool"}]},"zip_entry_read":{"desc":"Read from an open directory entry","long_desc":"Reads from an open directory entry.","ver":"PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0","ret_desc":"Returns the data read, or FALSE if the end of the file is reached.","seealso":[],"url":"function.zip-entry-read","name":"zip_entry_read","params":[{"list":[{"type":"resource","var":"$zip_entry","beh":0,"desc":"A directory entry returned by zip_read()."},{"type":"int","var":"$length","beh":1,"desc":"The number of bytes to return. If not specified, this function will attempt to read 1024 bytes."}],"ret_type":"string"}]},"zip_open":{"desc":"Open a ZIP file archive","long_desc":"Opens a new zip archive for reading.","ver":"PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0","ret_desc":"Returns a resource handle for later use with zip_read() and zip_close() or returns the number of error if filename does not exist or in case of other error.","seealso":[],"url":"function.zip-open","name":"zip_open","params":[{"list":[],"ret_type":"resource"}]},"zip_read":{"desc":"Read next entry in a ZIP file archive","long_desc":"Reads the next entry in a zip file archive.","ver":"PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0","ret_desc":"Returns a directory entry resource for later use with the zip_entry_... functions, or FALSE if there are no more entries to read, or an error code if an error occurred.","seealso":[],"url":"function.zip-read","name":"zip_read","params":[{"list":[],"ret_type":"resource"}]},"zlib_decode":{"desc":"Uncompress any raw\/gzip\/zlib encoded data","long_desc":"Uncompress any raw\/gzip\/zlib encoded data.","ver":"PHP 5 >= 5.4.0","ret_desc":"","seealso":[],"url":"function.zlib-decode","name":"zlib_decode","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":""},{"type":"string","var":"$max_decoded_len","beh":1,"desc":""}],"ret_type":"string"}]},"zlib_encode":{"desc":"Compress data with the specified encoding","long_desc":"Compress data with the specified encoding.","ver":"PHP 5 >= 5.4.0","ret_desc":"","seealso":[],"url":"function.zlib-encode","name":"zlib_encode","params":[{"list":[{"type":"string","var":"$data","beh":0,"desc":""},{"type":"string","var":"$encoding","beh":1,"desc":""},{"type":"string","var":"$level","beh":1,"desc":"","def":-1}],"ret_type":"string"}]},"zlib_get_coding_type":{"desc":"Returns the coding type used for output compression","long_desc":"Returns the coding type used for output compression.","ver":"PHP 4 >= 4.3.2, PHP 5","ret_desc":"Possible return values are gzip, deflate, or FALSE.","seealso":[],"url":"function.zlib-get-coding-type","name":"zlib_get_coding_type","params":[{"list":[],"ret_type":"string"}]}}